// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class d3d12_h$constants$1 extends d3d12_h$constants$0 {
    d3d12_h$constants$1() {}
    public static int D3D12_FORMAT_SUPPORT1_DISPLAY() { return (int)524288L; }

    public static int D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT() { return (int)1048576L; }

    public static int D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET() { return (int)2097152L; }

    public static int D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD() { return (int)4194304L; }

    public static int D3D12_FORMAT_SUPPORT1_SHADER_GATHER() { return (int)8388608L; }

    public static int D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST() { return (int)16777216L; }

    public static int D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW() { return (int)33554432L; }

    public static int D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON() { return (int)67108864L; }

    public static int D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT() { return (int)134217728L; }

    public static int D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT() { return (int)268435456L; }

    public static int D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT() { return (int)536870912L; }

    public static int D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER() { return (int)1073741824L; }

    public static int D3D12_FORMAT_SUPPORT2_NONE() { return (int)0L; }

    public static int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD() { return (int)1L; }

    public static int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS() { return (int)2L; }

    public static int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE() { return (int)4L; }

    public static int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE() { return (int)8L; }

    public static int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX() { return (int)16L; }

    public static int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX() { return (int)32L; }

    public static int D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD() { return (int)64L; }

    public static int D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE() { return (int)128L; }

    public static int D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP() { return (int)256L; }

    public static int D3D12_FORMAT_SUPPORT2_TILED() { return (int)512L; }

    public static int D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY() { return (int)16384L; }

    public static int D3D12_FORMAT_SUPPORT2_SAMPLER_FEEDBACK() { return (int)32768L; }

    public static int D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE() { return (int)0L; }

    public static int D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE() { return (int)1L; }

    public static int D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED() { return (int)0L; }

    public static int D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED() { return (int)1L; }

    public static int D3D12_CROSS_NODE_SHARING_TIER_1() { return (int)2L; }

    public static int D3D12_CROSS_NODE_SHARING_TIER_2() { return (int)3L; }

    public static int D3D12_CROSS_NODE_SHARING_TIER_3() { return (int)4L; }

    public static int D3D12_RESOURCE_HEAP_TIER_1() { return (int)1L; }

    public static int D3D12_RESOURCE_HEAP_TIER_2() { return (int)2L; }

    public static int D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED() { return (int)0L; }

    public static int D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1() { return (int)1L; }

    public static int D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2() { return (int)2L; }

    public static int D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED() { return (int)0L; }

    public static int D3D12_VIEW_INSTANCING_TIER_1() { return (int)1L; }

    public static int D3D12_VIEW_INSTANCING_TIER_2() { return (int)2L; }

    public static int D3D12_VIEW_INSTANCING_TIER_3() { return (int)3L; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("DoublePrecisionFloatShaderOps"),
        C_INT.withName("OutputMergerLogicOp"),
        C_INT.withName("MinPrecisionSupport"),
        C_INT.withName("TiledResourcesTier"),
        C_INT.withName("ResourceBindingTier"),
        C_INT.withName("PSSpecifiedStencilRefSupported"),
        C_INT.withName("TypedUAVLoadAdditionalFormats"),
        C_INT.withName("ROVsSupported"),
        C_INT.withName("ConservativeRasterizationTier"),
        C_INT.withName("MaxGPUVirtualAddressBitsPerResource"),
        C_INT.withName("StandardSwizzle64KBSupported"),
        C_INT.withName("CrossNodeSharingTier"),
        C_INT.withName("CrossAdapterRowMajorTextureSupported"),
        C_INT.withName("VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation"),
        C_INT.withName("ResourceHeapTier")
    ).withName("D3D12_FEATURE_DATA_D3D12_OPTIONS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DoublePrecisionFloatShaderOps"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OutputMergerLogicOp"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MinPrecisionSupport"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TiledResourcesTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ResourceBindingTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PSSpecifiedStencilRefSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TypedUAVLoadAdditionalFormats"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ROVsSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ConservativeRasterizationTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxGPUVirtualAddressBitsPerResource"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StandardSwizzle64KBSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CrossNodeSharingTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CrossAdapterRowMajorTextureSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ResourceHeapTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("WaveOps"),
        C_INT.withName("WaveLaneCountMin"),
        C_INT.withName("WaveLaneCountMax"),
        C_INT.withName("TotalLaneCount"),
        C_INT.withName("ExpandedComputeResourceStates"),
        C_INT.withName("Int64ShaderOps")
    ).withName("D3D12_FEATURE_DATA_D3D12_OPTIONS1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WaveOps"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WaveLaneCountMin"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WaveLaneCountMax"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalLaneCount"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExpandedComputeResourceStates"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Int64ShaderOps"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("DepthBoundsTestSupported"),
        C_INT.withName("ProgrammableSamplePositionsTier")
    ).withName("D3D12_FEATURE_DATA_D3D12_OPTIONS2");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS2$struct$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS2$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DepthBoundsTestSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProgrammableSamplePositionsTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$VH_; }

    public static int D3D_ROOT_SIGNATURE_VERSION_1() { return (int)1L; }

    public static int D3D_ROOT_SIGNATURE_VERSION_1_0() { return (int)1L; }

    public static int D3D_ROOT_SIGNATURE_VERSION_1_1() { return (int)2L; }

    static final MemoryLayout D3D12_FEATURE_DATA_ROOT_SIGNATURE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("HighestVersion")
    ).withName("D3D12_FEATURE_DATA_ROOT_SIGNATURE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ROOT_SIGNATURE$struct$LAYOUT() { return D3D12_FEATURE_DATA_ROOT_SIGNATURE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$LAYOUT() { return D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$VH_ = D3D12_FEATURE_DATA_ROOT_SIGNATURE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HighestVersion"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$VH() { return D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NodeIndex"),
        C_INT.withName("TileBasedRenderer"),
        C_INT.withName("UMA"),
        C_INT.withName("CacheCoherentUMA")
    ).withName("D3D12_FEATURE_DATA_ARCHITECTURE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$struct$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeIndex"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TileBasedRenderer"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$UMA$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$UMA$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE$UMA$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE$UMA$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UMA"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE$UMA$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE$UMA$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CacheCoherentUMA"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NodeIndex"),
        C_INT.withName("TileBasedRenderer"),
        C_INT.withName("UMA"),
        C_INT.withName("CacheCoherentUMA"),
        C_INT.withName("IsolatedMMU")
    ).withName("D3D12_FEATURE_DATA_ARCHITECTURE1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeIndex"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TileBasedRenderer"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UMA"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CacheCoherentUMA"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$LAYOUT() { return D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$VH_ = D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolatedMMU"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$VH() { return D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FEATURE_LEVELS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NumFeatureLevels"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pFeatureLevelsRequested"),
        C_INT.withName("MaxSupportedFeatureLevel"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_FEATURE_DATA_FEATURE_LEVELS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FEATURE_LEVELS$struct$LAYOUT() { return D3D12_FEATURE_DATA_FEATURE_LEVELS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$LAYOUT() { return D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$VH_ = D3D12_FEATURE_DATA_FEATURE_LEVELS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumFeatureLevels"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$VH() { return D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$LAYOUT() { return D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$VH_ = MemoryHandles.asAddressVarHandle(D3D12_FEATURE_DATA_FEATURE_LEVELS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFeatureLevelsRequested")));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$VH() { return D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$LAYOUT() { return D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$VH_ = D3D12_FEATURE_DATA_FEATURE_LEVELS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxSupportedFeatureLevel"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$VH() { return D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$VH_; }

    public static int D3D_SHADER_MODEL_5_1() { return (int)81L; }

    public static int D3D_SHADER_MODEL_6_0() { return (int)96L; }

    public static int D3D_SHADER_MODEL_6_1() { return (int)97L; }

    public static int D3D_SHADER_MODEL_6_2() { return (int)98L; }

    public static int D3D_SHADER_MODEL_6_3() { return (int)99L; }

    public static int D3D_SHADER_MODEL_6_4() { return (int)100L; }

    public static int D3D_SHADER_MODEL_6_5() { return (int)101L; }

    public static int D3D_SHADER_MODEL_6_6() { return (int)102L; }

    static final MemoryLayout D3D12_FEATURE_DATA_SHADER_MODEL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("HighestShaderModel")
    ).withName("D3D12_FEATURE_DATA_SHADER_MODEL");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_SHADER_MODEL$struct$LAYOUT() { return D3D12_FEATURE_DATA_SHADER_MODEL$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$LAYOUT() { return D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$VH_ = D3D12_FEATURE_DATA_SHADER_MODEL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HighestShaderModel"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$VH() { return D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FORMAT_SUPPORT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Format"),
        C_INT.withName("Support1"),
        C_INT.withName("Support2")
    ).withName("D3D12_FEATURE_DATA_FORMAT_SUPPORT");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FORMAT_SUPPORT$struct$LAYOUT() { return D3D12_FEATURE_DATA_FORMAT_SUPPORT$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$LAYOUT() { return D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$VH_ = D3D12_FEATURE_DATA_FORMAT_SUPPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Format"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$VH() { return D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$LAYOUT() { return D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$VH_ = D3D12_FEATURE_DATA_FORMAT_SUPPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Support1"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$VH() { return D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$LAYOUT() { return D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$VH_ = D3D12_FEATURE_DATA_FORMAT_SUPPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Support2"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$VH() { return D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Format"),
        C_INT.withName("SampleCount"),
        C_INT.withName("Flags"),
        C_INT.withName("NumQualityLevels")
    ).withName("D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$struct$LAYOUT() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$LAYOUT() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$VH_ = D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Format"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$VH() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$LAYOUT() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$VH_ = D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SampleCount"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$VH() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$LAYOUT() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$VH_ = D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$VH() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$LAYOUT() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$VH_ = D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumQualityLevels"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$VH() { return D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FORMAT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Format"),
        C_BOOL.withName("PlaneCount"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("D3D12_FEATURE_DATA_FORMAT_INFO");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FORMAT_INFO$struct$LAYOUT() { return D3D12_FEATURE_DATA_FORMAT_INFO$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FORMAT_INFO$Format$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FORMAT_INFO$Format$LAYOUT() { return D3D12_FEATURE_DATA_FORMAT_INFO$Format$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_FORMAT_INFO$Format$VH_ = D3D12_FEATURE_DATA_FORMAT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Format"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_FORMAT_INFO$Format$VH() { return D3D12_FEATURE_DATA_FORMAT_INFO$Format$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$LAYOUT() { return D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$VH_ = D3D12_FEATURE_DATA_FORMAT_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PlaneCount"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$VH() { return D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("MaxGPUVirtualAddressBitsPerResource"),
        C_INT.withName("MaxGPUVirtualAddressBitsPerProcess")
    ).withName("D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$struct$LAYOUT() { return D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$LAYOUT() { return D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$VH_ = D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxGPUVirtualAddressBitsPerResource"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$VH() { return D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$LAYOUT() { return D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$VH_ = D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxGPUVirtualAddressBitsPerProcess"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$VH() { return D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$VH_; }

    public static int D3D12_SHADER_CACHE_SUPPORT_NONE() { return (int)0L; }

    public static int D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO() { return (int)1L; }

    public static int D3D12_SHADER_CACHE_SUPPORT_LIBRARY() { return (int)2L; }

    public static int D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE() { return (int)4L; }

    public static int D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE() { return (int)8L; }

    static final MemoryLayout D3D12_FEATURE_DATA_SHADER_CACHE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("SupportFlags")
    ).withName("D3D12_FEATURE_DATA_SHADER_CACHE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_SHADER_CACHE$struct$LAYOUT() { return D3D12_FEATURE_DATA_SHADER_CACHE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$LAYOUT() { return D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$VH_ = D3D12_FEATURE_DATA_SHADER_CACHE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SupportFlags"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$VH() { return D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("CommandListType"),
        C_INT.withName("Priority"),
        C_INT.withName("PriorityForTypeIsSupported")
    ).withName("D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$struct$LAYOUT() { return D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$LAYOUT() { return D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$VH_ = D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CommandListType"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$VH() { return D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$LAYOUT() { return D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$VH_ = D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Priority"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$VH() { return D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$LAYOUT() { return D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$VH_ = D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PriorityForTypeIsSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$VH() { return D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$VH_; }

    public static int D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE() { return (int)0L; }

    public static int D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT() { return (int)1L; }

    public static int D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE() { return (int)2L; }

    public static int D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE() { return (int)4L; }

    public static int D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY() { return (int)8L; }

    public static int D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE() { return (int)16L; }

    public static int D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS() { return (int)32L; }

    public static int D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE() { return (int)64L; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("CopyQueueTimestampQueriesSupported"),
        C_INT.withName("CastingFullyTypedFormatSupported"),
        C_INT.withName("WriteBufferImmediateSupportFlags"),
        C_INT.withName("ViewInstancingTier"),
        C_INT.withName("BarycentricsSupported")
    ).withName("D3D12_FEATURE_DATA_D3D12_OPTIONS3");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CopyQueueTimestampQueriesSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CastingFullyTypedFormatSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WriteBufferImmediateSupportFlags"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ViewInstancingTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BarycentricsSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_EXISTING_HEAPS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Supported")
    ).withName("D3D12_FEATURE_DATA_EXISTING_HEAPS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_EXISTING_HEAPS$struct$LAYOUT() { return D3D12_FEATURE_DATA_EXISTING_HEAPS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$LAYOUT() { return D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$VH_ = D3D12_FEATURE_DATA_EXISTING_HEAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Supported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$VH() { return D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$VH_; }

    public static int D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0() { return (int)0L; }

    public static int D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1() { return (int)1L; }

    public static int D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_2() { return (int)2L; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS4$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("MSAA64KBAlignedTextureSupported"),
        C_INT.withName("SharedResourceCompatibilityTier"),
        C_INT.withName("Native16BitShaderOpsSupported")
    ).withName("D3D12_FEATURE_DATA_D3D12_OPTIONS4");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS4$struct$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS4$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS4$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MSAA64KBAlignedTextureSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS4$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SharedResourceCompatibilityTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS4$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Native16BitShaderOpsSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$VH_; }

    public static int D3D12_HEAP_SERIALIZATION_TIER_0() { return (int)0L; }

    public static int D3D12_HEAP_SERIALIZATION_TIER_10() { return (int)10L; }

    static final MemoryLayout D3D12_FEATURE_DATA_SERIALIZATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NodeIndex"),
        C_INT.withName("HeapSerializationTier")
    ).withName("D3D12_FEATURE_DATA_SERIALIZATION");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_SERIALIZATION$struct$LAYOUT() { return D3D12_FEATURE_DATA_SERIALIZATION$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$LAYOUT() { return D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$VH_ = D3D12_FEATURE_DATA_SERIALIZATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeIndex"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$VH() { return D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$LAYOUT() { return D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$VH_ = D3D12_FEATURE_DATA_SERIALIZATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeapSerializationTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$VH() { return D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_CROSS_NODE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("SharingTier"),
        C_INT.withName("AtomicShaderInstructions")
    ).withName("D3D12_FEATURE_DATA_CROSS_NODE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_CROSS_NODE$struct$LAYOUT() { return D3D12_FEATURE_DATA_CROSS_NODE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$LAYOUT() { return D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$VH_ = D3D12_FEATURE_DATA_CROSS_NODE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SharingTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$VH() { return D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$LAYOUT() { return D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$VH_ = D3D12_FEATURE_DATA_CROSS_NODE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AtomicShaderInstructions"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$VH() { return D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$VH_; }

    public static int D3D12_RENDER_PASS_TIER_0() { return (int)0L; }

    public static int D3D12_RENDER_PASS_TIER_1() { return (int)1L; }

    public static int D3D12_RENDER_PASS_TIER_2() { return (int)2L; }

    public static int D3D12_RAYTRACING_TIER_NOT_SUPPORTED() { return (int)0L; }

    public static int D3D12_RAYTRACING_TIER_1_0() { return (int)10L; }

    public static int D3D12_RAYTRACING_TIER_1_1() { return (int)11L; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS5$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("SRVOnlyTiledResourceTier3"),
        C_INT.withName("RenderPassesTier"),
        C_INT.withName("RaytracingTier")
    ).withName("D3D12_FEATURE_DATA_D3D12_OPTIONS5");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS5$struct$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS5$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS5$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SRVOnlyTiledResourceTier3"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS5$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RenderPassesTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS5$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RaytracingTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$VH_; }

    public static int D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED() { return (int)0L; }

    public static int D3D12_VARIABLE_SHADING_RATE_TIER_1() { return (int)1L; }

    public static int D3D12_VARIABLE_SHADING_RATE_TIER_2() { return (int)2L; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("AdditionalShadingRatesSupported"),
        C_INT.withName("PerPrimitiveShadingRateSupportedWithViewportIndexing"),
        C_INT.withName("VariableShadingRateTier"),
        C_INT.withName("ShadingRateImageTileSize"),
        C_INT.withName("BackgroundProcessingSupported")
    ).withName("D3D12_FEATURE_DATA_D3D12_OPTIONS6");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalShadingRatesSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PerPrimitiveShadingRateSupportedWithViewportIndexing"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VariableShadingRateTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ShadingRateImageTileSize"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BackgroundProcessingSupported"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$VH_; }

    public static int D3D12_MESH_SHADER_TIER_NOT_SUPPORTED() { return (int)0L; }

    public static int D3D12_MESH_SHADER_TIER_1() { return (int)10L; }

    public static int D3D12_SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED() { return (int)0L; }

    public static int D3D12_SAMPLER_FEEDBACK_TIER_0_9() { return (int)90L; }

    public static int D3D12_SAMPLER_FEEDBACK_TIER_1_0() { return (int)100L; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS7$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("MeshShaderTier"),
        C_INT.withName("SamplerFeedbackTier")
    ).withName("D3D12_FEATURE_DATA_D3D12_OPTIONS7");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS7$struct$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS7$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS7$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MeshShaderTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$LAYOUT() { return D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$VH_ = D3D12_FEATURE_DATA_D3D12_OPTIONS7$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SamplerFeedbackTier"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$VH() { return D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("CommandId"),
        C_INT.withName("NodeMask"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pQueryInputData"),
        C_LONGLONG.withName("QueryInputDataSizeInBytes"),
        C_POINTER.withName("pQueryOutputData"),
        C_LONGLONG.withName("QueryOutputDataSizeInBytes")
    ).withName("D3D12_FEATURE_DATA_QUERY_META_COMMAND");
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT_; }

    static final MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$LAYOUT() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$VH_ = D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeMask"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$VH() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$LAYOUT() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$VH_ = MemoryHandles.asAddressVarHandle(D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pQueryInputData")));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$VH() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$LAYOUT() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$VH_ = D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInputDataSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$VH() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$LAYOUT() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$VH_ = MemoryHandles.asAddressVarHandle(D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pQueryOutputData")));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$VH() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$VH_; }

    static final MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$LAYOUT() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$VH_ = D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryOutputDataSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$VH() { return D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$VH_; }

    static final MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("SizeInBytes"),
        C_LONGLONG.withName("Alignment")
    ).withName("D3D12_RESOURCE_ALLOCATION_INFO");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO$struct$LAYOUT() { return D3D12_RESOURCE_ALLOCATION_INFO$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$LAYOUT() { return D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$VH_ = D3D12_RESOURCE_ALLOCATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$VH() { return D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$VH_; }

    static final MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO$Alignment$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO$Alignment$LAYOUT() { return D3D12_RESOURCE_ALLOCATION_INFO$Alignment$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_ALLOCATION_INFO$Alignment$VH_ = D3D12_RESOURCE_ALLOCATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_ALLOCATION_INFO$Alignment$VH() { return D3D12_RESOURCE_ALLOCATION_INFO$Alignment$VH_; }

    static final MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("Offset"),
        C_LONGLONG.withName("Alignment"),
        C_LONGLONG.withName("SizeInBytes")
    ).withName("D3D12_RESOURCE_ALLOCATION_INFO1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO1$struct$LAYOUT() { return D3D12_RESOURCE_ALLOCATION_INFO1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO1$Offset$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO1$Offset$LAYOUT() { return D3D12_RESOURCE_ALLOCATION_INFO1$Offset$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_ALLOCATION_INFO1$Offset$VH_ = D3D12_RESOURCE_ALLOCATION_INFO1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Offset"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_ALLOCATION_INFO1$Offset$VH() { return D3D12_RESOURCE_ALLOCATION_INFO1$Offset$VH_; }

    static final MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$LAYOUT() { return D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$VH_ = D3D12_RESOURCE_ALLOCATION_INFO1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$VH() { return D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$VH_; }

    static final MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$LAYOUT() { return D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$VH_ = D3D12_RESOURCE_ALLOCATION_INFO1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$VH() { return D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$VH_; }

    public static int D3D12_HEAP_TYPE_DEFAULT() { return (int)1L; }

    public static int D3D12_HEAP_TYPE_UPLOAD() { return (int)2L; }

    public static int D3D12_HEAP_TYPE_READBACK() { return (int)3L; }

    public static int D3D12_HEAP_TYPE_CUSTOM() { return (int)4L; }

    public static int D3D12_CPU_PAGE_PROPERTY_UNKNOWN() { return (int)0L; }

    public static int D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE() { return (int)1L; }

    public static int D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE() { return (int)2L; }

    public static int D3D12_CPU_PAGE_PROPERTY_WRITE_BACK() { return (int)3L; }

    public static int D3D12_MEMORY_POOL_UNKNOWN() { return (int)0L; }

    public static int D3D12_MEMORY_POOL_L0() { return (int)1L; }

    public static int D3D12_MEMORY_POOL_L1() { return (int)2L; }

    static final MemoryLayout D3D12_HEAP_PROPERTIES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_INT.withName("CPUPageProperty"),
        C_INT.withName("MemoryPoolPreference"),
        C_INT.withName("CreationNodeMask"),
        C_INT.withName("VisibleNodeMask")
    ).withName("D3D12_HEAP_PROPERTIES");
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_PROPERTIES$struct$LAYOUT() { return D3D12_HEAP_PROPERTIES$struct$LAYOUT_; }

    static final MemoryLayout D3D12_HEAP_PROPERTIES$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_PROPERTIES$Type$LAYOUT() { return D3D12_HEAP_PROPERTIES$Type$LAYOUT_; }

    static final VarHandle D3D12_HEAP_PROPERTIES$Type$VH_ = D3D12_HEAP_PROPERTIES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_HEAP_PROPERTIES$Type$VH() { return D3D12_HEAP_PROPERTIES$Type$VH_; }

    static final MemoryLayout D3D12_HEAP_PROPERTIES$CPUPageProperty$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_PROPERTIES$CPUPageProperty$LAYOUT() { return D3D12_HEAP_PROPERTIES$CPUPageProperty$LAYOUT_; }

    static final VarHandle D3D12_HEAP_PROPERTIES$CPUPageProperty$VH_ = D3D12_HEAP_PROPERTIES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CPUPageProperty"));
    public static java.lang.invoke.VarHandle D3D12_HEAP_PROPERTIES$CPUPageProperty$VH() { return D3D12_HEAP_PROPERTIES$CPUPageProperty$VH_; }

    static final MemoryLayout D3D12_HEAP_PROPERTIES$MemoryPoolPreference$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_PROPERTIES$MemoryPoolPreference$LAYOUT() { return D3D12_HEAP_PROPERTIES$MemoryPoolPreference$LAYOUT_; }

    static final VarHandle D3D12_HEAP_PROPERTIES$MemoryPoolPreference$VH_ = D3D12_HEAP_PROPERTIES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MemoryPoolPreference"));
    public static java.lang.invoke.VarHandle D3D12_HEAP_PROPERTIES$MemoryPoolPreference$VH() { return D3D12_HEAP_PROPERTIES$MemoryPoolPreference$VH_; }

    static final MemoryLayout D3D12_HEAP_PROPERTIES$CreationNodeMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_PROPERTIES$CreationNodeMask$LAYOUT() { return D3D12_HEAP_PROPERTIES$CreationNodeMask$LAYOUT_; }

    static final VarHandle D3D12_HEAP_PROPERTIES$CreationNodeMask$VH_ = D3D12_HEAP_PROPERTIES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CreationNodeMask"));
    public static java.lang.invoke.VarHandle D3D12_HEAP_PROPERTIES$CreationNodeMask$VH() { return D3D12_HEAP_PROPERTIES$CreationNodeMask$VH_; }

    static final MemoryLayout D3D12_HEAP_PROPERTIES$VisibleNodeMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_PROPERTIES$VisibleNodeMask$LAYOUT() { return D3D12_HEAP_PROPERTIES$VisibleNodeMask$LAYOUT_; }

    static final VarHandle D3D12_HEAP_PROPERTIES$VisibleNodeMask$VH_ = D3D12_HEAP_PROPERTIES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VisibleNodeMask"));
    public static java.lang.invoke.VarHandle D3D12_HEAP_PROPERTIES$VisibleNodeMask$VH() { return D3D12_HEAP_PROPERTIES$VisibleNodeMask$VH_; }

    public static int D3D12_HEAP_FLAG_NONE() { return (int)0L; }

    public static int D3D12_HEAP_FLAG_SHARED() { return (int)1L; }

    public static int D3D12_HEAP_FLAG_DENY_BUFFERS() { return (int)4L; }

    public static int D3D12_HEAP_FLAG_ALLOW_DISPLAY() { return (int)8L; }

    public static int D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER() { return (int)32L; }

    public static int D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES() { return (int)64L; }

    public static int D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES() { return (int)128L; }

    public static int D3D12_HEAP_FLAG_HARDWARE_PROTECTED() { return (int)256L; }

    public static int D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH() { return (int)512L; }

    public static int D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS() { return (int)1024L; }

    public static int D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT() { return (int)2048L; }

    public static int D3D12_HEAP_FLAG_CREATE_NOT_ZEROED() { return (int)4096L; }

    public static int D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES() { return (int)0L; }

    public static int D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS() { return (int)192L; }

    public static int D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES() { return (int)68L; }

    public static int D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES() { return (int)132L; }

    static final MemoryLayout D3D12_HEAP_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("SizeInBytes"),
        MemoryLayout.ofStruct(
            C_INT.withName("Type"),
            C_INT.withName("CPUPageProperty"),
            C_INT.withName("MemoryPoolPreference"),
            C_INT.withName("CreationNodeMask"),
            C_INT.withName("VisibleNodeMask")
        ).withName("Properties"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("Alignment"),
        C_INT.withName("Flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_HEAP_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_DESC$struct$LAYOUT() { return D3D12_HEAP_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_HEAP_DESC$SizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_DESC$SizeInBytes$LAYOUT() { return D3D12_HEAP_DESC$SizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_HEAP_DESC$SizeInBytes$VH_ = D3D12_HEAP_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_HEAP_DESC$SizeInBytes$VH() { return D3D12_HEAP_DESC$SizeInBytes$VH_; }

    static final MemoryLayout D3D12_HEAP_DESC$Alignment$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_DESC$Alignment$LAYOUT() { return D3D12_HEAP_DESC$Alignment$LAYOUT_; }

    static final VarHandle D3D12_HEAP_DESC$Alignment$VH_ = D3D12_HEAP_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    public static java.lang.invoke.VarHandle D3D12_HEAP_DESC$Alignment$VH() { return D3D12_HEAP_DESC$Alignment$VH_; }

    static final MemoryLayout D3D12_HEAP_DESC$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HEAP_DESC$Flags$LAYOUT() { return D3D12_HEAP_DESC$Flags$LAYOUT_; }

    static final VarHandle D3D12_HEAP_DESC$Flags$VH_ = D3D12_HEAP_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_HEAP_DESC$Flags$VH() { return D3D12_HEAP_DESC$Flags$VH_; }

    public static int D3D12_RESOURCE_DIMENSION_UNKNOWN() { return (int)0L; }

    public static int D3D12_RESOURCE_DIMENSION_BUFFER() { return (int)1L; }

    public static int D3D12_RESOURCE_DIMENSION_TEXTURE1D() { return (int)2L; }

    public static int D3D12_RESOURCE_DIMENSION_TEXTURE2D() { return (int)3L; }

    public static int D3D12_RESOURCE_DIMENSION_TEXTURE3D() { return (int)4L; }

    public static int D3D12_TEXTURE_LAYOUT_UNKNOWN() { return (int)0L; }

    public static int D3D12_TEXTURE_LAYOUT_ROW_MAJOR() { return (int)1L; }

    public static int D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE() { return (int)2L; }

    public static int D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE() { return (int)3L; }

    public static int D3D12_RESOURCE_FLAG_NONE() { return (int)0L; }

    public static int D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET() { return (int)1L; }

    public static int D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL() { return (int)2L; }

    public static int D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS() { return (int)4L; }

    public static int D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE() { return (int)8L; }

    public static int D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER() { return (int)16L; }

    public static int D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS() { return (int)32L; }

    public static int D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY() { return (int)64L; }

    static final MemoryLayout D3D12_MIP_REGION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Width"),
        C_INT.withName("Height"),
        C_INT.withName("Depth")
    ).withName("D3D12_MIP_REGION");
    public static jdk.incubator.foreign.MemoryLayout D3D12_MIP_REGION$struct$LAYOUT() { return D3D12_MIP_REGION$struct$LAYOUT_; }

    static final MemoryLayout D3D12_MIP_REGION$Width$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_MIP_REGION$Width$LAYOUT() { return D3D12_MIP_REGION$Width$LAYOUT_; }

    static final VarHandle D3D12_MIP_REGION$Width$VH_ = D3D12_MIP_REGION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Width"));
    public static java.lang.invoke.VarHandle D3D12_MIP_REGION$Width$VH() { return D3D12_MIP_REGION$Width$VH_; }

    static final MemoryLayout D3D12_MIP_REGION$Height$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_MIP_REGION$Height$LAYOUT() { return D3D12_MIP_REGION$Height$LAYOUT_; }

    static final VarHandle D3D12_MIP_REGION$Height$VH_ = D3D12_MIP_REGION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Height"));
    public static java.lang.invoke.VarHandle D3D12_MIP_REGION$Height$VH() { return D3D12_MIP_REGION$Height$VH_; }

    static final MemoryLayout D3D12_MIP_REGION$Depth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_MIP_REGION$Depth$LAYOUT() { return D3D12_MIP_REGION$Depth$LAYOUT_; }

    static final VarHandle D3D12_MIP_REGION$Depth$VH_ = D3D12_MIP_REGION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Depth"));
    public static java.lang.invoke.VarHandle D3D12_MIP_REGION$Depth$VH() { return D3D12_MIP_REGION$Depth$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Dimension"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("Alignment"),
        C_LONGLONG.withName("Width"),
        C_INT.withName("Height"),
        C_SHORT.withName("DepthOrArraySize"),
        C_SHORT.withName("MipLevels"),
        C_INT.withName("Format"),
        MemoryLayout.ofStruct(
            C_INT.withName("Count"),
            C_INT.withName("Quality")
        ).withName("SampleDesc"),
        C_INT.withName("Layout"),
        C_INT.withName("Flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_RESOURCE_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$struct$LAYOUT() { return D3D12_RESOURCE_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$Dimension$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$Dimension$LAYOUT() { return D3D12_RESOURCE_DESC$Dimension$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$Dimension$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Dimension"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$Dimension$VH() { return D3D12_RESOURCE_DESC$Dimension$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$Alignment$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$Alignment$LAYOUT() { return D3D12_RESOURCE_DESC$Alignment$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$Alignment$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$Alignment$VH() { return D3D12_RESOURCE_DESC$Alignment$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$Width$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$Width$LAYOUT() { return D3D12_RESOURCE_DESC$Width$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$Width$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Width"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$Width$VH() { return D3D12_RESOURCE_DESC$Width$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$Height$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$Height$LAYOUT() { return D3D12_RESOURCE_DESC$Height$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$Height$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Height"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$Height$VH() { return D3D12_RESOURCE_DESC$Height$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$DepthOrArraySize$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$DepthOrArraySize$LAYOUT() { return D3D12_RESOURCE_DESC$DepthOrArraySize$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$DepthOrArraySize$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DepthOrArraySize"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$DepthOrArraySize$VH() { return D3D12_RESOURCE_DESC$DepthOrArraySize$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$MipLevels$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$MipLevels$LAYOUT() { return D3D12_RESOURCE_DESC$MipLevels$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$MipLevels$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MipLevels"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$MipLevels$VH() { return D3D12_RESOURCE_DESC$MipLevels$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$Format$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$Format$LAYOUT() { return D3D12_RESOURCE_DESC$Format$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$Format$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Format"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$Format$VH() { return D3D12_RESOURCE_DESC$Format$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$Layout$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$Layout$LAYOUT() { return D3D12_RESOURCE_DESC$Layout$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$Layout$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Layout"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$Layout$VH() { return D3D12_RESOURCE_DESC$Layout$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC$Flags$LAYOUT() { return D3D12_RESOURCE_DESC$Flags$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC$Flags$VH_ = D3D12_RESOURCE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC$Flags$VH() { return D3D12_RESOURCE_DESC$Flags$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Dimension"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("Alignment"),
        C_LONGLONG.withName("Width"),
        C_INT.withName("Height"),
        C_SHORT.withName("DepthOrArraySize"),
        C_SHORT.withName("MipLevels"),
        C_INT.withName("Format"),
        MemoryLayout.ofStruct(
            C_INT.withName("Count"),
            C_INT.withName("Quality")
        ).withName("SampleDesc"),
        C_INT.withName("Layout"),
        C_INT.withName("Flags"),
        MemoryLayout.ofStruct(
            C_INT.withName("Width"),
            C_INT.withName("Height"),
            C_INT.withName("Depth")
        ).withName("SamplerFeedbackMipRegion")
    ).withName("D3D12_RESOURCE_DESC1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$struct$LAYOUT() { return D3D12_RESOURCE_DESC1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$Dimension$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$Dimension$LAYOUT() { return D3D12_RESOURCE_DESC1$Dimension$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$Dimension$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Dimension"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$Dimension$VH() { return D3D12_RESOURCE_DESC1$Dimension$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$Alignment$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$Alignment$LAYOUT() { return D3D12_RESOURCE_DESC1$Alignment$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$Alignment$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$Alignment$VH() { return D3D12_RESOURCE_DESC1$Alignment$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$Width$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$Width$LAYOUT() { return D3D12_RESOURCE_DESC1$Width$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$Width$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Width"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$Width$VH() { return D3D12_RESOURCE_DESC1$Width$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$Height$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$Height$LAYOUT() { return D3D12_RESOURCE_DESC1$Height$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$Height$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Height"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$Height$VH() { return D3D12_RESOURCE_DESC1$Height$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$DepthOrArraySize$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$DepthOrArraySize$LAYOUT() { return D3D12_RESOURCE_DESC1$DepthOrArraySize$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$DepthOrArraySize$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DepthOrArraySize"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$DepthOrArraySize$VH() { return D3D12_RESOURCE_DESC1$DepthOrArraySize$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$MipLevels$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$MipLevels$LAYOUT() { return D3D12_RESOURCE_DESC1$MipLevels$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$MipLevels$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MipLevels"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$MipLevels$VH() { return D3D12_RESOURCE_DESC1$MipLevels$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$Format$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$Format$LAYOUT() { return D3D12_RESOURCE_DESC1$Format$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$Format$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Format"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$Format$VH() { return D3D12_RESOURCE_DESC1$Format$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$Layout$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$Layout$LAYOUT() { return D3D12_RESOURCE_DESC1$Layout$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$Layout$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Layout"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$Layout$VH() { return D3D12_RESOURCE_DESC1$Layout$VH_; }

    static final MemoryLayout D3D12_RESOURCE_DESC1$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_DESC1$Flags$LAYOUT() { return D3D12_RESOURCE_DESC1$Flags$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_DESC1$Flags$VH_ = D3D12_RESOURCE_DESC1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_DESC1$Flags$VH() { return D3D12_RESOURCE_DESC1$Flags$VH_; }

    static final MemoryLayout D3D12_DEPTH_STENCIL_VALUE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_FLOAT.withName("Depth"),
        C_BOOL.withName("Stencil"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("D3D12_DEPTH_STENCIL_VALUE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_DEPTH_STENCIL_VALUE$struct$LAYOUT() { return D3D12_DEPTH_STENCIL_VALUE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_DEPTH_STENCIL_VALUE$Depth$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DEPTH_STENCIL_VALUE$Depth$LAYOUT() { return D3D12_DEPTH_STENCIL_VALUE$Depth$LAYOUT_; }

    static final VarHandle D3D12_DEPTH_STENCIL_VALUE$Depth$VH_ = D3D12_DEPTH_STENCIL_VALUE$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("Depth"));
    public static java.lang.invoke.VarHandle D3D12_DEPTH_STENCIL_VALUE$Depth$VH() { return D3D12_DEPTH_STENCIL_VALUE$Depth$VH_; }

    static final MemoryLayout D3D12_DEPTH_STENCIL_VALUE$Stencil$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DEPTH_STENCIL_VALUE$Stencil$LAYOUT() { return D3D12_DEPTH_STENCIL_VALUE$Stencil$LAYOUT_; }

    static final VarHandle D3D12_DEPTH_STENCIL_VALUE$Stencil$VH_ = D3D12_DEPTH_STENCIL_VALUE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Stencil"));
    public static java.lang.invoke.VarHandle D3D12_DEPTH_STENCIL_VALUE$Stencil$VH() { return D3D12_DEPTH_STENCIL_VALUE$Stencil$VH_; }

    static final MemoryLayout D3D12_CLEAR_VALUE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Format"),
        MemoryLayout.ofSequence(4, C_FLOAT).withName("Color"),
        MemoryLayout.ofStruct(
            C_FLOAT.withName("Depth"),
            C_BOOL.withName("Stencil"),
            MemoryLayout.ofPaddingBits(24)
        ).withName("DepthStencil")
    ).withName("D3D12_CLEAR_VALUE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_CLEAR_VALUE$struct$LAYOUT() { return D3D12_CLEAR_VALUE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_CLEAR_VALUE$Format$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_CLEAR_VALUE$Format$LAYOUT() { return D3D12_CLEAR_VALUE$Format$LAYOUT_; }

    static final VarHandle D3D12_CLEAR_VALUE$Format$VH_ = D3D12_CLEAR_VALUE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Format"));
    public static java.lang.invoke.VarHandle D3D12_CLEAR_VALUE$Format$VH() { return D3D12_CLEAR_VALUE$Format$VH_; }

    static final MemoryLayout D3D12_RANGE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("Begin"),
        C_LONGLONG.withName("End")
    ).withName("D3D12_RANGE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RANGE$struct$LAYOUT() { return D3D12_RANGE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RANGE$Begin$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RANGE$Begin$LAYOUT() { return D3D12_RANGE$Begin$LAYOUT_; }

    static final VarHandle D3D12_RANGE$Begin$VH_ = D3D12_RANGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin"));
    public static java.lang.invoke.VarHandle D3D12_RANGE$Begin$VH() { return D3D12_RANGE$Begin$VH_; }

    static final MemoryLayout D3D12_RANGE$End$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RANGE$End$LAYOUT() { return D3D12_RANGE$End$LAYOUT_; }

    static final VarHandle D3D12_RANGE$End$VH_ = D3D12_RANGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("End"));
    public static java.lang.invoke.VarHandle D3D12_RANGE$End$VH() { return D3D12_RANGE$End$VH_; }

    static final MemoryLayout D3D12_RANGE_UINT64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("Begin"),
        C_LONGLONG.withName("End")
    ).withName("D3D12_RANGE_UINT64");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RANGE_UINT64$struct$LAYOUT() { return D3D12_RANGE_UINT64$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RANGE_UINT64$Begin$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RANGE_UINT64$Begin$LAYOUT() { return D3D12_RANGE_UINT64$Begin$LAYOUT_; }

    static final VarHandle D3D12_RANGE_UINT64$Begin$VH_ = D3D12_RANGE_UINT64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin"));
    public static java.lang.invoke.VarHandle D3D12_RANGE_UINT64$Begin$VH() { return D3D12_RANGE_UINT64$Begin$VH_; }

    static final MemoryLayout D3D12_RANGE_UINT64$End$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RANGE_UINT64$End$LAYOUT() { return D3D12_RANGE_UINT64$End$LAYOUT_; }

    static final VarHandle D3D12_RANGE_UINT64$End$VH_ = D3D12_RANGE_UINT64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("End"));
    public static java.lang.invoke.VarHandle D3D12_RANGE_UINT64$End$VH() { return D3D12_RANGE_UINT64$End$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_RANGE_UINT64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Subresource"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Begin"),
            C_LONGLONG.withName("End")
        ).withName("Range")
    ).withName("D3D12_SUBRESOURCE_RANGE_UINT64");
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_RANGE_UINT64$struct$LAYOUT() { return D3D12_SUBRESOURCE_RANGE_UINT64$struct$LAYOUT_; }

    static final MemoryLayout D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$LAYOUT() { return D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$VH_ = D3D12_SUBRESOURCE_RANGE_UINT64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Subresource"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$VH() { return D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("Offset"),
        C_INT.withName("RowPitch"),
        C_INT.withName("DepthPitch")
    ).withName("D3D12_SUBRESOURCE_INFO");
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_INFO$struct$LAYOUT() { return D3D12_SUBRESOURCE_INFO$struct$LAYOUT_; }

    static final MemoryLayout D3D12_SUBRESOURCE_INFO$Offset$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_INFO$Offset$LAYOUT() { return D3D12_SUBRESOURCE_INFO$Offset$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_INFO$Offset$VH_ = D3D12_SUBRESOURCE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Offset"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_INFO$Offset$VH() { return D3D12_SUBRESOURCE_INFO$Offset$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_INFO$RowPitch$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_INFO$RowPitch$LAYOUT() { return D3D12_SUBRESOURCE_INFO$RowPitch$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_INFO$RowPitch$VH_ = D3D12_SUBRESOURCE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RowPitch"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_INFO$RowPitch$VH() { return D3D12_SUBRESOURCE_INFO$RowPitch$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_INFO$DepthPitch$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_INFO$DepthPitch$LAYOUT() { return D3D12_SUBRESOURCE_INFO$DepthPitch$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_INFO$DepthPitch$VH_ = D3D12_SUBRESOURCE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DepthPitch"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_INFO$DepthPitch$VH() { return D3D12_SUBRESOURCE_INFO$DepthPitch$VH_; }

    static final MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("X"),
        C_INT.withName("Y"),
        C_INT.withName("Z"),
        C_INT.withName("Subresource")
    ).withName("D3D12_TILED_RESOURCE_COORDINATE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$struct$LAYOUT() { return D3D12_TILED_RESOURCE_COORDINATE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$X$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$X$LAYOUT() { return D3D12_TILED_RESOURCE_COORDINATE$X$LAYOUT_; }

    static final VarHandle D3D12_TILED_RESOURCE_COORDINATE$X$VH_ = D3D12_TILED_RESOURCE_COORDINATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("X"));
    public static java.lang.invoke.VarHandle D3D12_TILED_RESOURCE_COORDINATE$X$VH() { return D3D12_TILED_RESOURCE_COORDINATE$X$VH_; }

    static final MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$Y$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$Y$LAYOUT() { return D3D12_TILED_RESOURCE_COORDINATE$Y$LAYOUT_; }

    static final VarHandle D3D12_TILED_RESOURCE_COORDINATE$Y$VH_ = D3D12_TILED_RESOURCE_COORDINATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Y"));
    public static java.lang.invoke.VarHandle D3D12_TILED_RESOURCE_COORDINATE$Y$VH() { return D3D12_TILED_RESOURCE_COORDINATE$Y$VH_; }

    static final MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$Z$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$Z$LAYOUT() { return D3D12_TILED_RESOURCE_COORDINATE$Z$LAYOUT_; }

    static final VarHandle D3D12_TILED_RESOURCE_COORDINATE$Z$VH_ = D3D12_TILED_RESOURCE_COORDINATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Z"));
    public static java.lang.invoke.VarHandle D3D12_TILED_RESOURCE_COORDINATE$Z$VH() { return D3D12_TILED_RESOURCE_COORDINATE$Z$VH_; }

    static final MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$Subresource$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILED_RESOURCE_COORDINATE$Subresource$LAYOUT() { return D3D12_TILED_RESOURCE_COORDINATE$Subresource$LAYOUT_; }

    static final VarHandle D3D12_TILED_RESOURCE_COORDINATE$Subresource$VH_ = D3D12_TILED_RESOURCE_COORDINATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Subresource"));
    public static java.lang.invoke.VarHandle D3D12_TILED_RESOURCE_COORDINATE$Subresource$VH() { return D3D12_TILED_RESOURCE_COORDINATE$Subresource$VH_; }

    static final MemoryLayout D3D12_TILE_REGION_SIZE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NumTiles"),
        C_INT.withName("UseBox"),
        C_INT.withName("Width"),
        C_SHORT.withName("Height"),
        C_SHORT.withName("Depth")
    ).withName("D3D12_TILE_REGION_SIZE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_REGION_SIZE$struct$LAYOUT() { return D3D12_TILE_REGION_SIZE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_TILE_REGION_SIZE$NumTiles$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_REGION_SIZE$NumTiles$LAYOUT() { return D3D12_TILE_REGION_SIZE$NumTiles$LAYOUT_; }

    static final VarHandle D3D12_TILE_REGION_SIZE$NumTiles$VH_ = D3D12_TILE_REGION_SIZE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumTiles"));
    public static java.lang.invoke.VarHandle D3D12_TILE_REGION_SIZE$NumTiles$VH() { return D3D12_TILE_REGION_SIZE$NumTiles$VH_; }

    static final MemoryLayout D3D12_TILE_REGION_SIZE$UseBox$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_REGION_SIZE$UseBox$LAYOUT() { return D3D12_TILE_REGION_SIZE$UseBox$LAYOUT_; }

    static final VarHandle D3D12_TILE_REGION_SIZE$UseBox$VH_ = D3D12_TILE_REGION_SIZE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UseBox"));
    public static java.lang.invoke.VarHandle D3D12_TILE_REGION_SIZE$UseBox$VH() { return D3D12_TILE_REGION_SIZE$UseBox$VH_; }

    static final MemoryLayout D3D12_TILE_REGION_SIZE$Width$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_REGION_SIZE$Width$LAYOUT() { return D3D12_TILE_REGION_SIZE$Width$LAYOUT_; }

    static final VarHandle D3D12_TILE_REGION_SIZE$Width$VH_ = D3D12_TILE_REGION_SIZE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Width"));
    public static java.lang.invoke.VarHandle D3D12_TILE_REGION_SIZE$Width$VH() { return D3D12_TILE_REGION_SIZE$Width$VH_; }

    static final MemoryLayout D3D12_TILE_REGION_SIZE$Height$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_REGION_SIZE$Height$LAYOUT() { return D3D12_TILE_REGION_SIZE$Height$LAYOUT_; }

    static final VarHandle D3D12_TILE_REGION_SIZE$Height$VH_ = D3D12_TILE_REGION_SIZE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Height"));
    public static java.lang.invoke.VarHandle D3D12_TILE_REGION_SIZE$Height$VH() { return D3D12_TILE_REGION_SIZE$Height$VH_; }

    static final MemoryLayout D3D12_TILE_REGION_SIZE$Depth$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_REGION_SIZE$Depth$LAYOUT() { return D3D12_TILE_REGION_SIZE$Depth$LAYOUT_; }

    static final VarHandle D3D12_TILE_REGION_SIZE$Depth$VH_ = D3D12_TILE_REGION_SIZE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Depth"));
    public static java.lang.invoke.VarHandle D3D12_TILE_REGION_SIZE$Depth$VH() { return D3D12_TILE_REGION_SIZE$Depth$VH_; }

    public static int D3D12_TILE_RANGE_FLAG_NONE() { return (int)0L; }

    public static int D3D12_TILE_RANGE_FLAG_NULL() { return (int)1L; }

    public static int D3D12_TILE_RANGE_FLAG_SKIP() { return (int)2L; }

    public static int D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE() { return (int)4L; }

    static final MemoryLayout D3D12_SUBRESOURCE_TILING$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("WidthInTiles"),
        C_SHORT.withName("HeightInTiles"),
        C_SHORT.withName("DepthInTiles"),
        C_INT.withName("StartTileIndexInOverallResource")
    ).withName("D3D12_SUBRESOURCE_TILING");
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_TILING$struct$LAYOUT() { return D3D12_SUBRESOURCE_TILING$struct$LAYOUT_; }

    static final MemoryLayout D3D12_SUBRESOURCE_TILING$WidthInTiles$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_TILING$WidthInTiles$LAYOUT() { return D3D12_SUBRESOURCE_TILING$WidthInTiles$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_TILING$WidthInTiles$VH_ = D3D12_SUBRESOURCE_TILING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WidthInTiles"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_TILING$WidthInTiles$VH() { return D3D12_SUBRESOURCE_TILING$WidthInTiles$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_TILING$HeightInTiles$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_TILING$HeightInTiles$LAYOUT() { return D3D12_SUBRESOURCE_TILING$HeightInTiles$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_TILING$HeightInTiles$VH_ = D3D12_SUBRESOURCE_TILING$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("HeightInTiles"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_TILING$HeightInTiles$VH() { return D3D12_SUBRESOURCE_TILING$HeightInTiles$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_TILING$DepthInTiles$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_TILING$DepthInTiles$LAYOUT() { return D3D12_SUBRESOURCE_TILING$DepthInTiles$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_TILING$DepthInTiles$VH_ = D3D12_SUBRESOURCE_TILING$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DepthInTiles"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_TILING$DepthInTiles$VH() { return D3D12_SUBRESOURCE_TILING$DepthInTiles$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$LAYOUT() { return D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$VH_ = D3D12_SUBRESOURCE_TILING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartTileIndexInOverallResource"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$VH() { return D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$VH_; }

    static final MemoryLayout D3D12_TILE_SHAPE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("WidthInTexels"),
        C_INT.withName("HeightInTexels"),
        C_INT.withName("DepthInTexels")
    ).withName("D3D12_TILE_SHAPE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_SHAPE$struct$LAYOUT() { return D3D12_TILE_SHAPE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_TILE_SHAPE$WidthInTexels$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_SHAPE$WidthInTexels$LAYOUT() { return D3D12_TILE_SHAPE$WidthInTexels$LAYOUT_; }

    static final VarHandle D3D12_TILE_SHAPE$WidthInTexels$VH_ = D3D12_TILE_SHAPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WidthInTexels"));
    public static java.lang.invoke.VarHandle D3D12_TILE_SHAPE$WidthInTexels$VH() { return D3D12_TILE_SHAPE$WidthInTexels$VH_; }

    static final MemoryLayout D3D12_TILE_SHAPE$HeightInTexels$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_SHAPE$HeightInTexels$LAYOUT() { return D3D12_TILE_SHAPE$HeightInTexels$LAYOUT_; }

    static final VarHandle D3D12_TILE_SHAPE$HeightInTexels$VH_ = D3D12_TILE_SHAPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeightInTexels"));
    public static java.lang.invoke.VarHandle D3D12_TILE_SHAPE$HeightInTexels$VH() { return D3D12_TILE_SHAPE$HeightInTexels$VH_; }

    static final MemoryLayout D3D12_TILE_SHAPE$DepthInTexels$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_TILE_SHAPE$DepthInTexels$LAYOUT() { return D3D12_TILE_SHAPE$DepthInTexels$LAYOUT_; }

    static final VarHandle D3D12_TILE_SHAPE$DepthInTexels$VH_ = D3D12_TILE_SHAPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DepthInTexels"));
    public static java.lang.invoke.VarHandle D3D12_TILE_SHAPE$DepthInTexels$VH() { return D3D12_TILE_SHAPE$DepthInTexels$VH_; }

    static final MemoryLayout D3D12_PACKED_MIP_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_BOOL.withName("NumStandardMips"),
        C_BOOL.withName("NumPackedMips"),
        MemoryLayout.ofPaddingBits(16),
        C_INT.withName("NumTilesForPackedMips"),
        C_INT.withName("StartTileIndexInOverallResource")
    ).withName("D3D12_PACKED_MIP_INFO");
    public static jdk.incubator.foreign.MemoryLayout D3D12_PACKED_MIP_INFO$struct$LAYOUT() { return D3D12_PACKED_MIP_INFO$struct$LAYOUT_; }

    static final MemoryLayout D3D12_PACKED_MIP_INFO$NumStandardMips$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout D3D12_PACKED_MIP_INFO$NumStandardMips$LAYOUT() { return D3D12_PACKED_MIP_INFO$NumStandardMips$LAYOUT_; }

    static final VarHandle D3D12_PACKED_MIP_INFO$NumStandardMips$VH_ = D3D12_PACKED_MIP_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("NumStandardMips"));
    public static java.lang.invoke.VarHandle D3D12_PACKED_MIP_INFO$NumStandardMips$VH() { return D3D12_PACKED_MIP_INFO$NumStandardMips$VH_; }

    static final MemoryLayout D3D12_PACKED_MIP_INFO$NumPackedMips$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout D3D12_PACKED_MIP_INFO$NumPackedMips$LAYOUT() { return D3D12_PACKED_MIP_INFO$NumPackedMips$LAYOUT_; }

    static final VarHandle D3D12_PACKED_MIP_INFO$NumPackedMips$VH_ = D3D12_PACKED_MIP_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("NumPackedMips"));
    public static java.lang.invoke.VarHandle D3D12_PACKED_MIP_INFO$NumPackedMips$VH() { return D3D12_PACKED_MIP_INFO$NumPackedMips$VH_; }

    static final MemoryLayout D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$LAYOUT() { return D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$LAYOUT_; }

    static final VarHandle D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$VH_ = D3D12_PACKED_MIP_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumTilesForPackedMips"));
    public static java.lang.invoke.VarHandle D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$VH() { return D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$VH_; }

    static final MemoryLayout D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$LAYOUT() { return D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$LAYOUT_; }

    static final VarHandle D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$VH_ = D3D12_PACKED_MIP_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartTileIndexInOverallResource"));
    public static java.lang.invoke.VarHandle D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$VH() { return D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$VH_; }

    public static int D3D12_TILE_MAPPING_FLAG_NONE() { return (int)0L; }

    public static int D3D12_TILE_MAPPING_FLAG_NO_HAZARD() { return (int)1L; }

    public static int D3D12_TILE_COPY_FLAG_NONE() { return (int)0L; }

    public static int D3D12_TILE_COPY_FLAG_NO_HAZARD() { return (int)1L; }

    public static int D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE() { return (int)2L; }

    public static int D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER() { return (int)4L; }

    public static int D3D12_RESOURCE_STATE_COMMON() { return (int)0L; }

    public static int D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER() { return (int)1L; }

    public static int D3D12_RESOURCE_STATE_INDEX_BUFFER() { return (int)2L; }

    public static int D3D12_RESOURCE_STATE_RENDER_TARGET() { return (int)4L; }

    public static int D3D12_RESOURCE_STATE_UNORDERED_ACCESS() { return (int)8L; }

    public static int D3D12_RESOURCE_STATE_DEPTH_WRITE() { return (int)16L; }

    public static int D3D12_RESOURCE_STATE_DEPTH_READ() { return (int)32L; }

    public static int D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE() { return (int)64L; }

    public static int D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE() { return (int)128L; }

    public static int D3D12_RESOURCE_STATE_STREAM_OUT() { return (int)256L; }

    public static int D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT() { return (int)512L; }

    public static int D3D12_RESOURCE_STATE_COPY_DEST() { return (int)1024L; }

    public static int D3D12_RESOURCE_STATE_COPY_SOURCE() { return (int)2048L; }

    public static int D3D12_RESOURCE_STATE_RESOLVE_DEST() { return (int)4096L; }

    public static int D3D12_RESOURCE_STATE_RESOLVE_SOURCE() { return (int)8192L; }

    public static int D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE() { return (int)4194304L; }

    public static int D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE() { return (int)16777216L; }

    public static int D3D12_RESOURCE_STATE_GENERIC_READ() { return (int)2755L; }

    public static int D3D12_RESOURCE_STATE_PRESENT() { return (int)0L; }

    public static int D3D12_RESOURCE_STATE_PREDICATION() { return (int)512L; }

    public static int D3D12_RESOURCE_STATE_VIDEO_DECODE_READ() { return (int)65536L; }

    public static int D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE() { return (int)131072L; }

    public static int D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ() { return (int)262144L; }

    public static int D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE() { return (int)524288L; }

    public static int D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ() { return (int)2097152L; }

    public static int D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE() { return (int)8388608L; }

    public static int D3D12_RESOURCE_BARRIER_TYPE_TRANSITION() { return (int)0L; }

    public static int D3D12_RESOURCE_BARRIER_TYPE_ALIASING() { return (int)1L; }

    public static int D3D12_RESOURCE_BARRIER_TYPE_UAV() { return (int)2L; }

    static final MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pResource"),
        C_INT.withName("Subresource"),
        C_INT.withName("StateBefore"),
        C_INT.withName("StateAfter"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_RESOURCE_TRANSITION_BARRIER");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$struct$LAYOUT() { return D3D12_RESOURCE_TRANSITION_BARRIER$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$pResource$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$pResource$LAYOUT() { return D3D12_RESOURCE_TRANSITION_BARRIER$pResource$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_TRANSITION_BARRIER$pResource$VH_ = MemoryHandles.asAddressVarHandle(D3D12_RESOURCE_TRANSITION_BARRIER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pResource")));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_TRANSITION_BARRIER$pResource$VH() { return D3D12_RESOURCE_TRANSITION_BARRIER$pResource$VH_; }

    static final MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$LAYOUT() { return D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$VH_ = D3D12_RESOURCE_TRANSITION_BARRIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Subresource"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$VH() { return D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$VH_; }

    static final MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$LAYOUT() { return D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$VH_ = D3D12_RESOURCE_TRANSITION_BARRIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StateBefore"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$VH() { return D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$VH_; }

    static final MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$LAYOUT() { return D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$VH_ = D3D12_RESOURCE_TRANSITION_BARRIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StateAfter"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$VH() { return D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$VH_; }

    static final MemoryLayout D3D12_RESOURCE_ALIASING_BARRIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pResourceBefore"),
        C_POINTER.withName("pResourceAfter")
    ).withName("D3D12_RESOURCE_ALIASING_BARRIER");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALIASING_BARRIER$struct$LAYOUT() { return D3D12_RESOURCE_ALIASING_BARRIER$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$LAYOUT() { return D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$VH_ = MemoryHandles.asAddressVarHandle(D3D12_RESOURCE_ALIASING_BARRIER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pResourceBefore")));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$VH() { return D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$VH_; }

    static final MemoryLayout D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$LAYOUT() { return D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$VH_ = MemoryHandles.asAddressVarHandle(D3D12_RESOURCE_ALIASING_BARRIER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pResourceAfter")));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$VH() { return D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$VH_; }

    static final MemoryLayout D3D12_RESOURCE_UAV_BARRIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pResource")
    ).withName("D3D12_RESOURCE_UAV_BARRIER");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_UAV_BARRIER$struct$LAYOUT() { return D3D12_RESOURCE_UAV_BARRIER$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RESOURCE_UAV_BARRIER$pResource$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_UAV_BARRIER$pResource$LAYOUT() { return D3D12_RESOURCE_UAV_BARRIER$pResource$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_UAV_BARRIER$pResource$VH_ = MemoryHandles.asAddressVarHandle(D3D12_RESOURCE_UAV_BARRIER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pResource")));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_UAV_BARRIER$pResource$VH() { return D3D12_RESOURCE_UAV_BARRIER$pResource$VH_; }

    public static int D3D12_RESOURCE_BARRIER_FLAG_NONE() { return (int)0L; }

    public static int D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY() { return (int)1L; }

    public static int D3D12_RESOURCE_BARRIER_FLAG_END_ONLY() { return (int)2L; }

    static final MemoryLayout D3D12_RESOURCE_BARRIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_INT.withName("Flags"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pResource"),
            C_INT.withName("Subresource"),
            C_INT.withName("StateBefore"),
            C_INT.withName("StateAfter"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("Transition"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pResourceBefore"),
            C_POINTER.withName("pResourceAfter")
        ).withName("Aliasing"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pResource")
        ).withName("UAV")
    ).withName("D3D12_RESOURCE_BARRIER");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_BARRIER$struct$LAYOUT() { return D3D12_RESOURCE_BARRIER$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RESOURCE_BARRIER$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_BARRIER$Type$LAYOUT() { return D3D12_RESOURCE_BARRIER$Type$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_BARRIER$Type$VH_ = D3D12_RESOURCE_BARRIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_BARRIER$Type$VH() { return D3D12_RESOURCE_BARRIER$Type$VH_; }

    static final MemoryLayout D3D12_RESOURCE_BARRIER$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RESOURCE_BARRIER$Flags$LAYOUT() { return D3D12_RESOURCE_BARRIER$Flags$LAYOUT_; }

    static final VarHandle D3D12_RESOURCE_BARRIER$Flags$VH_ = D3D12_RESOURCE_BARRIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_RESOURCE_BARRIER$Flags$VH() { return D3D12_RESOURCE_BARRIER$Flags$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_FOOTPRINT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Format"),
        C_INT.withName("Width"),
        C_INT.withName("Height"),
        C_INT.withName("Depth"),
        C_INT.withName("RowPitch")
    ).withName("D3D12_SUBRESOURCE_FOOTPRINT");
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_FOOTPRINT$struct$LAYOUT() { return D3D12_SUBRESOURCE_FOOTPRINT$struct$LAYOUT_; }

    static final MemoryLayout D3D12_SUBRESOURCE_FOOTPRINT$Format$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_FOOTPRINT$Format$LAYOUT() { return D3D12_SUBRESOURCE_FOOTPRINT$Format$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_FOOTPRINT$Format$VH_ = D3D12_SUBRESOURCE_FOOTPRINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Format"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_FOOTPRINT$Format$VH() { return D3D12_SUBRESOURCE_FOOTPRINT$Format$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_FOOTPRINT$Width$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_FOOTPRINT$Width$LAYOUT() { return D3D12_SUBRESOURCE_FOOTPRINT$Width$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_FOOTPRINT$Width$VH_ = D3D12_SUBRESOURCE_FOOTPRINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Width"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_FOOTPRINT$Width$VH() { return D3D12_SUBRESOURCE_FOOTPRINT$Width$VH_; }

    static final MemoryLayout D3D12_SUBRESOURCE_FOOTPRINT$Height$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBRESOURCE_FOOTPRINT$Height$LAYOUT() { return D3D12_SUBRESOURCE_FOOTPRINT$Height$LAYOUT_; }

    static final VarHandle D3D12_SUBRESOURCE_FOOTPRINT$Height$VH_ = D3D12_SUBRESOURCE_FOOTPRINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Height"));
    public static java.lang.invoke.VarHandle D3D12_SUBRESOURCE_FOOTPRINT$Height$VH() { return D3D12_SUBRESOURCE_FOOTPRINT$Height$VH_; }

}

