// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class Windows_h$constants$39 extends Windows_h$constants$38 {
    Windows_h$constants$39() {}
    public static long XSTATE_MASK_LEGACY() { return 3L; }

    public static long XSTATE_MASK_GSSE() { return 4L; }

    public static long XSTATE_MASK_AVX() { return 4L; }

    public static long XSTATE_MASK_MPX() { return 24L; }

    public static long XSTATE_MASK_AVX512() { return 224L; }

    public static long XSTATE_MASK_IPT() { return 256L; }

    public static long XSTATE_MASK_CET_U() { return 2048L; }

    public static long XSTATE_MASK_LWP() { return 4611686018427387904L; }

    public static long XSTATE_MASK_ALLOWED() { return 4611686018427390463L; }

    public static long XSTATE_MASK_PERSISTENT() { return 4611686018427387920L; }

    public static long XSTATE_MASK_USER_VISIBLE_SUPERVISOR() { return 2048L; }

    public static int XSTATE_COMPACTION_ENABLE() { return (int)63L; }

    public static long XSTATE_COMPACTION_ENABLE_MASK() { return -9223372036854775808L; }

    public static int XSTATE_ALIGN_BIT() { return (int)1L; }

    public static long XSTATE_ALIGN_MASK() { return 2L; }

    public static int XSTATE_CONTROLFLAG_XSAVEOPT_MASK() { return (int)1L; }

    public static int XSTATE_CONTROLFLAG_XSAVEC_MASK() { return (int)2L; }

    public static int XSTATE_CONTROLFLAG_VALID_MASK() { return (int)3L; }

    public static int CFG_CALL_TARGET_VALID() { return (int)1L; }

    public static int CFG_CALL_TARGET_PROCESSED() { return (int)2L; }

    public static int CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID() { return (int)4L; }

    public static int SECTION_ALL_ACCESS() { return (int)983071L; }

    public static int SESSION_ALL_ACCESS() { return (int)983043L; }

    public static int PAGE_ENCLAVE_THREAD_CONTROL() { return (int)2147483648L; }

    public static int PAGE_REVERT_TO_FILE_MAP() { return (int)2147483648L; }

    public static int PAGE_ENCLAVE_DECOMMIT() { return (int)268435456L; }

    public static int PAGE_ENCLAVE_SS_FIRST() { return (int)268435457L; }

    public static int PAGE_ENCLAVE_SS_REST() { return (int)268435458L; }

    public static int MEM_4MB_PAGES() { return (int)2147483648L; }

    public static int MEM_64K_PAGES() { return (int)541065216L; }

    public static long MEM_EXTENDED_PARAMETER_NUMA_NODE_MANDATORY() { return -9223372036854775808L; }

    public static int SEC_LARGE_PAGES() { return (int)2147483648L; }

    public static int SEC_IMAGE_NO_EXECUTE() { return (int)285212672L; }

    public static int FILE_READ_DATA() { return (int)1L; }

    public static int FILE_LIST_DIRECTORY() { return (int)1L; }

    public static int FILE_WRITE_DATA() { return (int)2L; }

    public static int FILE_ADD_FILE() { return (int)2L; }

    public static int FILE_APPEND_DATA() { return (int)4L; }

    public static int FILE_ADD_SUBDIRECTORY() { return (int)4L; }

    public static int FILE_CREATE_PIPE_INSTANCE() { return (int)4L; }

    public static int FILE_READ_EA() { return (int)8L; }

    public static int FILE_WRITE_EA() { return (int)16L; }

    public static int FILE_EXECUTE() { return (int)32L; }

    public static int FILE_TRAVERSE() { return (int)32L; }

    public static int FILE_DELETE_CHILD() { return (int)64L; }

    public static int FILE_READ_ATTRIBUTES() { return (int)128L; }

    public static int FILE_WRITE_ATTRIBUTES() { return (int)256L; }

    public static int FILE_ALL_ACCESS() { return (int)2032127L; }

    public static int FILE_GENERIC_READ() { return (int)1179785L; }

    public static int FILE_GENERIC_WRITE() { return (int)1179926L; }

    public static int FILE_GENERIC_EXECUTE() { return (int)1179808L; }

    public static int MAILSLOT_NO_MESSAGE() { return (int)4294967295L; }

    public static int MAILSLOT_WAIT_FOREVER() { return (int)4294967295L; }

    public static long FILE_INVALID_FILE_ID() { return -1L; }

    public static int REPARSE_GUID_DATA_BUFFER_HEADER_SIZE() { return (int)24L; }

    public static int MAXIMUM_REPARSE_DATA_BUFFER_SIZE() { return (int)16384L; }

    public static int IO_REPARSE_TAG_RESERVED_ZERO() { return (int)0L; }

    public static int IO_REPARSE_TAG_RESERVED_ONE() { return (int)1L; }

    public static int IO_REPARSE_TAG_RESERVED_TWO() { return (int)2L; }

    public static int IO_REPARSE_TAG_RESERVED_RANGE() { return (int)2L; }

    public static int IO_REPARSE_TAG_MOUNT_POINT() { return (int)2684354563L; }

    public static int IO_REPARSE_TAG_HSM() { return (int)3221225476L; }

    public static int IO_REPARSE_TAG_HSM2() { return (int)2147483654L; }

    public static int IO_REPARSE_TAG_SIS() { return (int)2147483655L; }

    public static int IO_REPARSE_TAG_WIM() { return (int)2147483656L; }

    public static int IO_REPARSE_TAG_CSV() { return (int)2147483657L; }

    public static int IO_REPARSE_TAG_DFS() { return (int)2147483658L; }

    public static int IO_REPARSE_TAG_SYMLINK() { return (int)2684354572L; }

    public static int IO_REPARSE_TAG_DFSR() { return (int)2147483666L; }

    public static int IO_REPARSE_TAG_DEDUP() { return (int)2147483667L; }

    public static int IO_REPARSE_TAG_NFS() { return (int)2147483668L; }

    public static int IO_REPARSE_TAG_FILE_PLACEHOLDER() { return (int)2147483669L; }

    public static int IO_REPARSE_TAG_WOF() { return (int)2147483671L; }

    public static int IO_REPARSE_TAG_WCI() { return (int)2147483672L; }

    public static int IO_REPARSE_TAG_WCI_1() { return (int)2415923224L; }

    public static int IO_REPARSE_TAG_GLOBAL_REPARSE() { return (int)2684354585L; }

    public static int IO_REPARSE_TAG_CLOUD() { return (int)2415919130L; }

    public static int IO_REPARSE_TAG_CLOUD_1() { return (int)2415923226L; }

    public static int IO_REPARSE_TAG_CLOUD_2() { return (int)2415927322L; }

    public static int IO_REPARSE_TAG_CLOUD_3() { return (int)2415931418L; }

    public static int IO_REPARSE_TAG_CLOUD_4() { return (int)2415935514L; }

    public static int IO_REPARSE_TAG_CLOUD_5() { return (int)2415939610L; }

    public static int IO_REPARSE_TAG_CLOUD_6() { return (int)2415943706L; }

    public static int IO_REPARSE_TAG_CLOUD_7() { return (int)2415947802L; }

    public static int IO_REPARSE_TAG_CLOUD_8() { return (int)2415951898L; }

    public static int IO_REPARSE_TAG_CLOUD_9() { return (int)2415955994L; }

    public static int IO_REPARSE_TAG_CLOUD_A() { return (int)2415960090L; }

    public static int IO_REPARSE_TAG_CLOUD_B() { return (int)2415964186L; }

    public static int IO_REPARSE_TAG_CLOUD_C() { return (int)2415968282L; }

    public static int IO_REPARSE_TAG_CLOUD_D() { return (int)2415972378L; }

    public static int IO_REPARSE_TAG_CLOUD_E() { return (int)2415976474L; }

    public static int IO_REPARSE_TAG_CLOUD_F() { return (int)2415980570L; }

    public static int IO_REPARSE_TAG_CLOUD_MASK() { return (int)61440L; }

    public static int IO_REPARSE_TAG_APPEXECLINK() { return (int)2147483675L; }

    public static int IO_REPARSE_TAG_PROJFS() { return (int)2415919132L; }

    public static int IO_REPARSE_TAG_STORAGE_SYNC() { return (int)2147483678L; }

    public static int IO_REPARSE_TAG_WCI_TOMBSTONE() { return (int)2684354591L; }

    public static int IO_REPARSE_TAG_UNHANDLED() { return (int)2147483680L; }

    public static int IO_REPARSE_TAG_ONEDRIVE() { return (int)2147483681L; }

    public static int IO_REPARSE_TAG_PROJFS_TOMBSTONE() { return (int)2684354594L; }

    public static int IO_REPARSE_TAG_AF_UNIX() { return (int)2147483683L; }

    public static int IO_REPARSE_TAG_WCI_LINK() { return (int)2684354599L; }

    public static int IO_REPARSE_TAG_WCI_LINK_1() { return (int)2684358695L; }

    public static int SHUFFLE_FILE_FLAG_SKIP_INITIALIZING_NEW_CLUSTERS() { return (int)1L; }

    public static int IO_COMPLETION_ALL_ACCESS() { return (int)2031619L; }

    public static long IO_QOS_MAX_RESERVATION() { return 1000000000L; }

    static final MemorySegment SMB_CCF_APP_INSTANCE_EA_NAME$SEGMENT_CONSTANT_ = CSupport.toCString("ClusteredApplicationInstance");
    public static jdk.incubator.foreign.MemorySegment SMB_CCF_APP_INSTANCE_EA_NAME() { return SMB_CCF_APP_INSTANCE_EA_NAME$SEGMENT_CONSTANT_; }

    public static int PERFSTATE_POLICY_CHANGE_DECREASE_MAX() { return (int)2L; }

    public static int PERFSTATE_POLICY_CHANGE_INCREASE_MAX() { return (int)3L; }

    public static int PROCESSOR_PERF_BOOST_MODE_MAX() { return (int)6L; }

    public static int CORE_PARKING_POLICY_CHANGE_MAX() { return (int)3L; }

    public static int ES_SYSTEM_REQUIRED() { return (int)1L; }

    public static int ES_DISPLAY_REQUIRED() { return (int)2L; }

    public static int ES_USER_PRESENT() { return (int)4L; }

    public static int ES_AWAYMODE_REQUIRED() { return (int)64L; }

    public static int ES_CONTINUOUS() { return (int)2147483648L; }

    public static int DIAGNOSTIC_REASON_NOT_SPECIFIED() { return (int)2147483648L; }

    public static int DIAGNOSTIC_REASON_INVALID_FLAGS() { return (int)2147483640L; }

    public static int POWER_REQUEST_CONTEXT_VERSION() { return (int)0L; }

    public static int POWER_REQUEST_CONTEXT_SIMPLE_STRING() { return (int)1L; }

    public static int POWER_REQUEST_CONTEXT_DETAILED_STRING() { return (int)2L; }

    public static int POWER_SETTING_VALUE_VERSION() { return (int)1L; }

    public static int POWER_PLATFORM_ROLE_V1() { return (int)1L; }

    public static int POWER_PLATFORM_ROLE_V1_MAX() { return (int)8L; }

    public static int POWER_PLATFORM_ROLE_V2() { return (int)2L; }

    public static int POWER_PLATFORM_ROLE_V2_MAX() { return (int)9L; }

    public static int POWER_PLATFORM_ROLE_VERSION() { return (int)2L; }

    public static int POWER_PLATFORM_ROLE_VERSION_MAX() { return (int)9L; }

    public static int POWER_ACTION_CRITICAL() { return (int)2147483648L; }

    public static int POWER_FORCE_TRIGGER_RESET() { return (int)2147483648L; }

    public static int BATTERY_DISCHARGE_FLAGS_ENABLE() { return (int)2147483648L; }

    public static int IMAGE_FILE_MACHINE_AXP64() { return (int)644L; }

    public static int IMAGE_NT_OPTIONAL_HDR_MAGIC() { return (int)523L; }

    public static int IMAGE_SCN_MEM_WRITE() { return (int)2147483648L; }

    public static short IMAGE_SYM_UNDEFINED() { return (short)0L; }

    public static short IMAGE_SYM_ABSOLUTE() { return (short)-1L; }

    public static short IMAGE_SYM_DEBUG() { return (short)-2L; }

    public static int IMAGE_SYM_SECTION_MAX_EX() { return (int)2147483647L; }

    public static byte IMAGE_SYM_CLASS_END_OF_FUNCTION() { return (byte)255L; }

    static final MemorySegment IMAGE_ARCHIVE_START$SEGMENT_CONSTANT_ = CSupport.toCString("!<arch>
");
    public static jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_START() { return IMAGE_ARCHIVE_START$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_END$SEGMENT_CONSTANT_ = CSupport.toCString("`
");
    public static jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_END() { return IMAGE_ARCHIVE_END$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_PAD$SEGMENT_CONSTANT_ = CSupport.toCString("
");
    public static jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_PAD() { return IMAGE_ARCHIVE_PAD$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_LINKER_MEMBER$SEGMENT_CONSTANT_ = CSupport.toCString("/               ");
    public static jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_LINKER_MEMBER() { return IMAGE_ARCHIVE_LINKER_MEMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_LONGNAMES_MEMBER$SEGMENT_CONSTANT_ = CSupport.toCString("//              ");
    public static jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_LONGNAMES_MEMBER() { return IMAGE_ARCHIVE_LONGNAMES_MEMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_HYBRIDMAP_MEMBER$SEGMENT_CONSTANT_ = CSupport.toCString("/<HYBRIDMAP>/   ");
    public static jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_HYBRIDMAP_MEMBER() { return IMAGE_ARCHIVE_HYBRIDMAP_MEMBER$SEGMENT_CONSTANT_; }

    public static long IMAGE_ORDINAL_FLAG64() { return -9223372036854775808L; }

    public static int IMAGE_ORDINAL_FLAG32() { return (int)2147483648L; }

    public static long IMAGE_ORDINAL_FLAG() { return -9223372036854775808L; }

    public static int IMAGE_RESOURCE_NAME_IS_STRING() { return (int)2147483648L; }

    public static int IMAGE_RESOURCE_DATA_IS_DIRECTORY() { return (int)2147483648L; }

    public static int IMAGE_HOT_PATCH_CHUNK_INVERSE() { return (int)2147483648L; }

    public static int IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK() { return (int)4026531840L; }

    public static int IMAGE_ENCLAVE_LONG_ID_LENGTH() { return (int)32L; }

    public static int IMAGE_ENCLAVE_SHORT_ID_LENGTH() { return (int)16L; }

    public static int IMAGE_ENCLAVE_MINIMUM_CONFIG_SIZE() { return (int)76L; }

    public static int RTL_RUN_ONCE_CHECK_ONLY() { return (int)1L; }

    public static int RTL_RUN_ONCE_ASYNC() { return (int)2L; }

    public static int RTL_RUN_ONCE_INIT_FAILED() { return (int)4L; }

    public static int FAST_FAIL_INVALID_FAST_FAIL_CODE() { return (int)4294967295L; }

    public static int COMPRESSION_FORMAT_NONE() { return (int)0L; }

    public static int COMPRESSION_FORMAT_DEFAULT() { return (int)1L; }

    public static int COMPRESSION_FORMAT_LZNT1() { return (int)2L; }

    public static int COMPRESSION_FORMAT_XPRESS() { return (int)3L; }

    public static int COMPRESSION_FORMAT_XPRESS_HUFF() { return (int)4L; }

    public static int COMPRESSION_ENGINE_STANDARD() { return (int)0L; }

    public static int COMPRESSION_ENGINE_MAXIMUM() { return (int)256L; }

    public static int COMPRESSION_ENGINE_HIBER() { return (int)512L; }

    public static int SEF_MACL_VALID_FLAGS() { return (int)1792L; }

    public static int RTL_UMS_VERSION() { return (int)256L; }

    public static int VRL_PREDEFINED_CLASS_BEGIN() { return (int)1L; }

    public static int VRL_CUSTOM_CLASS_BEGIN() { return (int)256L; }

    public static int VRL_CLASS_CONSISTENCY() { return (int)1L; }

    public static int VRL_ENABLE_KERNEL_BREAKS() { return (int)-2147483648L; }

    public static int CTMF_INCLUDE_APPCONTAINER() { return (int)1L; }

    public static int CTMF_INCLUDE_LPAC() { return (int)2L; }

    public static int CTMF_VALID_FLAGS() { return (int)3L; }

    public static int FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN() { return (int)1L; }

    public static long FLUSH_NV_MEMORY_DEFAULT_TOKEN() { return -1L; }

    public static int WRITE_NV_MEMORY_FLAG_FLUSH() { return (int)1L; }

    public static int WRITE_NV_MEMORY_FLAG_NON_TEMPORAL() { return (int)2L; }

    public static int WRITE_NV_MEMORY_FLAG_PERSIST() { return (int)3L; }

    public static int WRITE_NV_MEMORY_FLAG_NO_DRAIN() { return (int)256L; }

    public static int FILL_NV_MEMORY_FLAG_FLUSH() { return (int)1L; }

    public static int FILL_NV_MEMORY_FLAG_NON_TEMPORAL() { return (int)2L; }

    public static int FILL_NV_MEMORY_FLAG_PERSIST() { return (int)3L; }

    public static int FILL_NV_MEMORY_FLAG_NO_DRAIN() { return (int)256L; }

    public static byte RTL_CORRELATION_VECTOR_VERSION_1() { return (byte)1L; }

    public static byte RTL_CORRELATION_VECTOR_VERSION_2() { return (byte)2L; }

    public static byte RTL_CORRELATION_VECTOR_VERSION_CURRENT() { return (byte)2L; }

    public static int RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH() { return (int)16L; }

    public static int RTL_CORRELATION_VECTOR_V1_LENGTH() { return (int)64L; }

    public static int RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH() { return (int)22L; }

    public static int RTL_CORRELATION_VECTOR_V2_LENGTH() { return (int)128L; }

    static final MemorySegment IMAGE_POLICY_SECTION_NAME$SEGMENT_CONSTANT_ = CSupport.toCString(".tPolicy");
    public static jdk.incubator.foreign.MemorySegment IMAGE_POLICY_SECTION_NAME() { return IMAGE_POLICY_SECTION_NAME$SEGMENT_CONSTANT_; }

    public static int RTL_CRITICAL_SECTION_ALL_FLAG_BITS() { return (int)4278190080L; }

    public static int RTL_CRITICAL_SECTION_FLAG_RESERVED() { return (int)3758096384L; }

    public static int ACTIVATION_CONTEXT_PATH_TYPE_NONE() { return (int)1L; }

    public static int ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE() { return (int)2L; }

    public static int ACTIVATION_CONTEXT_PATH_TYPE_URL() { return (int)3L; }

    public static int ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF() { return (int)4L; }

    static final MemorySegment UNIFIEDBUILDREVISION_KEY$SEGMENT_CONSTANT_ = CSupport.toCString("\");
    public static jdk.incubator.foreign.MemorySegment UNIFIEDBUILDREVISION_KEY() { return UNIFIEDBUILDREVISION_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment UNIFIEDBUILDREVISION_VALUE$SEGMENT_CONSTANT_ = CSupport.toCString("U");
    public static jdk.incubator.foreign.MemorySegment UNIFIEDBUILDREVISION_VALUE() { return UNIFIEDBUILDREVISION_VALUE$SEGMENT_CONSTANT_; }

    static final MemorySegment DEVICEFAMILYDEVICEFORM_KEY$SEGMENT_CONSTANT_ = CSupport.toCString("\");
    public static jdk.incubator.foreign.MemorySegment DEVICEFAMILYDEVICEFORM_KEY() { return DEVICEFAMILYDEVICEFORM_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment DEVICEFAMILYDEVICEFORM_VALUE$SEGMENT_CONSTANT_ = CSupport.toCString("D");
    public static jdk.incubator.foreign.MemorySegment DEVICEFAMILYDEVICEFORM_VALUE() { return DEVICEFAMILYDEVICEFORM_VALUE$SEGMENT_CONSTANT_; }

    public static int KEY_QUERY_VALUE() { return (int)1L; }

    public static int KEY_SET_VALUE() { return (int)2L; }

    public static int KEY_CREATE_SUB_KEY() { return (int)4L; }

    public static int KEY_ENUMERATE_SUB_KEYS() { return (int)8L; }

    public static int KEY_NOTIFY() { return (int)16L; }

    public static int KEY_CREATE_LINK() { return (int)32L; }

    public static int KEY_WOW64_32KEY() { return (int)512L; }

    public static int KEY_WOW64_64KEY() { return (int)256L; }

    public static int KEY_WOW64_RES() { return (int)768L; }

    public static int KEY_READ() { return (int)131097L; }

    public static int KEY_WRITE() { return (int)131078L; }

    public static int KEY_EXECUTE() { return (int)131097L; }

    public static int KEY_ALL_ACCESS() { return (int)983103L; }

    public static int REG_OPTION_RESERVED() { return (int)0L; }

    public static int REG_OPTION_NON_VOLATILE() { return (int)0L; }

    public static int REG_OPTION_VOLATILE() { return (int)1L; }

    public static int REG_OPTION_CREATE_LINK() { return (int)2L; }

    public static int REG_OPTION_BACKUP_RESTORE() { return (int)4L; }

    public static int REG_OPTION_OPEN_LINK() { return (int)8L; }

    public static int REG_OPTION_DONT_VIRTUALIZE() { return (int)16L; }

    public static int REG_LEGAL_OPTION() { return (int)31L; }

    public static int REG_OPEN_LEGAL_OPTION() { return (int)28L; }

    public static int REG_CREATED_NEW_KEY() { return (int)1L; }

    public static int REG_OPENED_EXISTING_KEY() { return (int)2L; }

    public static int REG_WHOLE_HIVE_VOLATILE() { return (int)1L; }

    public static int REG_REFRESH_HIVE() { return (int)2L; }

    public static int REG_NO_LAZY_FLUSH() { return (int)4L; }

    public static int REG_FORCE_RESTORE() { return (int)8L; }

    public static int REG_APP_HIVE() { return (int)16L; }

    public static int REG_PROCESS_PRIVATE() { return (int)32L; }

    public static int REG_START_JOURNAL() { return (int)64L; }

    public static int REG_HIVE_EXACT_FILE_GROWTH() { return (int)128L; }

    public static int REG_HIVE_NO_RM() { return (int)256L; }

    public static int REG_HIVE_SINGLE_LOG() { return (int)512L; }

    public static int REG_BOOT_HIVE() { return (int)1024L; }

    public static int REG_LOAD_HIVE_OPEN_HANDLE() { return (int)2048L; }

    public static int REG_FLUSH_HIVE_FILE_GROWTH() { return (int)4096L; }

    public static int REG_OPEN_READ_ONLY() { return (int)8192L; }

    public static int REG_IMMUTABLE() { return (int)16384L; }

    public static int REG_NO_IMPERSONATION_FALLBACK() { return (int)32768L; }

    public static int REG_APP_HIVE_OPEN_READ_ONLY() { return (int)8192L; }

    public static int REG_UNLOAD_LEGAL_FLAGS() { return (int)1L; }

    public static int REG_NOTIFY_CHANGE_NAME() { return (int)1L; }

    public static int REG_NOTIFY_CHANGE_ATTRIBUTES() { return (int)2L; }

    public static int REG_NOTIFY_CHANGE_LAST_SET() { return (int)4L; }

    public static int REG_NOTIFY_CHANGE_SECURITY() { return (int)8L; }

    public static int REG_NOTIFY_THREAD_AGNOSTIC() { return (int)268435456L; }

    public static int REG_LEGAL_CHANGE_FILTER() { return (int)268435471L; }

    public static int REG_NONE() { return (int)0L; }

    public static int REG_SZ() { return (int)1L; }

    public static int REG_EXPAND_SZ() { return (int)2L; }

    public static int REG_BINARY() { return (int)3L; }

    public static int REG_DWORD() { return (int)4L; }

    public static int REG_DWORD_LITTLE_ENDIAN() { return (int)4L; }

    public static int REG_DWORD_BIG_ENDIAN() { return (int)5L; }

    public static int REG_LINK() { return (int)6L; }

    public static int REG_MULTI_SZ() { return (int)7L; }

    public static int REG_RESOURCE_LIST() { return (int)8L; }

    public static int REG_FULL_RESOURCE_DESCRIPTOR() { return (int)9L; }

    public static int REG_RESOURCE_REQUIREMENTS_LIST() { return (int)10L; }

    public static int REG_QWORD() { return (int)11L; }

    public static int REG_QWORD_LITTLE_ENDIAN() { return (int)11L; }

    public static int SERVICE_DRIVER() { return (int)11L; }

    public static int SERVICE_WIN32() { return (int)48L; }

    public static int SERVICE_USER_SHARE_PROCESS() { return (int)96L; }

    public static int SERVICE_USER_OWN_PROCESS() { return (int)80L; }

    public static int SERVICE_TYPE_ALL() { return (int)1023L; }

    public static int CM_SERVICE_VALID_PROMOTION_MASK() { return (int)511L; }

    public static int TAPE_ERASE_SHORT() { return (int)0L; }

    public static int TAPE_ERASE_LONG() { return (int)1L; }

    public static int TAPE_LOAD() { return (int)0L; }

    public static int TAPE_UNLOAD() { return (int)1L; }

    public static int TAPE_TENSION() { return (int)2L; }

    public static int TAPE_LOCK() { return (int)3L; }

    public static int TAPE_UNLOCK() { return (int)4L; }

    public static int TAPE_FORMAT() { return (int)5L; }

    public static int TAPE_SETMARKS() { return (int)0L; }

    public static int TAPE_FILEMARKS() { return (int)1L; }

    public static int TAPE_SHORT_FILEMARKS() { return (int)2L; }

    public static int TAPE_LONG_FILEMARKS() { return (int)3L; }

    public static int TAPE_ABSOLUTE_POSITION() { return (int)0L; }

    public static int TAPE_LOGICAL_POSITION() { return (int)1L; }

    public static int TAPE_PSEUDO_LOGICAL_POSITION() { return (int)2L; }

    public static int TAPE_REWIND() { return (int)0L; }

    public static int TAPE_ABSOLUTE_BLOCK() { return (int)1L; }

    public static int TAPE_LOGICAL_BLOCK() { return (int)2L; }

    public static int TAPE_PSEUDO_LOGICAL_BLOCK() { return (int)3L; }

    public static int TAPE_SPACE_END_OF_DATA() { return (int)4L; }

    public static int TAPE_SPACE_RELATIVE_BLOCKS() { return (int)5L; }

    public static int TAPE_SPACE_FILEMARKS() { return (int)6L; }

    public static int TAPE_SPACE_SEQUENTIAL_FMKS() { return (int)7L; }

    public static int TAPE_SPACE_SETMARKS() { return (int)8L; }

    public static int TAPE_SPACE_SEQUENTIAL_SMKS() { return (int)9L; }

    public static int TAPE_DRIVE_RESERVED_BIT() { return (int)2147483648L; }

    public static int TAPE_DRIVE_LOAD_UNLOAD() { return (int)2147483649L; }

    public static int TAPE_DRIVE_TENSION() { return (int)2147483650L; }

    public static int TAPE_DRIVE_LOCK_UNLOCK() { return (int)2147483652L; }

    public static int TAPE_DRIVE_REWIND_IMMEDIATE() { return (int)2147483656L; }

    public static int TAPE_DRIVE_SET_BLOCK_SIZE() { return (int)2147483664L; }

    public static int TAPE_DRIVE_LOAD_UNLD_IMMED() { return (int)2147483680L; }

    public static int TAPE_DRIVE_TENSION_IMMED() { return (int)2147483712L; }

    public static int TAPE_DRIVE_LOCK_UNLK_IMMED() { return (int)2147483776L; }

    public static int TAPE_DRIVE_SET_ECC() { return (int)2147483904L; }

    public static int TAPE_DRIVE_SET_COMPRESSION() { return (int)2147484160L; }

    public static int TAPE_DRIVE_SET_PADDING() { return (int)2147484672L; }

    public static int TAPE_DRIVE_SET_REPORT_SMKS() { return (int)2147485696L; }

    public static int TAPE_DRIVE_ABSOLUTE_BLK() { return (int)2147487744L; }

    public static int TAPE_DRIVE_ABS_BLK_IMMED() { return (int)2147491840L; }

    public static int TAPE_DRIVE_LOGICAL_BLK() { return (int)2147500032L; }

    public static int TAPE_DRIVE_LOG_BLK_IMMED() { return (int)2147516416L; }

    public static int TAPE_DRIVE_END_OF_DATA() { return (int)2147549184L; }

    public static int TAPE_DRIVE_RELATIVE_BLKS() { return (int)2147614720L; }

    public static int TAPE_DRIVE_FILEMARKS() { return (int)2147745792L; }

    public static int TAPE_DRIVE_SEQUENTIAL_FMKS() { return (int)2148007936L; }

    public static int TAPE_DRIVE_SETMARKS() { return (int)2148532224L; }

    public static int TAPE_DRIVE_SEQUENTIAL_SMKS() { return (int)2149580800L; }

    public static int TAPE_DRIVE_REVERSE_POSITION() { return (int)2151677952L; }

    public static int TAPE_DRIVE_SPACE_IMMEDIATE() { return (int)2155872256L; }

    public static int TAPE_DRIVE_WRITE_SETMARKS() { return (int)2164260864L; }

    public static int TAPE_DRIVE_WRITE_FILEMARKS() { return (int)2181038080L; }

    public static int TAPE_DRIVE_WRITE_SHORT_FMKS() { return (int)2214592512L; }

    public static int TAPE_DRIVE_WRITE_LONG_FMKS() { return (int)2281701376L; }

    public static int TAPE_DRIVE_WRITE_MARK_IMMED() { return (int)2415919104L; }

    public static int TAPE_DRIVE_FORMAT() { return (int)2684354560L; }

    public static int TAPE_DRIVE_FORMAT_IMMEDIATE() { return (int)3221225472L; }

    public static int TAPE_DRIVE_HIGH_FEATURES() { return (int)2147483648L; }

    public static int TAPE_FIXED_PARTITIONS() { return (int)0L; }

    public static int TAPE_SELECT_PARTITIONS() { return (int)1L; }

    public static int TAPE_INITIATOR_PARTITIONS() { return (int)2L; }

    public static int TAPE_QUERY_DRIVE_PARAMETERS() { return (int)0L; }

    public static int TAPE_QUERY_MEDIA_CAPACITY() { return (int)1L; }

    public static int TAPE_CHECK_FOR_DRIVE_PROBLEM() { return (int)2L; }

    public static int TAPE_QUERY_IO_ERROR_DATA() { return (int)3L; }

    public static int TAPE_QUERY_DEVICE_ERROR_DATA() { return (int)4L; }

    static final MemorySegment TRANSACTIONMANAGER_OBJECT_PATH$SEGMENT_CONSTANT_ = CSupport.toCString("\");
    public static jdk.incubator.foreign.MemorySegment TRANSACTIONMANAGER_OBJECT_PATH() { return TRANSACTIONMANAGER_OBJECT_PATH$SEGMENT_CONSTANT_; }

    static final MemorySegment TRANSACTION_OBJECT_PATH$SEGMENT_CONSTANT_ = CSupport.toCString("\");
    public static jdk.incubator.foreign.MemorySegment TRANSACTION_OBJECT_PATH() { return TRANSACTION_OBJECT_PATH$SEGMENT_CONSTANT_; }

    static final MemorySegment ENLISTMENT_OBJECT_PATH$SEGMENT_CONSTANT_ = CSupport.toCString("\");
    public static jdk.incubator.foreign.MemorySegment ENLISTMENT_OBJECT_PATH() { return ENLISTMENT_OBJECT_PATH$SEGMENT_CONSTANT_; }

    static final MemorySegment RESOURCE_MANAGER_OBJECT_PATH$SEGMENT_CONSTANT_ = CSupport.toCString("\");
    public static jdk.incubator.foreign.MemorySegment RESOURCE_MANAGER_OBJECT_PATH() { return RESOURCE_MANAGER_OBJECT_PATH$SEGMENT_CONSTANT_; }

    public static long TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES() { return 118L; }

    public static long TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES() { return 104L; }

    public static long ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES() { return 102L; }

    public static long RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES() { return 112L; }

    public static int TRANSACTIONMANAGER_QUERY_INFORMATION() { return (int)1L; }

    public static int TRANSACTIONMANAGER_SET_INFORMATION() { return (int)2L; }

    public static int TRANSACTIONMANAGER_RECOVER() { return (int)4L; }

    public static int TRANSACTIONMANAGER_RENAME() { return (int)8L; }

    public static int TRANSACTIONMANAGER_CREATE_RM() { return (int)16L; }

    public static int TRANSACTIONMANAGER_BIND_TRANSACTION() { return (int)32L; }

    public static int TRANSACTIONMANAGER_GENERIC_READ() { return (int)131073L; }

    public static int TRANSACTIONMANAGER_GENERIC_WRITE() { return (int)131102L; }

    public static int TRANSACTIONMANAGER_GENERIC_EXECUTE() { return (int)131072L; }

    public static int TRANSACTIONMANAGER_ALL_ACCESS() { return (int)983103L; }

    public static int TRANSACTION_QUERY_INFORMATION() { return (int)1L; }

    public static int TRANSACTION_SET_INFORMATION() { return (int)2L; }

    public static int TRANSACTION_ENLIST() { return (int)4L; }

    public static int TRANSACTION_COMMIT() { return (int)8L; }

    public static int TRANSACTION_ROLLBACK() { return (int)16L; }

    public static int TRANSACTION_PROPAGATE() { return (int)32L; }

    public static int TRANSACTION_RIGHT_RESERVED1() { return (int)64L; }

    public static int TRANSACTION_GENERIC_READ() { return (int)1179649L; }

    public static int TRANSACTION_GENERIC_WRITE() { return (int)1179710L; }

    public static int TRANSACTION_GENERIC_EXECUTE() { return (int)1179672L; }

    public static int TRANSACTION_ALL_ACCESS() { return (int)2031679L; }

    public static int TRANSACTION_RESOURCE_MANAGER_RIGHTS() { return (int)1179703L; }

    public static int RESOURCEMANAGER_QUERY_INFORMATION() { return (int)1L; }

    public static int RESOURCEMANAGER_SET_INFORMATION() { return (int)2L; }

    public static int RESOURCEMANAGER_RECOVER() { return (int)4L; }

    public static int RESOURCEMANAGER_ENLIST() { return (int)8L; }

    public static int RESOURCEMANAGER_GET_NOTIFICATION() { return (int)16L; }

    public static int RESOURCEMANAGER_REGISTER_PROTOCOL() { return (int)32L; }

    public static int RESOURCEMANAGER_COMPLETE_PROPAGATION() { return (int)64L; }

    public static int RESOURCEMANAGER_GENERIC_READ() { return (int)1179649L; }

    public static int RESOURCEMANAGER_GENERIC_WRITE() { return (int)1179774L; }

    public static int RESOURCEMANAGER_GENERIC_EXECUTE() { return (int)1179740L; }

    public static int RESOURCEMANAGER_ALL_ACCESS() { return (int)2031743L; }

    public static int ENLISTMENT_QUERY_INFORMATION() { return (int)1L; }

    public static int ENLISTMENT_SET_INFORMATION() { return (int)2L; }

    public static int ENLISTMENT_RECOVER() { return (int)4L; }

    public static int ENLISTMENT_SUBORDINATE_RIGHTS() { return (int)8L; }

    public static int ENLISTMENT_SUPERIOR_RIGHTS() { return (int)16L; }

    public static int ENLISTMENT_GENERIC_READ() { return (int)131073L; }

    public static int ENLISTMENT_GENERIC_WRITE() { return (int)131102L; }

    public static int ENLISTMENT_GENERIC_EXECUTE() { return (int)131100L; }

    public static int ENLISTMENT_ALL_ACCESS() { return (int)983071L; }

    public static int ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION() { return (int)1L; }

    public static int ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION() { return (int)2L; }

    public static int ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION() { return (int)3L; }

    public static int ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION() { return (int)4L; }

    public static int ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION() { return (int)5L; }

    public static int ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION() { return (int)6L; }

    public static int ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION() { return (int)7L; }

    public static int ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE() { return (int)8L; }

    public static int ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES() { return (int)9L; }

    public static int ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS() { return (int)10L; }

    public static int ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO() { return (int)11L; }

    public static int ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES() { return (int)12L; }

    public static int HFILE_ERROR() { return (int)-1L; }

    public static int DM_IN_BUFFER() { return (int)8L; }

    public static int DM_IN_PROMPT() { return (int)4L; }

    public static int DM_OUT_BUFFER() { return (int)2L; }

    public static int DM_OUT_DEFAULT() { return (int)1L; }

    static final MemoryAddress DPI_AWARENESS_CONTEXT_UNAWARE$ADDR_CONSTANT_ = MemoryAddress.ofLong(-1L);
    public static jdk.incubator.foreign.MemoryAddress DPI_AWARENESS_CONTEXT_UNAWARE() { return DPI_AWARENESS_CONTEXT_UNAWARE$ADDR_CONSTANT_; }

    static final MemoryAddress DPI_AWARENESS_CONTEXT_SYSTEM_AWARE$ADDR_CONSTANT_ = MemoryAddress.ofLong(-2L);
    public static jdk.incubator.foreign.MemoryAddress DPI_AWARENESS_CONTEXT_SYSTEM_AWARE() { return DPI_AWARENESS_CONTEXT_SYSTEM_AWARE$ADDR_CONSTANT_; }

    static final MemoryAddress DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE$ADDR_CONSTANT_ = MemoryAddress.ofLong(-3L);
    public static jdk.incubator.foreign.MemoryAddress DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE() { return DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE$ADDR_CONSTANT_; }

    static final MemoryAddress DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2$ADDR_CONSTANT_ = MemoryAddress.ofLong(-4L);
    public static jdk.incubator.foreign.MemoryAddress DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2() { return DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2$ADDR_CONSTANT_; }

    static final MemoryAddress DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED$ADDR_CONSTANT_ = MemoryAddress.ofLong(-5L);
    public static jdk.incubator.foreign.MemoryAddress DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED() { return DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED$ADDR_CONSTANT_; }

    public static int STILL_ACTIVE() { return (int)259L; }

    public static int EXCEPTION_ACCESS_VIOLATION() { return (int)3221225477L; }

    public static int EXCEPTION_DATATYPE_MISALIGNMENT() { return (int)2147483650L; }

    public static int EXCEPTION_BREAKPOINT() { return (int)2147483651L; }

    public static int EXCEPTION_SINGLE_STEP() { return (int)2147483652L; }

    public static int EXCEPTION_ARRAY_BOUNDS_EXCEEDED() { return (int)3221225612L; }

    public static int EXCEPTION_FLT_DENORMAL_OPERAND() { return (int)3221225613L; }

    public static int EXCEPTION_FLT_DIVIDE_BY_ZERO() { return (int)3221225614L; }

    public static int EXCEPTION_FLT_INEXACT_RESULT() { return (int)3221225615L; }

    public static int EXCEPTION_FLT_INVALID_OPERATION() { return (int)3221225616L; }

    public static int EXCEPTION_FLT_OVERFLOW() { return (int)3221225617L; }

    public static int EXCEPTION_FLT_STACK_CHECK() { return (int)3221225618L; }

    public static int EXCEPTION_FLT_UNDERFLOW() { return (int)3221225619L; }

    public static int EXCEPTION_INT_DIVIDE_BY_ZERO() { return (int)3221225620L; }

    public static int EXCEPTION_INT_OVERFLOW() { return (int)3221225621L; }

    public static int EXCEPTION_PRIV_INSTRUCTION() { return (int)3221225622L; }

    public static int EXCEPTION_IN_PAGE_ERROR() { return (int)3221225478L; }

    public static int EXCEPTION_ILLEGAL_INSTRUCTION() { return (int)3221225501L; }

    public static int EXCEPTION_NONCONTINUABLE_EXCEPTION() { return (int)3221225509L; }

    public static int EXCEPTION_STACK_OVERFLOW() { return (int)3221225725L; }

    public static int EXCEPTION_INVALID_DISPOSITION() { return (int)3221225510L; }

    public static int EXCEPTION_GUARD_PAGE() { return (int)2147483649L; }

    public static int EXCEPTION_INVALID_HANDLE() { return (int)3221225480L; }

    public static int CONTROL_C_EXIT() { return (int)3221225786L; }

    public static int LHND() { return (int)66L; }

    public static int LPTR() { return (int)64L; }

    public static int NONZEROLHND() { return (int)2L; }

    public static int NONZEROLPTR() { return (int)0L; }

    public static int NUMA_NO_PREFERRED_NODE() { return (int)4294967295L; }

    public static int INVALID_FILE_SIZE() { return (int)4294967295L; }

    public static int INVALID_SET_FILE_POINTER() { return (int)4294967295L; }

    public static int INVALID_FILE_ATTRIBUTES() { return (int)4294967295L; }

    static final MemoryAddress INVALID_HANDLE_VALUE$ADDR_CONSTANT_ = MemoryAddress.ofLong(-1L);
    public static jdk.incubator.foreign.MemoryAddress INVALID_HANDLE_VALUE() { return INVALID_HANDLE_VALUE$ADDR_CONSTANT_; }

    public static int FLS_OUT_OF_INDEXES() { return (int)4294967295L; }

    public static int INIT_ONCE_CHECK_ONLY() { return (int)1L; }

    public static int INIT_ONCE_ASYNC() { return (int)2L; }

    public static int INIT_ONCE_INIT_FAILED() { return (int)4L; }

    public static int INIT_ONCE_CTX_RESERVED_BITS() { return (int)2L; }

    public static int CONDITION_VARIABLE_LOCKMODE_SHARED() { return (int)1L; }

    public static int MUTEX_MODIFY_STATE() { return (int)1L; }

    public static int MUTEX_ALL_ACCESS() { return (int)2031617L; }

    public static int TLS_OUT_OF_INDEXES() { return (int)4294967295L; }

    public static int PROCESS_AFFINITY_ENABLE_AUTO_UPDATE() { return (int)1L; }

    public static int THREAD_POWER_THROTTLING_VALID_FLAGS() { return (int)1L; }

    public static int PROCESS_POWER_THROTTLING_VALID_FLAGS() { return (int)1L; }

    public static int PROCESS_LEAP_SECOND_INFO_VALID_FLAGS() { return (int)1L; }

    public static int FILE_MAP_WRITE() { return (int)2L; }

    public static int FILE_MAP_READ() { return (int)4L; }

    public static int FILE_MAP_ALL_ACCESS() { return (int)983071L; }

    public static int FILE_MAP_EXECUTE() { return (int)32L; }

    public static int FILE_MAP_RESERVE() { return (int)2147483648L; }

    public static int FIND_RESOURCE_DIRECTORY_TYPES() { return (int)256L; }

    public static int FIND_RESOURCE_DIRECTORY_NAMES() { return (int)512L; }

    public static int FIND_RESOURCE_DIRECTORY_LANGUAGES() { return (int)1024L; }

    public static int RESOURCE_ENUM_LN() { return (int)1L; }

    public static int RESOURCE_ENUM_MUI() { return (int)2L; }

    public static int RESOURCE_ENUM_MUI_SYSTEM() { return (int)4L; }

    public static int RESOURCE_ENUM_VALIDATE() { return (int)8L; }

    public static int RESOURCE_ENUM_MODULE_EXACT() { return (int)16L; }

    public static int GET_MODULE_HANDLE_EX_FLAG_PIN() { return (int)1L; }

    public static int GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT() { return (int)2L; }

    public static int GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS() { return (int)4L; }

    public static int WAIT_FAILED() { return (int)4294967295L; }

    public static int WAIT_OBJECT_0() { return (int)0L; }

    public static int WAIT_ABANDONED() { return (int)128L; }

    public static int WAIT_ABANDONED_0() { return (int)128L; }

    public static int WAIT_IO_COMPLETION() { return (int)192L; }

    public static int FILE_FLAG_WRITE_THROUGH() { return (int)2147483648L; }

    public static int SECURITY_ANONYMOUS() { return (int)0L; }

    public static int SECURITY_IDENTIFICATION() { return (int)65536L; }

    public static int SECURITY_IMPERSONATION() { return (int)131072L; }

    public static int SECURITY_DELEGATION() { return (int)196608L; }

    public static int SP_SERIALCOMM() { return (int)1L; }

    public static int PST_UNSPECIFIED() { return (int)0L; }

    public static int PST_RS232() { return (int)1L; }

    public static int PST_PARALLELPORT() { return (int)2L; }

    public static int PST_RS422() { return (int)3L; }

    public static int PST_RS423() { return (int)4L; }

    public static int PST_RS449() { return (int)5L; }

    public static int PST_MODEM() { return (int)6L; }

    public static int PST_FAX() { return (int)33L; }

    public static int PST_SCANNER() { return (int)34L; }

    public static int PST_NETWORK_BRIDGE() { return (int)256L; }

    public static int PST_LAT() { return (int)257L; }

    public static int PST_TCPIP_TELNET() { return (int)258L; }

    public static int PST_X25() { return (int)259L; }

    public static int PCF_DTRDSR() { return (int)1L; }

    public static int PCF_RTSCTS() { return (int)2L; }

    public static int PCF_RLSD() { return (int)4L; }

    public static int PCF_PARITY_CHECK() { return (int)8L; }

    public static int PCF_XONXOFF() { return (int)16L; }

    public static int PCF_SETXCHAR() { return (int)32L; }

    public static int PCF_TOTALTIMEOUTS() { return (int)64L; }

    public static int PCF_INTTIMEOUTS() { return (int)128L; }

    public static int PCF_SPECIALCHARS() { return (int)256L; }

    public static int PCF_16BITMODE() { return (int)512L; }

    public static int SP_PARITY() { return (int)1L; }

    public static int SP_BAUD() { return (int)2L; }

    public static int SP_DATABITS() { return (int)4L; }

    public static int SP_STOPBITS() { return (int)8L; }

    public static int SP_HANDSHAKING() { return (int)16L; }

    public static int SP_PARITY_CHECK() { return (int)32L; }

    public static int SP_RLSD() { return (int)64L; }

    public static int BAUD_075() { return (int)1L; }

    public static int BAUD_110() { return (int)2L; }

    public static int BAUD_134_5() { return (int)4L; }

    public static int BAUD_150() { return (int)8L; }

    public static int BAUD_300() { return (int)16L; }

    public static int BAUD_600() { return (int)32L; }

    public static int BAUD_1200() { return (int)64L; }

    public static int BAUD_1800() { return (int)128L; }

    public static int BAUD_2400() { return (int)256L; }

    public static int BAUD_4800() { return (int)512L; }

    public static int BAUD_7200() { return (int)1024L; }

    public static int BAUD_9600() { return (int)2048L; }

    public static int BAUD_14400() { return (int)4096L; }

    public static int BAUD_19200() { return (int)8192L; }

    public static int BAUD_38400() { return (int)16384L; }

    public static int BAUD_56K() { return (int)32768L; }

    public static int BAUD_128K() { return (int)65536L; }

    public static int BAUD_115200() { return (int)131072L; }

    public static int BAUD_57600() { return (int)262144L; }

    public static int BAUD_USER() { return (int)268435456L; }

    public static short DATABITS_5() { return (short)1L; }

    public static short DATABITS_6() { return (short)2L; }

    public static short DATABITS_7() { return (short)4L; }

    public static short DATABITS_8() { return (short)8L; }

    public static short DATABITS_16() { return (short)16L; }

    public static short DATABITS_16X() { return (short)32L; }

    public static short STOPBITS_10() { return (short)1L; }

    public static short STOPBITS_15() { return (short)2L; }

    public static short STOPBITS_20() { return (short)4L; }

    public static short PARITY_NONE() { return (short)256L; }

    public static short PARITY_ODD() { return (short)512L; }

    public static short PARITY_EVEN() { return (short)1024L; }

    public static short PARITY_MARK() { return (short)2048L; }

    public static short PARITY_SPACE() { return (short)4096L; }

    public static int COMMPROP_INITIALIZED() { return (int)3879531822L; }

    public static int GMEM_LOWER() { return (int)4096L; }

    public static int GHND() { return (int)66L; }

    public static int GPTR() { return (int)64L; }

    public static int CREATE_IGNORE_SYSTEM_DEFAULT() { return (int)2147483648L; }

    public static int THREAD_PRIORITY_LOWEST() { return (int)-2L; }

    public static int THREAD_PRIORITY_BELOW_NORMAL() { return (int)-1L; }

    public static int THREAD_PRIORITY_HIGHEST() { return (int)2L; }

    public static int THREAD_PRIORITY_ABOVE_NORMAL() { return (int)1L; }

    public static int THREAD_PRIORITY_ERROR_RETURN() { return (int)2147483647L; }

    public static int THREAD_PRIORITY_TIME_CRITICAL() { return (int)15L; }

    public static int THREAD_PRIORITY_IDLE() { return (int)-15L; }

    public static int STD_INPUT_HANDLE() { return (int)4294967286L; }

    public static int STD_OUTPUT_HANDLE() { return (int)4294967285L; }

    public static int STD_ERROR_HANDLE() { return (int)4294967284L; }

    public static int INFINITE() { return (int)4294967295L; }

    public static int IE_BADID() { return (int)-1L; }

    public static int IE_OPEN() { return (int)-2L; }

    public static int IE_NOPEN() { return (int)-3L; }

    public static int IE_MEMORY() { return (int)-4L; }

    public static int IE_DEFAULT() { return (int)-5L; }

    public static int IE_HARDWARE() { return (int)-10L; }

    public static int IE_BYTESIZE() { return (int)-11L; }

    public static int IE_BAUDRATE() { return (int)-12L; }

    public static int MS_CTS_ON() { return (int)16L; }

    public static int MS_DSR_ON() { return (int)32L; }

    public static int MS_RING_ON() { return (int)64L; }

    public static int MS_RLSD_ON() { return (int)128L; }

    public static int S_SERDVNA() { return (int)-1L; }

    public static int S_SEROFM() { return (int)-2L; }

    public static int S_SERMACT() { return (int)-3L; }

    public static int S_SERQFUL() { return (int)-4L; }

    public static int S_SERBDNT() { return (int)-5L; }

    public static int S_SERDLN() { return (int)-6L; }

    public static int S_SERDCC() { return (int)-7L; }

    public static int S_SERDTP() { return (int)-8L; }

    public static int S_SERDVL() { return (int)-9L; }

    public static int S_SERDMD() { return (int)-10L; }

    public static int S_SERDSH() { return (int)-11L; }

    public static int S_SERDPT() { return (int)-12L; }

    public static int S_SERDFQ() { return (int)-13L; }

    public static int S_SERDDR() { return (int)-14L; }

    public static int S_SERDSR() { return (int)-15L; }

    public static int S_SERDST() { return (int)-16L; }

    public static int NMPWAIT_WAIT_FOREVER() { return (int)4294967295L; }

    public static int FS_CASE_IS_PRESERVED() { return (int)2L; }

    public static int FS_CASE_SENSITIVE() { return (int)1L; }

    public static int FS_UNICODE_STORED_ON_DISK() { return (int)4L; }

    public static int FS_PERSISTENT_ACLS() { return (int)8L; }

    public static int FS_VOL_IS_COMPRESSED() { return (int)32768L; }

    public static int FS_FILE_COMPRESSION() { return (int)16L; }

    public static int FS_FILE_ENCRYPTION() { return (int)131072L; }

    public static short INVALID_ATOM() { return (short)0L; }

    public static int SCS_THIS_PLATFORM_BINARY() { return (int)6L; }

    public static int UMS_VERSION() { return (int)256L; }

    public static int CRITICAL_SECTION_NO_DEBUG_INFO() { return (int)16777216L; }

    public static int EFS_USE_RECOVERY_KEYS() { return (int)1L; }

    public static int CREATE_FOR_IMPORT() { return (int)1L; }

    public static int CREATE_FOR_DIR() { return (int)2L; }

    public static int OVERWRITE_HIDDEN() { return (int)4L; }

    public static int EFSRPC_SECURE_ONLY() { return (int)8L; }

    public static int EFS_DROP_ALTERNATE_STREAMS() { return (int)16L; }

    public static int PROTECTION_LEVEL_SAME() { return (int)4294967295L; }

    public static int PROTECTION_LEVEL_NONE() { return (int)4294967294L; }

    public static int PROC_THREAD_ATTRIBUTE_PARENT_PROCESS() { return (int)131072L; }

    public static int PROC_THREAD_ATTRIBUTE_HANDLE_LIST() { return (int)131074L; }

    public static int PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY() { return (int)196611L; }

    public static int PROC_THREAD_ATTRIBUTE_PREFERRED_NODE() { return (int)131076L; }

    public static int PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR() { return (int)196613L; }

    public static int PROC_THREAD_ATTRIBUTE_UMS_THREAD() { return (int)196614L; }

    public static int PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY() { return (int)131079L; }

    public static int PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES() { return (int)131081L; }

    public static int PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL() { return (int)131083L; }

    public static int PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE() { return (int)131094L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK() { return (int)768L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER() { return (int)0L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON() { return (int)256L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF() { return (int)512L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS() { return (int)768L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK() { return (int)12288L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER() { return (int)0L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON() { return (int)4096L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF() { return (int)8192L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED() { return (int)12288L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK() { return (int)196608L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER() { return (int)0L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON() { return (int)65536L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF() { return (int)131072L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED() { return (int)196608L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK() { return (int)3145728L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER() { return (int)0L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON() { return (int)1048576L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF() { return (int)2097152L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED() { return (int)3145728L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK() { return (int)50331648L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER() { return (int)0L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON() { return (int)16777216L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF() { return (int)33554432L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED() { return (int)50331648L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK() { return (int)805306368L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER() { return (int)0L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON() { return (int)268435456L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF() { return (int)536870912L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED() { return (int)805306368L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK() { return 12884901888L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON() { return 4294967296L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF() { return 8589934592L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED() { return 12884901888L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK() { return 206158430208L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON() { return 68719476736L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF() { return 137438953472L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT() { return 206158430208L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK() { return 3298534883328L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON() { return 1099511627776L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF() { return 2199023255552L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION() { return 3298534883328L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK() { return 52776558133248L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON() { return 17592186044416L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF() { return 35184372088832L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE() { return 52776558133248L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK() { return 844424930131968L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON() { return 281474976710656L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF() { return 562949953421312L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS() { return 844424930131968L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK() { return 13510798882111488L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON() { return 4503599627370496L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF() { return 9007199254740992L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED() { return 13510798882111488L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK() { return 216172782113783808L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON() { return 72057594037927936L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF() { return 144115188075855872L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED() { return 216172782113783808L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK() { return 3458764513820540928L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON() { return 1152921504606846976L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF() { return 2305843009213693952L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED() { return 3458764513820540928L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK() { return 48L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON() { return 16L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF() { return 32L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT() { return 48L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK() { return 768L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON() { return 256L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF() { return 512L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED() { return 768L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK() { return 12288L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON() { return 4096L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF() { return 8192L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT() { return 12288L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK() { return 196608L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON() { return 65536L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF() { return 131072L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED() { return 196608L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK() { return 3145728L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON() { return 1048576L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF() { return 2097152L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED() { return 3145728L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK() { return 50331648L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON() { return 16777216L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF() { return 33554432L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED() { return 50331648L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK() { return 805306368L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER() { return 0L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON() { return 268435456L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF() { return 536870912L; }

    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_RESERVED() { return 805306368L; }

    public static int PROC_THREAD_ATTRIBUTE_JOB_LIST() { return (int)131085L; }

    public static int PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY() { return (int)131086L; }

    public static int PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY() { return (int)131087L; }

    public static int PROC_THREAD_ATTRIBUTE_WIN32K_FILTER() { return (int)131088L; }

    public static int PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY() { return (int)131090L; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A$SEGMENT_CONSTANT_ = CSupport.toCString("GetSystemWow64DirectoryA");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W$SEGMENT_CONSTANT_ = CSupport.toCString("G");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T$SEGMENT_CONSTANT_ = CSupport.toCString("GetSystemWow64DirectoryA");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A$SEGMENT_CONSTANT_ = CSupport.toCString("GetSystemWow64DirectoryW");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W$SEGMENT_CONSTANT_ = CSupport.toCString("G");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T$SEGMENT_CONSTANT_ = CSupport.toCString("GetSystemWow64DirectoryW");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A$SEGMENT_CONSTANT_ = CSupport.toCString("GetSystemWow64DirectoryA");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W$SEGMENT_CONSTANT_ = CSupport.toCString("G");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T$SEGMENT_CONSTANT_ = CSupport.toCString("GetSystemWow64DirectoryA");
    public static jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T$SEGMENT_CONSTANT_; }

    public static int BASE_SEARCH_PATH_INVALID_FLAGS() { return (int)-98306L; }

    public static int COPYFILE2_MESSAGE_COPY_OFFLOAD() { return (int)1L; }

    public static int LOGON_ZERO_PASSWORD_BUFFER() { return (int)2147483648L; }

    public static int DOCKINFO_UNDOCKED() { return (int)1L; }

    public static int DOCKINFO_DOCKED() { return (int)2L; }

    public static int DOCKINFO_USER_SUPPLIED() { return (int)4L; }

    public static int DOCKINFO_USER_UNDOCKED() { return (int)5L; }

    public static int DOCKINFO_USER_DOCKED() { return (int)6L; }

    public static int ERROR_SUCCESS() { return (int)0L; }

    public static int NO_ERROR() { return (int)0L; }

    public static int SEC_E_OK() { return (int)0L; }

    public static int ERROR_INVALID_FUNCTION() { return (int)1L; }

    public static int ERROR_FILE_NOT_FOUND() { return (int)2L; }

    public static int ERROR_PATH_NOT_FOUND() { return (int)3L; }

    public static int ERROR_TOO_MANY_OPEN_FILES() { return (int)4L; }

    public static int ERROR_ACCESS_DENIED() { return (int)5L; }

    public static int ERROR_INVALID_HANDLE() { return (int)6L; }

    public static int ERROR_ARENA_TRASHED() { return (int)7L; }

    public static int ERROR_NOT_ENOUGH_MEMORY() { return (int)8L; }

    public static int ERROR_INVALID_BLOCK() { return (int)9L; }

    public static int ERROR_BAD_ENVIRONMENT() { return (int)10L; }

    public static int ERROR_BAD_FORMAT() { return (int)11L; }

    public static int ERROR_INVALID_ACCESS() { return (int)12L; }

    public static int ERROR_INVALID_DATA() { return (int)13L; }

    public static int ERROR_OUTOFMEMORY() { return (int)14L; }

    public static int ERROR_INVALID_DRIVE() { return (int)15L; }

    public static int ERROR_CURRENT_DIRECTORY() { return (int)16L; }

    public static int ERROR_NOT_SAME_DEVICE() { return (int)17L; }

    public static int ERROR_NO_MORE_FILES() { return (int)18L; }

    public static int ERROR_WRITE_PROTECT() { return (int)19L; }

    public static int ERROR_BAD_UNIT() { return (int)20L; }

    public static int ERROR_NOT_READY() { return (int)21L; }

    public static int ERROR_BAD_COMMAND() { return (int)22L; }

    public static int ERROR_CRC() { return (int)23L; }

    public static int ERROR_BAD_LENGTH() { return (int)24L; }

    public static int ERROR_SEEK() { return (int)25L; }

    public static int ERROR_NOT_DOS_DISK() { return (int)26L; }

    public static int ERROR_SECTOR_NOT_FOUND() { return (int)27L; }

    public static int ERROR_OUT_OF_PAPER() { return (int)28L; }

    public static int ERROR_WRITE_FAULT() { return (int)29L; }

    public static int ERROR_READ_FAULT() { return (int)30L; }

    public static int ERROR_GEN_FAILURE() { return (int)31L; }

    public static int ERROR_SHARING_VIOLATION() { return (int)32L; }

    public static int ERROR_LOCK_VIOLATION() { return (int)33L; }

    public static int ERROR_WRONG_DISK() { return (int)34L; }

    public static int ERROR_SHARING_BUFFER_EXCEEDED() { return (int)36L; }

    public static int ERROR_HANDLE_EOF() { return (int)38L; }

    public static int ERROR_HANDLE_DISK_FULL() { return (int)39L; }

    public static int ERROR_NOT_SUPPORTED() { return (int)50L; }

    public static int ERROR_REM_NOT_LIST() { return (int)51L; }

    public static int ERROR_DUP_NAME() { return (int)52L; }

    public static int ERROR_BAD_NETPATH() { return (int)53L; }

    public static int ERROR_NETWORK_BUSY() { return (int)54L; }

    public static int ERROR_DEV_NOT_EXIST() { return (int)55L; }

    public static int ERROR_TOO_MANY_CMDS() { return (int)56L; }

    public static int ERROR_ADAP_HDW_ERR() { return (int)57L; }

    public static int ERROR_BAD_NET_RESP() { return (int)58L; }

    public static int ERROR_UNEXP_NET_ERR() { return (int)59L; }

    public static int ERROR_BAD_REM_ADAP() { return (int)60L; }

    public static int ERROR_PRINTQ_FULL() { return (int)61L; }

    public static int ERROR_NO_SPOOL_SPACE() { return (int)62L; }

    public static int ERROR_PRINT_CANCELLED() { return (int)63L; }

    public static int ERROR_NETNAME_DELETED() { return (int)64L; }

    public static int ERROR_NETWORK_ACCESS_DENIED() { return (int)65L; }

    public static int ERROR_BAD_DEV_TYPE() { return (int)66L; }

    public static int ERROR_BAD_NET_NAME() { return (int)67L; }

    public static int ERROR_TOO_MANY_NAMES() { return (int)68L; }

    public static int ERROR_TOO_MANY_SESS() { return (int)69L; }

    public static int ERROR_SHARING_PAUSED() { return (int)70L; }

    public static int ERROR_REQ_NOT_ACCEP() { return (int)71L; }

    public static int ERROR_REDIR_PAUSED() { return (int)72L; }

    public static int ERROR_FILE_EXISTS() { return (int)80L; }

    public static int ERROR_CANNOT_MAKE() { return (int)82L; }

    public static int ERROR_FAIL_I24() { return (int)83L; }

    public static int ERROR_OUT_OF_STRUCTURES() { return (int)84L; }

    public static int ERROR_ALREADY_ASSIGNED() { return (int)85L; }

    public static int ERROR_INVALID_PASSWORD() { return (int)86L; }

    public static int ERROR_INVALID_PARAMETER() { return (int)87L; }

    public static int ERROR_NET_WRITE_FAULT() { return (int)88L; }

    public static int ERROR_NO_PROC_SLOTS() { return (int)89L; }

    public static int ERROR_TOO_MANY_SEMAPHORES() { return (int)100L; }

    public static int ERROR_EXCL_SEM_ALREADY_OWNED() { return (int)101L; }

    public static int ERROR_SEM_IS_SET() { return (int)102L; }

    public static int ERROR_TOO_MANY_SEM_REQUESTS() { return (int)103L; }

    public static int ERROR_INVALID_AT_INTERRUPT_TIME() { return (int)104L; }

    public static int ERROR_SEM_OWNER_DIED() { return (int)105L; }

    public static int ERROR_SEM_USER_LIMIT() { return (int)106L; }

    public static int ERROR_DISK_CHANGE() { return (int)107L; }

    public static int ERROR_DRIVE_LOCKED() { return (int)108L; }

    public static int ERROR_BROKEN_PIPE() { return (int)109L; }

    public static int ERROR_OPEN_FAILED() { return (int)110L; }

    public static int ERROR_BUFFER_OVERFLOW() { return (int)111L; }

    public static int ERROR_DISK_FULL() { return (int)112L; }

    public static int ERROR_NO_MORE_SEARCH_HANDLES() { return (int)113L; }

    public static int ERROR_INVALID_TARGET_HANDLE() { return (int)114L; }

    public static int ERROR_INVALID_CATEGORY() { return (int)117L; }

    public static int ERROR_INVALID_VERIFY_SWITCH() { return (int)118L; }

    public static int ERROR_BAD_DRIVER_LEVEL() { return (int)119L; }

    public static int ERROR_CALL_NOT_IMPLEMENTED() { return (int)120L; }

    public static int ERROR_SEM_TIMEOUT() { return (int)121L; }

    public static int ERROR_INSUFFICIENT_BUFFER() { return (int)122L; }

    public static int ERROR_INVALID_NAME() { return (int)123L; }

    public static int ERROR_INVALID_LEVEL() { return (int)124L; }

    public static int ERROR_NO_VOLUME_LABEL() { return (int)125L; }

    public static int ERROR_MOD_NOT_FOUND() { return (int)126L; }

    public static int ERROR_PROC_NOT_FOUND() { return (int)127L; }

    public static int ERROR_WAIT_NO_CHILDREN() { return (int)128L; }

    public static int ERROR_CHILD_NOT_COMPLETE() { return (int)129L; }

    public static int ERROR_DIRECT_ACCESS_HANDLE() { return (int)130L; }

    public static int ERROR_NEGATIVE_SEEK() { return (int)131L; }

    public static int ERROR_SEEK_ON_DEVICE() { return (int)132L; }

    public static int ERROR_IS_JOIN_TARGET() { return (int)133L; }

    public static int ERROR_IS_JOINED() { return (int)134L; }

    public static int ERROR_IS_SUBSTED() { return (int)135L; }

    public static int ERROR_NOT_JOINED() { return (int)136L; }

    public static int ERROR_NOT_SUBSTED() { return (int)137L; }

    public static int ERROR_JOIN_TO_JOIN() { return (int)138L; }

    public static int ERROR_SUBST_TO_SUBST() { return (int)139L; }

    public static int ERROR_JOIN_TO_SUBST() { return (int)140L; }

    public static int ERROR_SUBST_TO_JOIN() { return (int)141L; }

    public static int ERROR_BUSY_DRIVE() { return (int)142L; }

    public static int ERROR_SAME_DRIVE() { return (int)143L; }

    public static int ERROR_DIR_NOT_ROOT() { return (int)144L; }

    public static int ERROR_DIR_NOT_EMPTY() { return (int)145L; }

    public static int ERROR_IS_SUBST_PATH() { return (int)146L; }

    public static int ERROR_IS_JOIN_PATH() { return (int)147L; }

    public static int ERROR_PATH_BUSY() { return (int)148L; }

    public static int ERROR_IS_SUBST_TARGET() { return (int)149L; }

    public static int ERROR_SYSTEM_TRACE() { return (int)150L; }

    public static int ERROR_INVALID_EVENT_COUNT() { return (int)151L; }

    public static int ERROR_TOO_MANY_MUXWAITERS() { return (int)152L; }

    public static int ERROR_INVALID_LIST_FORMAT() { return (int)153L; }

    public static int ERROR_LABEL_TOO_LONG() { return (int)154L; }

    public static int ERROR_TOO_MANY_TCBS() { return (int)155L; }

    public static int ERROR_SIGNAL_REFUSED() { return (int)156L; }

    public static int ERROR_DISCARDED() { return (int)157L; }

    public static int ERROR_NOT_LOCKED() { return (int)158L; }

    public static int ERROR_BAD_THREADID_ADDR() { return (int)159L; }

    public static int ERROR_BAD_ARGUMENTS() { return (int)160L; }

    public static int ERROR_BAD_PATHNAME() { return (int)161L; }

    public static int ERROR_SIGNAL_PENDING() { return (int)162L; }

    public static int ERROR_MAX_THRDS_REACHED() { return (int)164L; }

    public static int ERROR_LOCK_FAILED() { return (int)167L; }

    public static int ERROR_BUSY() { return (int)170L; }

    public static int ERROR_DEVICE_SUPPORT_IN_PROGRESS() { return (int)171L; }

    public static int ERROR_CANCEL_VIOLATION() { return (int)173L; }

    public static int ERROR_ATOMIC_LOCKS_NOT_SUPPORTED() { return (int)174L; }

    public static int ERROR_INVALID_SEGMENT_NUMBER() { return (int)180L; }

    public static int ERROR_INVALID_ORDINAL() { return (int)182L; }

    public static int ERROR_ALREADY_EXISTS() { return (int)183L; }

    public static int ERROR_INVALID_FLAG_NUMBER() { return (int)186L; }

    public static int ERROR_SEM_NOT_FOUND() { return (int)187L; }

    public static int ERROR_INVALID_STARTING_CODESEG() { return (int)188L; }

    public static int ERROR_INVALID_STACKSEG() { return (int)189L; }

    public static int ERROR_INVALID_MODULETYPE() { return (int)190L; }

    public static int ERROR_INVALID_EXE_SIGNATURE() { return (int)191L; }

    public static int ERROR_EXE_MARKED_INVALID() { return (int)192L; }

    public static int ERROR_BAD_EXE_FORMAT() { return (int)193L; }

    public static int ERROR_ITERATED_DATA_EXCEEDS_64k() { return (int)194L; }

    public static int ERROR_INVALID_MINALLOCSIZE() { return (int)195L; }

    public static int ERROR_DYNLINK_FROM_INVALID_RING() { return (int)196L; }

    public static int ERROR_IOPL_NOT_ENABLED() { return (int)197L; }

    public static int ERROR_INVALID_SEGDPL() { return (int)198L; }

    public static int ERROR_AUTODATASEG_EXCEEDS_64k() { return (int)199L; }

    public static int ERROR_RING2SEG_MUST_BE_MOVABLE() { return (int)200L; }

    public static int ERROR_RELOC_CHAIN_XEEDS_SEGLIM() { return (int)201L; }

    public static int ERROR_INFLOOP_IN_RELOC_CHAIN() { return (int)202L; }

    public static int ERROR_ENVVAR_NOT_FOUND() { return (int)203L; }

    public static int ERROR_NO_SIGNAL_SENT() { return (int)205L; }

    public static int ERROR_FILENAME_EXCED_RANGE() { return (int)206L; }

    public static int ERROR_RING2_STACK_IN_USE() { return (int)207L; }

    public static int ERROR_META_EXPANSION_TOO_LONG() { return (int)208L; }

    public static int ERROR_INVALID_SIGNAL_NUMBER() { return (int)209L; }

    public static int ERROR_THREAD_1_INACTIVE() { return (int)210L; }

    public static int ERROR_LOCKED() { return (int)212L; }

    public static int ERROR_TOO_MANY_MODULES() { return (int)214L; }

    public static int ERROR_NESTING_NOT_ALLOWED() { return (int)215L; }

    public static int ERROR_EXE_MACHINE_TYPE_MISMATCH() { return (int)216L; }

    public static int ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY() { return (int)217L; }

    public static int ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY() { return (int)218L; }

    public static int ERROR_FILE_CHECKED_OUT() { return (int)220L; }

    public static int ERROR_CHECKOUT_REQUIRED() { return (int)221L; }

    public static int ERROR_BAD_FILE_TYPE() { return (int)222L; }

    public static int ERROR_FILE_TOO_LARGE() { return (int)223L; }

    public static int ERROR_FORMS_AUTH_REQUIRED() { return (int)224L; }

    public static int ERROR_VIRUS_INFECTED() { return (int)225L; }

    public static int ERROR_VIRUS_DELETED() { return (int)226L; }

    public static int ERROR_PIPE_LOCAL() { return (int)229L; }

    public static int ERROR_BAD_PIPE() { return (int)230L; }

    public static int ERROR_PIPE_BUSY() { return (int)231L; }

    public static int ERROR_NO_DATA() { return (int)232L; }

    public static int ERROR_PIPE_NOT_CONNECTED() { return (int)233L; }

    public static int ERROR_MORE_DATA() { return (int)234L; }

    public static int ERROR_NO_WORK_DONE() { return (int)235L; }

    public static int ERROR_VC_DISCONNECTED() { return (int)240L; }

    public static int ERROR_INVALID_EA_NAME() { return (int)254L; }

    public static int ERROR_EA_LIST_INCONSISTENT() { return (int)255L; }

    public static int WAIT_TIMEOUT() { return (int)258L; }

    public static int ERROR_NO_MORE_ITEMS() { return (int)259L; }

    public static int ERROR_CANNOT_COPY() { return (int)266L; }

    public static int ERROR_DIRECTORY() { return (int)267L; }

    public static int ERROR_EAS_DIDNT_FIT() { return (int)275L; }

    public static int ERROR_EA_FILE_CORRUPT() { return (int)276L; }

    public static int ERROR_EA_TABLE_FULL() { return (int)277L; }

    public static int ERROR_INVALID_EA_HANDLE() { return (int)278L; }

    public static int ERROR_EAS_NOT_SUPPORTED() { return (int)282L; }

    public static int ERROR_NOT_OWNER() { return (int)288L; }

    public static int ERROR_TOO_MANY_POSTS() { return (int)298L; }

    public static int ERROR_PARTIAL_COPY() { return (int)299L; }

    public static int ERROR_OPLOCK_NOT_GRANTED() { return (int)300L; }

    public static int ERROR_INVALID_OPLOCK_PROTOCOL() { return (int)301L; }

    public static int ERROR_DISK_TOO_FRAGMENTED() { return (int)302L; }

    public static int ERROR_DELETE_PENDING() { return (int)303L; }

    public static int ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING() { return (int)304L; }

    public static int ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME() { return (int)305L; }

    public static int ERROR_SECURITY_STREAM_IS_INCONSISTENT() { return (int)306L; }

    public static int ERROR_INVALID_LOCK_RANGE() { return (int)307L; }

    public static int ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT() { return (int)308L; }

    public static int ERROR_NOTIFICATION_GUID_ALREADY_DEFINED() { return (int)309L; }

    public static int ERROR_INVALID_EXCEPTION_HANDLER() { return (int)310L; }

    public static int ERROR_DUPLICATE_PRIVILEGES() { return (int)311L; }

    public static int ERROR_NO_RANGES_PROCESSED() { return (int)312L; }

    public static int ERROR_NOT_ALLOWED_ON_SYSTEM_FILE() { return (int)313L; }

    public static int ERROR_DISK_RESOURCES_EXHAUSTED() { return (int)314L; }

    public static int ERROR_INVALID_TOKEN() { return (int)315L; }

    public static int ERROR_DEVICE_FEATURE_NOT_SUPPORTED() { return (int)316L; }

    public static int ERROR_MR_MID_NOT_FOUND() { return (int)317L; }

    public static int ERROR_SCOPE_NOT_FOUND() { return (int)318L; }

    public static int ERROR_UNDEFINED_SCOPE() { return (int)319L; }

    public static int ERROR_INVALID_CAP() { return (int)320L; }

    public static int ERROR_DEVICE_UNREACHABLE() { return (int)321L; }

    public static int ERROR_DEVICE_NO_RESOURCES() { return (int)322L; }

    public static int ERROR_DATA_CHECKSUM_ERROR() { return (int)323L; }

    public static int ERROR_INTERMIXED_KERNEL_EA_OPERATION() { return (int)324L; }

    public static int ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED() { return (int)326L; }

    public static int ERROR_OFFSET_ALIGNMENT_VIOLATION() { return (int)327L; }

    public static int ERROR_INVALID_FIELD_IN_PARAMETER_LIST() { return (int)328L; }

    public static int ERROR_OPERATION_IN_PROGRESS() { return (int)329L; }

    public static int ERROR_BAD_DEVICE_PATH() { return (int)330L; }

    public static int ERROR_TOO_MANY_DESCRIPTORS() { return (int)331L; }

    public static int ERROR_SCRUB_DATA_DISABLED() { return (int)332L; }

    public static int ERROR_NOT_REDUNDANT_STORAGE() { return (int)333L; }

    public static int ERROR_RESIDENT_FILE_NOT_SUPPORTED() { return (int)334L; }

    public static int ERROR_COMPRESSED_FILE_NOT_SUPPORTED() { return (int)335L; }

    public static int ERROR_DIRECTORY_NOT_SUPPORTED() { return (int)336L; }

    public static int ERROR_NOT_READ_FROM_COPY() { return (int)337L; }

    public static int ERROR_FT_WRITE_FAILURE() { return (int)338L; }

    public static int ERROR_FT_DI_SCAN_REQUIRED() { return (int)339L; }

    public static int ERROR_INVALID_KERNEL_INFO_VERSION() { return (int)340L; }

    public static int ERROR_INVALID_PEP_INFO_VERSION() { return (int)341L; }

    public static int ERROR_OBJECT_NOT_EXTERNALLY_BACKED() { return (int)342L; }

    public static int ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN() { return (int)343L; }

    public static int ERROR_COMPRESSION_NOT_BENEFICIAL() { return (int)344L; }

    public static int ERROR_STORAGE_TOPOLOGY_ID_MISMATCH() { return (int)345L; }

    public static int ERROR_BLOCKED_BY_PARENTAL_CONTROLS() { return (int)346L; }

    public static int ERROR_BLOCK_TOO_MANY_REFERENCES() { return (int)347L; }

    public static int ERROR_MARKED_TO_DISALLOW_WRITES() { return (int)348L; }

    public static int ERROR_ENCLAVE_FAILURE() { return (int)349L; }

    public static int ERROR_FAIL_NOACTION_REBOOT() { return (int)350L; }

    public static int ERROR_FAIL_SHUTDOWN() { return (int)351L; }

    public static int ERROR_FAIL_RESTART() { return (int)352L; }

}

