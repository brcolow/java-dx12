// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;
public final class dxgi_h {

    private dxgi_h() {}
    public static @C("int") int __REQUIRED_RPCNDR_H_VERSION__() {
        return dxgi_h$constants$0.__REQUIRED_RPCNDR_H_VERSION__();
    }
    public static @C("int") int __REQUIRED_RPCSAL_H_VERSION__() {
        return dxgi_h$constants$0.__REQUIRED_RPCSAL_H_VERSION__();
    }
    public static @C("int") int DXGI_CPU_ACCESS_FIELD() {
        return dxgi_h$constants$0.DXGI_CPU_ACCESS_FIELD();
    }
    public static class DXGI_FRAME_STATISTICS {

        private DXGI_FRAME_STATISTICS() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.DXGI_FRAME_STATISTICS$struct$LAYOUT();
        }
        public static VarHandle PresentCount$VH() {
            return dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentCount$VH();
        }
        public static  @C("UINT") int PresentCount$get(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentCount$VH().get(seg);
        }
        public static  @C("UINT") int PresentCount$get(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PresentCount$set(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentCount$VH().set(seg, x);
        }
        public static void PresentCount$set(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PresentRefreshCount$VH() {
            return dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentRefreshCount$VH();
        }
        public static  @C("UINT") int PresentRefreshCount$get(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentRefreshCount$VH().get(seg);
        }
        public static  @C("UINT") int PresentRefreshCount$get(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentRefreshCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PresentRefreshCount$set(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentRefreshCount$VH().set(seg, x);
        }
        public static void PresentRefreshCount$set(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_FRAME_STATISTICS$PresentRefreshCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SyncRefreshCount$VH() {
            return dxgi_h$constants$0.DXGI_FRAME_STATISTICS$SyncRefreshCount$VH();
        }
        public static  @C("UINT") int SyncRefreshCount$get(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_FRAME_STATISTICS$SyncRefreshCount$VH().get(seg);
        }
        public static  @C("UINT") int SyncRefreshCount$get(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_FRAME_STATISTICS$SyncRefreshCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SyncRefreshCount$set(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_FRAME_STATISTICS$SyncRefreshCount$VH().set(seg, x);
        }
        public static void SyncRefreshCount$set(@C("struct DXGI_FRAME_STATISTICS") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_FRAME_STATISTICS$SyncRefreshCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment SyncQPCTime$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 8));
        }
        public static MemorySegment SyncGPUTime$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_FRAME_STATISTICS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_FRAME_STATISTICS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_FRAME_STATISTICS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_FRAME_STATISTICS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_FRAME_STATISTICS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_FRAME_STATISTICS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class DXGI_MAPPED_RECT {

        private DXGI_MAPPED_RECT() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.DXGI_MAPPED_RECT$struct$LAYOUT();
        }
        public static VarHandle Pitch$VH() {
            return dxgi_h$constants$0.DXGI_MAPPED_RECT$Pitch$VH();
        }
        public static  @C("INT") int Pitch$get(@C("struct DXGI_MAPPED_RECT") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_MAPPED_RECT$Pitch$VH().get(seg);
        }
        public static  @C("INT") int Pitch$get(@C("struct DXGI_MAPPED_RECT") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_MAPPED_RECT$Pitch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Pitch$set(@C("struct DXGI_MAPPED_RECT") MemorySegment seg, @C("INT") int x) {
            dxgi_h$constants$0.DXGI_MAPPED_RECT$Pitch$VH().set(seg, x);
        }
        public static void Pitch$set(@C("struct DXGI_MAPPED_RECT") MemorySegment seg, long index, @C("INT") int x) {
            dxgi_h$constants$0.DXGI_MAPPED_RECT$Pitch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pBits$VH() {
            return dxgi_h$constants$0.DXGI_MAPPED_RECT$pBits$VH();
        }
        public static  @C("BYTE*") MemoryAddress pBits$get(@C("struct DXGI_MAPPED_RECT") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.DXGI_MAPPED_RECT$pBits$VH().get(seg);
        }
        public static  @C("BYTE*") MemoryAddress pBits$get(@C("struct DXGI_MAPPED_RECT") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.DXGI_MAPPED_RECT$pBits$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pBits$set(@C("struct DXGI_MAPPED_RECT") MemorySegment seg, @C("BYTE*") MemoryAddress x) {
            dxgi_h$constants$0.DXGI_MAPPED_RECT$pBits$VH().set(seg, x);
        }
        public static void pBits$set(@C("struct DXGI_MAPPED_RECT") MemorySegment seg, long index, @C("BYTE*") MemoryAddress x) {
            dxgi_h$constants$0.DXGI_MAPPED_RECT$pBits$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_MAPPED_RECT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_MAPPED_RECT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_MAPPED_RECT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_MAPPED_RECT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_MAPPED_RECT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_MAPPED_RECT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class DXGI_ADAPTER_DESC {

        private DXGI_ADAPTER_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.DXGI_ADAPTER_DESC$struct$LAYOUT();
        }
        public static MemorySegment Description$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 256));
        }
        public static VarHandle VendorId$VH() {
            return dxgi_h$constants$0.DXGI_ADAPTER_DESC$VendorId$VH();
        }
        public static  @C("UINT") int VendorId$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_ADAPTER_DESC$VendorId$VH().get(seg);
        }
        public static  @C("UINT") int VendorId$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_ADAPTER_DESC$VendorId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VendorId$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$VendorId$VH().set(seg, x);
        }
        public static void VendorId$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$VendorId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DeviceId$VH() {
            return dxgi_h$constants$0.DXGI_ADAPTER_DESC$DeviceId$VH();
        }
        public static  @C("UINT") int DeviceId$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_ADAPTER_DESC$DeviceId$VH().get(seg);
        }
        public static  @C("UINT") int DeviceId$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_ADAPTER_DESC$DeviceId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DeviceId$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$DeviceId$VH().set(seg, x);
        }
        public static void DeviceId$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$DeviceId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SubSysId$VH() {
            return dxgi_h$constants$0.DXGI_ADAPTER_DESC$SubSysId$VH();
        }
        public static  @C("UINT") int SubSysId$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_ADAPTER_DESC$SubSysId$VH().get(seg);
        }
        public static  @C("UINT") int SubSysId$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_ADAPTER_DESC$SubSysId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SubSysId$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$SubSysId$VH().set(seg, x);
        }
        public static void SubSysId$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$SubSysId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Revision$VH() {
            return dxgi_h$constants$0.DXGI_ADAPTER_DESC$Revision$VH();
        }
        public static  @C("UINT") int Revision$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_ADAPTER_DESC$Revision$VH().get(seg);
        }
        public static  @C("UINT") int Revision$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_ADAPTER_DESC$Revision$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Revision$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$Revision$VH().set(seg, x);
        }
        public static void Revision$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$Revision$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DedicatedVideoMemory$VH() {
            return dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedVideoMemory$VH();
        }
        public static  @C("SIZE_T") long DedicatedVideoMemory$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg) {
            return (long)dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedVideoMemory$VH().get(seg);
        }
        public static  @C("SIZE_T") long DedicatedVideoMemory$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index) {
            return (long)dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedVideoMemory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DedicatedVideoMemory$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, @C("SIZE_T") long x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedVideoMemory$VH().set(seg, x);
        }
        public static void DedicatedVideoMemory$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index, @C("SIZE_T") long x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedVideoMemory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DedicatedSystemMemory$VH() {
            return dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedSystemMemory$VH();
        }
        public static  @C("SIZE_T") long DedicatedSystemMemory$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg) {
            return (long)dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedSystemMemory$VH().get(seg);
        }
        public static  @C("SIZE_T") long DedicatedSystemMemory$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index) {
            return (long)dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedSystemMemory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DedicatedSystemMemory$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, @C("SIZE_T") long x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedSystemMemory$VH().set(seg, x);
        }
        public static void DedicatedSystemMemory$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index, @C("SIZE_T") long x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$DedicatedSystemMemory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SharedSystemMemory$VH() {
            return dxgi_h$constants$0.DXGI_ADAPTER_DESC$SharedSystemMemory$VH();
        }
        public static  @C("SIZE_T") long SharedSystemMemory$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg) {
            return (long)dxgi_h$constants$0.DXGI_ADAPTER_DESC$SharedSystemMemory$VH().get(seg);
        }
        public static  @C("SIZE_T") long SharedSystemMemory$get(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index) {
            return (long)dxgi_h$constants$0.DXGI_ADAPTER_DESC$SharedSystemMemory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SharedSystemMemory$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, @C("SIZE_T") long x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$SharedSystemMemory$VH().set(seg, x);
        }
        public static void SharedSystemMemory$set(@C("struct DXGI_ADAPTER_DESC") MemorySegment seg, long index, @C("SIZE_T") long x) {
            dxgi_h$constants$0.DXGI_ADAPTER_DESC$SharedSystemMemory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment AdapterLuid$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(296, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_ADAPTER_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_ADAPTER_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_ADAPTER_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_ADAPTER_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_ADAPTER_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_ADAPTER_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class DXGI_OUTPUT_DESC {

        private DXGI_OUTPUT_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.DXGI_OUTPUT_DESC$struct$LAYOUT();
        }
        public static MemorySegment DeviceName$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 64));
        }
        public static MemorySegment DesktopCoordinates$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 16));
        }
        public static VarHandle AttachedToDesktop$VH() {
            return dxgi_h$constants$0.DXGI_OUTPUT_DESC$AttachedToDesktop$VH();
        }
        public static  @C("BOOL") int AttachedToDesktop$get(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_OUTPUT_DESC$AttachedToDesktop$VH().get(seg);
        }
        public static  @C("BOOL") int AttachedToDesktop$get(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_OUTPUT_DESC$AttachedToDesktop$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AttachedToDesktop$set(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, @C("BOOL") int x) {
            dxgi_h$constants$0.DXGI_OUTPUT_DESC$AttachedToDesktop$VH().set(seg, x);
        }
        public static void AttachedToDesktop$set(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            dxgi_h$constants$0.DXGI_OUTPUT_DESC$AttachedToDesktop$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Rotation$VH() {
            return dxgi_h$constants$0.DXGI_OUTPUT_DESC$Rotation$VH();
        }
        public static  @C("DXGI_MODE_ROTATION") int Rotation$get(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_OUTPUT_DESC$Rotation$VH().get(seg);
        }
        public static  @C("DXGI_MODE_ROTATION") int Rotation$get(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_OUTPUT_DESC$Rotation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Rotation$set(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, @C("DXGI_MODE_ROTATION") int x) {
            dxgi_h$constants$0.DXGI_OUTPUT_DESC$Rotation$VH().set(seg, x);
        }
        public static void Rotation$set(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, long index, @C("DXGI_MODE_ROTATION") int x) {
            dxgi_h$constants$0.DXGI_OUTPUT_DESC$Rotation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Monitor$VH() {
            return dxgi_h$constants$0.DXGI_OUTPUT_DESC$Monitor$VH();
        }
        public static  @C("HMONITOR") MemoryAddress Monitor$get(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.DXGI_OUTPUT_DESC$Monitor$VH().get(seg);
        }
        public static  @C("HMONITOR") MemoryAddress Monitor$get(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.DXGI_OUTPUT_DESC$Monitor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Monitor$set(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, @C("HMONITOR") MemoryAddress x) {
            dxgi_h$constants$0.DXGI_OUTPUT_DESC$Monitor$VH().set(seg, x);
        }
        public static void Monitor$set(@C("struct DXGI_OUTPUT_DESC") MemorySegment seg, long index, @C("HMONITOR") MemoryAddress x) {
            dxgi_h$constants$0.DXGI_OUTPUT_DESC$Monitor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_OUTPUT_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_OUTPUT_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_OUTPUT_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_OUTPUT_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_OUTPUT_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_OUTPUT_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class DXGI_SHARED_RESOURCE {

        private DXGI_SHARED_RESOURCE() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.DXGI_SHARED_RESOURCE$struct$LAYOUT();
        }
        public static VarHandle Handle$VH() {
            return dxgi_h$constants$0.DXGI_SHARED_RESOURCE$Handle$VH();
        }
        public static  @C("HANDLE") MemoryAddress Handle$get(@C("struct DXGI_SHARED_RESOURCE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.DXGI_SHARED_RESOURCE$Handle$VH().get(seg);
        }
        public static  @C("HANDLE") MemoryAddress Handle$get(@C("struct DXGI_SHARED_RESOURCE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.DXGI_SHARED_RESOURCE$Handle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Handle$set(@C("struct DXGI_SHARED_RESOURCE") MemorySegment seg, @C("HANDLE") MemoryAddress x) {
            dxgi_h$constants$0.DXGI_SHARED_RESOURCE$Handle$VH().set(seg, x);
        }
        public static void Handle$set(@C("struct DXGI_SHARED_RESOURCE") MemorySegment seg, long index, @C("HANDLE") MemoryAddress x) {
            dxgi_h$constants$0.DXGI_SHARED_RESOURCE$Handle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_SHARED_RESOURCE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_SHARED_RESOURCE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_SHARED_RESOURCE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_SHARED_RESOURCE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_SHARED_RESOURCE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_SHARED_RESOURCE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int DXGI_RESIDENCY_FULLY_RESIDENT() {
        return dxgi_h$constants$0.DXGI_RESIDENCY_FULLY_RESIDENT();
    }
    public static @C("int") int DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY() {
        return dxgi_h$constants$0.DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY();
    }
    public static @C("int") int DXGI_RESIDENCY_EVICTED_TO_DISK() {
        return dxgi_h$constants$0.DXGI_RESIDENCY_EVICTED_TO_DISK();
    }
    public static class DXGI_SURFACE_DESC {

        private DXGI_SURFACE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.DXGI_SURFACE_DESC$struct$LAYOUT();
        }
        public static VarHandle Width$VH() {
            return dxgi_h$constants$0.DXGI_SURFACE_DESC$Width$VH();
        }
        public static  @C("UINT") int Width$get(@C("struct DXGI_SURFACE_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_SURFACE_DESC$Width$VH().get(seg);
        }
        public static  @C("UINT") int Width$get(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_SURFACE_DESC$Width$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Width$set(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_SURFACE_DESC$Width$VH().set(seg, x);
        }
        public static void Width$set(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_SURFACE_DESC$Width$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Height$VH() {
            return dxgi_h$constants$0.DXGI_SURFACE_DESC$Height$VH();
        }
        public static  @C("UINT") int Height$get(@C("struct DXGI_SURFACE_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_SURFACE_DESC$Height$VH().get(seg);
        }
        public static  @C("UINT") int Height$get(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_SURFACE_DESC$Height$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Height$set(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_SURFACE_DESC$Height$VH().set(seg, x);
        }
        public static void Height$set(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_SURFACE_DESC$Height$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Format$VH() {
            return dxgi_h$constants$0.DXGI_SURFACE_DESC$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct DXGI_SURFACE_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_SURFACE_DESC$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_SURFACE_DESC$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            dxgi_h$constants$0.DXGI_SURFACE_DESC$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct DXGI_SURFACE_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            dxgi_h$constants$0.DXGI_SURFACE_DESC$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment SampleDesc$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(12, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_SURFACE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_SURFACE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_SURFACE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_SURFACE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_SURFACE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_SURFACE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int DXGI_SWAP_EFFECT_DISCARD() {
        return dxgi_h$constants$0.DXGI_SWAP_EFFECT_DISCARD();
    }
    public static @C("int") int DXGI_SWAP_EFFECT_SEQUENTIAL() {
        return dxgi_h$constants$0.DXGI_SWAP_EFFECT_SEQUENTIAL();
    }
    public static @C("int") int DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL() {
        return dxgi_h$constants$0.DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL();
    }
    public static @C("int") int DXGI_SWAP_EFFECT_FLIP_DISCARD() {
        return dxgi_h$constants$0.DXGI_SWAP_EFFECT_FLIP_DISCARD();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_NONPREROTATED() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_NONPREROTATED();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING();
    }
    public static @C("int") int DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS() {
        return dxgi_h$constants$0.DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS();
    }
    public static class DXGI_SWAP_CHAIN_DESC {

        private DXGI_SWAP_CHAIN_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$struct$LAYOUT();
        }
        public static MemorySegment BufferDesc$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 28));
        }
        public static MemorySegment SampleDesc$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(28, 8));
        }
        public static VarHandle BufferUsage$VH() {
            return dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferUsage$VH();
        }
        public static  @C("DXGI_USAGE") int BufferUsage$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferUsage$VH().get(seg);
        }
        public static  @C("DXGI_USAGE") int BufferUsage$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferUsage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BufferUsage$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, @C("DXGI_USAGE") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferUsage$VH().set(seg, x);
        }
        public static void BufferUsage$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index, @C("DXGI_USAGE") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferUsage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BufferCount$VH() {
            return dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferCount$VH();
        }
        public static  @C("UINT") int BufferCount$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferCount$VH().get(seg);
        }
        public static  @C("UINT") int BufferCount$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BufferCount$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferCount$VH().set(seg, x);
        }
        public static void BufferCount$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$BufferCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OutputWindow$VH() {
            return dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$OutputWindow$VH();
        }
        public static  @C("HWND") MemoryAddress OutputWindow$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$OutputWindow$VH().get(seg);
        }
        public static  @C("HWND") MemoryAddress OutputWindow$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$OutputWindow$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OutputWindow$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, @C("HWND") MemoryAddress x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$OutputWindow$VH().set(seg, x);
        }
        public static void OutputWindow$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index, @C("HWND") MemoryAddress x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$OutputWindow$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Windowed$VH() {
            return dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Windowed$VH();
        }
        public static  @C("BOOL") int Windowed$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Windowed$VH().get(seg);
        }
        public static  @C("BOOL") int Windowed$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Windowed$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Windowed$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, @C("BOOL") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Windowed$VH().set(seg, x);
        }
        public static void Windowed$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Windowed$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SwapEffect$VH() {
            return dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$SwapEffect$VH();
        }
        public static  @C("DXGI_SWAP_EFFECT") int SwapEffect$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$SwapEffect$VH().get(seg);
        }
        public static  @C("DXGI_SWAP_EFFECT") int SwapEffect$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$SwapEffect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SwapEffect$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, @C("DXGI_SWAP_EFFECT") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$SwapEffect$VH().set(seg, x);
        }
        public static void SwapEffect$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index, @C("DXGI_SWAP_EFFECT") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$SwapEffect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Flags$VH();
        }
        public static  @C("UINT") int Flags$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Flags$VH().get(seg);
        }
        public static  @C("UINT") int Flags$get(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$0.DXGI_SWAP_CHAIN_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_SWAP_CHAIN_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_SWAP_CHAIN_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_SWAP_CHAIN_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_SWAP_CHAIN_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_SWAP_CHAIN_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IDXGIObject$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGIObject$SEGMENT();
    }
    public static class IDXGIObjectVtbl {

        private IDXGIObjectVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIObjectVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGIObjectVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGIObjectVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIObject*)") MemoryAddress AddRef$get(@C("struct IDXGIObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIObject*)") MemoryAddress AddRef$get(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIObject*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIObject*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGIObjectVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIObject*)") MemoryAddress Release$get(@C("struct IDXGIObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIObject*)") MemoryAddress Release$get(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIObject*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIObject*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIObject*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIObject*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIObject*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIObject*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIObjectVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIObject*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIObject*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGIObjectVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIObject*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObjectVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObjectVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIObjectVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIObjectVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIObjectVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIObjectVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIObjectVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIObjectVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIObject {

        private IDXGIObject() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIObject$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGIObject$lpVtbl$VH();
        }
        public static  @C("struct IDXGIObjectVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIObject") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObject$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIObjectVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIObject") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIObject$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIObject") MemorySegment seg, @C("struct IDXGIObjectVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObject$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIObject") MemorySegment seg, long index, @C("struct IDXGIObjectVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIObject$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIObject") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIObject") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIObject[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIObject[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIObject*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIObject*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_IDXGIDeviceSubObject$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGIDeviceSubObject$SEGMENT();
    }
    public static class IDXGIDeviceSubObjectVtbl {

        private IDXGIDeviceSubObjectVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIDeviceSubObject*)") MemoryAddress AddRef$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIDeviceSubObject*)") MemoryAddress AddRef$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIDeviceSubObject*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIDeviceSubObject*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIDeviceSubObject*)") MemoryAddress Release$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIDeviceSubObject*)") MemoryAddress Release$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIDeviceSubObject*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIDeviceSubObject*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDeviceSubObject*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct IDXGIDeviceSubObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDeviceSubObject*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObjectVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIDeviceSubObjectVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIDeviceSubObjectVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIDeviceSubObjectVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIDeviceSubObjectVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIDeviceSubObjectVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIDeviceSubObjectVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIDeviceSubObject {

        private IDXGIDeviceSubObject() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIDeviceSubObject$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGIDeviceSubObject$lpVtbl$VH();
        }
        public static  @C("struct IDXGIDeviceSubObjectVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIDeviceSubObject") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObject$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIDeviceSubObjectVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIDeviceSubObject") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceSubObject$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIDeviceSubObject") MemorySegment seg, @C("struct IDXGIDeviceSubObjectVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObject$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIDeviceSubObject") MemorySegment seg, long index, @C("struct IDXGIDeviceSubObjectVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceSubObject$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIDeviceSubObject") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIDeviceSubObject") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIDeviceSubObject[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIDeviceSubObject[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIDeviceSubObject*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIDeviceSubObject*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_IDXGIResource$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGIResource$SEGMENT();
    }
    public static class IDXGIResourceVtbl {

        private IDXGIResourceVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIResource*)") MemoryAddress AddRef$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIResource*)") MemoryAddress AddRef$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIResource*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIResource*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIResource*)") MemoryAddress Release$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIResource*)") MemoryAddress Release$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIResource*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIResource*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSharedHandle$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$GetSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,HANDLE*)") MemoryAddress GetSharedHandle$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,HANDLE*)") MemoryAddress GetSharedHandle$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSharedHandle$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,HANDLE*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetSharedHandle$VH().set(seg, x);
        }
        public static void GetSharedHandle$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,HANDLE*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetUsage$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$GetUsage$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,DXGI_USAGE*)") MemoryAddress GetUsage$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetUsage$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,DXGI_USAGE*)") MemoryAddress GetUsage$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetUsage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetUsage$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,DXGI_USAGE*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetUsage$VH().set(seg, x);
        }
        public static void GetUsage$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,DXGI_USAGE*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetUsage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEvictionPriority$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$SetEvictionPriority$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,UINT)") MemoryAddress SetEvictionPriority$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$SetEvictionPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,UINT)") MemoryAddress SetEvictionPriority$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$SetEvictionPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEvictionPriority$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$SetEvictionPriority$VH().set(seg, x);
        }
        public static void SetEvictionPriority$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$SetEvictionPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetEvictionPriority$VH() {
            return dxgi_h$constants$0.IDXGIResourceVtbl$GetEvictionPriority$VH();
        }
        public static  @C("HRESULT(*)(IDXGIResource*,UINT*)") MemoryAddress GetEvictionPriority$get(@C("struct IDXGIResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetEvictionPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIResource*,UINT*)") MemoryAddress GetEvictionPriority$get(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResourceVtbl$GetEvictionPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetEvictionPriority$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIResource*,UINT*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetEvictionPriority$VH().set(seg, x);
        }
        public static void GetEvictionPriority$set(@C("struct IDXGIResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIResource*,UINT*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResourceVtbl$GetEvictionPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIResourceVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIResourceVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIResourceVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIResourceVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIResourceVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIResourceVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIResource {

        private IDXGIResource() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIResource$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGIResource$lpVtbl$VH();
        }
        public static  @C("struct IDXGIResourceVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIResource") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResource$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIResourceVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIResource") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIResource$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIResource") MemorySegment seg, @C("struct IDXGIResourceVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResource$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIResource") MemorySegment seg, long index, @C("struct IDXGIResourceVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIResource$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIResource") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIResource") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIResource[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIResource[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIResource*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIResource*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_IDXGIKeyedMutex$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGIKeyedMutex$SEGMENT();
    }
    public static class IDXGIKeyedMutexVtbl {

        private IDXGIKeyedMutexVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIKeyedMutex*)") MemoryAddress AddRef$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIKeyedMutex*)") MemoryAddress AddRef$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIKeyedMutex*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIKeyedMutex*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIKeyedMutex*)") MemoryAddress Release$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIKeyedMutex*)") MemoryAddress Release$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIKeyedMutex*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIKeyedMutex*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIKeyedMutex*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIKeyedMutex*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AcquireSync$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AcquireSync$VH();
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,UINT64,DWORD)") MemoryAddress AcquireSync$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AcquireSync$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,UINT64,DWORD)") MemoryAddress AcquireSync$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AcquireSync$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AcquireSync$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIKeyedMutex*,UINT64,DWORD)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AcquireSync$VH().set(seg, x);
        }
        public static void AcquireSync$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIKeyedMutex*,UINT64,DWORD)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$AcquireSync$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReleaseSync$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutexVtbl$ReleaseSync$VH();
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,UINT64)") MemoryAddress ReleaseSync$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$ReleaseSync$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIKeyedMutex*,UINT64)") MemoryAddress ReleaseSync$get(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutexVtbl$ReleaseSync$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReleaseSync$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIKeyedMutex*,UINT64)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$ReleaseSync$VH().set(seg, x);
        }
        public static void ReleaseSync$set(@C("struct IDXGIKeyedMutexVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIKeyedMutex*,UINT64)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutexVtbl$ReleaseSync$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIKeyedMutexVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIKeyedMutexVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIKeyedMutexVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIKeyedMutexVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIKeyedMutexVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIKeyedMutexVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIKeyedMutex {

        private IDXGIKeyedMutex() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIKeyedMutex$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGIKeyedMutex$lpVtbl$VH();
        }
        public static  @C("struct IDXGIKeyedMutexVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIKeyedMutex") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutex$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIKeyedMutexVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIKeyedMutex") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIKeyedMutex$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIKeyedMutex") MemorySegment seg, @C("struct IDXGIKeyedMutexVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutex$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIKeyedMutex") MemorySegment seg, long index, @C("struct IDXGIKeyedMutexVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIKeyedMutex$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIKeyedMutex") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIKeyedMutex") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIKeyedMutex[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIKeyedMutex[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIKeyedMutex*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIKeyedMutex*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IDXGISurface$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGISurface$SEGMENT();
    }
    public static class IDXGISurfaceVtbl {

        private IDXGISurfaceVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGISurface*)") MemoryAddress AddRef$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGISurface*)") MemoryAddress AddRef$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("ULONG(*)(IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGISurface*)") MemoryAddress Release$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGISurface*)") MemoryAddress Release$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("ULONG(*)(IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$GetDesc$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*,DXGI_SURFACE_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*,DXGI_SURFACE_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*,DXGI_SURFACE_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*,DXGI_SURFACE_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Map$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$Map$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*,DXGI_MAPPED_RECT*,UINT)") MemoryAddress Map$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$Map$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*,DXGI_MAPPED_RECT*,UINT)") MemoryAddress Map$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$Map$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Map$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*,DXGI_MAPPED_RECT*,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$Map$VH().set(seg, x);
        }
        public static void Map$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*,DXGI_MAPPED_RECT*,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$Map$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Unmap$VH() {
            return dxgi_h$constants$0.IDXGISurfaceVtbl$Unmap$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface*)") MemoryAddress Unmap$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$Unmap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface*)") MemoryAddress Unmap$get(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurfaceVtbl$Unmap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unmap$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$Unmap$VH().set(seg, x);
        }
        public static void Unmap$set(@C("struct IDXGISurfaceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurfaceVtbl$Unmap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGISurfaceVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGISurfaceVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGISurfaceVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGISurfaceVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGISurfaceVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGISurfaceVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGISurface {

        private IDXGISurface() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGISurface$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGISurface$lpVtbl$VH();
        }
        public static  @C("struct IDXGISurfaceVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGISurface") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGISurfaceVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGISurface") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGISurface") MemorySegment seg, @C("struct IDXGISurfaceVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGISurface") MemorySegment seg, long index, @C("struct IDXGISurfaceVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGISurface") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGISurface") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGISurface[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGISurface[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGISurface*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGISurface*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_IDXGISurface1$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGISurface1$SEGMENT();
    }
    public static class IDXGISurface1Vtbl {

        private IDXGISurface1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGISurface1*)") MemoryAddress AddRef$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGISurface1*)") MemoryAddress AddRef$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("ULONG(*)(IDXGISurface1*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGISurface1*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGISurface1*)") MemoryAddress Release$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGISurface1*)") MemoryAddress Release$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("ULONG(*)(IDXGISurface1*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGISurface1*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$GetDesc$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,DXGI_SURFACE_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetDesc$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,DXGI_SURFACE_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,DXGI_SURFACE_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,DXGI_SURFACE_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Map$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$Map$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,DXGI_MAPPED_RECT*,UINT)") MemoryAddress Map$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$Map$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,DXGI_MAPPED_RECT*,UINT)") MemoryAddress Map$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$Map$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Map$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,DXGI_MAPPED_RECT*,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$Map$VH().set(seg, x);
        }
        public static void Map$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,DXGI_MAPPED_RECT*,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$Map$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Unmap$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$Unmap$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*)") MemoryAddress Unmap$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$Unmap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*)") MemoryAddress Unmap$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$Unmap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unmap$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$Unmap$VH().set(seg, x);
        }
        public static void Unmap$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$Unmap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDC$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$GetDC$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,BOOL,HDC*)") MemoryAddress GetDC$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetDC$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,BOOL,HDC*)") MemoryAddress GetDC$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$GetDC$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDC$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,BOOL,HDC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetDC$VH().set(seg, x);
        }
        public static void GetDC$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,BOOL,HDC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$GetDC$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReleaseDC$VH() {
            return dxgi_h$constants$0.IDXGISurface1Vtbl$ReleaseDC$VH();
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,RECT*)") MemoryAddress ReleaseDC$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$ReleaseDC$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISurface1*,RECT*)") MemoryAddress ReleaseDC$get(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1Vtbl$ReleaseDC$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReleaseDC$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISurface1*,RECT*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$ReleaseDC$VH().set(seg, x);
        }
        public static void ReleaseDC$set(@C("struct IDXGISurface1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISurface1*,RECT*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1Vtbl$ReleaseDC$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGISurface1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGISurface1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGISurface1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGISurface1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGISurface1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGISurface1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGISurface1 {

        private IDXGISurface1() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGISurface1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGISurface1$lpVtbl$VH();
        }
        public static  @C("struct IDXGISurface1Vtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGISurface1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGISurface1Vtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGISurface1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISurface1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGISurface1") MemorySegment seg, @C("struct IDXGISurface1Vtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGISurface1") MemorySegment seg, long index, @C("struct IDXGISurface1Vtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISurface1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGISurface1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGISurface1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGISurface1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGISurface1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGISurface1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGISurface1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IDXGIAdapter$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGIAdapter$SEGMENT();
    }
    public static class IDXGIAdapterVtbl {

        private IDXGIAdapterVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIAdapter*)") MemoryAddress AddRef$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIAdapter*)") MemoryAddress AddRef$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIAdapter*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIAdapter*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIAdapter*)") MemoryAddress Release$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIAdapter*)") MemoryAddress Release$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIAdapter*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIAdapter*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumOutputs$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$EnumOutputs$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,UINT,IDXGIOutput**)") MemoryAddress EnumOutputs$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$EnumOutputs$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,UINT,IDXGIOutput**)") MemoryAddress EnumOutputs$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$EnumOutputs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumOutputs$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter*,UINT,IDXGIOutput**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$EnumOutputs$VH().set(seg, x);
        }
        public static void EnumOutputs$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter*,UINT,IDXGIOutput**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$EnumOutputs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$GetDesc$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,DXGI_ADAPTER_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,DXGI_ADAPTER_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter*,DXGI_ADAPTER_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter*,DXGI_ADAPTER_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckInterfaceSupport$VH() {
            return dxgi_h$constants$0.IDXGIAdapterVtbl$CheckInterfaceSupport$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const GUID*,LARGE_INTEGER*)") MemoryAddress CheckInterfaceSupport$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$CheckInterfaceSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter*,const GUID*,LARGE_INTEGER*)") MemoryAddress CheckInterfaceSupport$get(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapterVtbl$CheckInterfaceSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckInterfaceSupport$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter*,const GUID*,LARGE_INTEGER*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$CheckInterfaceSupport$VH().set(seg, x);
        }
        public static void CheckInterfaceSupport$set(@C("struct IDXGIAdapterVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter*,const GUID*,LARGE_INTEGER*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapterVtbl$CheckInterfaceSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIAdapterVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIAdapterVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIAdapterVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIAdapterVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIAdapterVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIAdapterVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIAdapter {

        private IDXGIAdapter() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIAdapter$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGIAdapter$lpVtbl$VH();
        }
        public static  @C("struct IDXGIAdapterVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIAdapter") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapter$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIAdapterVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIAdapter") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIAdapter$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIAdapter") MemorySegment seg, @C("struct IDXGIAdapterVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapter$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIAdapter") MemorySegment seg, long index, @C("struct IDXGIAdapterVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIAdapter$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIAdapter") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIAdapter") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIAdapter[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIAdapter[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIAdapter*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIAdapter*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IDXGIOutput$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGIOutput$SEGMENT();
    }
    public static class IDXGIOutputVtbl {

        private IDXGIOutputVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIOutput*)") MemoryAddress AddRef$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIOutput*)") MemoryAddress AddRef$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIOutput*)") MemoryAddress Release$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIOutput*)") MemoryAddress Release$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$GetDesc$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_OUTPUT_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_OUTPUT_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,DXGI_OUTPUT_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,DXGI_OUTPUT_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDisplayModeList$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplayModeList$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_FORMAT,UINT,UINT*,DXGI_MODE_DESC*)") MemoryAddress GetDisplayModeList$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplayModeList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_FORMAT,UINT,UINT*,DXGI_MODE_DESC*)") MemoryAddress GetDisplayModeList$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplayModeList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDisplayModeList$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,DXGI_FORMAT,UINT,UINT*,DXGI_MODE_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplayModeList$VH().set(seg, x);
        }
        public static void GetDisplayModeList$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,DXGI_FORMAT,UINT,UINT*,DXGI_MODE_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplayModeList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FindClosestMatchingMode$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$FindClosestMatchingMode$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const DXGI_MODE_DESC*,DXGI_MODE_DESC*,IUnknown*)") MemoryAddress FindClosestMatchingMode$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$FindClosestMatchingMode$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const DXGI_MODE_DESC*,DXGI_MODE_DESC*,IUnknown*)") MemoryAddress FindClosestMatchingMode$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$FindClosestMatchingMode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FindClosestMatchingMode$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,const DXGI_MODE_DESC*,DXGI_MODE_DESC*,IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$FindClosestMatchingMode$VH().set(seg, x);
        }
        public static void FindClosestMatchingMode$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,const DXGI_MODE_DESC*,DXGI_MODE_DESC*,IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$FindClosestMatchingMode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WaitForVBlank$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$WaitForVBlank$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*)") MemoryAddress WaitForVBlank$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$WaitForVBlank$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*)") MemoryAddress WaitForVBlank$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$WaitForVBlank$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WaitForVBlank$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$WaitForVBlank$VH().set(seg, x);
        }
        public static void WaitForVBlank$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$WaitForVBlank$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle TakeOwnership$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$TakeOwnership$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,IUnknown*,BOOL)") MemoryAddress TakeOwnership$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$TakeOwnership$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,IUnknown*,BOOL)") MemoryAddress TakeOwnership$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$TakeOwnership$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void TakeOwnership$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,IUnknown*,BOOL)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$TakeOwnership$VH().set(seg, x);
        }
        public static void TakeOwnership$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,IUnknown*,BOOL)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$TakeOwnership$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReleaseOwnership$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$ReleaseOwnership$VH();
        }
        public static  @C("void(*)(IDXGIOutput*)") MemoryAddress ReleaseOwnership$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$ReleaseOwnership$VH().get(seg);
        }
        public static  @C("void(*)(IDXGIOutput*)") MemoryAddress ReleaseOwnership$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$ReleaseOwnership$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReleaseOwnership$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("void(*)(IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$ReleaseOwnership$VH().set(seg, x);
        }
        public static void ReleaseOwnership$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("void(*)(IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$ReleaseOwnership$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetGammaControlCapabilities$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControlCapabilities$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_GAMMA_CONTROL_CAPABILITIES*)") MemoryAddress GetGammaControlCapabilities$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControlCapabilities$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_GAMMA_CONTROL_CAPABILITIES*)") MemoryAddress GetGammaControlCapabilities$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControlCapabilities$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetGammaControlCapabilities$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,DXGI_GAMMA_CONTROL_CAPABILITIES*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControlCapabilities$VH().set(seg, x);
        }
        public static void GetGammaControlCapabilities$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,DXGI_GAMMA_CONTROL_CAPABILITIES*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControlCapabilities$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGammaControl$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$SetGammaControl$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const DXGI_GAMMA_CONTROL*)") MemoryAddress SetGammaControl$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$SetGammaControl$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,const DXGI_GAMMA_CONTROL*)") MemoryAddress SetGammaControl$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$SetGammaControl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGammaControl$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,const DXGI_GAMMA_CONTROL*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$SetGammaControl$VH().set(seg, x);
        }
        public static void SetGammaControl$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,const DXGI_GAMMA_CONTROL*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$SetGammaControl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetGammaControl$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControl$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_GAMMA_CONTROL*)") MemoryAddress GetGammaControl$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControl$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_GAMMA_CONTROL*)") MemoryAddress GetGammaControl$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetGammaControl$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,DXGI_GAMMA_CONTROL*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControl$VH().set(seg, x);
        }
        public static void GetGammaControl$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,DXGI_GAMMA_CONTROL*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetGammaControl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDisplaySurface$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$SetDisplaySurface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,IDXGISurface*)") MemoryAddress SetDisplaySurface$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$SetDisplaySurface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,IDXGISurface*)") MemoryAddress SetDisplaySurface$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$SetDisplaySurface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDisplaySurface$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$SetDisplaySurface$VH().set(seg, x);
        }
        public static void SetDisplaySurface$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$SetDisplaySurface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDisplaySurfaceData$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplaySurfaceData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,IDXGISurface*)") MemoryAddress GetDisplaySurfaceData$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplaySurfaceData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,IDXGISurface*)") MemoryAddress GetDisplaySurfaceData$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplaySurfaceData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDisplaySurfaceData$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplaySurfaceData$VH().set(seg, x);
        }
        public static void GetDisplaySurfaceData$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,IDXGISurface*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetDisplaySurfaceData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetFrameStatistics$VH() {
            return dxgi_h$constants$0.IDXGIOutputVtbl$GetFrameStatistics$VH();
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_FRAME_STATISTICS*)") MemoryAddress GetFrameStatistics$get(@C("struct IDXGIOutputVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetFrameStatistics$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIOutput*,DXGI_FRAME_STATISTICS*)") MemoryAddress GetFrameStatistics$get(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutputVtbl$GetFrameStatistics$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetFrameStatistics$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIOutput*,DXGI_FRAME_STATISTICS*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetFrameStatistics$VH().set(seg, x);
        }
        public static void GetFrameStatistics$set(@C("struct IDXGIOutputVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIOutput*,DXGI_FRAME_STATISTICS*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutputVtbl$GetFrameStatistics$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIOutputVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIOutputVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIOutputVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIOutputVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIOutputVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIOutputVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIOutput {

        private IDXGIOutput() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIOutput$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGIOutput$lpVtbl$VH();
        }
        public static  @C("struct IDXGIOutputVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIOutput") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutput$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIOutputVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIOutput") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIOutput$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIOutput") MemorySegment seg, @C("struct IDXGIOutputVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutput$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIOutput") MemorySegment seg, long index, @C("struct IDXGIOutputVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIOutput$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIOutput") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIOutput") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIOutput[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIOutput[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIOutput*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIOutput*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IDXGISwapChain$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGISwapChain$SEGMENT();
    }
    public static class IDXGISwapChainVtbl {

        private IDXGISwapChainVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGISwapChain*)") MemoryAddress AddRef$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGISwapChain*)") MemoryAddress AddRef$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("ULONG(*)(IDXGISwapChain*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGISwapChain*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGISwapChain*)") MemoryAddress Release$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGISwapChain*)") MemoryAddress Release$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("ULONG(*)(IDXGISwapChain*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGISwapChain*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Present$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$Present$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,UINT,UINT)") MemoryAddress Present$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$Present$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,UINT,UINT)") MemoryAddress Present$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$Present$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Present$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,UINT,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$Present$VH().set(seg, x);
        }
        public static void Present$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,UINT,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$Present$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetBuffer$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetBuffer$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,UINT,const IID*,void**)") MemoryAddress GetBuffer$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetBuffer$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,UINT,const IID*,void**)") MemoryAddress GetBuffer$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetBuffer$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,UINT,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetBuffer$VH().set(seg, x);
        }
        public static void GetBuffer$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,UINT,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetFullscreenState$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$SetFullscreenState$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,BOOL,IDXGIOutput*)") MemoryAddress SetFullscreenState$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$SetFullscreenState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,BOOL,IDXGIOutput*)") MemoryAddress SetFullscreenState$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$SetFullscreenState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetFullscreenState$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,BOOL,IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$SetFullscreenState$VH().set(seg, x);
        }
        public static void SetFullscreenState$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,BOOL,IDXGIOutput*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$SetFullscreenState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetFullscreenState$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetFullscreenState$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,BOOL*,IDXGIOutput**)") MemoryAddress GetFullscreenState$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetFullscreenState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,BOOL*,IDXGIOutput**)") MemoryAddress GetFullscreenState$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetFullscreenState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetFullscreenState$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,BOOL*,IDXGIOutput**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetFullscreenState$VH().set(seg, x);
        }
        public static void GetFullscreenState$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,BOOL*,IDXGIOutput**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetFullscreenState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetDesc$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,DXGI_SWAP_CHAIN_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,DXGI_SWAP_CHAIN_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,DXGI_SWAP_CHAIN_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,DXGI_SWAP_CHAIN_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResizeBuffers$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeBuffers$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,UINT,UINT,UINT,DXGI_FORMAT,UINT)") MemoryAddress ResizeBuffers$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeBuffers$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,UINT,UINT,UINT,DXGI_FORMAT,UINT)") MemoryAddress ResizeBuffers$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeBuffers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResizeBuffers$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,UINT,UINT,UINT,DXGI_FORMAT,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeBuffers$VH().set(seg, x);
        }
        public static void ResizeBuffers$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,UINT,UINT,UINT,DXGI_FORMAT,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeBuffers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResizeTarget$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeTarget$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const DXGI_MODE_DESC*)") MemoryAddress ResizeTarget$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeTarget$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,const DXGI_MODE_DESC*)") MemoryAddress ResizeTarget$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeTarget$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResizeTarget$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,const DXGI_MODE_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeTarget$VH().set(seg, x);
        }
        public static void ResizeTarget$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,const DXGI_MODE_DESC*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$ResizeTarget$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetContainingOutput$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetContainingOutput$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,IDXGIOutput**)") MemoryAddress GetContainingOutput$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetContainingOutput$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,IDXGIOutput**)") MemoryAddress GetContainingOutput$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetContainingOutput$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetContainingOutput$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,IDXGIOutput**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetContainingOutput$VH().set(seg, x);
        }
        public static void GetContainingOutput$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,IDXGIOutput**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetContainingOutput$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetFrameStatistics$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetFrameStatistics$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,DXGI_FRAME_STATISTICS*)") MemoryAddress GetFrameStatistics$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetFrameStatistics$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,DXGI_FRAME_STATISTICS*)") MemoryAddress GetFrameStatistics$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetFrameStatistics$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetFrameStatistics$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,DXGI_FRAME_STATISTICS*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetFrameStatistics$VH().set(seg, x);
        }
        public static void GetFrameStatistics$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,DXGI_FRAME_STATISTICS*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetFrameStatistics$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetLastPresentCount$VH() {
            return dxgi_h$constants$0.IDXGISwapChainVtbl$GetLastPresentCount$VH();
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,UINT*)") MemoryAddress GetLastPresentCount$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetLastPresentCount$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGISwapChain*,UINT*)") MemoryAddress GetLastPresentCount$get(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChainVtbl$GetLastPresentCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetLastPresentCount$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGISwapChain*,UINT*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetLastPresentCount$VH().set(seg, x);
        }
        public static void GetLastPresentCount$set(@C("struct IDXGISwapChainVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGISwapChain*,UINT*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChainVtbl$GetLastPresentCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGISwapChainVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGISwapChainVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGISwapChainVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGISwapChainVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGISwapChainVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGISwapChainVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGISwapChain {

        private IDXGISwapChain() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGISwapChain$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGISwapChain$lpVtbl$VH();
        }
        public static  @C("struct IDXGISwapChainVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGISwapChain") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChain$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGISwapChainVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGISwapChain") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGISwapChain$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGISwapChain") MemorySegment seg, @C("struct IDXGISwapChainVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChain$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGISwapChain") MemorySegment seg, long index, @C("struct IDXGISwapChainVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGISwapChain$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGISwapChain") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGISwapChain") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGISwapChain[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGISwapChain[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGISwapChain*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGISwapChain*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IDXGIFactory$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGIFactory$SEGMENT();
    }
    public static class IDXGIFactoryVtbl {

        private IDXGIFactoryVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIFactory*)") MemoryAddress AddRef$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIFactory*)") MemoryAddress AddRef$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIFactory*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIFactory*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIFactory*)") MemoryAddress Release$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIFactory*)") MemoryAddress Release$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIFactory*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIFactory*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumAdapters$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$EnumAdapters$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,UINT,IDXGIAdapter**)") MemoryAddress EnumAdapters$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$EnumAdapters$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,UINT,IDXGIAdapter**)") MemoryAddress EnumAdapters$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$EnumAdapters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumAdapters$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,UINT,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$EnumAdapters$VH().set(seg, x);
        }
        public static void EnumAdapters$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,UINT,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$EnumAdapters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeWindowAssociation$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$MakeWindowAssociation$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,HWND,UINT)") MemoryAddress MakeWindowAssociation$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$MakeWindowAssociation$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,HWND,UINT)") MemoryAddress MakeWindowAssociation$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$MakeWindowAssociation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeWindowAssociation$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,HWND,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$MakeWindowAssociation$VH().set(seg, x);
        }
        public static void MakeWindowAssociation$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,HWND,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$MakeWindowAssociation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetWindowAssociation$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$GetWindowAssociation$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,HWND*)") MemoryAddress GetWindowAssociation$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$GetWindowAssociation$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,HWND*)") MemoryAddress GetWindowAssociation$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$GetWindowAssociation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetWindowAssociation$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,HWND*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$GetWindowAssociation$VH().set(seg, x);
        }
        public static void GetWindowAssociation$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,HWND*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$GetWindowAssociation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSwapChain$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSwapChain$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,IUnknown*,DXGI_SWAP_CHAIN_DESC*,IDXGISwapChain**)") MemoryAddress CreateSwapChain$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSwapChain$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,IUnknown*,DXGI_SWAP_CHAIN_DESC*,IDXGISwapChain**)") MemoryAddress CreateSwapChain$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSwapChain$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSwapChain$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,IUnknown*,DXGI_SWAP_CHAIN_DESC*,IDXGISwapChain**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSwapChain$VH().set(seg, x);
        }
        public static void CreateSwapChain$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,IUnknown*,DXGI_SWAP_CHAIN_DESC*,IDXGISwapChain**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSwapChain$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSoftwareAdapter$VH() {
            return dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSoftwareAdapter$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,HMODULE,IDXGIAdapter**)") MemoryAddress CreateSoftwareAdapter$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSoftwareAdapter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory*,HMODULE,IDXGIAdapter**)") MemoryAddress CreateSoftwareAdapter$get(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSoftwareAdapter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSoftwareAdapter$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory*,HMODULE,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSoftwareAdapter$VH().set(seg, x);
        }
        public static void CreateSoftwareAdapter$set(@C("struct IDXGIFactoryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory*,HMODULE,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactoryVtbl$CreateSoftwareAdapter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIFactoryVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIFactoryVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIFactoryVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIFactoryVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIFactoryVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIFactoryVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIFactory {

        private IDXGIFactory() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIFactory$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGIFactory$lpVtbl$VH();
        }
        public static  @C("struct IDXGIFactoryVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIFactory") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactory$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIFactoryVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIFactory") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIFactory$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIFactory") MemorySegment seg, @C("struct IDXGIFactoryVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactory$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIFactory") MemorySegment seg, long index, @C("struct IDXGIFactoryVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIFactory$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIFactory") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIFactory") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIFactory[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIFactory[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIFactory*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIFactory*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MethodHandle CreateDXGIFactory$MH() {
        return dxgi_h$constants$0.CreateDXGIFactory$MH();
    }
    public static @C("HRESULT") int CreateDXGIFactory (@C("const IID*") Addressable riid, @C("void**") Addressable ppFactory) {
        try {
            return (int)dxgi_h$constants$0.CreateDXGIFactory$MH().invokeExact(riid.address(), ppFactory.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateDXGIFactory1$MH() {
        return dxgi_h$constants$0.CreateDXGIFactory1$MH();
    }
    public static @C("HRESULT") int CreateDXGIFactory1 (@C("const IID*") Addressable riid, @C("void**") Addressable ppFactory) {
        try {
            return (int)dxgi_h$constants$0.CreateDXGIFactory1$MH().invokeExact(riid.address(), ppFactory.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$VH().get(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$VH().set(dxgi_h$constants$0.__MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IDXGIDevice$SEGMENT() {
        return dxgi_h$constants$0.IID_IDXGIDevice$SEGMENT();
    }
    public static class IDXGIDeviceVtbl {

        private IDXGIDeviceVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIDevice*)") MemoryAddress AddRef$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIDevice*)") MemoryAddress AddRef$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIDevice*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIDevice*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIDevice*)") MemoryAddress Release$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIDevice*)") MemoryAddress Release$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("ULONG(*)(IDXGIDevice*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIDevice*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapter$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$GetAdapter$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,IDXGIAdapter**)") MemoryAddress GetAdapter$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$GetAdapter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,IDXGIAdapter**)") MemoryAddress GetAdapter$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$GetAdapter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapter$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$GetAdapter$VH().set(seg, x);
        }
        public static void GetAdapter$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$GetAdapter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSurface$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$CreateSurface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const DXGI_SURFACE_DESC*,UINT,DXGI_USAGE,const DXGI_SHARED_RESOURCE*,IDXGISurface**)") MemoryAddress CreateSurface$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$CreateSurface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,const DXGI_SURFACE_DESC*,UINT,DXGI_USAGE,const DXGI_SHARED_RESOURCE*,IDXGISurface**)") MemoryAddress CreateSurface$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$CreateSurface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSurface$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,const DXGI_SURFACE_DESC*,UINT,DXGI_USAGE,const DXGI_SHARED_RESOURCE*,IDXGISurface**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$CreateSurface$VH().set(seg, x);
        }
        public static void CreateSurface$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,const DXGI_SURFACE_DESC*,UINT,DXGI_USAGE,const DXGI_SHARED_RESOURCE*,IDXGISurface**)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$CreateSurface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle QueryResourceResidency$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$QueryResourceResidency$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,IUnknown**,DXGI_RESIDENCY*,UINT)") MemoryAddress QueryResourceResidency$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$QueryResourceResidency$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,IUnknown**,DXGI_RESIDENCY*,UINT)") MemoryAddress QueryResourceResidency$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$QueryResourceResidency$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryResourceResidency$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,IUnknown**,DXGI_RESIDENCY*,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$QueryResourceResidency$VH().set(seg, x);
        }
        public static void QueryResourceResidency$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,IUnknown**,DXGI_RESIDENCY*,UINT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$QueryResourceResidency$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGPUThreadPriority$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$SetGPUThreadPriority$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,INT)") MemoryAddress SetGPUThreadPriority$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$SetGPUThreadPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,INT)") MemoryAddress SetGPUThreadPriority$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$SetGPUThreadPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGPUThreadPriority$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,INT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$SetGPUThreadPriority$VH().set(seg, x);
        }
        public static void SetGPUThreadPriority$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,INT)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$SetGPUThreadPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetGPUThreadPriority$VH() {
            return dxgi_h$constants$0.IDXGIDeviceVtbl$GetGPUThreadPriority$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,INT*)") MemoryAddress GetGPUThreadPriority$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$GetGPUThreadPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice*,INT*)") MemoryAddress GetGPUThreadPriority$get(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDeviceVtbl$GetGPUThreadPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetGPUThreadPriority$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice*,INT*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$GetGPUThreadPriority$VH().set(seg, x);
        }
        public static void GetGPUThreadPriority$set(@C("struct IDXGIDeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice*,INT*)") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDeviceVtbl$GetGPUThreadPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIDeviceVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIDeviceVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIDeviceVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIDeviceVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIDeviceVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIDeviceVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIDevice {

        private IDXGIDevice() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$0.IDXGIDevice$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$0.IDXGIDevice$lpVtbl$VH();
        }
        public static  @C("struct IDXGIDeviceVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIDevice") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDevice$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIDeviceVtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIDevice") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$0.IDXGIDevice$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIDevice") MemorySegment seg, @C("struct IDXGIDeviceVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDevice$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIDevice") MemorySegment seg, long index, @C("struct IDXGIDeviceVtbl*") MemoryAddress x) {
            dxgi_h$constants$0.IDXGIDevice$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIDevice") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIDevice") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIDevice[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIDevice[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIDevice*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIDevice*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int DXGI_ADAPTER_FLAG_NONE() {
        return dxgi_h$constants$1.DXGI_ADAPTER_FLAG_NONE();
    }
    public static @C("int") int DXGI_ADAPTER_FLAG_REMOTE() {
        return dxgi_h$constants$1.DXGI_ADAPTER_FLAG_REMOTE();
    }
    public static @C("int") int DXGI_ADAPTER_FLAG_SOFTWARE() {
        return dxgi_h$constants$1.DXGI_ADAPTER_FLAG_SOFTWARE();
    }
    public static @C("int") int DXGI_ADAPTER_FLAG_FORCE_DWORD() {
        return dxgi_h$constants$1.DXGI_ADAPTER_FLAG_FORCE_DWORD();
    }
    public static class DXGI_ADAPTER_DESC1 {

        private DXGI_ADAPTER_DESC1() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$struct$LAYOUT();
        }
        public static MemorySegment Description$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 256));
        }
        public static VarHandle VendorId$VH() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$VendorId$VH();
        }
        public static  @C("UINT") int VendorId$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$VendorId$VH().get(seg);
        }
        public static  @C("UINT") int VendorId$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$VendorId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VendorId$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$VendorId$VH().set(seg, x);
        }
        public static void VendorId$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$VendorId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DeviceId$VH() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DeviceId$VH();
        }
        public static  @C("UINT") int DeviceId$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DeviceId$VH().get(seg);
        }
        public static  @C("UINT") int DeviceId$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DeviceId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DeviceId$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DeviceId$VH().set(seg, x);
        }
        public static void DeviceId$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DeviceId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SubSysId$VH() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SubSysId$VH();
        }
        public static  @C("UINT") int SubSysId$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SubSysId$VH().get(seg);
        }
        public static  @C("UINT") int SubSysId$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SubSysId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SubSysId$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SubSysId$VH().set(seg, x);
        }
        public static void SubSysId$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SubSysId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Revision$VH() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Revision$VH();
        }
        public static  @C("UINT") int Revision$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Revision$VH().get(seg);
        }
        public static  @C("UINT") int Revision$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Revision$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Revision$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Revision$VH().set(seg, x);
        }
        public static void Revision$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Revision$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DedicatedVideoMemory$VH() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedVideoMemory$VH();
        }
        public static  @C("SIZE_T") long DedicatedVideoMemory$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg) {
            return (long)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedVideoMemory$VH().get(seg);
        }
        public static  @C("SIZE_T") long DedicatedVideoMemory$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index) {
            return (long)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedVideoMemory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DedicatedVideoMemory$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, @C("SIZE_T") long x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedVideoMemory$VH().set(seg, x);
        }
        public static void DedicatedVideoMemory$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index, @C("SIZE_T") long x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedVideoMemory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DedicatedSystemMemory$VH() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedSystemMemory$VH();
        }
        public static  @C("SIZE_T") long DedicatedSystemMemory$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg) {
            return (long)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedSystemMemory$VH().get(seg);
        }
        public static  @C("SIZE_T") long DedicatedSystemMemory$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index) {
            return (long)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedSystemMemory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DedicatedSystemMemory$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, @C("SIZE_T") long x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedSystemMemory$VH().set(seg, x);
        }
        public static void DedicatedSystemMemory$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index, @C("SIZE_T") long x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$DedicatedSystemMemory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SharedSystemMemory$VH() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SharedSystemMemory$VH();
        }
        public static  @C("SIZE_T") long SharedSystemMemory$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg) {
            return (long)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SharedSystemMemory$VH().get(seg);
        }
        public static  @C("SIZE_T") long SharedSystemMemory$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index) {
            return (long)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SharedSystemMemory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SharedSystemMemory$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, @C("SIZE_T") long x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SharedSystemMemory$VH().set(seg, x);
        }
        public static void SharedSystemMemory$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index, @C("SIZE_T") long x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$SharedSystemMemory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment AdapterLuid$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(296, 8));
        }
        public static VarHandle Flags$VH() {
            return dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Flags$VH();
        }
        public static  @C("UINT") int Flags$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Flags$VH().get(seg);
        }
        public static  @C("UINT") int Flags$get(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index) {
            return (int)dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct DXGI_ADAPTER_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            dxgi_h$constants$1.DXGI_ADAPTER_DESC1$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_ADAPTER_DESC1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_ADAPTER_DESC1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_ADAPTER_DESC1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_ADAPTER_DESC1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_ADAPTER_DESC1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_ADAPTER_DESC1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class DXGI_DISPLAY_COLOR_SPACE {

        private DXGI_DISPLAY_COLOR_SPACE() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$1.DXGI_DISPLAY_COLOR_SPACE$struct$LAYOUT();
        }
        public static MemorySegment PrimaryCoordinates$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 64));
        }
        public static MemorySegment WhitePoints$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 128));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct DXGI_DISPLAY_COLOR_SPACE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct DXGI_DISPLAY_COLOR_SPACE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct DXGI_DISPLAY_COLOR_SPACE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct DXGI_DISPLAY_COLOR_SPACE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct DXGI_DISPLAY_COLOR_SPACE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct DXGI_DISPLAY_COLOR_SPACE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$VH().get(dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$VH().set(dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$VH().get(dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$VH().set(dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IDXGIFactory1$SEGMENT() {
        return dxgi_h$constants$1.IID_IDXGIFactory1$SEGMENT();
    }
    public static class IDXGIFactory1Vtbl {

        private IDXGIFactory1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIFactory1*)") MemoryAddress AddRef$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIFactory1*)") MemoryAddress AddRef$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("ULONG(*)(IDXGIFactory1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIFactory1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIFactory1*)") MemoryAddress Release$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIFactory1*)") MemoryAddress Release$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("ULONG(*)(IDXGIFactory1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIFactory1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumAdapters$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,UINT,IDXGIAdapter**)") MemoryAddress EnumAdapters$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,UINT,IDXGIAdapter**)") MemoryAddress EnumAdapters$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumAdapters$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,UINT,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters$VH().set(seg, x);
        }
        public static void EnumAdapters$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,UINT,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeWindowAssociation$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$MakeWindowAssociation$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,HWND,UINT)") MemoryAddress MakeWindowAssociation$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$MakeWindowAssociation$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,HWND,UINT)") MemoryAddress MakeWindowAssociation$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$MakeWindowAssociation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeWindowAssociation$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,HWND,UINT)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$MakeWindowAssociation$VH().set(seg, x);
        }
        public static void MakeWindowAssociation$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,HWND,UINT)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$MakeWindowAssociation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetWindowAssociation$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$GetWindowAssociation$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,HWND*)") MemoryAddress GetWindowAssociation$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$GetWindowAssociation$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,HWND*)") MemoryAddress GetWindowAssociation$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$GetWindowAssociation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetWindowAssociation$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,HWND*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$GetWindowAssociation$VH().set(seg, x);
        }
        public static void GetWindowAssociation$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,HWND*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$GetWindowAssociation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSwapChain$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSwapChain$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,IUnknown*,DXGI_SWAP_CHAIN_DESC*,IDXGISwapChain**)") MemoryAddress CreateSwapChain$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSwapChain$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,IUnknown*,DXGI_SWAP_CHAIN_DESC*,IDXGISwapChain**)") MemoryAddress CreateSwapChain$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSwapChain$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSwapChain$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,IUnknown*,DXGI_SWAP_CHAIN_DESC*,IDXGISwapChain**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSwapChain$VH().set(seg, x);
        }
        public static void CreateSwapChain$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,IUnknown*,DXGI_SWAP_CHAIN_DESC*,IDXGISwapChain**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSwapChain$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSoftwareAdapter$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSoftwareAdapter$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,HMODULE,IDXGIAdapter**)") MemoryAddress CreateSoftwareAdapter$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSoftwareAdapter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,HMODULE,IDXGIAdapter**)") MemoryAddress CreateSoftwareAdapter$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSoftwareAdapter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSoftwareAdapter$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,HMODULE,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSoftwareAdapter$VH().set(seg, x);
        }
        public static void CreateSoftwareAdapter$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,HMODULE,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$CreateSoftwareAdapter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumAdapters1$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters1$VH();
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,UINT,IDXGIAdapter1**)") MemoryAddress EnumAdapters1$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIFactory1*,UINT,IDXGIAdapter1**)") MemoryAddress EnumAdapters1$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumAdapters1$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIFactory1*,UINT,IDXGIAdapter1**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters1$VH().set(seg, x);
        }
        public static void EnumAdapters1$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIFactory1*,UINT,IDXGIAdapter1**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$EnumAdapters1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsCurrent$VH() {
            return dxgi_h$constants$1.IDXGIFactory1Vtbl$IsCurrent$VH();
        }
        public static  @C("BOOL(*)(IDXGIFactory1*)") MemoryAddress IsCurrent$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$IsCurrent$VH().get(seg);
        }
        public static  @C("BOOL(*)(IDXGIFactory1*)") MemoryAddress IsCurrent$get(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1Vtbl$IsCurrent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsCurrent$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, @C("BOOL(*)(IDXGIFactory1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$IsCurrent$VH().set(seg, x);
        }
        public static void IsCurrent$set(@C("struct IDXGIFactory1Vtbl") MemorySegment seg, long index, @C("BOOL(*)(IDXGIFactory1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1Vtbl$IsCurrent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIFactory1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIFactory1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIFactory1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIFactory1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIFactory1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIFactory1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIFactory1 {

        private IDXGIFactory1() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$1.IDXGIFactory1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$1.IDXGIFactory1$lpVtbl$VH();
        }
        public static  @C("struct IDXGIFactory1Vtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIFactory1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIFactory1Vtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIFactory1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIFactory1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIFactory1") MemorySegment seg, @C("struct IDXGIFactory1Vtbl*") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIFactory1") MemorySegment seg, long index, @C("struct IDXGIFactory1Vtbl*") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIFactory1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIFactory1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIFactory1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIFactory1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIFactory1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIFactory1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIFactory1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_IDXGIAdapter1$SEGMENT() {
        return dxgi_h$constants$1.IID_IDXGIAdapter1$SEGMENT();
    }
    public static class IDXGIAdapter1Vtbl {

        private IDXGIAdapter1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIAdapter1*)") MemoryAddress AddRef$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIAdapter1*)") MemoryAddress AddRef$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("ULONG(*)(IDXGIAdapter1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIAdapter1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIAdapter1*)") MemoryAddress Release$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIAdapter1*)") MemoryAddress Release$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("ULONG(*)(IDXGIAdapter1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIAdapter1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumOutputs$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$EnumOutputs$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,UINT,IDXGIOutput**)") MemoryAddress EnumOutputs$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$EnumOutputs$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,UINT,IDXGIOutput**)") MemoryAddress EnumOutputs$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$EnumOutputs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumOutputs$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,UINT,IDXGIOutput**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$EnumOutputs$VH().set(seg, x);
        }
        public static void EnumOutputs$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,UINT,IDXGIOutput**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$EnumOutputs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,DXGI_ADAPTER_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,DXGI_ADAPTER_DESC*)") MemoryAddress GetDesc$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,DXGI_ADAPTER_DESC*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,DXGI_ADAPTER_DESC*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckInterfaceSupport$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$CheckInterfaceSupport$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,LARGE_INTEGER*)") MemoryAddress CheckInterfaceSupport$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$CheckInterfaceSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,LARGE_INTEGER*)") MemoryAddress CheckInterfaceSupport$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$CheckInterfaceSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckInterfaceSupport$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,LARGE_INTEGER*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$CheckInterfaceSupport$VH().set(seg, x);
        }
        public static void CheckInterfaceSupport$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,const GUID*,LARGE_INTEGER*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$CheckInterfaceSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc1$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc1$VH();
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,DXGI_ADAPTER_DESC1*)") MemoryAddress GetDesc1$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIAdapter1*,DXGI_ADAPTER_DESC1*)") MemoryAddress GetDesc1$get(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc1$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIAdapter1*,DXGI_ADAPTER_DESC1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc1$VH().set(seg, x);
        }
        public static void GetDesc1$set(@C("struct IDXGIAdapter1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIAdapter1*,DXGI_ADAPTER_DESC1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1Vtbl$GetDesc1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIAdapter1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIAdapter1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIAdapter1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIAdapter1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIAdapter1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIAdapter1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIAdapter1 {

        private IDXGIAdapter1() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$1.IDXGIAdapter1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$1.IDXGIAdapter1$lpVtbl$VH();
        }
        public static  @C("struct IDXGIAdapter1Vtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIAdapter1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIAdapter1Vtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIAdapter1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIAdapter1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIAdapter1") MemorySegment seg, @C("struct IDXGIAdapter1Vtbl*") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIAdapter1") MemorySegment seg, long index, @C("struct IDXGIAdapter1Vtbl*") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIAdapter1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIAdapter1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIAdapter1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIAdapter1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIAdapter1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIAdapter1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIAdapter1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_IDXGIDevice1$SEGMENT() {
        return dxgi_h$constants$1.IID_IDXGIDevice1$SEGMENT();
    }
    public static class IDXGIDevice1Vtbl {

        private IDXGIDevice1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IDXGIDevice1*)") MemoryAddress AddRef$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIDevice1*)") MemoryAddress AddRef$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("ULONG(*)(IDXGIDevice1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIDevice1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IDXGIDevice1*)") MemoryAddress Release$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IDXGIDevice1*)") MemoryAddress Release$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("ULONG(*)(IDXGIDevice1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IDXGIDevice1*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,const GUID*,UINT,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParent$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$GetParent$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetParent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const IID*,void**)") MemoryAddress GetParent$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetParent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParent$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetParent$VH().set(seg, x);
        }
        public static void GetParent$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,const IID*,void**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetParent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapter$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$GetAdapter$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,IDXGIAdapter**)") MemoryAddress GetAdapter$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetAdapter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,IDXGIAdapter**)") MemoryAddress GetAdapter$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetAdapter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapter$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetAdapter$VH().set(seg, x);
        }
        public static void GetAdapter$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,IDXGIAdapter**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetAdapter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSurface$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$CreateSurface$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const DXGI_SURFACE_DESC*,UINT,DXGI_USAGE,const DXGI_SHARED_RESOURCE*,IDXGISurface**)") MemoryAddress CreateSurface$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$CreateSurface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,const DXGI_SURFACE_DESC*,UINT,DXGI_USAGE,const DXGI_SHARED_RESOURCE*,IDXGISurface**)") MemoryAddress CreateSurface$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$CreateSurface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSurface$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,const DXGI_SURFACE_DESC*,UINT,DXGI_USAGE,const DXGI_SHARED_RESOURCE*,IDXGISurface**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$CreateSurface$VH().set(seg, x);
        }
        public static void CreateSurface$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,const DXGI_SURFACE_DESC*,UINT,DXGI_USAGE,const DXGI_SHARED_RESOURCE*,IDXGISurface**)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$CreateSurface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle QueryResourceResidency$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryResourceResidency$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,IUnknown**,DXGI_RESIDENCY*,UINT)") MemoryAddress QueryResourceResidency$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryResourceResidency$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,IUnknown**,DXGI_RESIDENCY*,UINT)") MemoryAddress QueryResourceResidency$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryResourceResidency$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryResourceResidency$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,IUnknown**,DXGI_RESIDENCY*,UINT)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryResourceResidency$VH().set(seg, x);
        }
        public static void QueryResourceResidency$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,IUnknown**,DXGI_RESIDENCY*,UINT)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$QueryResourceResidency$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGPUThreadPriority$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$SetGPUThreadPriority$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,INT)") MemoryAddress SetGPUThreadPriority$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$SetGPUThreadPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,INT)") MemoryAddress SetGPUThreadPriority$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$SetGPUThreadPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGPUThreadPriority$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,INT)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$SetGPUThreadPriority$VH().set(seg, x);
        }
        public static void SetGPUThreadPriority$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,INT)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$SetGPUThreadPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetGPUThreadPriority$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$GetGPUThreadPriority$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,INT*)") MemoryAddress GetGPUThreadPriority$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetGPUThreadPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,INT*)") MemoryAddress GetGPUThreadPriority$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetGPUThreadPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetGPUThreadPriority$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,INT*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetGPUThreadPriority$VH().set(seg, x);
        }
        public static void GetGPUThreadPriority$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,INT*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetGPUThreadPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMaximumFrameLatency$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$SetMaximumFrameLatency$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,UINT)") MemoryAddress SetMaximumFrameLatency$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$SetMaximumFrameLatency$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,UINT)") MemoryAddress SetMaximumFrameLatency$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$SetMaximumFrameLatency$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMaximumFrameLatency$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,UINT)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$SetMaximumFrameLatency$VH().set(seg, x);
        }
        public static void SetMaximumFrameLatency$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,UINT)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$SetMaximumFrameLatency$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetMaximumFrameLatency$VH() {
            return dxgi_h$constants$1.IDXGIDevice1Vtbl$GetMaximumFrameLatency$VH();
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,UINT*)") MemoryAddress GetMaximumFrameLatency$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetMaximumFrameLatency$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IDXGIDevice1*,UINT*)") MemoryAddress GetMaximumFrameLatency$get(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1Vtbl$GetMaximumFrameLatency$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetMaximumFrameLatency$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, @C("HRESULT(*)(IDXGIDevice1*,UINT*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetMaximumFrameLatency$VH().set(seg, x);
        }
        public static void GetMaximumFrameLatency$set(@C("struct IDXGIDevice1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IDXGIDevice1*,UINT*)") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1Vtbl$GetMaximumFrameLatency$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIDevice1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIDevice1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIDevice1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIDevice1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIDevice1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIDevice1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class IDXGIDevice1 {

        private IDXGIDevice1() {}
        public static MemoryLayout $LAYOUT() {
            return dxgi_h$constants$1.IDXGIDevice1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return dxgi_h$constants$1.IDXGIDevice1$lpVtbl$VH();
        }
        public static  @C("struct IDXGIDevice1Vtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIDevice1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IDXGIDevice1Vtbl*") MemoryAddress lpVtbl$get(@C("struct IDXGIDevice1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.IDXGIDevice1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IDXGIDevice1") MemorySegment seg, @C("struct IDXGIDevice1Vtbl*") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IDXGIDevice1") MemorySegment seg, long index, @C("struct IDXGIDevice1Vtbl*") MemoryAddress x) {
            dxgi_h$constants$1.IDXGIDevice1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IDXGIDevice1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IDXGIDevice1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IDXGIDevice1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IDXGIDevice1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IDXGIDevice1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IDXGIDevice1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$LAYOUT() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$VH() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$SEGMENT() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$VH().get(dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$VH().set(dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$LAYOUT() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$VH() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$SEGMENT() {
        return dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$VH().get(dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$VH().set(dxgi_h$constants$1.__MIDL_itf_dxgi_0000_0014_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static @C("int") int DXGI_CPU_ACCESS_NONE() {
        return dxgi_h$constants$1.DXGI_CPU_ACCESS_NONE();
    }
    public static @C("int") int DXGI_CPU_ACCESS_DYNAMIC() {
        return dxgi_h$constants$1.DXGI_CPU_ACCESS_DYNAMIC();
    }
    public static @C("int") int DXGI_CPU_ACCESS_READ_WRITE() {
        return dxgi_h$constants$1.DXGI_CPU_ACCESS_READ_WRITE();
    }
    public static @C("int") int DXGI_CPU_ACCESS_SCRATCH() {
        return dxgi_h$constants$1.DXGI_CPU_ACCESS_SCRATCH();
    }
    public static @C("unsigned long") int DXGI_USAGE_SHADER_INPUT() {
        return dxgi_h$constants$1.DXGI_USAGE_SHADER_INPUT();
    }
    public static @C("unsigned long") int DXGI_USAGE_RENDER_TARGET_OUTPUT() {
        return dxgi_h$constants$1.DXGI_USAGE_RENDER_TARGET_OUTPUT();
    }
    public static @C("unsigned long") int DXGI_USAGE_BACK_BUFFER() {
        return dxgi_h$constants$1.DXGI_USAGE_BACK_BUFFER();
    }
    public static @C("unsigned long") int DXGI_USAGE_SHARED() {
        return dxgi_h$constants$1.DXGI_USAGE_SHARED();
    }
    public static @C("unsigned long") int DXGI_USAGE_READ_ONLY() {
        return dxgi_h$constants$1.DXGI_USAGE_READ_ONLY();
    }
    public static @C("unsigned long") int DXGI_USAGE_DISCARD_ON_PRESENT() {
        return dxgi_h$constants$1.DXGI_USAGE_DISCARD_ON_PRESENT();
    }
    public static @C("unsigned long") int DXGI_USAGE_UNORDERED_ACCESS() {
        return dxgi_h$constants$1.DXGI_USAGE_UNORDERED_ACCESS();
    }
    public static @C("int") int DXGI_RESOURCE_PRIORITY_MINIMUM() {
        return dxgi_h$constants$1.DXGI_RESOURCE_PRIORITY_MINIMUM();
    }
    public static @C("int") int DXGI_RESOURCE_PRIORITY_LOW() {
        return dxgi_h$constants$1.DXGI_RESOURCE_PRIORITY_LOW();
    }
    public static @C("int") int DXGI_RESOURCE_PRIORITY_NORMAL() {
        return dxgi_h$constants$1.DXGI_RESOURCE_PRIORITY_NORMAL();
    }
    public static @C("unsigned int") int DXGI_RESOURCE_PRIORITY_HIGH() {
        return dxgi_h$constants$1.DXGI_RESOURCE_PRIORITY_HIGH();
    }
    public static @C("unsigned int") int DXGI_RESOURCE_PRIORITY_MAXIMUM() {
        return dxgi_h$constants$1.DXGI_RESOURCE_PRIORITY_MAXIMUM();
    }
    public static @C("unsigned long") int DXGI_MAP_READ() {
        return dxgi_h$constants$1.DXGI_MAP_READ();
    }
    public static @C("unsigned long") int DXGI_MAP_WRITE() {
        return dxgi_h$constants$1.DXGI_MAP_WRITE();
    }
    public static @C("unsigned long") int DXGI_MAP_DISCARD() {
        return dxgi_h$constants$1.DXGI_MAP_DISCARD();
    }
    public static @C("unsigned long") int DXGI_ENUM_MODES_INTERLACED() {
        return dxgi_h$constants$1.DXGI_ENUM_MODES_INTERLACED();
    }
    public static @C("unsigned long") int DXGI_ENUM_MODES_SCALING() {
        return dxgi_h$constants$1.DXGI_ENUM_MODES_SCALING();
    }
    public static @C("int") int DXGI_MAX_SWAP_CHAIN_BUFFERS() {
        return dxgi_h$constants$1.DXGI_MAX_SWAP_CHAIN_BUFFERS();
    }
    public static @C("unsigned long") int DXGI_PRESENT_TEST() {
        return dxgi_h$constants$1.DXGI_PRESENT_TEST();
    }
    public static @C("unsigned long") int DXGI_PRESENT_DO_NOT_SEQUENCE() {
        return dxgi_h$constants$1.DXGI_PRESENT_DO_NOT_SEQUENCE();
    }
    public static @C("unsigned long") int DXGI_PRESENT_RESTART() {
        return dxgi_h$constants$1.DXGI_PRESENT_RESTART();
    }
    public static @C("unsigned long") int DXGI_PRESENT_DO_NOT_WAIT() {
        return dxgi_h$constants$1.DXGI_PRESENT_DO_NOT_WAIT();
    }
    public static @C("unsigned long") int DXGI_PRESENT_STEREO_PREFER_RIGHT() {
        return dxgi_h$constants$1.DXGI_PRESENT_STEREO_PREFER_RIGHT();
    }
    public static @C("unsigned long") int DXGI_PRESENT_STEREO_TEMPORARY_MONO() {
        return dxgi_h$constants$1.DXGI_PRESENT_STEREO_TEMPORARY_MONO();
    }
    public static @C("unsigned long") int DXGI_PRESENT_RESTRICT_TO_OUTPUT() {
        return dxgi_h$constants$1.DXGI_PRESENT_RESTRICT_TO_OUTPUT();
    }
    public static @C("unsigned long") int DXGI_PRESENT_USE_DURATION() {
        return dxgi_h$constants$1.DXGI_PRESENT_USE_DURATION();
    }
    public static @C("unsigned long") int DXGI_PRESENT_ALLOW_TEARING() {
        return dxgi_h$constants$1.DXGI_PRESENT_ALLOW_TEARING();
    }
    public static @C("int") int DXGI_MWA_NO_WINDOW_CHANGES() {
        return dxgi_h$constants$1.DXGI_MWA_NO_WINDOW_CHANGES();
    }
    public static @C("int") int DXGI_MWA_NO_ALT_ENTER() {
        return dxgi_h$constants$1.DXGI_MWA_NO_ALT_ENTER();
    }
    public static @C("int") int DXGI_MWA_NO_PRINT_SCREEN() {
        return dxgi_h$constants$1.DXGI_MWA_NO_PRINT_SCREEN();
    }
    public static @C("int") int DXGI_MWA_VALID() {
        return dxgi_h$constants$1.DXGI_MWA_VALID();
    }
}


