// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class Windows_h$constants$2 extends Windows_h$constants$1 {
    Windows_h$constants$2() {}
    public static int FAST_FAIL_INVALID_JUMP_BUFFER() { return (int)18L; }

    public static int FAST_FAIL_MRDATA_MODIFIED() { return (int)19L; }

    public static int FAST_FAIL_CERTIFICATION_FAILURE() { return (int)20L; }

    public static int FAST_FAIL_INVALID_EXCEPTION_CHAIN() { return (int)21L; }

    public static int FAST_FAIL_CRYPTO_LIBRARY() { return (int)22L; }

    public static int FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT() { return (int)23L; }

    public static int FAST_FAIL_INVALID_IMAGE_BASE() { return (int)24L; }

    public static int FAST_FAIL_DLOAD_PROTECTION_FAILURE() { return (int)25L; }

    public static int FAST_FAIL_UNSAFE_EXTENSION_CALL() { return (int)26L; }

    public static int FAST_FAIL_DEPRECATED_SERVICE_INVOKED() { return (int)27L; }

    public static int FAST_FAIL_INVALID_BUFFER_ACCESS() { return (int)28L; }

    public static int FAST_FAIL_INVALID_BALANCED_TREE() { return (int)29L; }

    public static int FAST_FAIL_INVALID_NEXT_THREAD() { return (int)30L; }

    public static int FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED() { return (int)31L; }

    public static int FAST_FAIL_APCS_DISABLED() { return (int)32L; }

    public static int FAST_FAIL_INVALID_IDLE_STATE() { return (int)33L; }

    public static int FAST_FAIL_MRDATA_PROTECTION_FAILURE() { return (int)34L; }

    public static int FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION() { return (int)35L; }

    public static int FAST_FAIL_INVALID_LOCK_STATE() { return (int)36L; }

    public static int FAST_FAIL_GUARD_JUMPTABLE() { return (int)37L; }

    public static int FAST_FAIL_INVALID_LONGJUMP_TARGET() { return (int)38L; }

    public static int FAST_FAIL_INVALID_DISPATCH_CONTEXT() { return (int)39L; }

    public static int FAST_FAIL_INVALID_THREAD() { return (int)40L; }

    public static int FAST_FAIL_INVALID_SYSCALL_NUMBER() { return (int)41L; }

    public static int FAST_FAIL_INVALID_FILE_OPERATION() { return (int)42L; }

    public static int FAST_FAIL_LPAC_ACCESS_DENIED() { return (int)43L; }

    public static int FAST_FAIL_GUARD_SS_FAILURE() { return (int)44L; }

    public static int FAST_FAIL_LOADER_CONTINUITY_FAILURE() { return (int)45L; }

    public static int FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE() { return (int)46L; }

    public static int FAST_FAIL_INVALID_CONTROL_STACK() { return (int)47L; }

    public static int FAST_FAIL_SET_CONTEXT_DENIED() { return (int)48L; }

    public static int FAST_FAIL_INVALID_IAT() { return (int)49L; }

    public static int FAST_FAIL_HEAP_METADATA_CORRUPTION() { return (int)50L; }

    public static int FAST_FAIL_PAYLOAD_RESTRICTION_VIOLATION() { return (int)51L; }

    public static int FAST_FAIL_LOW_LABEL_ACCESS_DENIED() { return (int)52L; }

    public static int FAST_FAIL_ENCLAVE_CALL_FAILURE() { return (int)53L; }

    public static int FAST_FAIL_UNHANDLED_LSS_EXCEPTON() { return (int)54L; }

    public static int FAST_FAIL_ADMINLESS_ACCESS_DENIED() { return (int)55L; }

    public static int FAST_FAIL_UNEXPECTED_CALL() { return (int)56L; }

    public static int FAST_FAIL_CONTROL_INVALID_RETURN_ADDRESS() { return (int)57L; }

    public static int FAST_FAIL_UNEXPECTED_HOST_BEHAVIOR() { return (int)58L; }

    public static int FAST_FAIL_FLAGS_CORRUPTION() { return (int)59L; }

    public static int FAST_FAIL_VEH_CORRUPTION() { return (int)60L; }

    public static int FAST_FAIL_ETW_CORRUPTION() { return (int)61L; }

    public static int FAST_FAIL_RIO_ABORT() { return (int)62L; }

    public static int FAST_FAIL_INVALID_PFN() { return (int)63L; }

    public static int HEAP_NO_SERIALIZE() { return (int)1L; }

    public static int HEAP_GROWABLE() { return (int)2L; }

    public static int HEAP_GENERATE_EXCEPTIONS() { return (int)4L; }

    public static int HEAP_ZERO_MEMORY() { return (int)8L; }

    public static int HEAP_REALLOC_IN_PLACE_ONLY() { return (int)16L; }

    public static int HEAP_TAIL_CHECKING_ENABLED() { return (int)32L; }

    public static int HEAP_FREE_CHECKING_ENABLED() { return (int)64L; }

    public static int HEAP_DISABLE_COALESCE_ON_FREE() { return (int)128L; }

    public static int HEAP_CREATE_ALIGN_16() { return (int)65536L; }

    public static int HEAP_CREATE_ENABLE_TRACING() { return (int)131072L; }

    public static int HEAP_CREATE_ENABLE_EXECUTE() { return (int)262144L; }

    public static int HEAP_MAXIMUM_TAG() { return (int)4095L; }

    public static int HEAP_PSEUDO_TAG_FLAG() { return (int)32768L; }

    public static int HEAP_TAG_SHIFT() { return (int)18L; }

    public static int HEAP_CREATE_SEGMENT_HEAP() { return (int)256L; }

    public static int HEAP_CREATE_HARDENED() { return (int)512L; }

    public static int IS_TEXT_UNICODE_ASCII16() { return (int)1L; }

    public static int IS_TEXT_UNICODE_REVERSE_ASCII16() { return (int)16L; }

    public static int IS_TEXT_UNICODE_STATISTICS() { return (int)2L; }

    public static int IS_TEXT_UNICODE_REVERSE_STATISTICS() { return (int)32L; }

    public static int IS_TEXT_UNICODE_CONTROLS() { return (int)4L; }

    public static int IS_TEXT_UNICODE_REVERSE_CONTROLS() { return (int)64L; }

    public static int IS_TEXT_UNICODE_SIGNATURE() { return (int)8L; }

    public static int IS_TEXT_UNICODE_REVERSE_SIGNATURE() { return (int)128L; }

    public static int IS_TEXT_UNICODE_ILLEGAL_CHARS() { return (int)256L; }

    public static int IS_TEXT_UNICODE_ODD_LENGTH() { return (int)512L; }

    public static int IS_TEXT_UNICODE_DBCS_LEADBYTE() { return (int)1024L; }

    public static int IS_TEXT_UNICODE_NULL_BYTES() { return (int)4096L; }

    public static int IS_TEXT_UNICODE_UNICODE_MASK() { return (int)15L; }

    public static int IS_TEXT_UNICODE_REVERSE_MASK() { return (int)240L; }

    public static int IS_TEXT_UNICODE_NOT_UNICODE_MASK() { return (int)3840L; }

    public static int IS_TEXT_UNICODE_NOT_ASCII_MASK() { return (int)61440L; }

    public static int SEF_DACL_AUTO_INHERIT() { return (int)1L; }

    public static int SEF_SACL_AUTO_INHERIT() { return (int)2L; }

    public static int SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT() { return (int)4L; }

    public static int SEF_AVOID_PRIVILEGE_CHECK() { return (int)8L; }

    public static int SEF_AVOID_OWNER_CHECK() { return (int)16L; }

    public static int SEF_DEFAULT_OWNER_FROM_PARENT() { return (int)32L; }

    public static int SEF_DEFAULT_GROUP_FROM_PARENT() { return (int)64L; }

    public static int SEF_MACL_NO_WRITE_UP() { return (int)256L; }

    public static int SEF_MACL_NO_READ_UP() { return (int)512L; }

    public static int SEF_MACL_NO_EXECUTE_UP() { return (int)1024L; }

    public static int SEF_AI_USE_EXTRA_PARAMS() { return (int)2048L; }

    public static int SEF_AVOID_OWNER_RESTRICTION() { return (int)4096L; }

    public static int SEF_FORCE_USER_MODE() { return (int)8192L; }

    public static int MESSAGE_RESOURCE_UNICODE() { return (int)1L; }

    public static int MESSAGE_RESOURCE_UTF8() { return (int)2L; }

    public static int VER_EQUAL() { return (int)1L; }

    public static int VER_GREATER() { return (int)2L; }

    public static int VER_GREATER_EQUAL() { return (int)3L; }

    public static int VER_LESS() { return (int)4L; }

    public static int VER_LESS_EQUAL() { return (int)5L; }

    public static int VER_AND() { return (int)6L; }

    public static int VER_OR() { return (int)7L; }

    public static int VER_CONDITION_MASK() { return (int)7L; }

    public static int VER_NUM_BITS_PER_CONDITION_MASK() { return (int)3L; }

    public static int VER_MINORVERSION() { return (int)1L; }

    public static int VER_MAJORVERSION() { return (int)2L; }

    public static int VER_BUILDNUMBER() { return (int)4L; }

    public static int VER_PLATFORMID() { return (int)8L; }

    public static int VER_SERVICEPACKMINOR() { return (int)16L; }

    public static int VER_SERVICEPACKMAJOR() { return (int)32L; }

    public static int VER_SUITENAME() { return (int)64L; }

    public static int VER_PRODUCT_TYPE() { return (int)128L; }

    public static int VER_NT_WORKSTATION() { return (int)1L; }

    public static int VER_NT_DOMAIN_CONTROLLER() { return (int)2L; }

    public static int VER_NT_SERVER() { return (int)3L; }

    public static int VER_PLATFORM_WIN32s() { return (int)0L; }

    public static int VER_PLATFORM_WIN32_WINDOWS() { return (int)1L; }

    public static int VER_PLATFORM_WIN32_NT() { return (int)2L; }

    public static int RTL_CORRELATION_VECTOR_STRING_LENGTH() { return (int)129L; }

    public static int IMAGE_POLICY_METADATA_VERSION() { return (int)1L; }

    public static int RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO() { return (int)16777216L; }

    public static int RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN() { return (int)33554432L; }

    public static int RTL_CRITICAL_SECTION_FLAG_STATIC_INIT() { return (int)67108864L; }

    public static int RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE() { return (int)134217728L; }

    public static int RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO() { return (int)268435456L; }

    public static int RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT() { return (int)1L; }

    public static int RTL_CONDITION_VARIABLE_LOCKMODE_SHARED() { return (int)1L; }

    public static int HEAP_OPTIMIZE_RESOURCES_CURRENT_VERSION() { return (int)1L; }

    public static int WT_EXECUTEDEFAULT() { return (int)0L; }

    public static int WT_EXECUTEINIOTHREAD() { return (int)1L; }

    public static int WT_EXECUTEINUITHREAD() { return (int)2L; }

    public static int WT_EXECUTEINWAITTHREAD() { return (int)4L; }

    public static int WT_EXECUTEONLYONCE() { return (int)8L; }

    public static int WT_EXECUTEINTIMERTHREAD() { return (int)32L; }

    public static int WT_EXECUTELONGFUNCTION() { return (int)16L; }

    public static int WT_EXECUTEINPERSISTENTIOTHREAD() { return (int)64L; }

    public static int WT_EXECUTEINPERSISTENTTHREAD() { return (int)128L; }

    public static int WT_TRANSFER_IMPERSONATION() { return (int)256L; }

    public static int WT_EXECUTEINLONGTHREAD() { return (int)16L; }

    public static int WT_EXECUTEDELETEWAIT() { return (int)8L; }

    public static int CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID() { return (int)1L; }

    public static int PERFORMANCE_DATA_VERSION() { return (int)1L; }

    public static int READ_THREAD_PROFILING_FLAG_DISPATCHING() { return (int)1L; }

    public static int READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS() { return (int)2L; }

    public static int UNIFIEDBUILDREVISION_MIN() { return (int)0L; }

    public static int DEVICEFAMILYINFOENUM_UAP() { return (int)0L; }

    public static int DEVICEFAMILYINFOENUM_WINDOWS_8X() { return (int)1L; }

    public static int DEVICEFAMILYINFOENUM_WINDOWS_PHONE_8X() { return (int)2L; }

    public static int DEVICEFAMILYINFOENUM_DESKTOP() { return (int)3L; }

    public static int DEVICEFAMILYINFOENUM_MOBILE() { return (int)4L; }

    public static int DEVICEFAMILYINFOENUM_XBOX() { return (int)5L; }

    public static int DEVICEFAMILYINFOENUM_TEAM() { return (int)6L; }

    public static int DEVICEFAMILYINFOENUM_IOT() { return (int)7L; }

    public static int DEVICEFAMILYINFOENUM_IOT_HEADLESS() { return (int)8L; }

    public static int DEVICEFAMILYINFOENUM_SERVER() { return (int)9L; }

    public static int DEVICEFAMILYINFOENUM_HOLOGRAPHIC() { return (int)10L; }

    public static int DEVICEFAMILYINFOENUM_XBOXSRA() { return (int)11L; }

    public static int DEVICEFAMILYINFOENUM_XBOXERA() { return (int)12L; }

    public static int DEVICEFAMILYINFOENUM_SERVER_NANO() { return (int)13L; }

    public static int DEVICEFAMILYINFOENUM_8828080() { return (int)14L; }

    public static int DEVICEFAMILYINFOENUM_7067329() { return (int)15L; }

    public static int DEVICEFAMILYINFOENUM_WINDOWS_CORE() { return (int)16L; }

    public static int DEVICEFAMILYINFOENUM_WINDOWS_CORE_HEADLESS() { return (int)17L; }

    public static int DEVICEFAMILYINFOENUM_MAX() { return (int)17L; }

    public static int DEVICEFAMILYDEVICEFORM_UNKNOWN() { return (int)0L; }

    public static int DEVICEFAMILYDEVICEFORM_PHONE() { return (int)1L; }

    public static int DEVICEFAMILYDEVICEFORM_TABLET() { return (int)2L; }

    public static int DEVICEFAMILYDEVICEFORM_DESKTOP() { return (int)3L; }

    public static int DEVICEFAMILYDEVICEFORM_NOTEBOOK() { return (int)4L; }

    public static int DEVICEFAMILYDEVICEFORM_CONVERTIBLE() { return (int)5L; }

    public static int DEVICEFAMILYDEVICEFORM_DETACHABLE() { return (int)6L; }

    public static int DEVICEFAMILYDEVICEFORM_ALLINONE() { return (int)7L; }

    public static int DEVICEFAMILYDEVICEFORM_STICKPC() { return (int)8L; }

    public static int DEVICEFAMILYDEVICEFORM_PUCK() { return (int)9L; }

    public static int DEVICEFAMILYDEVICEFORM_LARGESCREEN() { return (int)10L; }

    public static int DEVICEFAMILYDEVICEFORM_HMD() { return (int)11L; }

    public static int DEVICEFAMILYDEVICEFORM_INDUSTRY_HANDHELD() { return (int)12L; }

    public static int DEVICEFAMILYDEVICEFORM_INDUSTRY_TABLET() { return (int)13L; }

    public static int DEVICEFAMILYDEVICEFORM_BANKING() { return (int)14L; }

    public static int DEVICEFAMILYDEVICEFORM_BUILDING_AUTOMATION() { return (int)15L; }

    public static int DEVICEFAMILYDEVICEFORM_DIGITAL_SIGNAGE() { return (int)16L; }

    public static int DEVICEFAMILYDEVICEFORM_GAMING() { return (int)17L; }

    public static int DEVICEFAMILYDEVICEFORM_HOME_AUTOMATION() { return (int)18L; }

    public static int DEVICEFAMILYDEVICEFORM_INDUSTRIAL_AUTOMATION() { return (int)19L; }

    public static int DEVICEFAMILYDEVICEFORM_KIOSK() { return (int)20L; }

    public static int DEVICEFAMILYDEVICEFORM_MAKER_BOARD() { return (int)21L; }

    public static int DEVICEFAMILYDEVICEFORM_MEDICAL() { return (int)22L; }

    public static int DEVICEFAMILYDEVICEFORM_NETWORKING() { return (int)23L; }

    public static int DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE() { return (int)24L; }

    public static int DEVICEFAMILYDEVICEFORM_PRINTING() { return (int)25L; }

    public static int DEVICEFAMILYDEVICEFORM_THIN_CLIENT() { return (int)26L; }

    public static int DEVICEFAMILYDEVICEFORM_TOY() { return (int)27L; }

    public static int DEVICEFAMILYDEVICEFORM_VENDING() { return (int)28L; }

    public static int DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER() { return (int)29L; }

    public static int DEVICEFAMILYDEVICEFORM_XBOX_ONE() { return (int)30L; }

    public static int DEVICEFAMILYDEVICEFORM_XBOX_ONE_S() { return (int)31L; }

    public static int DEVICEFAMILYDEVICEFORM_XBOX_ONE_X() { return (int)32L; }

    public static int DEVICEFAMILYDEVICEFORM_XBOX_ONE_X_DEVKIT() { return (int)33L; }

    public static int DEVICEFAMILYDEVICEFORM_MAX() { return (int)33L; }

    public static int DLL_PROCESS_ATTACH() { return (int)1L; }

    public static int DLL_THREAD_ATTACH() { return (int)2L; }

    public static int DLL_THREAD_DETACH() { return (int)3L; }

    public static int DLL_PROCESS_DETACH() { return (int)0L; }

    public static int EVENTLOG_SEQUENTIAL_READ() { return (int)1L; }

    public static int EVENTLOG_SEEK_READ() { return (int)2L; }

    public static int EVENTLOG_FORWARDS_READ() { return (int)4L; }

    public static int EVENTLOG_BACKWARDS_READ() { return (int)8L; }

    public static int EVENTLOG_SUCCESS() { return (int)0L; }

    public static int EVENTLOG_ERROR_TYPE() { return (int)1L; }

    public static int EVENTLOG_WARNING_TYPE() { return (int)2L; }

    public static int EVENTLOG_INFORMATION_TYPE() { return (int)4L; }

    public static int EVENTLOG_AUDIT_SUCCESS() { return (int)8L; }

    public static int EVENTLOG_AUDIT_FAILURE() { return (int)16L; }

    public static int EVENTLOG_START_PAIRED_EVENT() { return (int)1L; }

    public static int EVENTLOG_END_PAIRED_EVENT() { return (int)2L; }

    public static int EVENTLOG_END_ALL_PAIRED_EVENTS() { return (int)4L; }

    public static int EVENTLOG_PAIRED_EVENT_ACTIVE() { return (int)8L; }

    public static int EVENTLOG_PAIRED_EVENT_INACTIVE() { return (int)16L; }

    public static int MAXLOGICALLOGNAMESIZE() { return (int)256L; }

    public static int REG_STANDARD_FORMAT() { return (int)1L; }

    public static int REG_LATEST_FORMAT() { return (int)2L; }

    public static int REG_NO_COMPRESSION() { return (int)4L; }

    public static int REG_FORCE_UNLOAD() { return (int)1L; }

    public static int SERVICE_KERNEL_DRIVER() { return (int)1L; }

    public static int SERVICE_FILE_SYSTEM_DRIVER() { return (int)2L; }

    public static int SERVICE_ADAPTER() { return (int)4L; }

    public static int SERVICE_RECOGNIZER_DRIVER() { return (int)8L; }

    public static int SERVICE_WIN32_OWN_PROCESS() { return (int)16L; }

    public static int SERVICE_WIN32_SHARE_PROCESS() { return (int)32L; }

    public static int SERVICE_USER_SERVICE() { return (int)64L; }

    public static int SERVICE_USERSERVICE_INSTANCE() { return (int)128L; }

    public static int SERVICE_INTERACTIVE_PROCESS() { return (int)256L; }

    public static int SERVICE_PKG_SERVICE() { return (int)512L; }

    public static int SERVICE_BOOT_START() { return (int)0L; }

    public static int SERVICE_SYSTEM_START() { return (int)1L; }

    public static int SERVICE_AUTO_START() { return (int)2L; }

    public static int SERVICE_DEMAND_START() { return (int)3L; }

    public static int SERVICE_DISABLED() { return (int)4L; }

    public static int SERVICE_ERROR_IGNORE() { return (int)0L; }

    public static int SERVICE_ERROR_NORMAL() { return (int)1L; }

    public static int SERVICE_ERROR_SEVERE() { return (int)2L; }

    public static int SERVICE_ERROR_CRITICAL() { return (int)3L; }

    public static int CM_SERVICE_NETWORK_BOOT_LOAD() { return (int)1L; }

    public static int CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD() { return (int)2L; }

    public static int CM_SERVICE_USB_DISK_BOOT_LOAD() { return (int)4L; }

    public static int CM_SERVICE_SD_DISK_BOOT_LOAD() { return (int)8L; }

    public static int CM_SERVICE_USB3_DISK_BOOT_LOAD() { return (int)16L; }

    public static int CM_SERVICE_MEASURED_BOOT_LOAD() { return (int)32L; }

    public static int CM_SERVICE_VERIFIER_BOOT_LOAD() { return (int)64L; }

    public static int CM_SERVICE_WINPE_BOOT_LOAD() { return (int)128L; }

    public static int CM_SERVICE_RAM_DISK_BOOT_LOAD() { return (int)256L; }

    public static int TAPE_DRIVE_FIXED() { return (int)1L; }

    public static int TAPE_DRIVE_SELECT() { return (int)2L; }

    public static int TAPE_DRIVE_INITIATOR() { return (int)4L; }

    public static int TAPE_DRIVE_ERASE_SHORT() { return (int)16L; }

    public static int TAPE_DRIVE_ERASE_LONG() { return (int)32L; }

    public static int TAPE_DRIVE_ERASE_BOP_ONLY() { return (int)64L; }

    public static int TAPE_DRIVE_ERASE_IMMEDIATE() { return (int)128L; }

    public static int TAPE_DRIVE_TAPE_CAPACITY() { return (int)256L; }

    public static int TAPE_DRIVE_TAPE_REMAINING() { return (int)512L; }

    public static int TAPE_DRIVE_FIXED_BLOCK() { return (int)1024L; }

    public static int TAPE_DRIVE_VARIABLE_BLOCK() { return (int)2048L; }

    public static int TAPE_DRIVE_WRITE_PROTECT() { return (int)4096L; }

    public static int TAPE_DRIVE_EOT_WZ_SIZE() { return (int)8192L; }

    public static int TAPE_DRIVE_ECC() { return (int)65536L; }

    public static int TAPE_DRIVE_COMPRESSION() { return (int)131072L; }

    public static int TAPE_DRIVE_PADDING() { return (int)262144L; }

    public static int TAPE_DRIVE_REPORT_SMKS() { return (int)524288L; }

    public static int TAPE_DRIVE_GET_ABSOLUTE_BLK() { return (int)1048576L; }

    public static int TAPE_DRIVE_GET_LOGICAL_BLK() { return (int)2097152L; }

    public static int TAPE_DRIVE_SET_EOT_WZ_SIZE() { return (int)4194304L; }

    public static int TAPE_DRIVE_EJECT_MEDIA() { return (int)16777216L; }

    public static int TAPE_DRIVE_CLEAN_REQUESTS() { return (int)33554432L; }

    public static int TAPE_DRIVE_SET_CMP_BOP_ONLY() { return (int)67108864L; }

    public static int TRANSACTION_MANAGER_VOLATILE() { return (int)1L; }

    public static int TRANSACTION_MANAGER_COMMIT_DEFAULT() { return (int)0L; }

    public static int TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME() { return (int)2L; }

    public static int TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES() { return (int)4L; }

    public static int TRANSACTION_MANAGER_COMMIT_LOWEST() { return (int)8L; }

    public static int TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY() { return (int)16L; }

    public static int TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS() { return (int)32L; }

    public static int TRANSACTION_MANAGER_MAXIMUM_OPTION() { return (int)63L; }

    public static int TRANSACTION_DO_NOT_PROMOTE() { return (int)1L; }

    public static int TRANSACTION_MAXIMUM_OPTION() { return (int)1L; }

    public static int RESOURCE_MANAGER_VOLATILE() { return (int)1L; }

    public static int RESOURCE_MANAGER_COMMUNICATION() { return (int)2L; }

    public static int RESOURCE_MANAGER_MAXIMUM_OPTION() { return (int)3L; }

    public static int CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY() { return (int)1L; }

    public static int CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO() { return (int)2L; }

    public static int CRM_PROTOCOL_MAXIMUM_OPTION() { return (int)3L; }

    public static int ENLISTMENT_SUPERIOR() { return (int)1L; }

    public static int ENLISTMENT_MAXIMUM_OPTION() { return (int)1L; }

    public static int TRANSACTION_NOTIFY_MASK() { return (int)1073741823L; }

    public static int TRANSACTION_NOTIFY_PREPREPARE() { return (int)1L; }

    public static int TRANSACTION_NOTIFY_PREPARE() { return (int)2L; }

    public static int TRANSACTION_NOTIFY_COMMIT() { return (int)4L; }

    public static int TRANSACTION_NOTIFY_ROLLBACK() { return (int)8L; }

    public static int TRANSACTION_NOTIFY_PREPREPARE_COMPLETE() { return (int)16L; }

    public static int TRANSACTION_NOTIFY_PREPARE_COMPLETE() { return (int)32L; }

    public static int TRANSACTION_NOTIFY_COMMIT_COMPLETE() { return (int)64L; }

    public static int TRANSACTION_NOTIFY_ROLLBACK_COMPLETE() { return (int)128L; }

    public static int TRANSACTION_NOTIFY_RECOVER() { return (int)256L; }

    public static int TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT() { return (int)512L; }

    public static int TRANSACTION_NOTIFY_DELEGATE_COMMIT() { return (int)1024L; }

    public static int TRANSACTION_NOTIFY_RECOVER_QUERY() { return (int)2048L; }

    public static int TRANSACTION_NOTIFY_ENLIST_PREPREPARE() { return (int)4096L; }

    public static int TRANSACTION_NOTIFY_LAST_RECOVER() { return (int)8192L; }

    public static int TRANSACTION_NOTIFY_INDOUBT() { return (int)16384L; }

    public static int TRANSACTION_NOTIFY_PROPAGATE_PULL() { return (int)32768L; }

    public static int TRANSACTION_NOTIFY_PROPAGATE_PUSH() { return (int)65536L; }

    public static int TRANSACTION_NOTIFY_MARSHAL() { return (int)131072L; }

    public static int TRANSACTION_NOTIFY_ENLIST_MASK() { return (int)262144L; }

    public static int TRANSACTION_NOTIFY_RM_DISCONNECTED() { return (int)16777216L; }

    public static int TRANSACTION_NOTIFY_TM_ONLINE() { return (int)33554432L; }

    public static int TRANSACTION_NOTIFY_COMMIT_REQUEST() { return (int)67108864L; }

    public static int TRANSACTION_NOTIFY_PROMOTE() { return (int)134217728L; }

    public static int TRANSACTION_NOTIFY_PROMOTE_NEW() { return (int)268435456L; }

    public static int TRANSACTION_NOTIFY_REQUEST_OUTCOME() { return (int)536870912L; }

    public static int TRANSACTION_NOTIFY_COMMIT_FINALIZE() { return (int)1073741824L; }

    public static int TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED() { return (int)1L; }

    public static int KTM_MARSHAL_BLOB_VERSION_MAJOR() { return (int)1L; }

    public static int KTM_MARSHAL_BLOB_VERSION_MINOR() { return (int)1L; }

    public static int MAX_TRANSACTION_DESCRIPTION_LENGTH() { return (int)64L; }

    public static int MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH() { return (int)64L; }

    public static int APP_LOCAL_DEVICE_ID_SIZE() { return (int)32L; }

    public static int DM_UPDATE() { return (int)1L; }

    public static int DM_COPY() { return (int)2L; }

    public static int DM_PROMPT() { return (int)4L; }

    public static int DM_MODIFY() { return (int)8L; }

    public static int DC_FIELDS() { return (int)1L; }

    public static int DC_PAPERS() { return (int)2L; }

    public static int DC_PAPERSIZE() { return (int)3L; }

    public static int DC_MINEXTENT() { return (int)4L; }

    public static int DC_MAXEXTENT() { return (int)5L; }

    public static int DC_BINS() { return (int)6L; }

    public static int DC_DUPLEX() { return (int)7L; }

    public static int DC_SIZE() { return (int)8L; }

    public static int DC_EXTRA() { return (int)9L; }

    public static int DC_VERSION() { return (int)10L; }

    public static int DC_DRIVER() { return (int)11L; }

    public static int DC_BINNAMES() { return (int)12L; }

    public static int DC_ENUMRESOLUTIONS() { return (int)13L; }

    public static int DC_FILEDEPENDENCIES() { return (int)14L; }

    public static int DC_TRUETYPE() { return (int)15L; }

    public static int DC_PAPERNAMES() { return (int)16L; }

    public static int DC_ORIENTATION() { return (int)17L; }

    public static int DC_COPIES() { return (int)18L; }

    public static int FIND_FIRST_EX_CASE_SENSITIVE() { return (int)1L; }

    public static int FIND_FIRST_EX_LARGE_FETCH() { return (int)2L; }

    public static int FIND_FIRST_EX_ON_DISK_ENTRIES_ONLY() { return (int)4L; }

    public static int LOCKFILE_FAIL_IMMEDIATELY() { return (int)1L; }

    public static int LOCKFILE_EXCLUSIVE_LOCK() { return (int)2L; }

    public static int PROCESS_HEAP_REGION() { return (int)1L; }

    public static int PROCESS_HEAP_UNCOMMITTED_RANGE() { return (int)2L; }

    public static int PROCESS_HEAP_ENTRY_BUSY() { return (int)4L; }

    public static int PROCESS_HEAP_SEG_ALLOC() { return (int)8L; }

    public static int PROCESS_HEAP_ENTRY_MOVEABLE() { return (int)16L; }

    public static int PROCESS_HEAP_ENTRY_DDESHARE() { return (int)32L; }

    public static int EXCEPTION_DEBUG_EVENT() { return (int)1L; }

    public static int CREATE_THREAD_DEBUG_EVENT() { return (int)2L; }

    public static int CREATE_PROCESS_DEBUG_EVENT() { return (int)3L; }

    public static int EXIT_THREAD_DEBUG_EVENT() { return (int)4L; }

    public static int EXIT_PROCESS_DEBUG_EVENT() { return (int)5L; }

    public static int LOAD_DLL_DEBUG_EVENT() { return (int)6L; }

    public static int UNLOAD_DLL_DEBUG_EVENT() { return (int)7L; }

    public static int OUTPUT_DEBUG_STRING_EVENT() { return (int)8L; }

    public static int RIP_EVENT() { return (int)9L; }

    public static int LMEM_FIXED() { return (int)0L; }

    public static int LMEM_MOVEABLE() { return (int)2L; }

    public static int LMEM_NOCOMPACT() { return (int)16L; }

    public static int LMEM_NODISCARD() { return (int)32L; }

    public static int LMEM_ZEROINIT() { return (int)64L; }

    public static int LMEM_MODIFY() { return (int)128L; }

    public static int LMEM_DISCARDABLE() { return (int)3840L; }

    public static int LMEM_VALID_FLAGS() { return (int)3954L; }

    public static int LMEM_INVALID_HANDLE() { return (int)32768L; }

    public static int LMEM_DISCARDED() { return (int)16384L; }

    public static int LMEM_LOCKCOUNT() { return (int)255L; }

    public static int CREATE_NEW() { return (int)1L; }

    public static int CREATE_ALWAYS() { return (int)2L; }

    public static int OPEN_EXISTING() { return (int)3L; }

    public static int OPEN_ALWAYS() { return (int)4L; }

    public static int TRUNCATE_EXISTING() { return (int)5L; }

    public static int CREATE_MUTEX_INITIAL_OWNER() { return (int)1L; }

    public static int CREATE_EVENT_MANUAL_RESET() { return (int)1L; }

    public static int CREATE_EVENT_INITIAL_SET() { return (int)2L; }

    public static int CREATE_WAITABLE_TIMER_MANUAL_RESET() { return (int)1L; }

    public static int CREATE_WAITABLE_TIMER_HIGH_RESOLUTION() { return (int)2L; }

    public static int SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY() { return (int)1L; }

    public static int SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY() { return (int)2L; }

    public static int SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE() { return (int)4L; }

    public static int PROC_THREAD_ATTRIBUTE_REPLACE_VALUE() { return (int)1L; }

    public static int THREAD_POWER_THROTTLING_CURRENT_VERSION() { return (int)1L; }

    public static int THREAD_POWER_THROTTLING_EXECUTION_SPEED() { return (int)1L; }

    public static int PME_CURRENT_VERSION() { return (int)1L; }

    public static int PME_FAILFAST_ON_COMMIT_FAIL_DISABLE() { return (int)0L; }

    public static int PME_FAILFAST_ON_COMMIT_FAIL_ENABLE() { return (int)1L; }

    public static int PROCESS_POWER_THROTTLING_CURRENT_VERSION() { return (int)1L; }

    public static int PROCESS_POWER_THROTTLING_EXECUTION_SPEED() { return (int)1L; }

    public static int PROCESS_LEAP_SECOND_INFO_FLAG_ENABLE_SIXTY_SECOND() { return (int)1L; }

    public static int USER_CET_ENVIRONMENT_WIN32_PROCESS() { return (int)0L; }

    public static int USER_CET_ENVIRONMENT_SGX2_ENCLAVE() { return (int)2L; }

    public static int USER_CET_ENVIRONMENT_VBS_BASIC_ENCLAVE() { return (int)17L; }

    public static int SCEX2_ALT_NETBIOS_NAME() { return (int)1L; }

    public static int FILE_MAP_COPY() { return (int)1L; }

    public static int FILE_MAP_TARGETS_INVALID() { return (int)1073741824L; }

    public static int FILE_MAP_LARGE_PAGES() { return (int)536870912L; }

    public static int FILE_CACHE_MAX_HARD_ENABLE() { return (int)1L; }

    public static int FILE_CACHE_MAX_HARD_DISABLE() { return (int)2L; }

    public static int FILE_CACHE_MIN_HARD_ENABLE() { return (int)4L; }

    public static int FILE_CACHE_MIN_HARD_DISABLE() { return (int)8L; }

    public static int MEHC_PATROL_SCRUBBER_PRESENT() { return (int)1L; }

    public static int SUPPORT_LANG_NUMBER() { return (int)32L; }

    public static int CURRENT_IMPORT_REDIRECTION_VERSION() { return (int)1L; }

    public static int DONT_RESOLVE_DLL_REFERENCES() { return (int)1L; }

    public static int LOAD_LIBRARY_AS_DATAFILE() { return (int)2L; }

    public static int LOAD_WITH_ALTERED_SEARCH_PATH() { return (int)8L; }

    public static int LOAD_IGNORE_CODE_AUTHZ_LEVEL() { return (int)16L; }

    public static int LOAD_LIBRARY_AS_IMAGE_RESOURCE() { return (int)32L; }

    public static int LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE() { return (int)64L; }

    public static int LOAD_LIBRARY_REQUIRE_SIGNED_TARGET() { return (int)128L; }

    public static int LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR() { return (int)256L; }

    public static int LOAD_LIBRARY_SEARCH_APPLICATION_DIR() { return (int)512L; }

    public static int LOAD_LIBRARY_SEARCH_USER_DIRS() { return (int)1024L; }

    public static int LOAD_LIBRARY_SEARCH_SYSTEM32() { return (int)2048L; }

    public static int LOAD_LIBRARY_SEARCH_DEFAULT_DIRS() { return (int)4096L; }

    public static int LOAD_LIBRARY_SAFE_CURRENT_DIRS() { return (int)8192L; }

    public static int LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER() { return (int)16384L; }

    public static int LOAD_LIBRARY_OS_INTEGRITY_CONTINUITY() { return (int)32768L; }

    public static int PRIVATE_NAMESPACE_FLAG_DESTROY() { return (int)1L; }

    public static int FILE_BEGIN() { return (int)0L; }

    public static int FILE_CURRENT() { return (int)1L; }

    public static int FILE_END() { return (int)2L; }

    public static int FILE_FLAG_OVERLAPPED() { return (int)1073741824L; }

    public static int FILE_FLAG_NO_BUFFERING() { return (int)536870912L; }

    public static int FILE_FLAG_RANDOM_ACCESS() { return (int)268435456L; }

    public static int FILE_FLAG_SEQUENTIAL_SCAN() { return (int)134217728L; }

    public static int FILE_FLAG_DELETE_ON_CLOSE() { return (int)67108864L; }

    public static int FILE_FLAG_BACKUP_SEMANTICS() { return (int)33554432L; }

    public static int FILE_FLAG_POSIX_SEMANTICS() { return (int)16777216L; }

    public static int FILE_FLAG_SESSION_AWARE() { return (int)8388608L; }

    public static int FILE_FLAG_OPEN_REPARSE_POINT() { return (int)2097152L; }

    public static int FILE_FLAG_OPEN_NO_RECALL() { return (int)1048576L; }

    public static int FILE_FLAG_FIRST_PIPE_INSTANCE() { return (int)524288L; }

    public static int FILE_FLAG_OPEN_REQUIRING_OPLOCK() { return (int)262144L; }

    public static int PROGRESS_CONTINUE() { return (int)0L; }

    public static int PROGRESS_CANCEL() { return (int)1L; }

    public static int PROGRESS_STOP() { return (int)2L; }

    public static int PROGRESS_QUIET() { return (int)3L; }

    public static int CALLBACK_CHUNK_FINISHED() { return (int)0L; }

    public static int CALLBACK_STREAM_SWITCH() { return (int)1L; }

    public static int COPY_FILE_FAIL_IF_EXISTS() { return (int)1L; }

    public static int COPY_FILE_RESTARTABLE() { return (int)2L; }

    public static int COPY_FILE_OPEN_SOURCE_FOR_WRITE() { return (int)4L; }

    public static int COPY_FILE_ALLOW_DECRYPTED_DESTINATION() { return (int)8L; }

    public static int COPY_FILE_COPY_SYMLINK() { return (int)2048L; }

    public static int COPY_FILE_NO_BUFFERING() { return (int)4096L; }

    public static int COPY_FILE_REQUEST_SECURITY_PRIVILEGES() { return (int)8192L; }

    public static int COPY_FILE_RESUME_FROM_PAUSE() { return (int)16384L; }

    public static int COPY_FILE_NO_OFFLOAD() { return (int)262144L; }

    public static int COPY_FILE_IGNORE_EDP_BLOCK() { return (int)4194304L; }

    public static int COPY_FILE_IGNORE_SOURCE_ENCRYPTION() { return (int)8388608L; }

    public static int COPY_FILE_DONT_REQUEST_DEST_WRITE_DAC() { return (int)33554432L; }

    public static int COPY_FILE_REQUEST_COMPRESSED_TRAFFIC() { return (int)268435456L; }

    public static int COPY_FILE_OPEN_AND_COPY_REPARSE_POINT() { return (int)2097152L; }

    public static int COPY_FILE_DIRECTORY() { return (int)128L; }

    public static int COPY_FILE_SKIP_ALTERNATE_STREAMS() { return (int)32768L; }

    public static int COPY_FILE_DISABLE_PRE_ALLOCATION() { return (int)67108864L; }

    public static int COPY_FILE_ENABLE_LOW_FREE_SPACE_MODE() { return (int)134217728L; }

    public static int REPLACEFILE_WRITE_THROUGH() { return (int)1L; }

    public static int REPLACEFILE_IGNORE_MERGE_ERRORS() { return (int)2L; }

    public static int REPLACEFILE_IGNORE_ACL_ERRORS() { return (int)4L; }

    public static int PIPE_ACCESS_INBOUND() { return (int)1L; }

    public static int PIPE_ACCESS_OUTBOUND() { return (int)2L; }

    public static int PIPE_ACCESS_DUPLEX() { return (int)3L; }

    public static int PIPE_CLIENT_END() { return (int)0L; }

    public static int PIPE_SERVER_END() { return (int)1L; }

    public static int PIPE_WAIT() { return (int)0L; }

    public static int PIPE_NOWAIT() { return (int)1L; }

    public static int PIPE_READMODE_BYTE() { return (int)0L; }

    public static int PIPE_READMODE_MESSAGE() { return (int)2L; }

    public static int PIPE_TYPE_BYTE() { return (int)0L; }

    public static int PIPE_TYPE_MESSAGE() { return (int)4L; }

    public static int PIPE_ACCEPT_REMOTE_CLIENTS() { return (int)0L; }

    public static int PIPE_REJECT_REMOTE_CLIENTS() { return (int)8L; }

    public static int PIPE_UNLIMITED_INSTANCES() { return (int)255L; }

    public static int SECURITY_CONTEXT_TRACKING() { return (int)262144L; }

    public static int SECURITY_EFFECTIVE_ONLY() { return (int)524288L; }

    public static int SECURITY_SQOS_PRESENT() { return (int)1048576L; }

    public static int SECURITY_VALID_SQOS_FLAGS() { return (int)2031616L; }

    public static int FAIL_FAST_GENERATE_EXCEPTION_ADDRESS() { return (int)1L; }

    public static int FAIL_FAST_NO_HARD_ERROR_DLG() { return (int)2L; }

    public static int DTR_CONTROL_DISABLE() { return (int)0L; }

    public static int DTR_CONTROL_ENABLE() { return (int)1L; }

    public static int DTR_CONTROL_HANDSHAKE() { return (int)2L; }

    public static int RTS_CONTROL_DISABLE() { return (int)0L; }

    public static int RTS_CONTROL_ENABLE() { return (int)1L; }

    public static int RTS_CONTROL_HANDSHAKE() { return (int)2L; }

    public static int RTS_CONTROL_TOGGLE() { return (int)3L; }

    public static int GMEM_FIXED() { return (int)0L; }

    public static int GMEM_MOVEABLE() { return (int)2L; }

    public static int GMEM_NOCOMPACT() { return (int)16L; }

    public static int GMEM_NODISCARD() { return (int)32L; }

    public static int GMEM_ZEROINIT() { return (int)64L; }

    public static int GMEM_MODIFY() { return (int)128L; }

    public static int GMEM_DISCARDABLE() { return (int)256L; }

    public static int GMEM_NOT_BANKED() { return (int)4096L; }

    public static int GMEM_SHARE() { return (int)8192L; }

    public static int GMEM_DDESHARE() { return (int)8192L; }

    public static int GMEM_NOTIFY() { return (int)16384L; }

    public static int GMEM_VALID_FLAGS() { return (int)32626L; }

    public static int GMEM_INVALID_HANDLE() { return (int)32768L; }

    public static int GMEM_DISCARDED() { return (int)16384L; }

    public static int GMEM_LOCKCOUNT() { return (int)255L; }

    public static int DEBUG_PROCESS() { return (int)1L; }

    public static int DEBUG_ONLY_THIS_PROCESS() { return (int)2L; }

    public static int CREATE_SUSPENDED() { return (int)4L; }

    public static int DETACHED_PROCESS() { return (int)8L; }

    public static int CREATE_NEW_CONSOLE() { return (int)16L; }

    public static int NORMAL_PRIORITY_CLASS() { return (int)32L; }

    public static int IDLE_PRIORITY_CLASS() { return (int)64L; }

    public static int HIGH_PRIORITY_CLASS() { return (int)128L; }

    public static int REALTIME_PRIORITY_CLASS() { return (int)256L; }

    public static int CREATE_NEW_PROCESS_GROUP() { return (int)512L; }

    public static int CREATE_UNICODE_ENVIRONMENT() { return (int)1024L; }

    public static int CREATE_SEPARATE_WOW_VDM() { return (int)2048L; }

    public static int CREATE_SHARED_WOW_VDM() { return (int)4096L; }

    public static int CREATE_FORCEDOS() { return (int)8192L; }

    public static int BELOW_NORMAL_PRIORITY_CLASS() { return (int)16384L; }

    public static int ABOVE_NORMAL_PRIORITY_CLASS() { return (int)32768L; }

    public static int INHERIT_PARENT_AFFINITY() { return (int)65536L; }

    public static int INHERIT_CALLER_PRIORITY() { return (int)131072L; }

    public static int CREATE_PROTECTED_PROCESS() { return (int)262144L; }

    public static int EXTENDED_STARTUPINFO_PRESENT() { return (int)524288L; }

    public static int PROCESS_MODE_BACKGROUND_BEGIN() { return (int)1048576L; }

    public static int PROCESS_MODE_BACKGROUND_END() { return (int)2097152L; }

    public static int CREATE_SECURE_PROCESS() { return (int)4194304L; }

    public static int CREATE_BREAKAWAY_FROM_JOB() { return (int)16777216L; }

    public static int CREATE_PRESERVE_CODE_AUTHZ_LEVEL() { return (int)33554432L; }

    public static int CREATE_DEFAULT_ERROR_MODE() { return (int)67108864L; }

    public static int CREATE_NO_WINDOW() { return (int)134217728L; }

    public static int PROFILE_USER() { return (int)268435456L; }

    public static int PROFILE_KERNEL() { return (int)536870912L; }

    public static int PROFILE_SERVER() { return (int)1073741824L; }

    public static int STACK_SIZE_PARAM_IS_A_RESERVATION() { return (int)65536L; }

    public static int THREAD_PRIORITY_NORMAL() { return (int)0L; }

    public static int THREAD_MODE_BACKGROUND_BEGIN() { return (int)65536L; }

    public static int THREAD_MODE_BACKGROUND_END() { return (int)131072L; }

    public static int VOLUME_NAME_DOS() { return (int)0L; }

    public static int VOLUME_NAME_GUID() { return (int)1L; }

    public static int VOLUME_NAME_NT() { return (int)2L; }

    public static int VOLUME_NAME_NONE() { return (int)4L; }

    public static int FILE_NAME_NORMALIZED() { return (int)0L; }

    public static int FILE_NAME_OPENED() { return (int)8L; }

    public static int DRIVE_UNKNOWN() { return (int)0L; }

    public static int DRIVE_NO_ROOT_DIR() { return (int)1L; }

    public static int DRIVE_REMOVABLE() { return (int)2L; }

    public static int DRIVE_FIXED() { return (int)3L; }

    public static int DRIVE_REMOTE() { return (int)4L; }

    public static int DRIVE_CDROM() { return (int)5L; }

    public static int DRIVE_RAMDISK() { return (int)6L; }

    public static int FILE_TYPE_UNKNOWN() { return (int)0L; }

    public static int FILE_TYPE_DISK() { return (int)1L; }

    public static int FILE_TYPE_CHAR() { return (int)2L; }

    public static int FILE_TYPE_PIPE() { return (int)3L; }

    public static int FILE_TYPE_REMOTE() { return (int)32768L; }

    public static int NOPARITY() { return (int)0L; }

    public static int ODDPARITY() { return (int)1L; }

    public static int EVENPARITY() { return (int)2L; }

    public static int MARKPARITY() { return (int)3L; }

    public static int SPACEPARITY() { return (int)4L; }

    public static int ONESTOPBIT() { return (int)0L; }

    public static int ONE5STOPBITS() { return (int)1L; }

    public static int TWOSTOPBITS() { return (int)2L; }

    public static int IGNORE() { return (int)0L; }

    public static int CBR_110() { return (int)110L; }

    public static int CBR_300() { return (int)300L; }

    public static int CBR_600() { return (int)600L; }

    public static int CBR_1200() { return (int)1200L; }

    public static int CBR_2400() { return (int)2400L; }

    public static int CBR_4800() { return (int)4800L; }

    public static int CBR_9600() { return (int)9600L; }

    public static int CBR_14400() { return (int)14400L; }

    public static int CBR_19200() { return (int)19200L; }

    public static int CBR_38400() { return (int)38400L; }

    public static int CBR_56000() { return (int)56000L; }

    public static int CBR_57600() { return (int)57600L; }

    public static int CBR_115200() { return (int)115200L; }

    public static int CBR_128000() { return (int)128000L; }

    public static int CBR_256000() { return (int)256000L; }

    public static int CE_RXOVER() { return (int)1L; }

    public static int CE_OVERRUN() { return (int)2L; }

    public static int CE_RXPARITY() { return (int)4L; }

    public static int CE_FRAME() { return (int)8L; }

    public static int CE_BREAK() { return (int)16L; }

    public static int CE_TXFULL() { return (int)256L; }

    public static int CE_PTO() { return (int)512L; }

    public static int CE_IOE() { return (int)1024L; }

    public static int CE_DNS() { return (int)2048L; }

    public static int CE_OOP() { return (int)4096L; }

    public static int CE_MODE() { return (int)32768L; }

    public static int EV_RXCHAR() { return (int)1L; }

    public static int EV_RXFLAG() { return (int)2L; }

    public static int EV_TXEMPTY() { return (int)4L; }

    public static int EV_CTS() { return (int)8L; }

    public static int EV_DSR() { return (int)16L; }

    public static int EV_RLSD() { return (int)32L; }

    public static int EV_BREAK() { return (int)64L; }

    public static int EV_ERR() { return (int)128L; }

    public static int EV_RING() { return (int)256L; }

    public static int EV_PERR() { return (int)512L; }

    public static int EV_RX80FULL() { return (int)1024L; }

    public static int EV_EVENT1() { return (int)2048L; }

    public static int EV_EVENT2() { return (int)4096L; }

    public static int SETXOFF() { return (int)1L; }

    public static int SETXON() { return (int)2L; }

    public static int SETRTS() { return (int)3L; }

    public static int CLRRTS() { return (int)4L; }

    public static int SETDTR() { return (int)5L; }

    public static int CLRDTR() { return (int)6L; }

    public static int RESETDEV() { return (int)7L; }

    public static int SETBREAK() { return (int)8L; }

    public static int CLRBREAK() { return (int)9L; }

    public static int PURGE_TXABORT() { return (int)1L; }

    public static int PURGE_RXABORT() { return (int)2L; }

    public static int PURGE_TXCLEAR() { return (int)4L; }

    public static int PURGE_RXCLEAR() { return (int)8L; }

    public static int LPTx() { return (int)128L; }

    public static int S_QUEUEEMPTY() { return (int)0L; }

    public static int S_THRESHOLD() { return (int)1L; }

    public static int S_ALLTHRESHOLD() { return (int)2L; }

    public static int S_NORMAL() { return (int)0L; }

    public static int S_LEGATO() { return (int)1L; }

    public static int S_STACCATO() { return (int)2L; }

    public static int S_PERIOD512() { return (int)0L; }

    public static int S_PERIOD1024() { return (int)1L; }

    public static int S_PERIOD2048() { return (int)2L; }

    public static int S_PERIODVOICE() { return (int)3L; }

    public static int S_WHITE512() { return (int)4L; }

    public static int S_WHITE1024() { return (int)5L; }

    public static int S_WHITE2048() { return (int)6L; }

    public static int S_WHITEVOICE() { return (int)7L; }

    public static int NMPWAIT_NOWAIT() { return (int)1L; }

    public static int NMPWAIT_USE_DEFAULT_WAIT() { return (int)0L; }

    public static int OF_READ() { return (int)0L; }

    public static int OF_WRITE() { return (int)1L; }

    public static int OF_READWRITE() { return (int)2L; }

    public static int OF_SHARE_COMPAT() { return (int)0L; }

    public static int OF_SHARE_EXCLUSIVE() { return (int)16L; }

    public static int OF_SHARE_DENY_WRITE() { return (int)32L; }

    public static int OF_SHARE_DENY_READ() { return (int)48L; }

    public static int OF_SHARE_DENY_NONE() { return (int)64L; }

    public static int OF_PARSE() { return (int)256L; }

    public static int OF_DELETE() { return (int)512L; }

    public static int OF_VERIFY() { return (int)1024L; }

    public static int OF_CANCEL() { return (int)2048L; }

    public static int OF_CREATE() { return (int)4096L; }

    public static int OF_PROMPT() { return (int)8192L; }

    public static int OF_EXIST() { return (int)16384L; }

    public static int OF_REOPEN() { return (int)32768L; }

    public static int OFS_MAXPATHNAME() { return (int)128L; }

    public static int MAXINTATOM() { return (int)49152L; }

    public static int SCS_32BIT_BINARY() { return (int)0L; }

    public static int SCS_DOS_BINARY() { return (int)1L; }

    public static int SCS_WOW_BINARY() { return (int)2L; }

    public static int SCS_PIF_BINARY() { return (int)3L; }

    public static int SCS_POSIX_BINARY() { return (int)4L; }

    public static int SCS_OS216_BINARY() { return (int)5L; }

    public static int SCS_64BIT_BINARY() { return (int)6L; }

    public static int FIBER_FLAG_FLOAT_SWITCH() { return (int)1L; }

    public static int PROCESS_DEP_ENABLE() { return (int)1L; }

    public static int PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION() { return (int)2L; }

    public static int FILE_SKIP_COMPLETION_PORT_ON_SUCCESS() { return (int)1L; }

    public static int FILE_SKIP_SET_EVENT_ON_HANDLE() { return (int)2L; }

    public static int SEM_FAILCRITICALERRORS() { return (int)1L; }

    public static int SEM_NOGPFAULTERRORBOX() { return (int)2L; }

    public static int SEM_NOALIGNMENTFAULTEXCEPT() { return (int)4L; }

    public static int SEM_NOOPENFILEERRORBOX() { return (int)32768L; }

    public static int HANDLE_FLAG_INHERIT() { return (int)1L; }

    public static int HANDLE_FLAG_PROTECT_FROM_CLOSE() { return (int)2L; }

    public static int HINSTANCE_ERROR() { return (int)32L; }

    public static int GET_TAPE_MEDIA_INFORMATION() { return (int)0L; }

    public static int GET_TAPE_DRIVE_INFORMATION() { return (int)1L; }

    public static int SET_TAPE_MEDIA_INFORMATION() { return (int)0L; }

    public static int SET_TAPE_DRIVE_INFORMATION() { return (int)1L; }

    public static int FORMAT_MESSAGE_ALLOCATE_BUFFER() { return (int)256L; }

    public static int FORMAT_MESSAGE_IGNORE_INSERTS() { return (int)512L; }

    public static int FORMAT_MESSAGE_FROM_STRING() { return (int)1024L; }

    public static int FORMAT_MESSAGE_FROM_HMODULE() { return (int)2048L; }

    public static int FORMAT_MESSAGE_FROM_SYSTEM() { return (int)4096L; }

    public static int FORMAT_MESSAGE_ARGUMENT_ARRAY() { return (int)8192L; }

    public static int FORMAT_MESSAGE_MAX_WIDTH_MASK() { return (int)255L; }

    public static int FILE_ENCRYPTABLE() { return (int)0L; }

    public static int FILE_IS_ENCRYPTED() { return (int)1L; }

    public static int FILE_SYSTEM_ATTR() { return (int)2L; }

    public static int FILE_ROOT_DIR() { return (int)3L; }

    public static int FILE_SYSTEM_DIR() { return (int)4L; }

    public static int FILE_UNKNOWN() { return (int)5L; }

    public static int FILE_SYSTEM_NOT_SUPPORT() { return (int)6L; }

    public static int FILE_USER_DISALLOWED() { return (int)7L; }

    public static int FILE_READ_ONLY() { return (int)8L; }

    public static int FILE_DIR_DISALLOWED() { return (int)9L; }

    public static int BACKUP_INVALID() { return (int)0L; }

    public static int BACKUP_DATA() { return (int)1L; }

    public static int BACKUP_EA_DATA() { return (int)2L; }

    public static int BACKUP_SECURITY_DATA() { return (int)3L; }

    public static int BACKUP_ALTERNATE_DATA() { return (int)4L; }

    public static int BACKUP_LINK() { return (int)5L; }

    public static int BACKUP_PROPERTY_DATA() { return (int)6L; }

    public static int BACKUP_OBJECT_ID() { return (int)7L; }

    public static int BACKUP_REPARSE_DATA() { return (int)8L; }

    public static int BACKUP_SPARSE_BLOCK() { return (int)9L; }

    public static int BACKUP_TXFS_DATA() { return (int)10L; }

    public static int BACKUP_GHOSTED_FILE_EXTENTS() { return (int)11L; }

    public static int STREAM_NORMAL_ATTRIBUTE() { return (int)0L; }

    public static int STREAM_MODIFIED_WHEN_READ() { return (int)1L; }

    public static int STREAM_CONTAINS_SECURITY() { return (int)2L; }

    public static int STREAM_CONTAINS_PROPERTIES() { return (int)4L; }

    public static int STREAM_SPARSE_ATTRIBUTE() { return (int)8L; }

    public static int STREAM_CONTAINS_GHOSTED_FILE_EXTENTS() { return (int)16L; }

    public static int STARTF_USESHOWWINDOW() { return (int)1L; }

    public static int STARTF_USESIZE() { return (int)2L; }

    public static int STARTF_USEPOSITION() { return (int)4L; }

    public static int STARTF_USECOUNTCHARS() { return (int)8L; }

    public static int STARTF_USEFILLATTRIBUTE() { return (int)16L; }

    public static int STARTF_RUNFULLSCREEN() { return (int)32L; }

    public static int STARTF_FORCEONFEEDBACK() { return (int)64L; }

    public static int STARTF_FORCEOFFFEEDBACK() { return (int)128L; }

    public static int STARTF_USESTDHANDLES() { return (int)256L; }

    public static int STARTF_USEHOTKEY() { return (int)512L; }

    public static int STARTF_TITLEISLINKNAME() { return (int)2048L; }

    public static int STARTF_TITLEISAPPID() { return (int)4096L; }

    public static int STARTF_PREVENTPINNING() { return (int)8192L; }

    public static int STARTF_UNTRUSTEDSOURCE() { return (int)32768L; }

    public static int SHUTDOWN_NORETRY() { return (int)1L; }

    public static int PROTECTION_LEVEL_WINTCB_LIGHT() { return (int)0L; }

    public static int PROTECTION_LEVEL_WINDOWS() { return (int)1L; }

    public static int PROTECTION_LEVEL_WINDOWS_LIGHT() { return (int)2L; }

    public static int PROTECTION_LEVEL_ANTIMALWARE_LIGHT() { return (int)3L; }

    public static int PROTECTION_LEVEL_LSA_LIGHT() { return (int)4L; }

    public static int PROTECTION_LEVEL_WINTCB() { return (int)5L; }

    public static int PROTECTION_LEVEL_CODEGEN_LIGHT() { return (int)6L; }

    public static int PROTECTION_LEVEL_AUTHENTICODE() { return (int)7L; }

    public static int PROTECTION_LEVEL_PPL_APP() { return (int)8L; }

    public static int PROCESS_NAME_NATIVE() { return (int)1L; }

    public static int PROC_THREAD_ATTRIBUTE_NUMBER() { return (int)65535L; }

    public static int PROC_THREAD_ATTRIBUTE_THREAD() { return (int)65536L; }

    public static int PROC_THREAD_ATTRIBUTE_INPUT() { return (int)131072L; }

    public static int PROC_THREAD_ATTRIBUTE_ADDITIVE() { return (int)262144L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_DEP_ENABLE() { return (int)1L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_DEP_ATL_THUNK_ENABLE() { return (int)2L; }

    public static int PROCESS_CREATION_MITIGATION_POLICY_SEHOP_ENABLE() { return (int)4L; }

    public static int PROCESS_CREATION_CHILD_PROCESS_RESTRICTED() { return (int)1L; }

    public static int PROCESS_CREATION_CHILD_PROCESS_OVERRIDE() { return (int)2L; }

    public static int PROCESS_CREATION_CHILD_PROCESS_RESTRICTED_UNLESS_SECURE() { return (int)4L; }

    public static int PROCESS_CREATION_ALL_APPLICATION_PACKAGES_OPT_OUT() { return (int)1L; }

    public static int PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_ENABLE_PROCESS_TREE() { return (int)1L; }

    public static int PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_DISABLE_PROCESS_TREE() { return (int)2L; }

    public static int PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_OVERRIDE() { return (int)4L; }

    public static int ATOM_FLAG_GLOBAL() { return (int)2L; }

    public static int BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE() { return (int)1L; }

    public static int BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE() { return (int)65536L; }

    public static int BASE_SEARCH_PATH_PERMANENT() { return (int)32768L; }

    public static int DDD_RAW_TARGET_PATH() { return (int)1L; }

    public static int DDD_REMOVE_DEFINITION() { return (int)2L; }

    public static int DDD_EXACT_MATCH_ON_REMOVE() { return (int)4L; }

    public static int DDD_NO_BROADCAST_SYSTEM() { return (int)8L; }

    public static int DDD_LUID_BROADCAST_DRIVE() { return (int)16L; }

    public static int MOVEFILE_REPLACE_EXISTING() { return (int)1L; }

    public static int MOVEFILE_COPY_ALLOWED() { return (int)2L; }

    public static int MOVEFILE_DELAY_UNTIL_REBOOT() { return (int)4L; }

    public static int MOVEFILE_WRITE_THROUGH() { return (int)8L; }

    public static int MOVEFILE_CREATE_HARDLINK() { return (int)16L; }

    public static int MOVEFILE_FAIL_IF_NOT_TRACKABLE() { return (int)32L; }

    public static int EVENTLOG_FULL_INFO() { return (int)0L; }

    public static int OPERATION_API_VERSION() { return (int)1L; }

    public static int OPERATION_START_TRACE_CURRENT_THREAD() { return (int)1L; }

    public static int OPERATION_END_DISCARD() { return (int)1L; }

    public static int MAX_COMPUTERNAME_LENGTH() { return (int)15L; }

    public static int LOGON32_LOGON_INTERACTIVE() { return (int)2L; }

    public static int LOGON32_LOGON_NETWORK() { return (int)3L; }

    public static int LOGON32_LOGON_BATCH() { return (int)4L; }

    public static int LOGON32_LOGON_SERVICE() { return (int)5L; }

    public static int LOGON32_LOGON_UNLOCK() { return (int)7L; }

    public static int LOGON32_LOGON_NETWORK_CLEARTEXT() { return (int)8L; }

    public static int LOGON32_LOGON_NEW_CREDENTIALS() { return (int)9L; }

    public static int LOGON32_PROVIDER_DEFAULT() { return (int)0L; }

    public static int LOGON32_PROVIDER_WINNT35() { return (int)1L; }

    public static int LOGON32_PROVIDER_WINNT40() { return (int)2L; }

    public static int LOGON32_PROVIDER_WINNT50() { return (int)3L; }

    public static int LOGON32_PROVIDER_VIRTUAL() { return (int)4L; }

    public static int LOGON_WITH_PROFILE() { return (int)1L; }

    public static int LOGON_NETCREDENTIALS_ONLY() { return (int)2L; }

    public static int HW_PROFILE_GUIDLEN() { return (int)39L; }

    public static int MAX_PROFILE_LEN() { return (int)80L; }

    public static int FACILITY_NULL() { return (int)0L; }

    public static int FACILITY_RPC() { return (int)1L; }

    public static int FACILITY_DISPATCH() { return (int)2L; }

    public static int FACILITY_STORAGE() { return (int)3L; }

    public static int FACILITY_ITF() { return (int)4L; }

    public static int FACILITY_WIN32() { return (int)7L; }

    public static int FACILITY_WINDOWS() { return (int)8L; }

    public static int FACILITY_SSPI() { return (int)9L; }

    public static int FACILITY_SECURITY() { return (int)9L; }

    public static int FACILITY_CONTROL() { return (int)10L; }

    public static int FACILITY_CERT() { return (int)11L; }

    public static int FACILITY_INTERNET() { return (int)12L; }

    public static int FACILITY_MEDIASERVER() { return (int)13L; }

    public static int FACILITY_MSMQ() { return (int)14L; }

    public static int FACILITY_SETUPAPI() { return (int)15L; }

    public static int FACILITY_SCARD() { return (int)16L; }

    public static int FACILITY_COMPLUS() { return (int)17L; }

    public static int FACILITY_AAF() { return (int)18L; }

    public static int FACILITY_URT() { return (int)19L; }

    public static int FACILITY_ACS() { return (int)20L; }

    public static int FACILITY_DPLAY() { return (int)21L; }

    public static int FACILITY_UMI() { return (int)22L; }

    public static int FACILITY_SXS() { return (int)23L; }

    public static int FACILITY_WINDOWS_CE() { return (int)24L; }

    public static int FACILITY_HTTP() { return (int)25L; }

    public static int FACILITY_USERMODE_COMMONLOG() { return (int)26L; }

    public static int FACILITY_WER() { return (int)27L; }

    public static int FACILITY_USERMODE_FILTER_MANAGER() { return (int)31L; }

    public static int FACILITY_BACKGROUNDCOPY() { return (int)32L; }

    public static int FACILITY_CONFIGURATION() { return (int)33L; }

    public static int FACILITY_WIA() { return (int)33L; }

    public static int FACILITY_STATE_MANAGEMENT() { return (int)34L; }

    public static int FACILITY_METADIRECTORY() { return (int)35L; }

    public static int FACILITY_WINDOWSUPDATE() { return (int)36L; }

    public static int FACILITY_DIRECTORYSERVICE() { return (int)37L; }

    public static int FACILITY_GRAPHICS() { return (int)38L; }

    public static int FACILITY_SHELL() { return (int)39L; }

    public static int FACILITY_NAP() { return (int)39L; }

    public static int FACILITY_TPM_SERVICES() { return (int)40L; }

    public static int FACILITY_TPM_SOFTWARE() { return (int)41L; }

    public static int FACILITY_UI() { return (int)42L; }

    public static int FACILITY_XAML() { return (int)43L; }

    public static int FACILITY_ACTION_QUEUE() { return (int)44L; }

    public static int FACILITY_PLA() { return (int)48L; }

    public static int FACILITY_WINDOWS_SETUP() { return (int)48L; }

    public static int FACILITY_FVE() { return (int)49L; }

    public static int FACILITY_FWP() { return (int)50L; }

    public static int FACILITY_WINRM() { return (int)51L; }

    public static int FACILITY_NDIS() { return (int)52L; }

    public static int FACILITY_USERMODE_HYPERVISOR() { return (int)53L; }

    public static int FACILITY_CMI() { return (int)54L; }

    public static int FACILITY_USERMODE_VIRTUALIZATION() { return (int)55L; }

    public static int FACILITY_USERMODE_VOLMGR() { return (int)56L; }

    public static int FACILITY_BCD() { return (int)57L; }

    public static int FACILITY_USERMODE_VHD() { return (int)58L; }

    public static int FACILITY_USERMODE_HNS() { return (int)59L; }

    public static int FACILITY_SDIAG() { return (int)60L; }

    public static int FACILITY_WEBSERVICES() { return (int)61L; }

    public static int FACILITY_WINPE() { return (int)61L; }

    public static int FACILITY_WPN() { return (int)62L; }

    public static int FACILITY_WINDOWS_STORE() { return (int)63L; }

    public static int FACILITY_INPUT() { return (int)64L; }

    public static int FACILITY_QUIC() { return (int)65L; }

    public static int FACILITY_EAP() { return (int)66L; }

    public static int FACILITY_WINDOWS_DEFENDER() { return (int)80L; }

    public static int FACILITY_OPC() { return (int)81L; }

    public static int FACILITY_XPS() { return (int)82L; }

    public static int FACILITY_MBN() { return (int)84L; }

    public static int FACILITY_POWERSHELL() { return (int)84L; }

    public static int FACILITY_RAS() { return (int)83L; }

    public static int FACILITY_P2P_INT() { return (int)98L; }

    public static int FACILITY_P2P() { return (int)99L; }

    public static int FACILITY_DAF() { return (int)100L; }

    public static int FACILITY_BLUETOOTH_ATT() { return (int)101L; }

    public static int FACILITY_AUDIO() { return (int)102L; }

    public static int FACILITY_STATEREPOSITORY() { return (int)103L; }

    public static int FACILITY_VISUALCPP() { return (int)109L; }

    public static int FACILITY_SCRIPT() { return (int)112L; }

    public static int FACILITY_PARSE() { return (int)113L; }

    public static int FACILITY_BLB() { return (int)120L; }

    public static int FACILITY_BLB_CLI() { return (int)121L; }

    public static int FACILITY_WSBAPP() { return (int)122L; }

    public static int FACILITY_BLBUI() { return (int)128L; }

    public static int FACILITY_USN() { return (int)129L; }

    public static int FACILITY_USERMODE_VOLSNAP() { return (int)130L; }

    public static int FACILITY_TIERING() { return (int)131L; }

    public static int FACILITY_WSB_ONLINE() { return (int)133L; }

    public static int FACILITY_ONLINE_ID() { return (int)134L; }

    public static int FACILITY_DEVICE_UPDATE_AGENT() { return (int)135L; }

    public static int FACILITY_DRVSERVICING() { return (int)136L; }

    public static int FACILITY_DLS() { return (int)153L; }

    public static int FACILITY_DELIVERY_OPTIMIZATION() { return (int)208L; }

    public static int FACILITY_USERMODE_SPACES() { return (int)231L; }

    public static int FACILITY_USER_MODE_SECURITY_CORE() { return (int)232L; }

    public static int FACILITY_USERMODE_LICENSING() { return (int)234L; }

    public static int FACILITY_SOS() { return (int)160L; }

    public static int FACILITY_DEBUGGERS() { return (int)176L; }

    public static int FACILITY_SPP() { return (int)256L; }

    public static int FACILITY_RESTORE() { return (int)256L; }

    public static int FACILITY_DMSERVER() { return (int)256L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_SERVER() { return (int)257L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_IMAGING() { return (int)258L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT() { return (int)259L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_UTIL() { return (int)260L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_BINLSVC() { return (int)261L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_PXE() { return (int)263L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_TFTP() { return (int)264L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT() { return (int)272L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING() { return (int)278L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER() { return (int)289L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT() { return (int)290L; }

    public static int FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER() { return (int)293L; }

    public static int FACILITY_LINGUISTIC_SERVICES() { return (int)305L; }

    public static int FACILITY_AUDIOSTREAMING() { return (int)1094L; }

    public static int FACILITY_TTD() { return (int)1490L; }

    public static int FACILITY_ACCELERATOR() { return (int)1536L; }

    public static int FACILITY_WMAAECMA() { return (int)1996L; }

    public static int FACILITY_DIRECTMUSIC() { return (int)2168L; }

    public static int FACILITY_DIRECT3D10() { return (int)2169L; }

    public static int FACILITY_DXGI() { return (int)2170L; }

    public static int FACILITY_DXGI_DDI() { return (int)2171L; }

    public static int FACILITY_DIRECT3D11() { return (int)2172L; }

    public static int FACILITY_DIRECT3D11_DEBUG() { return (int)2173L; }

    public static int FACILITY_DIRECT3D12() { return (int)2174L; }

    public static int FACILITY_DIRECT3D12_DEBUG() { return (int)2175L; }

    public static int FACILITY_DXCORE() { return (int)2176L; }

    public static int FACILITY_LEAP() { return (int)2184L; }

    public static int FACILITY_AUDCLNT() { return (int)2185L; }

    public static int FACILITY_WINCODEC_DWRITE_DWM() { return (int)2200L; }

    public static int FACILITY_WINML() { return (int)2192L; }

    public static int FACILITY_DIRECT2D() { return (int)2201L; }

    public static int FACILITY_DEFRAG() { return (int)2304L; }

    public static int FACILITY_USERMODE_SDBUS() { return (int)2305L; }

    public static int FACILITY_JSCRIPT() { return (int)2306L; }

    public static int FACILITY_PIDGENX() { return (int)2561L; }

    public static int FACILITY_EAS() { return (int)85L; }

    public static int FACILITY_WEB() { return (int)885L; }

    public static int FACILITY_WEB_SOCKET() { return (int)886L; }

    public static int FACILITY_MOBILE() { return (int)1793L; }

    public static int FACILITY_SQLITE() { return (int)1967L; }

    public static int FACILITY_UTC() { return (int)1989L; }

    public static int FACILITY_WEP() { return (int)2049L; }

    public static int FACILITY_SYNCENGINE() { return (int)2050L; }

    public static int FACILITY_XBOX() { return (int)2339L; }

    public static int FACILITY_GAME() { return (int)2340L; }

    public static int FACILITY_PIX() { return (int)2748L; }

    public static int DNS_ERROR_RESPONSE_CODES_BASE() { return (int)9000L; }

    public static int DNS_ERROR_MASK() { return (int)9000L; }

    public static int DNS_ERROR_DNSSEC_BASE() { return (int)9100L; }

    public static int DNS_ERROR_PACKET_FMT_BASE() { return (int)9500L; }

    public static int DNS_ERROR_GENERAL_API_BASE() { return (int)9550L; }

    public static int DNS_ERROR_ZONE_BASE() { return (int)9600L; }

    public static int DNS_ERROR_DATAFILE_BASE() { return (int)9650L; }

    public static int DNS_ERROR_DATABASE_BASE() { return (int)9700L; }

    public static int DNS_ERROR_OPERATION_BASE() { return (int)9750L; }

    public static int DNS_ERROR_SECURE_BASE() { return (int)9800L; }

    public static int DNS_ERROR_SETUP_BASE() { return (int)9850L; }

    public static int DNS_ERROR_DP_BASE() { return (int)9900L; }

    public static int WSABASEERR() { return (int)10000L; }

    public static int SEVERITY_SUCCESS() { return (int)0L; }

    public static int SEVERITY_ERROR() { return (int)1L; }

    public static int FACILITY_NT_BIT() { return (int)268435456L; }

    public static int NOERROR() { return (int)0L; }

    public static int XACT_S_FIRST() { return (int)315392L; }

    public static int XACT_S_LAST() { return (int)315408L; }

    public static int NTE_OP_OK() { return (int)0L; }

    public static int TC_NORMAL() { return (int)0L; }

    public static int TC_HARDERR() { return (int)1L; }

    public static int TC_GP_TRAP() { return (int)2L; }

    public static int TC_SIGNAL() { return (int)3L; }

    public static int AC_LINE_OFFLINE() { return (int)0L; }

    public static int AC_LINE_ONLINE() { return (int)1L; }

    public static int AC_LINE_BACKUP_POWER() { return (int)2L; }

    public static int AC_LINE_UNKNOWN() { return (int)255L; }

    public static int BATTERY_FLAG_HIGH() { return (int)1L; }

    public static int BATTERY_FLAG_LOW() { return (int)2L; }

    public static int BATTERY_FLAG_CRITICAL() { return (int)4L; }

    public static int BATTERY_FLAG_CHARGING() { return (int)8L; }

    public static int BATTERY_FLAG_NO_BATTERY() { return (int)128L; }

    public static int BATTERY_FLAG_UNKNOWN() { return (int)255L; }

    public static int BATTERY_PERCENTAGE_UNKNOWN() { return (int)255L; }

    public static int SYSTEM_STATUS_FLAG_POWER_SAVING_ON() { return (int)1L; }

    public static int ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED() { return (int)1L; }

    public static int RESTART_MAX_CMD_LINE() { return (int)1024L; }

    public static int RESTART_NO_CRASH() { return (int)1L; }

    public static int RESTART_NO_HANG() { return (int)2L; }

    public static int RESTART_NO_PATCH() { return (int)4L; }

    public static int RESTART_NO_REBOOT() { return (int)8L; }

    public static int RECOVERY_DEFAULT_PING_INTERVAL() { return (int)5000L; }

    public static int FILE_RENAME_FLAG_REPLACE_IF_EXISTS() { return (int)1L; }

    public static int FILE_RENAME_FLAG_POSIX_SEMANTICS() { return (int)2L; }

    public static int FILE_RENAME_FLAG_SUPPRESS_PIN_STATE_INHERITANCE() { return (int)4L; }

    public static int FILE_DISPOSITION_FLAG_DO_NOT_DELETE() { return (int)0L; }

    public static int FILE_DISPOSITION_FLAG_DELETE() { return (int)1L; }

    public static int FILE_DISPOSITION_FLAG_POSIX_SEMANTICS() { return (int)2L; }

    public static int FILE_DISPOSITION_FLAG_FORCE_IMAGE_SECTION_CHECK() { return (int)4L; }

    public static int FILE_DISPOSITION_FLAG_ON_CLOSE() { return (int)8L; }

    public static int FILE_DISPOSITION_FLAG_IGNORE_READONLY_ATTRIBUTE() { return (int)16L; }

    public static int STORAGE_INFO_FLAGS_ALIGNED_DEVICE() { return (int)1L; }

    public static int STORAGE_INFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE() { return (int)2L; }

    public static int REMOTE_PROTOCOL_INFO_FLAG_LOOPBACK() { return (int)1L; }

    public static int REMOTE_PROTOCOL_INFO_FLAG_OFFLINE() { return (int)2L; }

    public static int REMOTE_PROTOCOL_INFO_FLAG_PERSISTENT_HANDLE() { return (int)4L; }

    public static int RPI_FLAG_SMB2_SHARECAP_TIMEWARP() { return (int)2L; }

    public static int RPI_FLAG_SMB2_SHARECAP_DFS() { return (int)8L; }

    public static int RPI_FLAG_SMB2_SHARECAP_CONTINUOUS_AVAILABILITY() { return (int)16L; }

    public static int RPI_FLAG_SMB2_SHARECAP_SCALEOUT() { return (int)32L; }

    public static int RPI_FLAG_SMB2_SHARECAP_CLUSTER() { return (int)64L; }

}

