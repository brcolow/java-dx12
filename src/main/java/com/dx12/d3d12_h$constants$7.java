// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class d3d12_h$constants$7 extends d3d12_h$constants$6 {
    d3d12_h$constants$7() {}
    static final MemoryLayout ID3D12LifetimeTrackerVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTrackerVtbl$Release$LAYOUT() { return ID3D12LifetimeTrackerVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12LifetimeTrackerVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12LifetimeTrackerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12LifetimeTrackerVtbl$Release$VH() { return ID3D12LifetimeTrackerVtbl$Release$VH_; }

    static final MemoryLayout ID3D12LifetimeTrackerVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTrackerVtbl$GetPrivateData$LAYOUT() { return ID3D12LifetimeTrackerVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12LifetimeTrackerVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12LifetimeTrackerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12LifetimeTrackerVtbl$GetPrivateData$VH() { return ID3D12LifetimeTrackerVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12LifetimeTrackerVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTrackerVtbl$SetPrivateData$LAYOUT() { return ID3D12LifetimeTrackerVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12LifetimeTrackerVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12LifetimeTrackerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12LifetimeTrackerVtbl$SetPrivateData$VH() { return ID3D12LifetimeTrackerVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12LifetimeTrackerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$VH() { return ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12LifetimeTrackerVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTrackerVtbl$SetName$LAYOUT() { return ID3D12LifetimeTrackerVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12LifetimeTrackerVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12LifetimeTrackerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12LifetimeTrackerVtbl$SetName$VH() { return ID3D12LifetimeTrackerVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12LifetimeTrackerVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTrackerVtbl$GetDevice$LAYOUT() { return ID3D12LifetimeTrackerVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12LifetimeTrackerVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12LifetimeTrackerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12LifetimeTrackerVtbl$GetDevice$VH() { return ID3D12LifetimeTrackerVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$LAYOUT() { return ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$LAYOUT_; }

    static final VarHandle ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$VH_ = MemoryHandles.asAddressVarHandle(ID3D12LifetimeTrackerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DestroyOwnedObject")));
    public static java.lang.invoke.VarHandle ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$VH() { return ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$VH_; }

    static final MemoryLayout ID3D12LifetimeTracker$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12LifetimeTracker");
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTracker$struct$LAYOUT() { return ID3D12LifetimeTracker$struct$LAYOUT_; }

    static final MemoryLayout ID3D12LifetimeTracker$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12LifetimeTracker$lpVtbl$LAYOUT() { return ID3D12LifetimeTracker$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12LifetimeTracker$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12LifetimeTracker$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12LifetimeTracker$lpVtbl$VH() { return ID3D12LifetimeTracker$lpVtbl$VH_; }

    public static int D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT() { return (int)0L; }

    public static int D3D12_META_COMMAND_PARAMETER_TYPE_UINT64() { return (int)1L; }

    public static int D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS() { return (int)2L; }

    public static int D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV() { return (int)3L; }

    public static int D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV() { return (int)4L; }

    public static int D3D12_META_COMMAND_PARAMETER_FLAG_INPUT() { return (int)1L; }

    public static int D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT() { return (int)2L; }

    public static int D3D12_META_COMMAND_PARAMETER_STAGE_CREATION() { return (int)0L; }

    public static int D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION() { return (int)1L; }

    public static int D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION() { return (int)2L; }

    static final MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("Name"),
        C_INT.withName("Type"),
        C_INT.withName("Flags"),
        C_INT.withName("RequiredResourceState"),
        C_INT.withName("StructureOffset")
    ).withName("D3D12_META_COMMAND_PARAMETER_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT() { return D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$Name$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$Name$LAYOUT() { return D3D12_META_COMMAND_PARAMETER_DESC$Name$LAYOUT_; }

    static final VarHandle D3D12_META_COMMAND_PARAMETER_DESC$Name$VH_ = MemoryHandles.asAddressVarHandle(D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Name")));
    public static java.lang.invoke.VarHandle D3D12_META_COMMAND_PARAMETER_DESC$Name$VH() { return D3D12_META_COMMAND_PARAMETER_DESC$Name$VH_; }

    static final MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$Type$LAYOUT() { return D3D12_META_COMMAND_PARAMETER_DESC$Type$LAYOUT_; }

    static final VarHandle D3D12_META_COMMAND_PARAMETER_DESC$Type$VH_ = D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_META_COMMAND_PARAMETER_DESC$Type$VH() { return D3D12_META_COMMAND_PARAMETER_DESC$Type$VH_; }

    static final MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$Flags$LAYOUT() { return D3D12_META_COMMAND_PARAMETER_DESC$Flags$LAYOUT_; }

    static final VarHandle D3D12_META_COMMAND_PARAMETER_DESC$Flags$VH_ = D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_META_COMMAND_PARAMETER_DESC$Flags$VH() { return D3D12_META_COMMAND_PARAMETER_DESC$Flags$VH_; }

    static final MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$LAYOUT() { return D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$LAYOUT_; }

    static final VarHandle D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$VH_ = D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RequiredResourceState"));
    public static java.lang.invoke.VarHandle D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$VH() { return D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$VH_; }

    static final MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$LAYOUT() { return D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$LAYOUT_; }

    static final VarHandle D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$VH_ = D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StructureOffset"));
    public static java.lang.invoke.VarHandle D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$VH() { return D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$VH_; }

    public static int D3D12_GRAPHICS_STATE_NONE() { return (int)0L; }

    public static int D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS() { return (int)1L; }

    public static int D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER() { return (int)2L; }

    public static int D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY() { return (int)4L; }

    public static int D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP() { return (int)8L; }

    public static int D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE() { return (int)16L; }

    public static int D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE() { return (int)32L; }

    public static int D3D12_GRAPHICS_STATE_RS_VIEWPORTS() { return (int)64L; }

    public static int D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS() { return (int)128L; }

    public static int D3D12_GRAPHICS_STATE_PREDICATION() { return (int)256L; }

    public static int D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS() { return (int)512L; }

    public static int D3D12_GRAPHICS_STATE_OM_STENCIL_REF() { return (int)1024L; }

    public static int D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR() { return (int)2048L; }

    public static int D3D12_GRAPHICS_STATE_PIPELINE_STATE() { return (int)4096L; }

    public static int D3D12_GRAPHICS_STATE_SO_TARGETS() { return (int)8192L; }

    public static int D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS() { return (int)16384L; }

    public static int D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS() { return (int)32768L; }

    public static int D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK() { return (int)65536L; }

    static final MemoryLayout D3D12_META_COMMAND_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("Id"),
        C_POINTER.withName("Name"),
        C_INT.withName("InitializationDirtyState"),
        C_INT.withName("ExecutionDirtyState")
    ).withName("D3D12_META_COMMAND_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_DESC$struct$LAYOUT() { return D3D12_META_COMMAND_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_META_COMMAND_DESC$Name$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_DESC$Name$LAYOUT() { return D3D12_META_COMMAND_DESC$Name$LAYOUT_; }

    static final VarHandle D3D12_META_COMMAND_DESC$Name$VH_ = MemoryHandles.asAddressVarHandle(D3D12_META_COMMAND_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Name")));
    public static java.lang.invoke.VarHandle D3D12_META_COMMAND_DESC$Name$VH() { return D3D12_META_COMMAND_DESC$Name$VH_; }

    static final MemoryLayout D3D12_META_COMMAND_DESC$InitializationDirtyState$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_DESC$InitializationDirtyState$LAYOUT() { return D3D12_META_COMMAND_DESC$InitializationDirtyState$LAYOUT_; }

    static final VarHandle D3D12_META_COMMAND_DESC$InitializationDirtyState$VH_ = D3D12_META_COMMAND_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("InitializationDirtyState"));
    public static java.lang.invoke.VarHandle D3D12_META_COMMAND_DESC$InitializationDirtyState$VH() { return D3D12_META_COMMAND_DESC$InitializationDirtyState$VH_; }

    static final MemoryLayout D3D12_META_COMMAND_DESC$ExecutionDirtyState$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_META_COMMAND_DESC$ExecutionDirtyState$LAYOUT() { return D3D12_META_COMMAND_DESC$ExecutionDirtyState$LAYOUT_; }

    static final VarHandle D3D12_META_COMMAND_DESC$ExecutionDirtyState$VH_ = D3D12_META_COMMAND_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExecutionDirtyState"));
    public static java.lang.invoke.VarHandle D3D12_META_COMMAND_DESC$ExecutionDirtyState$VH() { return D3D12_META_COMMAND_DESC$ExecutionDirtyState$VH_; }

    static final MemoryLayout __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    public static java.lang.invoke.VarHandle __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$VH() { return __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec", __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    public static java.lang.invoke.VarHandle __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$VH() { return __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec", __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_ID3D12StateObject$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12StateObject$LAYOUT() { return IID_ID3D12StateObject$LAYOUT_; }

    static final MemorySegment IID_ID3D12StateObject$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12StateObject", IID_ID3D12StateObject$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12StateObject$SEGMENT() { return IID_ID3D12StateObject$SEGMENT_; }

    static final MemoryLayout ID3D12StateObjectVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice")
    ).withName("ID3D12StateObjectVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$struct$LAYOUT() { return ID3D12StateObjectVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12StateObjectVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$QueryInterface$LAYOUT() { return ID3D12StateObjectVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12StateObjectVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectVtbl$QueryInterface$VH() { return ID3D12StateObjectVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12StateObjectVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$AddRef$LAYOUT() { return ID3D12StateObjectVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12StateObjectVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectVtbl$AddRef$VH() { return ID3D12StateObjectVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12StateObjectVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$Release$LAYOUT() { return ID3D12StateObjectVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12StateObjectVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectVtbl$Release$VH() { return ID3D12StateObjectVtbl$Release$VH_; }

    static final MemoryLayout ID3D12StateObjectVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$GetPrivateData$LAYOUT() { return ID3D12StateObjectVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12StateObjectVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectVtbl$GetPrivateData$VH() { return ID3D12StateObjectVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12StateObjectVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$SetPrivateData$LAYOUT() { return ID3D12StateObjectVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12StateObjectVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectVtbl$SetPrivateData$VH() { return ID3D12StateObjectVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12StateObjectVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12StateObjectVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12StateObjectVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectVtbl$SetPrivateDataInterface$VH() { return ID3D12StateObjectVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12StateObjectVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$SetName$LAYOUT() { return ID3D12StateObjectVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12StateObjectVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectVtbl$SetName$VH() { return ID3D12StateObjectVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12StateObjectVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectVtbl$GetDevice$LAYOUT() { return ID3D12StateObjectVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12StateObjectVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectVtbl$GetDevice$VH() { return ID3D12StateObjectVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12StateObject$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12StateObject");
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObject$struct$LAYOUT() { return ID3D12StateObject$struct$LAYOUT_; }

    static final MemoryLayout ID3D12StateObject$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObject$lpVtbl$LAYOUT() { return ID3D12StateObject$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12StateObject$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObject$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12StateObject$lpVtbl$VH() { return ID3D12StateObject$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12StateObjectProperties$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12StateObjectProperties$LAYOUT() { return IID_ID3D12StateObjectProperties$LAYOUT_; }

    static final MemorySegment IID_ID3D12StateObjectProperties$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12StateObjectProperties", IID_ID3D12StateObjectProperties$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12StateObjectProperties$SEGMENT() { return IID_ID3D12StateObjectProperties$SEGMENT_; }

    static final MemoryLayout ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetShaderIdentifier"),
        C_POINTER.withName("GetShaderStackSize"),
        C_POINTER.withName("GetPipelineStackSize"),
        C_POINTER.withName("SetPipelineStackSize")
    ).withName("ID3D12StateObjectPropertiesVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectPropertiesVtbl$struct$LAYOUT() { return ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12StateObjectPropertiesVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectPropertiesVtbl$QueryInterface$LAYOUT() { return ID3D12StateObjectPropertiesVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12StateObjectPropertiesVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectPropertiesVtbl$QueryInterface$VH() { return ID3D12StateObjectPropertiesVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12StateObjectPropertiesVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectPropertiesVtbl$AddRef$LAYOUT() { return ID3D12StateObjectPropertiesVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12StateObjectPropertiesVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectPropertiesVtbl$AddRef$VH() { return ID3D12StateObjectPropertiesVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12StateObjectPropertiesVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectPropertiesVtbl$Release$LAYOUT() { return ID3D12StateObjectPropertiesVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12StateObjectPropertiesVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectPropertiesVtbl$Release$VH() { return ID3D12StateObjectPropertiesVtbl$Release$VH_; }

    static final MemoryLayout ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$LAYOUT() { return ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$LAYOUT_; }

    static final VarHandle ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetShaderIdentifier")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$VH() { return ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$VH_; }

    static final MemoryLayout ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$LAYOUT() { return ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$LAYOUT_; }

    static final VarHandle ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetShaderStackSize")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$VH() { return ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$VH_; }

    static final MemoryLayout ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$LAYOUT() { return ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$LAYOUT_; }

    static final VarHandle ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPipelineStackSize")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$VH() { return ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$VH_; }

    static final MemoryLayout ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$LAYOUT() { return ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$LAYOUT_; }

    static final VarHandle ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectPropertiesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPipelineStackSize")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$VH() { return ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$VH_; }

    static final MemoryLayout ID3D12StateObjectProperties$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12StateObjectProperties");
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectProperties$struct$LAYOUT() { return ID3D12StateObjectProperties$struct$LAYOUT_; }

    static final MemoryLayout ID3D12StateObjectProperties$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12StateObjectProperties$lpVtbl$LAYOUT() { return ID3D12StateObjectProperties$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12StateObjectProperties$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12StateObjectProperties$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12StateObjectProperties$lpVtbl$VH() { return ID3D12StateObjectProperties$lpVtbl$VH_; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG() { return (int)0L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE() { return (int)1L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE() { return (int)2L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK() { return (int)3L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY() { return (int)5L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION() { return (int)6L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION() { return (int)7L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION() { return (int)8L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG() { return (int)9L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG() { return (int)10L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP() { return (int)11L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1() { return (int)12L; }

    public static int D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID() { return (int)13L; }

    static final MemoryLayout D3D12_STATE_SUBOBJECT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pDesc")
    ).withName("D3D12_STATE_SUBOBJECT");
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_SUBOBJECT$struct$LAYOUT() { return D3D12_STATE_SUBOBJECT$struct$LAYOUT_; }

    static final MemoryLayout D3D12_STATE_SUBOBJECT$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_SUBOBJECT$Type$LAYOUT() { return D3D12_STATE_SUBOBJECT$Type$LAYOUT_; }

    static final VarHandle D3D12_STATE_SUBOBJECT$Type$VH_ = D3D12_STATE_SUBOBJECT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_STATE_SUBOBJECT$Type$VH() { return D3D12_STATE_SUBOBJECT$Type$VH_; }

    static final MemoryLayout D3D12_STATE_SUBOBJECT$pDesc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_SUBOBJECT$pDesc$LAYOUT() { return D3D12_STATE_SUBOBJECT$pDesc$LAYOUT_; }

    static final VarHandle D3D12_STATE_SUBOBJECT$pDesc$VH_ = MemoryHandles.asAddressVarHandle(D3D12_STATE_SUBOBJECT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDesc")));
    public static java.lang.invoke.VarHandle D3D12_STATE_SUBOBJECT$pDesc$VH() { return D3D12_STATE_SUBOBJECT$pDesc$VH_; }

    public static int D3D12_STATE_OBJECT_FLAG_NONE() { return (int)0L; }

    public static int D3D12_STATE_OBJECT_FLAG_ALLOW_LOCAL_DEPENDENCIES_ON_EXTERNAL_DEFINITIONS() { return (int)1L; }

    public static int D3D12_STATE_OBJECT_FLAG_ALLOW_EXTERNAL_DEPENDENCIES_ON_LOCAL_DEFINITIONS() { return (int)2L; }

    public static int D3D12_STATE_OBJECT_FLAG_ALLOW_STATE_OBJECT_ADDITIONS() { return (int)4L; }

    static final MemoryLayout D3D12_STATE_OBJECT_CONFIG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Flags")
    ).withName("D3D12_STATE_OBJECT_CONFIG");
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_OBJECT_CONFIG$struct$LAYOUT() { return D3D12_STATE_OBJECT_CONFIG$struct$LAYOUT_; }

    static final MemoryLayout D3D12_STATE_OBJECT_CONFIG$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_OBJECT_CONFIG$Flags$LAYOUT() { return D3D12_STATE_OBJECT_CONFIG$Flags$LAYOUT_; }

    static final VarHandle D3D12_STATE_OBJECT_CONFIG$Flags$VH_ = D3D12_STATE_OBJECT_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_STATE_OBJECT_CONFIG$Flags$VH() { return D3D12_STATE_OBJECT_CONFIG$Flags$VH_; }

    static final MemoryLayout D3D12_GLOBAL_ROOT_SIGNATURE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pGlobalRootSignature")
    ).withName("D3D12_GLOBAL_ROOT_SIGNATURE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_GLOBAL_ROOT_SIGNATURE$struct$LAYOUT() { return D3D12_GLOBAL_ROOT_SIGNATURE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$LAYOUT() { return D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$LAYOUT_; }

    static final VarHandle D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$VH_ = MemoryHandles.asAddressVarHandle(D3D12_GLOBAL_ROOT_SIGNATURE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pGlobalRootSignature")));
    public static java.lang.invoke.VarHandle D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$VH() { return D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$VH_; }

    static final MemoryLayout D3D12_LOCAL_ROOT_SIGNATURE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pLocalRootSignature")
    ).withName("D3D12_LOCAL_ROOT_SIGNATURE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_LOCAL_ROOT_SIGNATURE$struct$LAYOUT() { return D3D12_LOCAL_ROOT_SIGNATURE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$LAYOUT() { return D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$LAYOUT_; }

    static final VarHandle D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$VH_ = MemoryHandles.asAddressVarHandle(D3D12_LOCAL_ROOT_SIGNATURE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pLocalRootSignature")));
    public static java.lang.invoke.VarHandle D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$VH() { return D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$VH_; }

    static final MemoryLayout D3D12_NODE_MASK$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NodeMask")
    ).withName("D3D12_NODE_MASK");
    public static jdk.incubator.foreign.MemoryLayout D3D12_NODE_MASK$struct$LAYOUT() { return D3D12_NODE_MASK$struct$LAYOUT_; }

    static final MemoryLayout D3D12_NODE_MASK$NodeMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_NODE_MASK$NodeMask$LAYOUT() { return D3D12_NODE_MASK$NodeMask$LAYOUT_; }

    static final VarHandle D3D12_NODE_MASK$NodeMask$VH_ = D3D12_NODE_MASK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeMask"));
    public static java.lang.invoke.VarHandle D3D12_NODE_MASK$NodeMask$VH() { return D3D12_NODE_MASK$NodeMask$VH_; }

    public static int D3D12_EXPORT_FLAG_NONE() { return (int)0L; }

    static final MemoryLayout D3D12_EXPORT_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("Name"),
        C_POINTER.withName("ExportToRename"),
        C_INT.withName("Flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_EXPORT_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_EXPORT_DESC$struct$LAYOUT() { return D3D12_EXPORT_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_EXPORT_DESC$Name$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_EXPORT_DESC$Name$LAYOUT() { return D3D12_EXPORT_DESC$Name$LAYOUT_; }

    static final VarHandle D3D12_EXPORT_DESC$Name$VH_ = MemoryHandles.asAddressVarHandle(D3D12_EXPORT_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Name")));
    public static java.lang.invoke.VarHandle D3D12_EXPORT_DESC$Name$VH() { return D3D12_EXPORT_DESC$Name$VH_; }

    static final MemoryLayout D3D12_EXPORT_DESC$ExportToRename$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_EXPORT_DESC$ExportToRename$LAYOUT() { return D3D12_EXPORT_DESC$ExportToRename$LAYOUT_; }

    static final VarHandle D3D12_EXPORT_DESC$ExportToRename$VH_ = MemoryHandles.asAddressVarHandle(D3D12_EXPORT_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ExportToRename")));
    public static java.lang.invoke.VarHandle D3D12_EXPORT_DESC$ExportToRename$VH() { return D3D12_EXPORT_DESC$ExportToRename$VH_; }

    static final MemoryLayout D3D12_EXPORT_DESC$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_EXPORT_DESC$Flags$LAYOUT() { return D3D12_EXPORT_DESC$Flags$LAYOUT_; }

    static final VarHandle D3D12_EXPORT_DESC$Flags$VH_ = D3D12_EXPORT_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_EXPORT_DESC$Flags$VH() { return D3D12_EXPORT_DESC$Flags$VH_; }

    static final MemoryLayout D3D12_DXIL_LIBRARY_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pShaderBytecode"),
            C_LONGLONG.withName("BytecodeLength")
        ).withName("DXILLibrary"),
        C_INT.withName("NumExports"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pExports")
    ).withName("D3D12_DXIL_LIBRARY_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_DXIL_LIBRARY_DESC$struct$LAYOUT() { return D3D12_DXIL_LIBRARY_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_DXIL_LIBRARY_DESC$NumExports$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DXIL_LIBRARY_DESC$NumExports$LAYOUT() { return D3D12_DXIL_LIBRARY_DESC$NumExports$LAYOUT_; }

    static final VarHandle D3D12_DXIL_LIBRARY_DESC$NumExports$VH_ = D3D12_DXIL_LIBRARY_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumExports"));
    public static java.lang.invoke.VarHandle D3D12_DXIL_LIBRARY_DESC$NumExports$VH() { return D3D12_DXIL_LIBRARY_DESC$NumExports$VH_; }

    static final MemoryLayout D3D12_DXIL_LIBRARY_DESC$pExports$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DXIL_LIBRARY_DESC$pExports$LAYOUT() { return D3D12_DXIL_LIBRARY_DESC$pExports$LAYOUT_; }

    static final VarHandle D3D12_DXIL_LIBRARY_DESC$pExports$VH_ = MemoryHandles.asAddressVarHandle(D3D12_DXIL_LIBRARY_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pExports")));
    public static java.lang.invoke.VarHandle D3D12_DXIL_LIBRARY_DESC$pExports$VH() { return D3D12_DXIL_LIBRARY_DESC$pExports$VH_; }

    static final MemoryLayout D3D12_EXISTING_COLLECTION_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pExistingCollection"),
        C_INT.withName("NumExports"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pExports")
    ).withName("D3D12_EXISTING_COLLECTION_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_EXISTING_COLLECTION_DESC$struct$LAYOUT() { return D3D12_EXISTING_COLLECTION_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$LAYOUT() { return D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$LAYOUT_; }

    static final VarHandle D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$VH_ = MemoryHandles.asAddressVarHandle(D3D12_EXISTING_COLLECTION_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pExistingCollection")));
    public static java.lang.invoke.VarHandle D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$VH() { return D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$VH_; }

    static final MemoryLayout D3D12_EXISTING_COLLECTION_DESC$NumExports$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_EXISTING_COLLECTION_DESC$NumExports$LAYOUT() { return D3D12_EXISTING_COLLECTION_DESC$NumExports$LAYOUT_; }

    static final VarHandle D3D12_EXISTING_COLLECTION_DESC$NumExports$VH_ = D3D12_EXISTING_COLLECTION_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumExports"));
    public static java.lang.invoke.VarHandle D3D12_EXISTING_COLLECTION_DESC$NumExports$VH() { return D3D12_EXISTING_COLLECTION_DESC$NumExports$VH_; }

    static final MemoryLayout D3D12_EXISTING_COLLECTION_DESC$pExports$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_EXISTING_COLLECTION_DESC$pExports$LAYOUT() { return D3D12_EXISTING_COLLECTION_DESC$pExports$LAYOUT_; }

    static final VarHandle D3D12_EXISTING_COLLECTION_DESC$pExports$VH_ = MemoryHandles.asAddressVarHandle(D3D12_EXISTING_COLLECTION_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pExports")));
    public static java.lang.invoke.VarHandle D3D12_EXISTING_COLLECTION_DESC$pExports$VH() { return D3D12_EXISTING_COLLECTION_DESC$pExports$VH_; }

    static final MemoryLayout D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pSubobjectToAssociate"),
        C_INT.withName("NumExports"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pExports")
    ).withName("D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION");
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT() { return D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_; }

    static final MemoryLayout D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$LAYOUT() { return D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$LAYOUT_; }

    static final VarHandle D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$VH_ = MemoryHandles.asAddressVarHandle(D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pSubobjectToAssociate")));
    public static java.lang.invoke.VarHandle D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$VH() { return D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$VH_; }

    static final MemoryLayout D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$LAYOUT() { return D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$LAYOUT_; }

    static final VarHandle D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH_ = D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumExports"));
    public static java.lang.invoke.VarHandle D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH() { return D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH_; }

    static final MemoryLayout D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$LAYOUT() { return D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$LAYOUT_; }

    static final VarHandle D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH_ = MemoryHandles.asAddressVarHandle(D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pExports")));
    public static java.lang.invoke.VarHandle D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH() { return D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH_; }

    static final MemoryLayout D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("SubobjectToAssociate"),
        C_INT.withName("NumExports"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pExports")
    ).withName("D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION");
    public static jdk.incubator.foreign.MemoryLayout D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT() { return D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_; }

    static final MemoryLayout D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$LAYOUT() { return D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$LAYOUT_; }

    static final VarHandle D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$VH_ = MemoryHandles.asAddressVarHandle(D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SubobjectToAssociate")));
    public static java.lang.invoke.VarHandle D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$VH() { return D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$VH_; }

    static final MemoryLayout D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$LAYOUT() { return D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$LAYOUT_; }

    static final VarHandle D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH_ = D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumExports"));
    public static java.lang.invoke.VarHandle D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH() { return D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH_; }

    static final MemoryLayout D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$LAYOUT() { return D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$LAYOUT_; }

    static final VarHandle D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH_ = MemoryHandles.asAddressVarHandle(D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pExports")));
    public static java.lang.invoke.VarHandle D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH() { return D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH_; }

    public static int D3D12_HIT_GROUP_TYPE_TRIANGLES() { return (int)0L; }

    public static int D3D12_HIT_GROUP_TYPE_PROCEDURAL_PRIMITIVE() { return (int)1L; }

    static final MemoryLayout D3D12_HIT_GROUP_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("HitGroupExport"),
        C_INT.withName("Type"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("AnyHitShaderImport"),
        C_POINTER.withName("ClosestHitShaderImport"),
        C_POINTER.withName("IntersectionShaderImport")
    ).withName("D3D12_HIT_GROUP_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_HIT_GROUP_DESC$struct$LAYOUT() { return D3D12_HIT_GROUP_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_HIT_GROUP_DESC$HitGroupExport$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HIT_GROUP_DESC$HitGroupExport$LAYOUT() { return D3D12_HIT_GROUP_DESC$HitGroupExport$LAYOUT_; }

    static final VarHandle D3D12_HIT_GROUP_DESC$HitGroupExport$VH_ = MemoryHandles.asAddressVarHandle(D3D12_HIT_GROUP_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HitGroupExport")));
    public static java.lang.invoke.VarHandle D3D12_HIT_GROUP_DESC$HitGroupExport$VH() { return D3D12_HIT_GROUP_DESC$HitGroupExport$VH_; }

    static final MemoryLayout D3D12_HIT_GROUP_DESC$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HIT_GROUP_DESC$Type$LAYOUT() { return D3D12_HIT_GROUP_DESC$Type$LAYOUT_; }

    static final VarHandle D3D12_HIT_GROUP_DESC$Type$VH_ = D3D12_HIT_GROUP_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_HIT_GROUP_DESC$Type$VH() { return D3D12_HIT_GROUP_DESC$Type$VH_; }

    static final MemoryLayout D3D12_HIT_GROUP_DESC$AnyHitShaderImport$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HIT_GROUP_DESC$AnyHitShaderImport$LAYOUT() { return D3D12_HIT_GROUP_DESC$AnyHitShaderImport$LAYOUT_; }

    static final VarHandle D3D12_HIT_GROUP_DESC$AnyHitShaderImport$VH_ = MemoryHandles.asAddressVarHandle(D3D12_HIT_GROUP_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AnyHitShaderImport")));
    public static java.lang.invoke.VarHandle D3D12_HIT_GROUP_DESC$AnyHitShaderImport$VH() { return D3D12_HIT_GROUP_DESC$AnyHitShaderImport$VH_; }

    static final MemoryLayout D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$LAYOUT() { return D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$LAYOUT_; }

    static final VarHandle D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$VH_ = MemoryHandles.asAddressVarHandle(D3D12_HIT_GROUP_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClosestHitShaderImport")));
    public static java.lang.invoke.VarHandle D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$VH() { return D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$VH_; }

    static final MemoryLayout D3D12_HIT_GROUP_DESC$IntersectionShaderImport$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_HIT_GROUP_DESC$IntersectionShaderImport$LAYOUT() { return D3D12_HIT_GROUP_DESC$IntersectionShaderImport$LAYOUT_; }

    static final VarHandle D3D12_HIT_GROUP_DESC$IntersectionShaderImport$VH_ = MemoryHandles.asAddressVarHandle(D3D12_HIT_GROUP_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IntersectionShaderImport")));
    public static java.lang.invoke.VarHandle D3D12_HIT_GROUP_DESC$IntersectionShaderImport$VH() { return D3D12_HIT_GROUP_DESC$IntersectionShaderImport$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_SHADER_CONFIG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("MaxPayloadSizeInBytes"),
        C_INT.withName("MaxAttributeSizeInBytes")
    ).withName("D3D12_RAYTRACING_SHADER_CONFIG");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_SHADER_CONFIG$struct$LAYOUT() { return D3D12_RAYTRACING_SHADER_CONFIG$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$VH_ = D3D12_RAYTRACING_SHADER_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxPayloadSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$VH() { return D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$VH_ = D3D12_RAYTRACING_SHADER_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxAttributeSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$VH() { return D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("MaxTraceRecursionDepth")
    ).withName("D3D12_RAYTRACING_PIPELINE_CONFIG");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG$struct$LAYOUT() { return D3D12_RAYTRACING_PIPELINE_CONFIG$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$LAYOUT() { return D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$VH_ = D3D12_RAYTRACING_PIPELINE_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxTraceRecursionDepth"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$VH() { return D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$VH_; }

    public static int D3D12_RAYTRACING_PIPELINE_FLAG_NONE() { return (int)0L; }

    public static int D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_TRIANGLES() { return (int)256L; }

    public static int D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_PROCEDURAL_PRIMITIVES() { return (int)512L; }

    static final MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("MaxTraceRecursionDepth"),
        C_INT.withName("Flags")
    ).withName("D3D12_RAYTRACING_PIPELINE_CONFIG1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG1$struct$LAYOUT() { return D3D12_RAYTRACING_PIPELINE_CONFIG1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$LAYOUT() { return D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$VH_ = D3D12_RAYTRACING_PIPELINE_CONFIG1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxTraceRecursionDepth"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$VH() { return D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$LAYOUT() { return D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$VH_ = D3D12_RAYTRACING_PIPELINE_CONFIG1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$VH() { return D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$VH_; }

    public static int D3D12_STATE_OBJECT_TYPE_COLLECTION() { return (int)0L; }

    public static int D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE() { return (int)3L; }

    static final MemoryLayout D3D12_STATE_OBJECT_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_INT.withName("NumSubobjects"),
        C_POINTER.withName("pSubobjects")
    ).withName("D3D12_STATE_OBJECT_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_OBJECT_DESC$struct$LAYOUT() { return D3D12_STATE_OBJECT_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_STATE_OBJECT_DESC$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_OBJECT_DESC$Type$LAYOUT() { return D3D12_STATE_OBJECT_DESC$Type$LAYOUT_; }

    static final VarHandle D3D12_STATE_OBJECT_DESC$Type$VH_ = D3D12_STATE_OBJECT_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_STATE_OBJECT_DESC$Type$VH() { return D3D12_STATE_OBJECT_DESC$Type$VH_; }

    static final MemoryLayout D3D12_STATE_OBJECT_DESC$NumSubobjects$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_OBJECT_DESC$NumSubobjects$LAYOUT() { return D3D12_STATE_OBJECT_DESC$NumSubobjects$LAYOUT_; }

    static final VarHandle D3D12_STATE_OBJECT_DESC$NumSubobjects$VH_ = D3D12_STATE_OBJECT_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumSubobjects"));
    public static java.lang.invoke.VarHandle D3D12_STATE_OBJECT_DESC$NumSubobjects$VH() { return D3D12_STATE_OBJECT_DESC$NumSubobjects$VH_; }

    static final MemoryLayout D3D12_STATE_OBJECT_DESC$pSubobjects$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STATE_OBJECT_DESC$pSubobjects$LAYOUT() { return D3D12_STATE_OBJECT_DESC$pSubobjects$LAYOUT_; }

    static final VarHandle D3D12_STATE_OBJECT_DESC$pSubobjects$VH_ = MemoryHandles.asAddressVarHandle(D3D12_STATE_OBJECT_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pSubobjects")));
    public static java.lang.invoke.VarHandle D3D12_STATE_OBJECT_DESC$pSubobjects$VH() { return D3D12_STATE_OBJECT_DESC$pSubobjects$VH_; }

    public static int D3D12_RAYTRACING_GEOMETRY_FLAG_NONE() { return (int)0L; }

    public static int D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE() { return (int)1L; }

    public static int D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION() { return (int)2L; }

    public static int D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES() { return (int)0L; }

    public static int D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS() { return (int)1L; }

    public static int D3D12_RAYTRACING_INSTANCE_FLAG_NONE() { return (int)0L; }

    public static int D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE() { return (int)1L; }

    public static int D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE() { return (int)2L; }

    public static int D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE() { return (int)4L; }

    public static int D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE() { return (int)8L; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StartAddress"),
        C_LONGLONG.withName("StrideInBytes")
    ).withName("D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$struct$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$LAYOUT_; }

    static final VarHandle D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$VH_ = D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartAddress"));
    public static java.lang.invoke.VarHandle D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$VH() { return D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$VH_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$LAYOUT_; }

    static final VarHandle D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$VH_ = D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StrideInBytes"));
    public static java.lang.invoke.VarHandle D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$VH() { return D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$VH_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StartAddress"),
        C_LONGLONG.withName("SizeInBytes")
    ).withName("D3D12_GPU_VIRTUAL_ADDRESS_RANGE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE$struct$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$LAYOUT_; }

    static final VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$VH_ = D3D12_GPU_VIRTUAL_ADDRESS_RANGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartAddress"));
    public static java.lang.invoke.VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$VH() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$VH_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$VH_ = D3D12_GPU_VIRTUAL_ADDRESS_RANGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$VH() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$VH_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StartAddress"),
        C_LONGLONG.withName("SizeInBytes"),
        C_LONGLONG.withName("StrideInBytes")
    ).withName("D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$struct$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$LAYOUT_; }

    static final VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$VH_ = D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartAddress"));
    public static java.lang.invoke.VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$VH() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$VH_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$VH_ = D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$VH() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$VH_; }

    static final MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$LAYOUT() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$LAYOUT_; }

    static final VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$VH_ = D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StrideInBytes"));
    public static java.lang.invoke.VarHandle D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$VH() { return D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("Transform3x4"),
        C_INT.withName("IndexFormat"),
        C_INT.withName("VertexFormat"),
        C_INT.withName("IndexCount"),
        C_INT.withName("VertexCount"),
        C_LONGLONG.withName("IndexBuffer"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("StartAddress"),
            C_LONGLONG.withName("StrideInBytes")
        ).withName("VertexBuffer")
    ).withName("D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$VH_ = D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Transform3x4"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$VH() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$VH_ = D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IndexFormat"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$VH() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$VH_ = D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VertexFormat"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$VH() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$VH_ = D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IndexCount"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$VH() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$VH_ = D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VertexCount"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$VH() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$VH_ = D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IndexBuffer"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$VH() { return D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_AABB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_FLOAT.withName("MinX"),
        C_FLOAT.withName("MinY"),
        C_FLOAT.withName("MinZ"),
        C_FLOAT.withName("MaxX"),
        C_FLOAT.withName("MaxY"),
        C_FLOAT.withName("MaxZ")
    ).withName("D3D12_RAYTRACING_AABB");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_AABB$struct$LAYOUT() { return D3D12_RAYTRACING_AABB$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_AABB$MinX$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_AABB$MinX$LAYOUT() { return D3D12_RAYTRACING_AABB$MinX$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_AABB$MinX$VH_ = D3D12_RAYTRACING_AABB$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("MinX"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_AABB$MinX$VH() { return D3D12_RAYTRACING_AABB$MinX$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_AABB$MinY$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_AABB$MinY$LAYOUT() { return D3D12_RAYTRACING_AABB$MinY$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_AABB$MinY$VH_ = D3D12_RAYTRACING_AABB$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("MinY"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_AABB$MinY$VH() { return D3D12_RAYTRACING_AABB$MinY$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_AABB$MinZ$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_AABB$MinZ$LAYOUT() { return D3D12_RAYTRACING_AABB$MinZ$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_AABB$MinZ$VH_ = D3D12_RAYTRACING_AABB$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("MinZ"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_AABB$MinZ$VH() { return D3D12_RAYTRACING_AABB$MinZ$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_AABB$MaxX$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_AABB$MaxX$LAYOUT() { return D3D12_RAYTRACING_AABB$MaxX$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_AABB$MaxX$VH_ = D3D12_RAYTRACING_AABB$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("MaxX"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_AABB$MaxX$VH() { return D3D12_RAYTRACING_AABB$MaxX$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_AABB$MaxY$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_AABB$MaxY$LAYOUT() { return D3D12_RAYTRACING_AABB$MaxY$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_AABB$MaxY$VH_ = D3D12_RAYTRACING_AABB$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("MaxY"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_AABB$MaxY$VH() { return D3D12_RAYTRACING_AABB$MaxY$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_AABB$MaxZ$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_AABB$MaxZ$LAYOUT() { return D3D12_RAYTRACING_AABB$MaxZ$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_AABB$MaxZ$VH_ = D3D12_RAYTRACING_AABB$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("MaxZ"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_AABB$MaxZ$VH() { return D3D12_RAYTRACING_AABB$MaxZ$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("AABBCount"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("StartAddress"),
            C_LONGLONG.withName("StrideInBytes")
        ).withName("AABBs")
    ).withName("D3D12_RAYTRACING_GEOMETRY_AABBS_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$VH_ = D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AABBCount"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$VH() { return D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$VH_; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE() { return (int)0L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE() { return (int)1L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION() { return (int)2L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE() { return (int)4L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD() { return (int)8L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY() { return (int)16L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE() { return (int)32L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE() { return (int)0L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT() { return (int)1L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS() { return (int)2L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE() { return (int)3L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE() { return (int)4L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL() { return (int)0L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL() { return (int)1L; }

    public static int D3D12_ELEMENTS_LAYOUT_ARRAY() { return (int)0L; }

    public static int D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS() { return (int)1L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE() { return (int)0L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION() { return (int)1L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION() { return (int)2L; }

    public static int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE() { return (int)3L; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("DestBuffer"),
        C_INT.withName("InfoType"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DestBuffer"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("InfoType"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("CompactedSizeInBytes")
    ).withName("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CompactedSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("DecodedSizeInBytes")
    ).withName("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DecodedSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_INT.withName("NumDescs")
    ).withName("D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER");
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$struct$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$struct$LAYOUT_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumDescs"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("SerializedSizeInBytes"),
        C_LONGLONG.withName("NumBottomLevelAccelerationStructurePointers")
    ).withName("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SerializedSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NumBottomLevelAccelerationStructurePointers"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$VH_; }

    static final MemoryLayout D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("DriverOpaqueGUID"),
        MemoryLayout.ofSequence(16, C_BOOL).withName("DriverOpaqueVersioningData")
    ).withName("D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER");
    public static jdk.incubator.foreign.MemoryLayout D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER$struct$LAYOUT() { return D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER$struct$LAYOUT_; }

    public static int D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE() { return (int)0L; }

    public static int D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE() { return (int)0L; }

    public static int D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE() { return (int)1L; }

    public static int D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED() { return (int)2L; }

    public static int D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION() { return (int)3L; }

    public static int D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE() { return (int)4L; }

    static final MemoryLayout D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_INT.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
            ).withName("DriverOpaqueGUID"),
            MemoryLayout.ofSequence(16, C_BOOL).withName("DriverOpaqueVersioningData")
        ).withName("DriverMatchingIdentifier"),
        C_LONGLONG.withName("SerializedSizeInBytesIncludingHeader"),
        C_LONGLONG.withName("DeserializedSizeInBytes"),
        C_LONGLONG.withName("NumBottomLevelAccelerationStructurePointersAfterHeader")
    ).withName("D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER");
    public static jdk.incubator.foreign.MemoryLayout D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$struct$LAYOUT() { return D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$struct$LAYOUT_; }

    static final MemoryLayout D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$LAYOUT() { return D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$LAYOUT_; }

    static final VarHandle D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$VH_ = D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SerializedSizeInBytesIncludingHeader"));
    public static java.lang.invoke.VarHandle D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$VH() { return D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$VH_; }

    static final MemoryLayout D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$LAYOUT() { return D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$VH_ = D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DeserializedSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$VH() { return D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$VH_; }

    static final MemoryLayout D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$LAYOUT() { return D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$LAYOUT_; }

    static final VarHandle D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$VH_ = D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NumBottomLevelAccelerationStructurePointersAfterHeader"));
    public static java.lang.invoke.VarHandle D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$VH() { return D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("CurrentSizeInBytes")
    ).withName("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CurrentSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_INSTANCE_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(4, C_FLOAT)).withName("Transform"),
        C_LONGLONG,
        C_LONGLONG.withName("AccelerationStructure")
    ).withName("D3D12_RAYTRACING_INSTANCE_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_INSTANCE_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_INSTANCE_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$LAYOUT() { return D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$VH_ = D3D12_RAYTRACING_INSTANCE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AccelerationStructure"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$VH() { return D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_INT.withName("Flags"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Transform3x4"),
            C_INT.withName("IndexFormat"),
            C_INT.withName("VertexFormat"),
            C_INT.withName("IndexCount"),
            C_INT.withName("VertexCount"),
            C_LONGLONG.withName("IndexBuffer"),
            MemoryLayout.ofStruct(
                C_LONGLONG.withName("StartAddress"),
                C_LONGLONG.withName("StrideInBytes")
            ).withName("VertexBuffer")
        ).withName("Triangles"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("AABBCount"),
            MemoryLayout.ofStruct(
                C_LONGLONG.withName("StartAddress"),
                C_LONGLONG.withName("StrideInBytes")
            ).withName("AABBs")
        ).withName("AABBs")
    ).withName("D3D12_RAYTRACING_GEOMETRY_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_DESC$struct$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_DESC$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_DESC$Type$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_DESC$Type$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_DESC$Type$VH_ = D3D12_RAYTRACING_GEOMETRY_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_DESC$Type$VH() { return D3D12_RAYTRACING_GEOMETRY_DESC$Type$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_GEOMETRY_DESC$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_GEOMETRY_DESC$Flags$LAYOUT() { return D3D12_RAYTRACING_GEOMETRY_DESC$Flags$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_GEOMETRY_DESC$Flags$VH_ = D3D12_RAYTRACING_GEOMETRY_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_GEOMETRY_DESC$Flags$VH() { return D3D12_RAYTRACING_GEOMETRY_DESC$Flags$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_INT.withName("Flags"),
        C_INT.withName("NumDescs"),
        C_INT.withName("DescsLayout"),
        C_LONGLONG.withName("InstanceDescs"),
        C_POINTER.withName("pGeometryDescs"),
        C_POINTER.withName("ppGeometryDescs")
    ).withName("D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumDescs"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DescsLayout"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InstanceDescs"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$VH_ = MemoryHandles.asAddressVarHandle(D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pGeometryDescs")));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$VH_ = MemoryHandles.asAddressVarHandle(D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppGeometryDescs")));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("DestAccelerationStructureData"),
        MemoryLayout.ofStruct(
            C_INT.withName("Type"),
            C_INT.withName("Flags"),
            C_INT.withName("NumDescs"),
            C_INT.withName("DescsLayout"),
            C_LONGLONG.withName("InstanceDescs"),
            C_POINTER.withName("pGeometryDescs"),
            C_POINTER.withName("ppGeometryDescs")
        ).withName("Inputs"),
        C_LONGLONG.withName("SourceAccelerationStructureData"),
        C_LONGLONG.withName("ScratchAccelerationStructureData")
    ).withName("D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$struct$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DestAccelerationStructureData"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SourceAccelerationStructureData"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$VH_; }

    static final MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$LAYOUT() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$LAYOUT_; }

    static final VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$VH_ = D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ScratchAccelerationStructureData"));
    public static java.lang.invoke.VarHandle D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$VH() { return D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("ResultDataMaxSizeInBytes"),
        C_LONGLONG.withName("ScratchDataSizeInBytes"),
        C_LONGLONG.withName("UpdateScratchDataSizeInBytes")
    ).withName("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO");
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$struct$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$struct$LAYOUT_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ResultDataMaxSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ScratchDataSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$VH_; }

    static final MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$LAYOUT() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$VH_ = D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UpdateScratchDataSizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$VH() { return D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$VH_; }

    public static int D3D12_RAY_FLAG_NONE() { return (int)0L; }

    public static int D3D12_RAY_FLAG_FORCE_OPAQUE() { return (int)1L; }

    public static int D3D12_RAY_FLAG_FORCE_NON_OPAQUE() { return (int)2L; }

    public static int D3D12_RAY_FLAG_ACCEPT_FIRST_HIT_AND_END_SEARCH() { return (int)4L; }

    public static int D3D12_RAY_FLAG_SKIP_CLOSEST_HIT_SHADER() { return (int)8L; }

    public static int D3D12_RAY_FLAG_CULL_BACK_FACING_TRIANGLES() { return (int)16L; }

    public static int D3D12_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES() { return (int)32L; }

    public static int D3D12_RAY_FLAG_CULL_OPAQUE() { return (int)64L; }

    public static int D3D12_RAY_FLAG_CULL_NON_OPAQUE() { return (int)128L; }

    public static int D3D12_RAY_FLAG_SKIP_TRIANGLES() { return (int)256L; }

    public static int D3D12_RAY_FLAG_SKIP_PROCEDURAL_PRIMITIVES() { return (int)512L; }

    public static int D3D12_HIT_KIND_TRIANGLE_FRONT_FACE() { return (int)254L; }

    public static int D3D12_HIT_KIND_TRIANGLE_BACK_FACE() { return (int)255L; }

    static final MemoryLayout __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    public static java.lang.invoke.VarHandle __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$VH() { return __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec", __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    public static java.lang.invoke.VarHandle __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$VH() { return __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec", __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_ID3D12Device5$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12Device5$LAYOUT() { return IID_ID3D12Device5$LAYOUT_; }

    static final MemorySegment IID_ID3D12Device5$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12Device5", IID_ID3D12Device5$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12Device5$SEGMENT() { return IID_ID3D12Device5$SEGMENT_; }

    static final MemoryLayout ID3D12Device5Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetNodeCount"),
        C_POINTER.withName("CreateCommandQueue"),
        C_POINTER.withName("CreateCommandAllocator"),
        C_POINTER.withName("CreateGraphicsPipelineState"),
        C_POINTER.withName("CreateComputePipelineState"),
        C_POINTER.withName("CreateCommandList"),
        C_POINTER.withName("CheckFeatureSupport"),
        C_POINTER.withName("CreateDescriptorHeap"),
        C_POINTER.withName("GetDescriptorHandleIncrementSize"),
        C_POINTER.withName("CreateRootSignature"),
        C_POINTER.withName("CreateConstantBufferView"),
        C_POINTER.withName("CreateShaderResourceView"),
        C_POINTER.withName("CreateUnorderedAccessView"),
        C_POINTER.withName("CreateRenderTargetView"),
        C_POINTER.withName("CreateDepthStencilView"),
        C_POINTER.withName("CreateSampler"),
        C_POINTER.withName("CopyDescriptors"),
        C_POINTER.withName("CopyDescriptorsSimple"),
        C_POINTER.withName("GetResourceAllocationInfo"),
        C_POINTER.withName("GetCustomHeapProperties"),
        C_POINTER.withName("CreateCommittedResource"),
        C_POINTER.withName("CreateHeap"),
        C_POINTER.withName("CreatePlacedResource"),
        C_POINTER.withName("CreateReservedResource"),
        C_POINTER.withName("CreateSharedHandle"),
        C_POINTER.withName("OpenSharedHandle"),
        C_POINTER.withName("OpenSharedHandleByName"),
        C_POINTER.withName("MakeResident"),
        C_POINTER.withName("Evict"),
        C_POINTER.withName("CreateFence"),
        C_POINTER.withName("GetDeviceRemovedReason"),
        C_POINTER.withName("GetCopyableFootprints"),
        C_POINTER.withName("CreateQueryHeap"),
        C_POINTER.withName("SetStablePowerState"),
        C_POINTER.withName("CreateCommandSignature"),
        C_POINTER.withName("GetResourceTiling"),
        C_POINTER.withName("GetAdapterLuid"),
        C_POINTER.withName("CreatePipelineLibrary"),
        C_POINTER.withName("SetEventOnMultipleFenceCompletion"),
        C_POINTER.withName("SetResidencyPriority"),
        C_POINTER.withName("CreatePipelineState"),
        C_POINTER.withName("OpenExistingHeapFromAddress"),
        C_POINTER.withName("OpenExistingHeapFromFileMapping"),
        C_POINTER.withName("EnqueueMakeResident"),
        C_POINTER.withName("CreateCommandList1"),
        C_POINTER.withName("CreateProtectedResourceSession"),
        C_POINTER.withName("CreateCommittedResource1"),
        C_POINTER.withName("CreateHeap1"),
        C_POINTER.withName("CreateReservedResource1"),
        C_POINTER.withName("GetResourceAllocationInfo1"),
        C_POINTER.withName("CreateLifetimeTracker"),
        C_POINTER.withName("RemoveDevice"),
        C_POINTER.withName("EnumerateMetaCommands"),
        C_POINTER.withName("EnumerateMetaCommandParameters"),
        C_POINTER.withName("CreateMetaCommand"),
        C_POINTER.withName("CreateStateObject"),
        C_POINTER.withName("GetRaytracingAccelerationStructurePrebuildInfo"),
        C_POINTER.withName("CheckDriverMatchingIdentifier")
    ).withName("ID3D12Device5Vtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$struct$LAYOUT() { return ID3D12Device5Vtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12Device5Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$QueryInterface$LAYOUT() { return ID3D12Device5Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$QueryInterface$VH() { return ID3D12Device5Vtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$AddRef$LAYOUT() { return ID3D12Device5Vtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$AddRef$VH() { return ID3D12Device5Vtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$Release$LAYOUT() { return ID3D12Device5Vtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$Release$VH() { return ID3D12Device5Vtbl$Release$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetPrivateData$LAYOUT() { return ID3D12Device5Vtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetPrivateData$VH() { return ID3D12Device5Vtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$SetPrivateData$LAYOUT() { return ID3D12Device5Vtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$SetPrivateData$VH() { return ID3D12Device5Vtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12Device5Vtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$SetPrivateDataInterface$VH() { return ID3D12Device5Vtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$SetName$LAYOUT() { return ID3D12Device5Vtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$SetName$VH() { return ID3D12Device5Vtbl$SetName$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetNodeCount$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetNodeCount$LAYOUT() { return ID3D12Device5Vtbl$GetNodeCount$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetNodeCount$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetNodeCount")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetNodeCount$VH() { return ID3D12Device5Vtbl$GetNodeCount$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateCommandQueue$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateCommandQueue$LAYOUT() { return ID3D12Device5Vtbl$CreateCommandQueue$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateCommandQueue$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateCommandQueue")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateCommandQueue$VH() { return ID3D12Device5Vtbl$CreateCommandQueue$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateCommandAllocator$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateCommandAllocator$LAYOUT() { return ID3D12Device5Vtbl$CreateCommandAllocator$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateCommandAllocator$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateCommandAllocator")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateCommandAllocator$VH() { return ID3D12Device5Vtbl$CreateCommandAllocator$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateGraphicsPipelineState$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateGraphicsPipelineState$LAYOUT() { return ID3D12Device5Vtbl$CreateGraphicsPipelineState$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateGraphicsPipelineState$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateGraphicsPipelineState")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateGraphicsPipelineState$VH() { return ID3D12Device5Vtbl$CreateGraphicsPipelineState$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateComputePipelineState$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateComputePipelineState$LAYOUT() { return ID3D12Device5Vtbl$CreateComputePipelineState$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateComputePipelineState$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateComputePipelineState")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateComputePipelineState$VH() { return ID3D12Device5Vtbl$CreateComputePipelineState$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateCommandList$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateCommandList$LAYOUT() { return ID3D12Device5Vtbl$CreateCommandList$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateCommandList$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateCommandList")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateCommandList$VH() { return ID3D12Device5Vtbl$CreateCommandList$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CheckFeatureSupport$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CheckFeatureSupport$LAYOUT() { return ID3D12Device5Vtbl$CheckFeatureSupport$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CheckFeatureSupport$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CheckFeatureSupport")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CheckFeatureSupport$VH() { return ID3D12Device5Vtbl$CheckFeatureSupport$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateDescriptorHeap$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateDescriptorHeap$LAYOUT() { return ID3D12Device5Vtbl$CreateDescriptorHeap$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateDescriptorHeap$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateDescriptorHeap")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateDescriptorHeap$VH() { return ID3D12Device5Vtbl$CreateDescriptorHeap$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$LAYOUT() { return ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDescriptorHandleIncrementSize")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$VH() { return ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateRootSignature$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateRootSignature$LAYOUT() { return ID3D12Device5Vtbl$CreateRootSignature$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateRootSignature$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateRootSignature")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateRootSignature$VH() { return ID3D12Device5Vtbl$CreateRootSignature$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateConstantBufferView$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateConstantBufferView$LAYOUT() { return ID3D12Device5Vtbl$CreateConstantBufferView$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateConstantBufferView$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateConstantBufferView")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateConstantBufferView$VH() { return ID3D12Device5Vtbl$CreateConstantBufferView$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateShaderResourceView$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateShaderResourceView$LAYOUT() { return ID3D12Device5Vtbl$CreateShaderResourceView$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateShaderResourceView$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateShaderResourceView")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateShaderResourceView$VH() { return ID3D12Device5Vtbl$CreateShaderResourceView$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateUnorderedAccessView$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateUnorderedAccessView$LAYOUT() { return ID3D12Device5Vtbl$CreateUnorderedAccessView$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateUnorderedAccessView$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateUnorderedAccessView")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateUnorderedAccessView$VH() { return ID3D12Device5Vtbl$CreateUnorderedAccessView$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateRenderTargetView$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateRenderTargetView$LAYOUT() { return ID3D12Device5Vtbl$CreateRenderTargetView$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateRenderTargetView$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateRenderTargetView")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateRenderTargetView$VH() { return ID3D12Device5Vtbl$CreateRenderTargetView$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateDepthStencilView$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateDepthStencilView$LAYOUT() { return ID3D12Device5Vtbl$CreateDepthStencilView$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateDepthStencilView$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateDepthStencilView")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateDepthStencilView$VH() { return ID3D12Device5Vtbl$CreateDepthStencilView$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateSampler$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateSampler$LAYOUT() { return ID3D12Device5Vtbl$CreateSampler$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateSampler$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateSampler")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateSampler$VH() { return ID3D12Device5Vtbl$CreateSampler$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CopyDescriptors$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CopyDescriptors$LAYOUT() { return ID3D12Device5Vtbl$CopyDescriptors$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CopyDescriptors$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CopyDescriptors")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CopyDescriptors$VH() { return ID3D12Device5Vtbl$CopyDescriptors$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CopyDescriptorsSimple$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CopyDescriptorsSimple$LAYOUT() { return ID3D12Device5Vtbl$CopyDescriptorsSimple$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CopyDescriptorsSimple$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CopyDescriptorsSimple")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CopyDescriptorsSimple$VH() { return ID3D12Device5Vtbl$CopyDescriptorsSimple$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetResourceAllocationInfo$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetResourceAllocationInfo$LAYOUT() { return ID3D12Device5Vtbl$GetResourceAllocationInfo$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetResourceAllocationInfo$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetResourceAllocationInfo")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetResourceAllocationInfo$VH() { return ID3D12Device5Vtbl$GetResourceAllocationInfo$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetCustomHeapProperties$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetCustomHeapProperties$LAYOUT() { return ID3D12Device5Vtbl$GetCustomHeapProperties$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetCustomHeapProperties$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCustomHeapProperties")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetCustomHeapProperties$VH() { return ID3D12Device5Vtbl$GetCustomHeapProperties$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateCommittedResource$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateCommittedResource$LAYOUT() { return ID3D12Device5Vtbl$CreateCommittedResource$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateCommittedResource$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateCommittedResource")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateCommittedResource$VH() { return ID3D12Device5Vtbl$CreateCommittedResource$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateHeap$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateHeap$LAYOUT() { return ID3D12Device5Vtbl$CreateHeap$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateHeap$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateHeap")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateHeap$VH() { return ID3D12Device5Vtbl$CreateHeap$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreatePlacedResource$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreatePlacedResource$LAYOUT() { return ID3D12Device5Vtbl$CreatePlacedResource$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreatePlacedResource$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreatePlacedResource")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreatePlacedResource$VH() { return ID3D12Device5Vtbl$CreatePlacedResource$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateReservedResource$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateReservedResource$LAYOUT() { return ID3D12Device5Vtbl$CreateReservedResource$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateReservedResource$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateReservedResource")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateReservedResource$VH() { return ID3D12Device5Vtbl$CreateReservedResource$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateSharedHandle$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateSharedHandle$LAYOUT() { return ID3D12Device5Vtbl$CreateSharedHandle$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateSharedHandle$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateSharedHandle")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateSharedHandle$VH() { return ID3D12Device5Vtbl$CreateSharedHandle$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$OpenSharedHandle$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$OpenSharedHandle$LAYOUT() { return ID3D12Device5Vtbl$OpenSharedHandle$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$OpenSharedHandle$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OpenSharedHandle")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$OpenSharedHandle$VH() { return ID3D12Device5Vtbl$OpenSharedHandle$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$OpenSharedHandleByName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$OpenSharedHandleByName$LAYOUT() { return ID3D12Device5Vtbl$OpenSharedHandleByName$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$OpenSharedHandleByName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OpenSharedHandleByName")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$OpenSharedHandleByName$VH() { return ID3D12Device5Vtbl$OpenSharedHandleByName$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$MakeResident$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$MakeResident$LAYOUT() { return ID3D12Device5Vtbl$MakeResident$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$MakeResident$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MakeResident")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$MakeResident$VH() { return ID3D12Device5Vtbl$MakeResident$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$Evict$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$Evict$LAYOUT() { return ID3D12Device5Vtbl$Evict$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$Evict$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Evict")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$Evict$VH() { return ID3D12Device5Vtbl$Evict$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateFence$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateFence$LAYOUT() { return ID3D12Device5Vtbl$CreateFence$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateFence$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateFence")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateFence$VH() { return ID3D12Device5Vtbl$CreateFence$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetDeviceRemovedReason$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetDeviceRemovedReason$LAYOUT() { return ID3D12Device5Vtbl$GetDeviceRemovedReason$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetDeviceRemovedReason$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDeviceRemovedReason")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetDeviceRemovedReason$VH() { return ID3D12Device5Vtbl$GetDeviceRemovedReason$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetCopyableFootprints$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetCopyableFootprints$LAYOUT() { return ID3D12Device5Vtbl$GetCopyableFootprints$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetCopyableFootprints$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCopyableFootprints")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetCopyableFootprints$VH() { return ID3D12Device5Vtbl$GetCopyableFootprints$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateQueryHeap$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateQueryHeap$LAYOUT() { return ID3D12Device5Vtbl$CreateQueryHeap$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateQueryHeap$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateQueryHeap")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateQueryHeap$VH() { return ID3D12Device5Vtbl$CreateQueryHeap$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$SetStablePowerState$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$SetStablePowerState$LAYOUT() { return ID3D12Device5Vtbl$SetStablePowerState$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$SetStablePowerState$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetStablePowerState")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$SetStablePowerState$VH() { return ID3D12Device5Vtbl$SetStablePowerState$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreateCommandSignature$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreateCommandSignature$LAYOUT() { return ID3D12Device5Vtbl$CreateCommandSignature$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreateCommandSignature$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateCommandSignature")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreateCommandSignature$VH() { return ID3D12Device5Vtbl$CreateCommandSignature$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetResourceTiling$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetResourceTiling$LAYOUT() { return ID3D12Device5Vtbl$GetResourceTiling$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetResourceTiling$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetResourceTiling")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetResourceTiling$VH() { return ID3D12Device5Vtbl$GetResourceTiling$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$GetAdapterLuid$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$GetAdapterLuid$LAYOUT() { return ID3D12Device5Vtbl$GetAdapterLuid$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$GetAdapterLuid$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetAdapterLuid")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$GetAdapterLuid$VH() { return ID3D12Device5Vtbl$GetAdapterLuid$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreatePipelineLibrary$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreatePipelineLibrary$LAYOUT() { return ID3D12Device5Vtbl$CreatePipelineLibrary$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreatePipelineLibrary$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreatePipelineLibrary")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreatePipelineLibrary$VH() { return ID3D12Device5Vtbl$CreatePipelineLibrary$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$LAYOUT() { return ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetEventOnMultipleFenceCompletion")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$VH() { return ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$SetResidencyPriority$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$SetResidencyPriority$LAYOUT() { return ID3D12Device5Vtbl$SetResidencyPriority$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$SetResidencyPriority$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetResidencyPriority")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$SetResidencyPriority$VH() { return ID3D12Device5Vtbl$SetResidencyPriority$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$CreatePipelineState$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$CreatePipelineState$LAYOUT() { return ID3D12Device5Vtbl$CreatePipelineState$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$CreatePipelineState$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreatePipelineState")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$CreatePipelineState$VH() { return ID3D12Device5Vtbl$CreatePipelineState$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$OpenExistingHeapFromAddress$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$OpenExistingHeapFromAddress$LAYOUT() { return ID3D12Device5Vtbl$OpenExistingHeapFromAddress$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$OpenExistingHeapFromAddress$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OpenExistingHeapFromAddress")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$OpenExistingHeapFromAddress$VH() { return ID3D12Device5Vtbl$OpenExistingHeapFromAddress$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$LAYOUT() { return ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OpenExistingHeapFromFileMapping")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$VH() { return ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$VH_; }

    static final MemoryLayout ID3D12Device5Vtbl$EnqueueMakeResident$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Device5Vtbl$EnqueueMakeResident$LAYOUT() { return ID3D12Device5Vtbl$EnqueueMakeResident$LAYOUT_; }

    static final VarHandle ID3D12Device5Vtbl$EnqueueMakeResident$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Device5Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnqueueMakeResident")));
    public static java.lang.invoke.VarHandle ID3D12Device5Vtbl$EnqueueMakeResident$VH() { return ID3D12Device5Vtbl$EnqueueMakeResident$VH_; }

}

