// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class Windows_h$constants$19 extends Windows_h$constants$18 {
    Windows_h$constants$19() {}
    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$Compression$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$Compression$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$Compression$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$Compression$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Compression"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$Compression$VH() { return _TAPE_GET_DRIVE_PARAMETERS$Compression$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$DataPadding$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$DataPadding$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$DataPadding$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$DataPadding$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DataPadding"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$DataPadding$VH() { return _TAPE_GET_DRIVE_PARAMETERS$DataPadding$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ReportSetmarks"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$VH() { return _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DefaultBlockSize"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$VH() { return _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumBlockSize"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$VH() { return _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MinimumBlockSize"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$VH() { return _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumPartitionCount"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$VH() { return _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FeaturesLow"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$VH() { return _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FeaturesHigh"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$VH() { return _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EOTWarningZoneSize"));
    public static java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH() { return _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_BOOL.withName("ECC"),
        C_BOOL.withName("Compression"),
        C_BOOL.withName("DataPadding"),
        C_BOOL.withName("ReportSetmarks"),
        C_INT.withName("EOTWarningZoneSize")
    ).withName("_TAPE_SET_DRIVE_PARAMETERS");
    public static jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$ECC$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$ECC$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$ECC$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$ECC$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ECC"));
    public static java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$ECC$VH() { return _TAPE_SET_DRIVE_PARAMETERS$ECC$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$Compression$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$Compression$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$Compression$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$Compression$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Compression"));
    public static java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$Compression$VH() { return _TAPE_SET_DRIVE_PARAMETERS$Compression$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$DataPadding$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$DataPadding$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$DataPadding$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$DataPadding$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DataPadding"));
    public static java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$DataPadding$VH() { return _TAPE_SET_DRIVE_PARAMETERS$DataPadding$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ReportSetmarks"));
    public static java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$VH() { return _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EOTWarningZoneSize"));
    public static java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH() { return _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH_; }

    static final MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_INT.withName("LowPart"),
            C_INT.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_INT.withName("LowPart"),
                C_INT.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Capacity"),
        MemoryLayout.ofUnion(
            C_INT.withName("LowPart"),
            C_INT.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_INT.withName("LowPart"),
                C_INT.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Remaining"),
        C_INT.withName("BlockSize"),
        C_INT.withName("PartitionCount"),
        C_BOOL.withName("WriteProtected"),
        MemoryLayout.ofPaddingBits(56)
    ).withName("_TAPE_GET_MEDIA_PARAMETERS");
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT() { return _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$BlockSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$BlockSize$LAYOUT() { return _TAPE_GET_MEDIA_PARAMETERS$BlockSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_MEDIA_PARAMETERS$BlockSize$VH_ = _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BlockSize"));
    public static java.lang.invoke.VarHandle _TAPE_GET_MEDIA_PARAMETERS$BlockSize$VH() { return _TAPE_GET_MEDIA_PARAMETERS$BlockSize$VH_; }

    static final MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$LAYOUT() { return _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$LAYOUT_; }

    static final VarHandle _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$VH_ = _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PartitionCount"));
    public static java.lang.invoke.VarHandle _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$VH() { return _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$VH_; }

    static final MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$LAYOUT() { return _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$LAYOUT_; }

    static final VarHandle _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$VH_ = _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("WriteProtected"));
    public static java.lang.invoke.VarHandle _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$VH() { return _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$VH_; }

    static final MemoryLayout _TAPE_SET_MEDIA_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("BlockSize")
    ).withName("_TAPE_SET_MEDIA_PARAMETERS");
    public static jdk.incubator.foreign.MemoryLayout _TAPE_SET_MEDIA_PARAMETERS$struct$LAYOUT() { return _TAPE_SET_MEDIA_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_SET_MEDIA_PARAMETERS$BlockSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_SET_MEDIA_PARAMETERS$BlockSize$LAYOUT() { return _TAPE_SET_MEDIA_PARAMETERS$BlockSize$LAYOUT_; }

    static final VarHandle _TAPE_SET_MEDIA_PARAMETERS$BlockSize$VH_ = _TAPE_SET_MEDIA_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BlockSize"));
    public static java.lang.invoke.VarHandle _TAPE_SET_MEDIA_PARAMETERS$BlockSize$VH() { return _TAPE_SET_MEDIA_PARAMETERS$BlockSize$VH_; }

    static final MemoryLayout _TAPE_CREATE_PARTITION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Method"),
        C_INT.withName("Count"),
        C_INT.withName("Size")
    ).withName("_TAPE_CREATE_PARTITION");
    public static jdk.incubator.foreign.MemoryLayout _TAPE_CREATE_PARTITION$struct$LAYOUT() { return _TAPE_CREATE_PARTITION$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_CREATE_PARTITION$Method$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_CREATE_PARTITION$Method$LAYOUT() { return _TAPE_CREATE_PARTITION$Method$LAYOUT_; }

    static final VarHandle _TAPE_CREATE_PARTITION$Method$VH_ = _TAPE_CREATE_PARTITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Method"));
    public static java.lang.invoke.VarHandle _TAPE_CREATE_PARTITION$Method$VH() { return _TAPE_CREATE_PARTITION$Method$VH_; }

    static final MemoryLayout _TAPE_CREATE_PARTITION$Count$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_CREATE_PARTITION$Count$LAYOUT() { return _TAPE_CREATE_PARTITION$Count$LAYOUT_; }

    static final VarHandle _TAPE_CREATE_PARTITION$Count$VH_ = _TAPE_CREATE_PARTITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    public static java.lang.invoke.VarHandle _TAPE_CREATE_PARTITION$Count$VH() { return _TAPE_CREATE_PARTITION$Count$VH_; }

    static final MemoryLayout _TAPE_CREATE_PARTITION$Size$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_CREATE_PARTITION$Size$LAYOUT() { return _TAPE_CREATE_PARTITION$Size$LAYOUT_; }

    static final VarHandle _TAPE_CREATE_PARTITION$Size$VH_ = _TAPE_CREATE_PARTITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    public static java.lang.invoke.VarHandle _TAPE_CREATE_PARTITION$Size$VH() { return _TAPE_CREATE_PARTITION$Size$VH_; }

    static final MemoryLayout _TAPE_WMI_OPERATIONS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Method"),
        C_INT.withName("DataBufferSize"),
        C_POINTER.withName("DataBuffer")
    ).withName("_TAPE_WMI_OPERATIONS");
    public static jdk.incubator.foreign.MemoryLayout _TAPE_WMI_OPERATIONS$struct$LAYOUT() { return _TAPE_WMI_OPERATIONS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_WMI_OPERATIONS$Method$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_WMI_OPERATIONS$Method$LAYOUT() { return _TAPE_WMI_OPERATIONS$Method$LAYOUT_; }

    static final VarHandle _TAPE_WMI_OPERATIONS$Method$VH_ = _TAPE_WMI_OPERATIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Method"));
    public static java.lang.invoke.VarHandle _TAPE_WMI_OPERATIONS$Method$VH() { return _TAPE_WMI_OPERATIONS$Method$VH_; }

    static final MemoryLayout _TAPE_WMI_OPERATIONS$DataBufferSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_WMI_OPERATIONS$DataBufferSize$LAYOUT() { return _TAPE_WMI_OPERATIONS$DataBufferSize$LAYOUT_; }

    static final VarHandle _TAPE_WMI_OPERATIONS$DataBufferSize$VH_ = _TAPE_WMI_OPERATIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataBufferSize"));
    public static java.lang.invoke.VarHandle _TAPE_WMI_OPERATIONS$DataBufferSize$VH() { return _TAPE_WMI_OPERATIONS$DataBufferSize$VH_; }

    static final MemoryLayout _TAPE_WMI_OPERATIONS$DataBuffer$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TAPE_WMI_OPERATIONS$DataBuffer$LAYOUT() { return _TAPE_WMI_OPERATIONS$DataBuffer$LAYOUT_; }

    static final VarHandle _TAPE_WMI_OPERATIONS$DataBuffer$VH_ = MemoryHandles.asAddressVarHandle(_TAPE_WMI_OPERATIONS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DataBuffer")));
    public static java.lang.invoke.VarHandle _TAPE_WMI_OPERATIONS$DataBuffer$VH() { return _TAPE_WMI_OPERATIONS$DataBuffer$VH_; }

    public static int TapeDriveProblemNone() { return (int)0L; }

    public static int TapeDriveReadWriteWarning() { return (int)1L; }

    public static int TapeDriveReadWriteError() { return (int)2L; }

    public static int TapeDriveReadWarning() { return (int)3L; }

    public static int TapeDriveWriteWarning() { return (int)4L; }

    public static int TapeDriveReadError() { return (int)5L; }

    public static int TapeDriveWriteError() { return (int)6L; }

    public static int TapeDriveHardwareError() { return (int)7L; }

    public static int TapeDriveUnsupportedMedia() { return (int)8L; }

    public static int TapeDriveScsiConnectionError() { return (int)9L; }

    public static int TapeDriveTimetoClean() { return (int)10L; }

    public static int TapeDriveCleanDriveNow() { return (int)11L; }

    public static int TapeDriveMediaLifeExpired() { return (int)12L; }

    public static int TapeDriveSnappedTape() { return (int)13L; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TransactionKey"),
        C_INT.withName("TransactionNotification"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_INT.withName("LowPart"),
            C_INT.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_INT.withName("LowPart"),
                C_INT.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("TmVirtualClock"),
        C_INT.withName("ArgumentLength"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_TRANSACTION_NOTIFICATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION$struct$LAYOUT() { return _TRANSACTION_NOTIFICATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION$TransactionKey$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION$TransactionKey$LAYOUT() { return _TRANSACTION_NOTIFICATION$TransactionKey$LAYOUT_; }

    static final VarHandle _TRANSACTION_NOTIFICATION$TransactionKey$VH_ = MemoryHandles.asAddressVarHandle(_TRANSACTION_NOTIFICATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TransactionKey")));
    public static java.lang.invoke.VarHandle _TRANSACTION_NOTIFICATION$TransactionKey$VH() { return _TRANSACTION_NOTIFICATION$TransactionKey$VH_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION$TransactionNotification$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION$TransactionNotification$LAYOUT() { return _TRANSACTION_NOTIFICATION$TransactionNotification$LAYOUT_; }

    static final VarHandle _TRANSACTION_NOTIFICATION$TransactionNotification$VH_ = _TRANSACTION_NOTIFICATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TransactionNotification"));
    public static java.lang.invoke.VarHandle _TRANSACTION_NOTIFICATION$TransactionNotification$VH() { return _TRANSACTION_NOTIFICATION$TransactionNotification$VH_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION$ArgumentLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION$ArgumentLength$LAYOUT() { return _TRANSACTION_NOTIFICATION$ArgumentLength$LAYOUT_; }

    static final VarHandle _TRANSACTION_NOTIFICATION$ArgumentLength$VH_ = _TRANSACTION_NOTIFICATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ArgumentLength"));
    public static java.lang.invoke.VarHandle _TRANSACTION_NOTIFICATION$ArgumentLength$VH() { return _TRANSACTION_NOTIFICATION$ArgumentLength$VH_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("EnlistmentId"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("UOW")
    ).withName("_TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT$struct$LAYOUT() { return _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("TmIdentity"),
        C_INT.withName("Flags")
    ).withName("_TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$struct$LAYOUT() { return _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$Flags$LAYOUT() { return _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$Flags$LAYOUT_; }

    static final VarHandle _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$Flags$VH_ = _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$Flags$VH() { return _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT$Flags$VH_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("SavepointId")
    ).withName("_TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$struct$LAYOUT() { return _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$SavepointId$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$SavepointId$LAYOUT() { return _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$SavepointId$LAYOUT_; }

    static final VarHandle _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$SavepointId$VH_ = _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SavepointId"));
    public static java.lang.invoke.VarHandle _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$SavepointId$VH() { return _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT$SavepointId$VH_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("PropagationCookie"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("UOW"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("TmIdentity"),
        C_INT.withName("BufferLength")
    ).withName("_TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$struct$LAYOUT() { return _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$PropagationCookie$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$PropagationCookie$LAYOUT() { return _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$PropagationCookie$LAYOUT_; }

    static final VarHandle _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$PropagationCookie$VH_ = _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PropagationCookie"));
    public static java.lang.invoke.VarHandle _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$PropagationCookie$VH() { return _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$PropagationCookie$VH_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$BufferLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$BufferLength$LAYOUT() { return _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$BufferLength$LAYOUT_; }

    static final VarHandle _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$BufferLength$VH_ = _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferLength"));
    public static java.lang.invoke.VarHandle _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$BufferLength$VH() { return _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT$BufferLength$VH_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("MarshalCookie"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("UOW")
    ).withName("_TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$struct$LAYOUT() { return _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$MarshalCookie$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$MarshalCookie$LAYOUT() { return _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$MarshalCookie$LAYOUT_; }

    static final VarHandle _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$MarshalCookie$VH_ = _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MarshalCookie"));
    public static java.lang.invoke.VarHandle _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$MarshalCookie$VH() { return _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT$MarshalCookie$VH_; }

    static final MemoryLayout _KCRM_MARSHAL_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("VersionMajor"),
        C_INT.withName("VersionMinor"),
        C_INT.withName("NumProtocols"),
        C_INT.withName("Unused")
    ).withName("_KCRM_MARSHAL_HEADER");
    public static jdk.incubator.foreign.MemoryLayout _KCRM_MARSHAL_HEADER$struct$LAYOUT() { return _KCRM_MARSHAL_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _KCRM_MARSHAL_HEADER$VersionMajor$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_MARSHAL_HEADER$VersionMajor$LAYOUT() { return _KCRM_MARSHAL_HEADER$VersionMajor$LAYOUT_; }

    static final VarHandle _KCRM_MARSHAL_HEADER$VersionMajor$VH_ = _KCRM_MARSHAL_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VersionMajor"));
    public static java.lang.invoke.VarHandle _KCRM_MARSHAL_HEADER$VersionMajor$VH() { return _KCRM_MARSHAL_HEADER$VersionMajor$VH_; }

    static final MemoryLayout _KCRM_MARSHAL_HEADER$VersionMinor$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_MARSHAL_HEADER$VersionMinor$LAYOUT() { return _KCRM_MARSHAL_HEADER$VersionMinor$LAYOUT_; }

    static final VarHandle _KCRM_MARSHAL_HEADER$VersionMinor$VH_ = _KCRM_MARSHAL_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VersionMinor"));
    public static java.lang.invoke.VarHandle _KCRM_MARSHAL_HEADER$VersionMinor$VH() { return _KCRM_MARSHAL_HEADER$VersionMinor$VH_; }

    static final MemoryLayout _KCRM_MARSHAL_HEADER$NumProtocols$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_MARSHAL_HEADER$NumProtocols$LAYOUT() { return _KCRM_MARSHAL_HEADER$NumProtocols$LAYOUT_; }

    static final VarHandle _KCRM_MARSHAL_HEADER$NumProtocols$VH_ = _KCRM_MARSHAL_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumProtocols"));
    public static java.lang.invoke.VarHandle _KCRM_MARSHAL_HEADER$NumProtocols$VH() { return _KCRM_MARSHAL_HEADER$NumProtocols$VH_; }

    static final MemoryLayout _KCRM_MARSHAL_HEADER$Unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_MARSHAL_HEADER$Unused$LAYOUT() { return _KCRM_MARSHAL_HEADER$Unused$LAYOUT_; }

    static final VarHandle _KCRM_MARSHAL_HEADER$Unused$VH_ = _KCRM_MARSHAL_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Unused"));
    public static java.lang.invoke.VarHandle _KCRM_MARSHAL_HEADER$Unused$VH() { return _KCRM_MARSHAL_HEADER$Unused$VH_; }

    static final MemoryLayout _KCRM_TRANSACTION_BLOB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("UOW"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("TmIdentity"),
        C_INT.withName("IsolationLevel"),
        C_INT.withName("IsolationFlags"),
        C_INT.withName("Timeout"),
        MemoryLayout.ofSequence(64, C_SHORT).withName("Description")
    ).withName("_KCRM_TRANSACTION_BLOB");
    public static jdk.incubator.foreign.MemoryLayout _KCRM_TRANSACTION_BLOB$struct$LAYOUT() { return _KCRM_TRANSACTION_BLOB$struct$LAYOUT_; }

    static final MemoryLayout _KCRM_TRANSACTION_BLOB$IsolationLevel$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_TRANSACTION_BLOB$IsolationLevel$LAYOUT() { return _KCRM_TRANSACTION_BLOB$IsolationLevel$LAYOUT_; }

    static final VarHandle _KCRM_TRANSACTION_BLOB$IsolationLevel$VH_ = _KCRM_TRANSACTION_BLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolationLevel"));
    public static java.lang.invoke.VarHandle _KCRM_TRANSACTION_BLOB$IsolationLevel$VH() { return _KCRM_TRANSACTION_BLOB$IsolationLevel$VH_; }

    static final MemoryLayout _KCRM_TRANSACTION_BLOB$IsolationFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_TRANSACTION_BLOB$IsolationFlags$LAYOUT() { return _KCRM_TRANSACTION_BLOB$IsolationFlags$LAYOUT_; }

    static final VarHandle _KCRM_TRANSACTION_BLOB$IsolationFlags$VH_ = _KCRM_TRANSACTION_BLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolationFlags"));
    public static java.lang.invoke.VarHandle _KCRM_TRANSACTION_BLOB$IsolationFlags$VH() { return _KCRM_TRANSACTION_BLOB$IsolationFlags$VH_; }

    static final MemoryLayout _KCRM_TRANSACTION_BLOB$Timeout$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_TRANSACTION_BLOB$Timeout$LAYOUT() { return _KCRM_TRANSACTION_BLOB$Timeout$LAYOUT_; }

    static final VarHandle _KCRM_TRANSACTION_BLOB$Timeout$VH_ = _KCRM_TRANSACTION_BLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Timeout"));
    public static java.lang.invoke.VarHandle _KCRM_TRANSACTION_BLOB$Timeout$VH() { return _KCRM_TRANSACTION_BLOB$Timeout$VH_; }

    static final MemoryLayout _KCRM_PROTOCOL_BLOB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("ProtocolId"),
        C_INT.withName("StaticInfoLength"),
        C_INT.withName("TransactionIdInfoLength"),
        C_INT.withName("Unused1"),
        C_INT.withName("Unused2")
    ).withName("_KCRM_PROTOCOL_BLOB");
    public static jdk.incubator.foreign.MemoryLayout _KCRM_PROTOCOL_BLOB$struct$LAYOUT() { return _KCRM_PROTOCOL_BLOB$struct$LAYOUT_; }

    static final MemoryLayout _KCRM_PROTOCOL_BLOB$StaticInfoLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_PROTOCOL_BLOB$StaticInfoLength$LAYOUT() { return _KCRM_PROTOCOL_BLOB$StaticInfoLength$LAYOUT_; }

    static final VarHandle _KCRM_PROTOCOL_BLOB$StaticInfoLength$VH_ = _KCRM_PROTOCOL_BLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StaticInfoLength"));
    public static java.lang.invoke.VarHandle _KCRM_PROTOCOL_BLOB$StaticInfoLength$VH() { return _KCRM_PROTOCOL_BLOB$StaticInfoLength$VH_; }

    static final MemoryLayout _KCRM_PROTOCOL_BLOB$TransactionIdInfoLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_PROTOCOL_BLOB$TransactionIdInfoLength$LAYOUT() { return _KCRM_PROTOCOL_BLOB$TransactionIdInfoLength$LAYOUT_; }

    static final VarHandle _KCRM_PROTOCOL_BLOB$TransactionIdInfoLength$VH_ = _KCRM_PROTOCOL_BLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TransactionIdInfoLength"));
    public static java.lang.invoke.VarHandle _KCRM_PROTOCOL_BLOB$TransactionIdInfoLength$VH() { return _KCRM_PROTOCOL_BLOB$TransactionIdInfoLength$VH_; }

    static final MemoryLayout _KCRM_PROTOCOL_BLOB$Unused1$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_PROTOCOL_BLOB$Unused1$LAYOUT() { return _KCRM_PROTOCOL_BLOB$Unused1$LAYOUT_; }

    static final VarHandle _KCRM_PROTOCOL_BLOB$Unused1$VH_ = _KCRM_PROTOCOL_BLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Unused1"));
    public static java.lang.invoke.VarHandle _KCRM_PROTOCOL_BLOB$Unused1$VH() { return _KCRM_PROTOCOL_BLOB$Unused1$VH_; }

    static final MemoryLayout _KCRM_PROTOCOL_BLOB$Unused2$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KCRM_PROTOCOL_BLOB$Unused2$LAYOUT() { return _KCRM_PROTOCOL_BLOB$Unused2$LAYOUT_; }

    static final VarHandle _KCRM_PROTOCOL_BLOB$Unused2$VH_ = _KCRM_PROTOCOL_BLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Unused2"));
    public static java.lang.invoke.VarHandle _KCRM_PROTOCOL_BLOB$Unused2$VH() { return _KCRM_PROTOCOL_BLOB$Unused2$VH_; }

    public static int TransactionOutcomeUndetermined() { return (int)1L; }

    public static int TransactionOutcomeCommitted() { return (int)2L; }

    public static int TransactionOutcomeAborted() { return (int)3L; }

    public static int TransactionStateNormal() { return (int)1L; }

    public static int TransactionStateIndoubt() { return (int)2L; }

    public static int TransactionStateCommittedNotify() { return (int)3L; }

    static final MemoryLayout _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("TransactionId"),
        C_INT.withName("State"),
        C_INT.withName("Outcome")
    ).withName("_TRANSACTION_BASIC_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT() { return _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_BASIC_INFORMATION$State$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_BASIC_INFORMATION$State$LAYOUT() { return _TRANSACTION_BASIC_INFORMATION$State$LAYOUT_; }

    static final VarHandle _TRANSACTION_BASIC_INFORMATION$State$VH_ = _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("State"));
    public static java.lang.invoke.VarHandle _TRANSACTION_BASIC_INFORMATION$State$VH() { return _TRANSACTION_BASIC_INFORMATION$State$VH_; }

    static final MemoryLayout _TRANSACTION_BASIC_INFORMATION$Outcome$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_BASIC_INFORMATION$Outcome$LAYOUT() { return _TRANSACTION_BASIC_INFORMATION$Outcome$LAYOUT_; }

    static final VarHandle _TRANSACTION_BASIC_INFORMATION$Outcome$VH_ = _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Outcome"));
    public static java.lang.invoke.VarHandle _TRANSACTION_BASIC_INFORMATION$Outcome$VH() { return _TRANSACTION_BASIC_INFORMATION$Outcome$VH_; }

    static final MemoryLayout _TRANSACTIONMANAGER_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("TmIdentity"),
        MemoryLayout.ofUnion(
            C_INT.withName("LowPart"),
            C_INT.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_INT.withName("LowPart"),
                C_INT.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("VirtualClock")
    ).withName("_TRANSACTIONMANAGER_BASIC_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_BASIC_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTIONMANAGER_LOG_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("LogIdentity")
    ).withName("_TRANSACTIONMANAGER_LOG_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_LOG_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_LOG_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTIONMANAGER_LOGPATH_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("LogPathLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("LogPath"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_TRANSACTIONMANAGER_LOGPATH_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_LOGPATH_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_LOGPATH_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$LAYOUT() { return _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$LAYOUT_; }

    static final VarHandle _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$VH_ = _TRANSACTIONMANAGER_LOGPATH_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LogPathLength"));
    public static java.lang.invoke.VarHandle _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$VH() { return _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$VH_; }

    static final MemoryLayout _TRANSACTIONMANAGER_RECOVERY_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("LastRecoveredLsn")
    ).withName("_TRANSACTIONMANAGER_RECOVERY_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_RECOVERY_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_RECOVERY_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$LAYOUT() { return _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$LAYOUT_; }

    static final VarHandle _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$VH_ = _TRANSACTIONMANAGER_RECOVERY_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LastRecoveredLsn"));
    public static java.lang.invoke.VarHandle _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$VH() { return _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$VH_; }

    static final MemoryLayout _TRANSACTIONMANAGER_OLDEST_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("OldestTransactionGuid")
    ).withName("_TRANSACTIONMANAGER_OLDEST_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_OLDEST_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_OLDEST_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("IsolationLevel"),
        C_INT.withName("IsolationFlags"),
        MemoryLayout.ofUnion(
            C_INT.withName("LowPart"),
            C_INT.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_INT.withName("LowPart"),
                C_INT.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Timeout"),
        C_INT.withName("Outcome"),
        C_INT.withName("DescriptionLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("Description"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("_TRANSACTION_PROPERTIES_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$LAYOUT_; }

    static final VarHandle _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$VH_ = _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolationLevel"));
    public static java.lang.invoke.VarHandle _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$VH() { return _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$VH_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$LAYOUT_; }

    static final VarHandle _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$VH_ = _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolationFlags"));
    public static java.lang.invoke.VarHandle _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$VH() { return _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$VH_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$Outcome$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$Outcome$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$Outcome$LAYOUT_; }

    static final VarHandle _TRANSACTION_PROPERTIES_INFORMATION$Outcome$VH_ = _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Outcome"));
    public static java.lang.invoke.VarHandle _TRANSACTION_PROPERTIES_INFORMATION$Outcome$VH() { return _TRANSACTION_PROPERTIES_INFORMATION$Outcome$VH_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$LAYOUT_; }

    static final VarHandle _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$VH_ = _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DescriptionLength"));
    public static java.lang.invoke.VarHandle _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$VH() { return _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$VH_; }

    static final MemoryLayout _TRANSACTION_BIND_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TmHandle")
    ).withName("_TRANSACTION_BIND_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_BIND_INFORMATION$struct$LAYOUT() { return _TRANSACTION_BIND_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_BIND_INFORMATION$TmHandle$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_BIND_INFORMATION$TmHandle$LAYOUT() { return _TRANSACTION_BIND_INFORMATION$TmHandle$LAYOUT_; }

    static final VarHandle _TRANSACTION_BIND_INFORMATION$TmHandle$VH_ = MemoryHandles.asAddressVarHandle(_TRANSACTION_BIND_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TmHandle")));
    public static java.lang.invoke.VarHandle _TRANSACTION_BIND_INFORMATION$TmHandle$VH() { return _TRANSACTION_BIND_INFORMATION$TmHandle$VH_; }

    static final MemoryLayout _TRANSACTION_ENLISTMENT_PAIR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("EnlistmentId"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("ResourceManagerId")
    ).withName("_TRANSACTION_ENLISTMENT_PAIR");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_ENLISTMENT_PAIR$struct$LAYOUT() { return _TRANSACTION_ENLISTMENT_PAIR$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_ENLISTMENTS_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NumberOfEnlistments"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_INT.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
            ).withName("EnlistmentId"),
            MemoryLayout.ofStruct(
                C_INT.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
            ).withName("ResourceManagerId")
        ).withName("_TRANSACTION_ENLISTMENT_PAIR")).withName("EnlistmentPair")
    ).withName("_TRANSACTION_ENLISTMENTS_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_ENLISTMENTS_INFORMATION$struct$LAYOUT() { return _TRANSACTION_ENLISTMENTS_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$LAYOUT() { return _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$LAYOUT_; }

    static final VarHandle _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$VH_ = _TRANSACTION_ENLISTMENTS_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfEnlistments"));
    public static java.lang.invoke.VarHandle _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$VH() { return _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$VH_; }

    static final MemoryLayout _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_INT.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
            ).withName("EnlistmentId"),
            MemoryLayout.ofStruct(
                C_INT.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
            ).withName("ResourceManagerId")
        ).withName("SuperiorEnlistmentPair")
    ).withName("_TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION$struct$LAYOUT() { return _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _RESOURCEMANAGER_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("ResourceManagerId"),
        C_INT.withName("DescriptionLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("Description"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_RESOURCEMANAGER_BASIC_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_BASIC_INFORMATION$struct$LAYOUT() { return _RESOURCEMANAGER_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$LAYOUT() { return _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$LAYOUT_; }

    static final VarHandle _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$VH_ = _RESOURCEMANAGER_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DescriptionLength"));
    public static java.lang.invoke.VarHandle _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$VH() { return _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$VH_; }

    static final MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("IoCompletionPortHandle"),
        C_LONGLONG.withName("CompletionKey")
    ).withName("_RESOURCEMANAGER_COMPLETION_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$LAYOUT() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$LAYOUT_; }

    static final VarHandle _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$VH_ = MemoryHandles.asAddressVarHandle(_RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoCompletionPortHandle")));
    public static java.lang.invoke.VarHandle _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$VH() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$VH_; }

    static final MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$LAYOUT() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$LAYOUT_; }

    static final VarHandle _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$VH_ = _RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CompletionKey"));
    public static java.lang.invoke.VarHandle _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$VH() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$VH_; }

    public static int TransactionBasicInformation() { return (int)0L; }

    public static int TransactionPropertiesInformation() { return (int)1L; }

    public static int TransactionEnlistmentInformation() { return (int)2L; }

    public static int TransactionSuperiorEnlistmentInformation() { return (int)3L; }

    public static int TransactionBindInformation() { return (int)4L; }

    public static int TransactionDTCPrivateInformation() { return (int)5L; }

    public static int TransactionManagerBasicInformation() { return (int)0L; }

    public static int TransactionManagerLogInformation() { return (int)1L; }

    public static int TransactionManagerLogPathInformation() { return (int)2L; }

    public static int TransactionManagerRecoveryInformation() { return (int)4L; }

    public static int TransactionManagerOnlineProbeInformation() { return (int)3L; }

    public static int TransactionManagerOldestTransactionInformation() { return (int)5L; }

    public static int ResourceManagerBasicInformation() { return (int)0L; }

    public static int ResourceManagerCompletionInformation() { return (int)1L; }

    static final MemoryLayout _ENLISTMENT_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("EnlistmentId"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("TransactionId"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("ResourceManagerId")
    ).withName("_ENLISTMENT_BASIC_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _ENLISTMENT_BASIC_INFORMATION$struct$LAYOUT() { return _ENLISTMENT_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _ENLISTMENT_CRM_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("CrmTransactionManagerId"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("CrmResourceManagerId"),
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("CrmEnlistmentId")
    ).withName("_ENLISTMENT_CRM_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _ENLISTMENT_CRM_INFORMATION$struct$LAYOUT() { return _ENLISTMENT_CRM_INFORMATION$struct$LAYOUT_; }

    public static int EnlistmentBasicInformation() { return (int)0L; }

    public static int EnlistmentRecoveryInformation() { return (int)1L; }

    public static int EnlistmentCrmInformation() { return (int)2L; }

    static final MemoryLayout _TRANSACTION_LIST_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("UOW")
    ).withName("_TRANSACTION_LIST_ENTRY");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_LIST_ENTRY$struct$LAYOUT() { return _TRANSACTION_LIST_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_LIST_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NumberOfTransactions"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_INT.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
            ).withName("UOW")
        ).withName("_TRANSACTION_LIST_ENTRY")).withName("TransactionInformation")
    ).withName("_TRANSACTION_LIST_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_LIST_INFORMATION$struct$LAYOUT() { return _TRANSACTION_LIST_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$LAYOUT() { return _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$LAYOUT_; }

    static final VarHandle _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$VH_ = _TRANSACTION_LIST_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfTransactions"));
    public static java.lang.invoke.VarHandle _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$VH() { return _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$VH_; }

    public static int KTMOBJECT_TRANSACTION() { return (int)0L; }

    public static int KTMOBJECT_TRANSACTION_MANAGER() { return (int)1L; }

    public static int KTMOBJECT_RESOURCE_MANAGER() { return (int)2L; }

    public static int KTMOBJECT_ENLISTMENT() { return (int)3L; }

    public static int KTMOBJECT_INVALID() { return (int)4L; }

    static final MemoryLayout _KTMOBJECT_CURSOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("LastQuery"),
        C_INT.withName("ObjectIdCount"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("_GUID")).withName("ObjectIds")
    ).withName("_KTMOBJECT_CURSOR");
    public static jdk.incubator.foreign.MemoryLayout _KTMOBJECT_CURSOR$struct$LAYOUT() { return _KTMOBJECT_CURSOR$struct$LAYOUT_; }

    static final MemoryLayout _KTMOBJECT_CURSOR$ObjectIdCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _KTMOBJECT_CURSOR$ObjectIdCount$LAYOUT() { return _KTMOBJECT_CURSOR$ObjectIdCount$LAYOUT_; }

    static final VarHandle _KTMOBJECT_CURSOR$ObjectIdCount$VH_ = _KTMOBJECT_CURSOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ObjectIdCount"));
    public static java.lang.invoke.VarHandle _KTMOBJECT_CURSOR$ObjectIdCount$VH() { return _KTMOBJECT_CURSOR$ObjectIdCount$VH_; }

    public static int TP_CALLBACK_PRIORITY_HIGH() { return (int)0L; }

    public static int TP_CALLBACK_PRIORITY_NORMAL() { return (int)1L; }

    public static int TP_CALLBACK_PRIORITY_LOW() { return (int)2L; }

    public static int TP_CALLBACK_PRIORITY_INVALID() { return (int)3L; }

    public static int TP_CALLBACK_PRIORITY_COUNT() { return (int)3L; }

    static final MemoryLayout _TP_POOL_STACK_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StackReserve"),
        C_LONGLONG.withName("StackCommit")
    ).withName("_TP_POOL_STACK_INFORMATION");
    public static jdk.incubator.foreign.MemoryLayout _TP_POOL_STACK_INFORMATION$struct$LAYOUT() { return _TP_POOL_STACK_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TP_POOL_STACK_INFORMATION$StackReserve$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout _TP_POOL_STACK_INFORMATION$StackReserve$LAYOUT() { return _TP_POOL_STACK_INFORMATION$StackReserve$LAYOUT_; }

    static final VarHandle _TP_POOL_STACK_INFORMATION$StackReserve$VH_ = _TP_POOL_STACK_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StackReserve"));
    public static java.lang.invoke.VarHandle _TP_POOL_STACK_INFORMATION$StackReserve$VH() { return _TP_POOL_STACK_INFORMATION$StackReserve$VH_; }

    static final MemoryLayout _TP_POOL_STACK_INFORMATION$StackCommit$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout _TP_POOL_STACK_INFORMATION$StackCommit$LAYOUT() { return _TP_POOL_STACK_INFORMATION$StackCommit$LAYOUT_; }

    static final VarHandle _TP_POOL_STACK_INFORMATION$StackCommit$VH_ = _TP_POOL_STACK_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StackCommit"));
    public static java.lang.invoke.VarHandle _TP_POOL_STACK_INFORMATION$StackCommit$VH() { return _TP_POOL_STACK_INFORMATION$StackCommit$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Pool"),
        C_POINTER.withName("CleanupGroup"),
        C_POINTER.withName("CleanupGroupCancelCallback"),
        C_POINTER.withName("RaceDll"),
        C_POINTER.withName("ActivationContext"),
        C_POINTER.withName("FinalizationCallback"),
        MemoryLayout.ofUnion(
            C_INT.withName("Flags"),
            MemoryLayout.ofStruct(
                C_INT
            ).withName("s")
        ).withName("u"),
        C_INT.withName("CallbackPriority"),
        C_INT.withName("Size"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_TP_CALLBACK_ENVIRON_V3");
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$Version$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$Version$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$Version$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$Version$VH_ = _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$Version$VH() { return _TP_CALLBACK_ENVIRON_V3$Version$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$Pool$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$Pool$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$Pool$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$Pool$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Pool")));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$Pool$VH() { return _TP_CALLBACK_ENVIRON_V3$Pool$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$CleanupGroup$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$CleanupGroup$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$CleanupGroup$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$CleanupGroup$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CleanupGroup")));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$CleanupGroup$VH() { return _TP_CALLBACK_ENVIRON_V3$CleanupGroup$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CleanupGroupCancelCallback")));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$VH() { return _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$RaceDll$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$RaceDll$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$RaceDll$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$RaceDll$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RaceDll")));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$RaceDll$VH() { return _TP_CALLBACK_ENVIRON_V3$RaceDll$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$ActivationContext$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$ActivationContext$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$ActivationContext$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$ActivationContext$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ActivationContext")));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$ActivationContext$VH() { return _TP_CALLBACK_ENVIRON_V3$ActivationContext$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FinalizationCallback")));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$VH() { return _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$VH_; }

    static final MemoryLayout u$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout u$Flags$LAYOUT() { return u$Flags$LAYOUT_; }

    static final VarHandle u$Flags$VH_ = u$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle u$Flags$VH() { return u$Flags$VH_; }

    static final MemoryLayout s$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT
    );
    public static jdk.incubator.foreign.MemoryLayout s$struct$LAYOUT() { return s$struct$LAYOUT_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$CallbackPriority$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$CallbackPriority$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$CallbackPriority$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$CallbackPriority$VH_ = _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallbackPriority"));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$CallbackPriority$VH() { return _TP_CALLBACK_ENVIRON_V3$CallbackPriority$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$Size$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$Size$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$Size$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$Size$VH_ = _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    public static java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$Size$VH() { return _TP_CALLBACK_ENVIRON_V3$Size$VH_; }

    static final FunctionDescriptor TpInitializeCallbackEnviron$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpInitializeCallbackEnviron$FUNC() { return TpInitializeCallbackEnviron$FUNC_; }

    static final MethodHandle TpInitializeCallbackEnviron$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpInitializeCallbackEnviron",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpInitializeCallbackEnviron$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpInitializeCallbackEnviron$MH() { return TpInitializeCallbackEnviron$MH_; }

    static final FunctionDescriptor TpSetCallbackThreadpool$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackThreadpool$FUNC() { return TpSetCallbackThreadpool$FUNC_; }

    static final MethodHandle TpSetCallbackThreadpool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackThreadpool",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackThreadpool$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackThreadpool$MH() { return TpSetCallbackThreadpool$MH_; }

    static final FunctionDescriptor TpSetCallbackCleanupGroup$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackCleanupGroup$FUNC() { return TpSetCallbackCleanupGroup$FUNC_; }

    static final MethodHandle TpSetCallbackCleanupGroup$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackCleanupGroup",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackCleanupGroup$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackCleanupGroup$MH() { return TpSetCallbackCleanupGroup$MH_; }

    static final FunctionDescriptor TpSetCallbackCleanupGroup$CleanupGroupCancelCallback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackCleanupGroup$CleanupGroupCancelCallback$FUNC() { return TpSetCallbackCleanupGroup$CleanupGroupCancelCallback$FUNC_; }

    static final FunctionDescriptor TpSetCallbackActivationContext$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackActivationContext$FUNC() { return TpSetCallbackActivationContext$FUNC_; }

    static final MethodHandle TpSetCallbackActivationContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackActivationContext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackActivationContext$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackActivationContext$MH() { return TpSetCallbackActivationContext$MH_; }

    static final FunctionDescriptor TpSetCallbackNoActivationContext$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackNoActivationContext$FUNC() { return TpSetCallbackNoActivationContext$FUNC_; }

    static final MethodHandle TpSetCallbackNoActivationContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackNoActivationContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackNoActivationContext$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackNoActivationContext$MH() { return TpSetCallbackNoActivationContext$MH_; }

    static final FunctionDescriptor TpSetCallbackLongFunction$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackLongFunction$FUNC() { return TpSetCallbackLongFunction$FUNC_; }

    static final MethodHandle TpSetCallbackLongFunction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackLongFunction",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackLongFunction$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackLongFunction$MH() { return TpSetCallbackLongFunction$MH_; }

    static final FunctionDescriptor TpSetCallbackRaceWithDll$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackRaceWithDll$FUNC() { return TpSetCallbackRaceWithDll$FUNC_; }

    static final MethodHandle TpSetCallbackRaceWithDll$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackRaceWithDll",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackRaceWithDll$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackRaceWithDll$MH() { return TpSetCallbackRaceWithDll$MH_; }

    static final FunctionDescriptor TpSetCallbackFinalizationCallback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackFinalizationCallback$FUNC() { return TpSetCallbackFinalizationCallback$FUNC_; }

    static final MethodHandle TpSetCallbackFinalizationCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackFinalizationCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackFinalizationCallback$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackFinalizationCallback$MH() { return TpSetCallbackFinalizationCallback$MH_; }

    static final FunctionDescriptor TpSetCallbackFinalizationCallback$FinalizationCallback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackFinalizationCallback$FinalizationCallback$FUNC() { return TpSetCallbackFinalizationCallback$FinalizationCallback$FUNC_; }

    static final FunctionDescriptor TpSetCallbackPriority$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackPriority$FUNC() { return TpSetCallbackPriority$FUNC_; }

    static final MethodHandle TpSetCallbackPriority$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackPriority",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        TpSetCallbackPriority$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackPriority$MH() { return TpSetCallbackPriority$MH_; }

    static final FunctionDescriptor TpSetCallbackPersistent$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpSetCallbackPersistent$FUNC() { return TpSetCallbackPersistent$FUNC_; }

    static final MethodHandle TpSetCallbackPersistent$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackPersistent",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackPersistent$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpSetCallbackPersistent$MH() { return TpSetCallbackPersistent$MH_; }

    static final FunctionDescriptor TpDestroyCallbackEnviron$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TpDestroyCallbackEnviron$FUNC() { return TpDestroyCallbackEnviron$FUNC_; }

    static final MethodHandle TpDestroyCallbackEnviron$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpDestroyCallbackEnviron",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpDestroyCallbackEnviron$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TpDestroyCallbackEnviron$MH() { return TpDestroyCallbackEnviron$MH_; }

    static final FunctionDescriptor NtCurrentTeb$FUNC_ = FunctionDescriptor.of(C_POINTER);
    public static jdk.incubator.foreign.FunctionDescriptor NtCurrentTeb$FUNC() { return NtCurrentTeb$FUNC_; }

    static final MethodHandle NtCurrentTeb$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "NtCurrentTeb",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        NtCurrentTeb$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle NtCurrentTeb$MH() { return NtCurrentTeb$MH_; }

    static final FunctionDescriptor GetCurrentFiber$FUNC_ = FunctionDescriptor.of(C_POINTER);
    public static jdk.incubator.foreign.FunctionDescriptor GetCurrentFiber$FUNC() { return GetCurrentFiber$FUNC_; }

    static final MethodHandle GetCurrentFiber$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetCurrentFiber",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        GetCurrentFiber$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetCurrentFiber$MH() { return GetCurrentFiber$MH_; }

    static final FunctionDescriptor GetFiberData$FUNC_ = FunctionDescriptor.of(C_POINTER);
    public static jdk.incubator.foreign.FunctionDescriptor GetFiberData$FUNC() { return GetFiberData$FUNC_; }

    static final MethodHandle GetFiberData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetFiberData",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        GetFiberData$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetFiberData$MH() { return GetFiberData$MH_; }

    static final MemoryLayout HKEY__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HKEY__");
    public static jdk.incubator.foreign.MemoryLayout HKEY__$struct$LAYOUT() { return HKEY__$struct$LAYOUT_; }

    static final MemoryLayout HKEY__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HKEY__$unused$LAYOUT() { return HKEY__$unused$LAYOUT_; }

    static final VarHandle HKEY__$unused$VH_ = HKEY__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HKEY__$unused$VH() { return HKEY__$unused$VH_; }

    static final MemoryLayout HMETAFILE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HMETAFILE__");
    public static jdk.incubator.foreign.MemoryLayout HMETAFILE__$struct$LAYOUT() { return HMETAFILE__$struct$LAYOUT_; }

    static final MemoryLayout HMETAFILE__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HMETAFILE__$unused$LAYOUT() { return HMETAFILE__$unused$LAYOUT_; }

    static final VarHandle HMETAFILE__$unused$VH_ = HMETAFILE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HMETAFILE__$unused$VH() { return HMETAFILE__$unused$VH_; }

    static final MemoryLayout HINSTANCE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HINSTANCE__");
    public static jdk.incubator.foreign.MemoryLayout HINSTANCE__$struct$LAYOUT() { return HINSTANCE__$struct$LAYOUT_; }

    static final MemoryLayout HINSTANCE__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HINSTANCE__$unused$LAYOUT() { return HINSTANCE__$unused$LAYOUT_; }

    static final VarHandle HINSTANCE__$unused$VH_ = HINSTANCE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HINSTANCE__$unused$VH() { return HINSTANCE__$unused$VH_; }

    static final MemoryLayout HRGN__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HRGN__");
    public static jdk.incubator.foreign.MemoryLayout HRGN__$struct$LAYOUT() { return HRGN__$struct$LAYOUT_; }

    static final MemoryLayout HRGN__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HRGN__$unused$LAYOUT() { return HRGN__$unused$LAYOUT_; }

    static final VarHandle HRGN__$unused$VH_ = HRGN__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HRGN__$unused$VH() { return HRGN__$unused$VH_; }

    static final MemoryLayout HRSRC__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HRSRC__");
    public static jdk.incubator.foreign.MemoryLayout HRSRC__$struct$LAYOUT() { return HRSRC__$struct$LAYOUT_; }

    static final MemoryLayout HRSRC__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HRSRC__$unused$LAYOUT() { return HRSRC__$unused$LAYOUT_; }

    static final VarHandle HRSRC__$unused$VH_ = HRSRC__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HRSRC__$unused$VH() { return HRSRC__$unused$VH_; }

    static final MemoryLayout HSPRITE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HSPRITE__");
    public static jdk.incubator.foreign.MemoryLayout HSPRITE__$struct$LAYOUT() { return HSPRITE__$struct$LAYOUT_; }

    static final MemoryLayout HSPRITE__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HSPRITE__$unused$LAYOUT() { return HSPRITE__$unused$LAYOUT_; }

    static final VarHandle HSPRITE__$unused$VH_ = HSPRITE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HSPRITE__$unused$VH() { return HSPRITE__$unused$VH_; }

    static final MemoryLayout HLSURF__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HLSURF__");
    public static jdk.incubator.foreign.MemoryLayout HLSURF__$struct$LAYOUT() { return HLSURF__$struct$LAYOUT_; }

    static final MemoryLayout HLSURF__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HLSURF__$unused$LAYOUT() { return HLSURF__$unused$LAYOUT_; }

    static final VarHandle HLSURF__$unused$VH_ = HLSURF__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HLSURF__$unused$VH() { return HLSURF__$unused$VH_; }

    static final MemoryLayout HSTR__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HSTR__");
    public static jdk.incubator.foreign.MemoryLayout HSTR__$struct$LAYOUT() { return HSTR__$struct$LAYOUT_; }

    static final MemoryLayout HSTR__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HSTR__$unused$LAYOUT() { return HSTR__$unused$LAYOUT_; }

    static final VarHandle HSTR__$unused$VH_ = HSTR__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HSTR__$unused$VH() { return HSTR__$unused$VH_; }

    static final MemoryLayout HTASK__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HTASK__");
    public static jdk.incubator.foreign.MemoryLayout HTASK__$struct$LAYOUT() { return HTASK__$struct$LAYOUT_; }

    static final MemoryLayout HTASK__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HTASK__$unused$LAYOUT() { return HTASK__$unused$LAYOUT_; }

    static final VarHandle HTASK__$unused$VH_ = HTASK__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HTASK__$unused$VH() { return HTASK__$unused$VH_; }

    static final MemoryLayout HWINSTA__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HWINSTA__");
    public static jdk.incubator.foreign.MemoryLayout HWINSTA__$struct$LAYOUT() { return HWINSTA__$struct$LAYOUT_; }

    static final MemoryLayout HWINSTA__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HWINSTA__$unused$LAYOUT() { return HWINSTA__$unused$LAYOUT_; }

    static final VarHandle HWINSTA__$unused$VH_ = HWINSTA__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HWINSTA__$unused$VH() { return HWINSTA__$unused$VH_; }

    static final MemoryLayout HKL__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HKL__");
    public static jdk.incubator.foreign.MemoryLayout HKL__$struct$LAYOUT() { return HKL__$struct$LAYOUT_; }

    static final MemoryLayout HKL__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HKL__$unused$LAYOUT() { return HKL__$unused$LAYOUT_; }

    static final VarHandle HKL__$unused$VH_ = HKL__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HKL__$unused$VH() { return HKL__$unused$VH_; }

    static final MemoryLayout _FILETIME$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("dwLowDateTime"),
        C_INT.withName("dwHighDateTime")
    ).withName("_FILETIME");
    public static jdk.incubator.foreign.MemoryLayout _FILETIME$struct$LAYOUT() { return _FILETIME$struct$LAYOUT_; }

    static final MemoryLayout _FILETIME$dwLowDateTime$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _FILETIME$dwLowDateTime$LAYOUT() { return _FILETIME$dwLowDateTime$LAYOUT_; }

    static final VarHandle _FILETIME$dwLowDateTime$VH_ = _FILETIME$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLowDateTime"));
    public static java.lang.invoke.VarHandle _FILETIME$dwLowDateTime$VH() { return _FILETIME$dwLowDateTime$VH_; }

    static final MemoryLayout _FILETIME$dwHighDateTime$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _FILETIME$dwHighDateTime$LAYOUT() { return _FILETIME$dwHighDateTime$LAYOUT_; }

    static final VarHandle _FILETIME$dwHighDateTime$VH_ = _FILETIME$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwHighDateTime"));
    public static java.lang.invoke.VarHandle _FILETIME$dwHighDateTime$VH() { return _FILETIME$dwHighDateTime$VH_; }

    static final MemoryLayout HWND__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HWND__");
    public static jdk.incubator.foreign.MemoryLayout HWND__$struct$LAYOUT() { return HWND__$struct$LAYOUT_; }

    static final MemoryLayout HWND__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HWND__$unused$LAYOUT() { return HWND__$unused$LAYOUT_; }

    static final VarHandle HWND__$unused$VH_ = HWND__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HWND__$unused$VH() { return HWND__$unused$VH_; }

    static final MemoryLayout HHOOK__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HHOOK__");
    public static jdk.incubator.foreign.MemoryLayout HHOOK__$struct$LAYOUT() { return HHOOK__$struct$LAYOUT_; }

    static final MemoryLayout HHOOK__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HHOOK__$unused$LAYOUT() { return HHOOK__$unused$LAYOUT_; }

    static final VarHandle HHOOK__$unused$VH_ = HHOOK__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HHOOK__$unused$VH() { return HHOOK__$unused$VH_; }

    static final MemoryLayout HACCEL__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HACCEL__");
    public static jdk.incubator.foreign.MemoryLayout HACCEL__$struct$LAYOUT() { return HACCEL__$struct$LAYOUT_; }

    static final MemoryLayout HACCEL__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HACCEL__$unused$LAYOUT() { return HACCEL__$unused$LAYOUT_; }

    static final VarHandle HACCEL__$unused$VH_ = HACCEL__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HACCEL__$unused$VH() { return HACCEL__$unused$VH_; }

    static final MemoryLayout HBITMAP__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HBITMAP__");
    public static jdk.incubator.foreign.MemoryLayout HBITMAP__$struct$LAYOUT() { return HBITMAP__$struct$LAYOUT_; }

    static final MemoryLayout HBITMAP__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HBITMAP__$unused$LAYOUT() { return HBITMAP__$unused$LAYOUT_; }

    static final VarHandle HBITMAP__$unused$VH_ = HBITMAP__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HBITMAP__$unused$VH() { return HBITMAP__$unused$VH_; }

    static final MemoryLayout HBRUSH__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HBRUSH__");
    public static jdk.incubator.foreign.MemoryLayout HBRUSH__$struct$LAYOUT() { return HBRUSH__$struct$LAYOUT_; }

    static final MemoryLayout HBRUSH__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HBRUSH__$unused$LAYOUT() { return HBRUSH__$unused$LAYOUT_; }

    static final VarHandle HBRUSH__$unused$VH_ = HBRUSH__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HBRUSH__$unused$VH() { return HBRUSH__$unused$VH_; }

    static final MemoryLayout HCOLORSPACE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HCOLORSPACE__");
    public static jdk.incubator.foreign.MemoryLayout HCOLORSPACE__$struct$LAYOUT() { return HCOLORSPACE__$struct$LAYOUT_; }

    static final MemoryLayout HCOLORSPACE__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HCOLORSPACE__$unused$LAYOUT() { return HCOLORSPACE__$unused$LAYOUT_; }

    static final VarHandle HCOLORSPACE__$unused$VH_ = HCOLORSPACE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HCOLORSPACE__$unused$VH() { return HCOLORSPACE__$unused$VH_; }

    static final MemoryLayout HDC__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HDC__");
    public static jdk.incubator.foreign.MemoryLayout HDC__$struct$LAYOUT() { return HDC__$struct$LAYOUT_; }

    static final MemoryLayout HDC__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HDC__$unused$LAYOUT() { return HDC__$unused$LAYOUT_; }

    static final VarHandle HDC__$unused$VH_ = HDC__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HDC__$unused$VH() { return HDC__$unused$VH_; }

    static final MemoryLayout HGLRC__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HGLRC__");
    public static jdk.incubator.foreign.MemoryLayout HGLRC__$struct$LAYOUT() { return HGLRC__$struct$LAYOUT_; }

    static final MemoryLayout HGLRC__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HGLRC__$unused$LAYOUT() { return HGLRC__$unused$LAYOUT_; }

    static final VarHandle HGLRC__$unused$VH_ = HGLRC__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HGLRC__$unused$VH() { return HGLRC__$unused$VH_; }

    static final MemoryLayout HDESK__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HDESK__");
    public static jdk.incubator.foreign.MemoryLayout HDESK__$struct$LAYOUT() { return HDESK__$struct$LAYOUT_; }

    static final MemoryLayout HDESK__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HDESK__$unused$LAYOUT() { return HDESK__$unused$LAYOUT_; }

    static final VarHandle HDESK__$unused$VH_ = HDESK__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HDESK__$unused$VH() { return HDESK__$unused$VH_; }

    static final MemoryLayout HENHMETAFILE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HENHMETAFILE__");
    public static jdk.incubator.foreign.MemoryLayout HENHMETAFILE__$struct$LAYOUT() { return HENHMETAFILE__$struct$LAYOUT_; }

    static final MemoryLayout HENHMETAFILE__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HENHMETAFILE__$unused$LAYOUT() { return HENHMETAFILE__$unused$LAYOUT_; }

    static final VarHandle HENHMETAFILE__$unused$VH_ = HENHMETAFILE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HENHMETAFILE__$unused$VH() { return HENHMETAFILE__$unused$VH_; }

    static final MemoryLayout HFONT__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HFONT__");
    public static jdk.incubator.foreign.MemoryLayout HFONT__$struct$LAYOUT() { return HFONT__$struct$LAYOUT_; }

    static final MemoryLayout HFONT__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HFONT__$unused$LAYOUT() { return HFONT__$unused$LAYOUT_; }

    static final VarHandle HFONT__$unused$VH_ = HFONT__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HFONT__$unused$VH() { return HFONT__$unused$VH_; }

    static final MemoryLayout HICON__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HICON__");
    public static jdk.incubator.foreign.MemoryLayout HICON__$struct$LAYOUT() { return HICON__$struct$LAYOUT_; }

    static final MemoryLayout HICON__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HICON__$unused$LAYOUT() { return HICON__$unused$LAYOUT_; }

    static final VarHandle HICON__$unused$VH_ = HICON__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HICON__$unused$VH() { return HICON__$unused$VH_; }

    static final MemoryLayout HMENU__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HMENU__");
    public static jdk.incubator.foreign.MemoryLayout HMENU__$struct$LAYOUT() { return HMENU__$struct$LAYOUT_; }

    static final MemoryLayout HMENU__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HMENU__$unused$LAYOUT() { return HMENU__$unused$LAYOUT_; }

    static final VarHandle HMENU__$unused$VH_ = HMENU__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HMENU__$unused$VH() { return HMENU__$unused$VH_; }

    static final MemoryLayout HPALETTE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HPALETTE__");
    public static jdk.incubator.foreign.MemoryLayout HPALETTE__$struct$LAYOUT() { return HPALETTE__$struct$LAYOUT_; }

    static final MemoryLayout HPALETTE__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HPALETTE__$unused$LAYOUT() { return HPALETTE__$unused$LAYOUT_; }

    static final VarHandle HPALETTE__$unused$VH_ = HPALETTE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HPALETTE__$unused$VH() { return HPALETTE__$unused$VH_; }

    static final MemoryLayout HPEN__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HPEN__");
    public static jdk.incubator.foreign.MemoryLayout HPEN__$struct$LAYOUT() { return HPEN__$struct$LAYOUT_; }

    static final MemoryLayout HPEN__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HPEN__$unused$LAYOUT() { return HPEN__$unused$LAYOUT_; }

    static final VarHandle HPEN__$unused$VH_ = HPEN__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HPEN__$unused$VH() { return HPEN__$unused$VH_; }

    static final MemoryLayout HWINEVENTHOOK__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HWINEVENTHOOK__");
    public static jdk.incubator.foreign.MemoryLayout HWINEVENTHOOK__$struct$LAYOUT() { return HWINEVENTHOOK__$struct$LAYOUT_; }

    static final MemoryLayout HWINEVENTHOOK__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HWINEVENTHOOK__$unused$LAYOUT() { return HWINEVENTHOOK__$unused$LAYOUT_; }

    static final VarHandle HWINEVENTHOOK__$unused$VH_ = HWINEVENTHOOK__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HWINEVENTHOOK__$unused$VH() { return HWINEVENTHOOK__$unused$VH_; }

    static final MemoryLayout HMONITOR__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HMONITOR__");
    public static jdk.incubator.foreign.MemoryLayout HMONITOR__$struct$LAYOUT() { return HMONITOR__$struct$LAYOUT_; }

    static final MemoryLayout HMONITOR__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HMONITOR__$unused$LAYOUT() { return HMONITOR__$unused$LAYOUT_; }

    static final VarHandle HMONITOR__$unused$VH_ = HMONITOR__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HMONITOR__$unused$VH() { return HMONITOR__$unused$VH_; }

    static final MemoryLayout HUMPD__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HUMPD__");
    public static jdk.incubator.foreign.MemoryLayout HUMPD__$struct$LAYOUT() { return HUMPD__$struct$LAYOUT_; }

    static final MemoryLayout HUMPD__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout HUMPD__$unused$LAYOUT() { return HUMPD__$unused$LAYOUT_; }

    static final VarHandle HUMPD__$unused$VH_ = HUMPD__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle HUMPD__$unused$VH() { return HUMPD__$unused$VH_; }

    static final MemoryLayout tagRECT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("left"),
        C_INT.withName("top"),
        C_INT.withName("right"),
        C_INT.withName("bottom")
    ).withName("tagRECT");
    public static jdk.incubator.foreign.MemoryLayout tagRECT$struct$LAYOUT() { return tagRECT$struct$LAYOUT_; }

    static final MemoryLayout tagRECT$left$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagRECT$left$LAYOUT() { return tagRECT$left$LAYOUT_; }

    static final VarHandle tagRECT$left$VH_ = tagRECT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("left"));
    public static java.lang.invoke.VarHandle tagRECT$left$VH() { return tagRECT$left$VH_; }

    static final MemoryLayout tagRECT$top$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagRECT$top$LAYOUT() { return tagRECT$top$LAYOUT_; }

    static final VarHandle tagRECT$top$VH_ = tagRECT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("top"));
    public static java.lang.invoke.VarHandle tagRECT$top$VH() { return tagRECT$top$VH_; }

    static final MemoryLayout tagRECT$right$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagRECT$right$LAYOUT() { return tagRECT$right$LAYOUT_; }

    static final VarHandle tagRECT$right$VH_ = tagRECT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("right"));
    public static java.lang.invoke.VarHandle tagRECT$right$VH() { return tagRECT$right$VH_; }

    static final MemoryLayout tagRECT$bottom$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagRECT$bottom$LAYOUT() { return tagRECT$bottom$LAYOUT_; }

    static final VarHandle tagRECT$bottom$VH_ = tagRECT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bottom"));
    public static java.lang.invoke.VarHandle tagRECT$bottom$VH() { return tagRECT$bottom$VH_; }

    static final MemoryLayout _RECTL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("left"),
        C_INT.withName("top"),
        C_INT.withName("right"),
        C_INT.withName("bottom")
    ).withName("_RECTL");
    public static jdk.incubator.foreign.MemoryLayout _RECTL$struct$LAYOUT() { return _RECTL$struct$LAYOUT_; }

    static final MemoryLayout _RECTL$left$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _RECTL$left$LAYOUT() { return _RECTL$left$LAYOUT_; }

    static final VarHandle _RECTL$left$VH_ = _RECTL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("left"));
    public static java.lang.invoke.VarHandle _RECTL$left$VH() { return _RECTL$left$VH_; }

    static final MemoryLayout _RECTL$top$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _RECTL$top$LAYOUT() { return _RECTL$top$LAYOUT_; }

    static final VarHandle _RECTL$top$VH_ = _RECTL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("top"));
    public static java.lang.invoke.VarHandle _RECTL$top$VH() { return _RECTL$top$VH_; }

    static final MemoryLayout _RECTL$right$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _RECTL$right$LAYOUT() { return _RECTL$right$LAYOUT_; }

    static final VarHandle _RECTL$right$VH_ = _RECTL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("right"));
    public static java.lang.invoke.VarHandle _RECTL$right$VH() { return _RECTL$right$VH_; }

    static final MemoryLayout _RECTL$bottom$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _RECTL$bottom$LAYOUT() { return _RECTL$bottom$LAYOUT_; }

    static final VarHandle _RECTL$bottom$VH_ = _RECTL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bottom"));
    public static java.lang.invoke.VarHandle _RECTL$bottom$VH() { return _RECTL$bottom$VH_; }

    static final MemoryLayout tagPOINT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("x"),
        C_INT.withName("y")
    ).withName("tagPOINT");
    public static jdk.incubator.foreign.MemoryLayout tagPOINT$struct$LAYOUT() { return tagPOINT$struct$LAYOUT_; }

    static final MemoryLayout tagPOINT$x$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPOINT$x$LAYOUT() { return tagPOINT$x$LAYOUT_; }

    static final VarHandle tagPOINT$x$VH_ = tagPOINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("x"));
    public static java.lang.invoke.VarHandle tagPOINT$x$VH() { return tagPOINT$x$VH_; }

    static final MemoryLayout tagPOINT$y$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPOINT$y$LAYOUT() { return tagPOINT$y$LAYOUT_; }

    static final VarHandle tagPOINT$y$VH_ = tagPOINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("y"));
    public static java.lang.invoke.VarHandle tagPOINT$y$VH() { return tagPOINT$y$VH_; }

    static final MemoryLayout _POINTL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("x"),
        C_INT.withName("y")
    ).withName("_POINTL");
    public static jdk.incubator.foreign.MemoryLayout _POINTL$struct$LAYOUT() { return _POINTL$struct$LAYOUT_; }

    static final MemoryLayout _POINTL$x$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _POINTL$x$LAYOUT() { return _POINTL$x$LAYOUT_; }

    static final VarHandle _POINTL$x$VH_ = _POINTL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("x"));
    public static java.lang.invoke.VarHandle _POINTL$x$VH() { return _POINTL$x$VH_; }

    static final MemoryLayout _POINTL$y$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _POINTL$y$LAYOUT() { return _POINTL$y$LAYOUT_; }

    static final VarHandle _POINTL$y$VH_ = _POINTL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("y"));
    public static java.lang.invoke.VarHandle _POINTL$y$VH() { return _POINTL$y$VH_; }

    static final MemoryLayout tagSIZE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cx"),
        C_INT.withName("cy")
    ).withName("tagSIZE");
    public static jdk.incubator.foreign.MemoryLayout tagSIZE$struct$LAYOUT() { return tagSIZE$struct$LAYOUT_; }

    static final MemoryLayout tagSIZE$cx$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagSIZE$cx$LAYOUT() { return tagSIZE$cx$LAYOUT_; }

    static final VarHandle tagSIZE$cx$VH_ = tagSIZE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cx"));
    public static java.lang.invoke.VarHandle tagSIZE$cx$VH() { return tagSIZE$cx$VH_; }

    static final MemoryLayout tagSIZE$cy$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagSIZE$cy$LAYOUT() { return tagSIZE$cy$LAYOUT_; }

    static final VarHandle tagSIZE$cy$VH_ = tagSIZE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cy"));
    public static java.lang.invoke.VarHandle tagSIZE$cy$VH() { return tagSIZE$cy$VH_; }

    static final MemoryLayout tagPOINTS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("x"),
        C_SHORT.withName("y")
    ).withName("tagPOINTS");
    public static jdk.incubator.foreign.MemoryLayout tagPOINTS$struct$LAYOUT() { return tagPOINTS$struct$LAYOUT_; }

    static final MemoryLayout tagPOINTS$x$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagPOINTS$x$LAYOUT() { return tagPOINTS$x$LAYOUT_; }

    static final VarHandle tagPOINTS$x$VH_ = tagPOINTS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("x"));
    public static java.lang.invoke.VarHandle tagPOINTS$x$VH() { return tagPOINTS$x$VH_; }

    static final MemoryLayout tagPOINTS$y$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagPOINTS$y$LAYOUT() { return tagPOINTS$y$LAYOUT_; }

    static final VarHandle tagPOINTS$y$VH_ = tagPOINTS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("y"));
    public static java.lang.invoke.VarHandle tagPOINTS$y$VH() { return tagPOINTS$y$VH_; }

    static final MemoryLayout APP_LOCAL_DEVICE_ID$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(32, C_BOOL).withName("value")
    ).withName("APP_LOCAL_DEVICE_ID");
    public static jdk.incubator.foreign.MemoryLayout APP_LOCAL_DEVICE_ID$struct$LAYOUT() { return APP_LOCAL_DEVICE_ID$struct$LAYOUT_; }

    static final MemoryLayout DPI_AWARENESS_CONTEXT__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("DPI_AWARENESS_CONTEXT__");
    public static jdk.incubator.foreign.MemoryLayout DPI_AWARENESS_CONTEXT__$struct$LAYOUT() { return DPI_AWARENESS_CONTEXT__$struct$LAYOUT_; }

    static final MemoryLayout DPI_AWARENESS_CONTEXT__$unused$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout DPI_AWARENESS_CONTEXT__$unused$LAYOUT() { return DPI_AWARENESS_CONTEXT__$unused$LAYOUT_; }

    static final VarHandle DPI_AWARENESS_CONTEXT__$unused$VH_ = DPI_AWARENESS_CONTEXT__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    public static java.lang.invoke.VarHandle DPI_AWARENESS_CONTEXT__$unused$VH() { return DPI_AWARENESS_CONTEXT__$unused$VH_; }

    public static int DPI_AWARENESS_INVALID() { return (int)-1L; }

    public static int DPI_AWARENESS_UNAWARE() { return (int)0L; }

    public static int DPI_AWARENESS_SYSTEM_AWARE() { return (int)1L; }

    public static int DPI_AWARENESS_PER_MONITOR_AWARE() { return (int)2L; }

    public static int DPI_HOSTING_BEHAVIOR_INVALID() { return (int)-1L; }

    public static int DPI_HOSTING_BEHAVIOR_DEFAULT() { return (int)0L; }

    public static int DPI_HOSTING_BEHAVIOR_MIXED() { return (int)1L; }

    static final MemoryLayout _SECURITY_ATTRIBUTES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("nLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpSecurityDescriptor"),
        C_INT.withName("bInheritHandle"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_SECURITY_ATTRIBUTES");
    public static jdk.incubator.foreign.MemoryLayout _SECURITY_ATTRIBUTES$struct$LAYOUT() { return _SECURITY_ATTRIBUTES$struct$LAYOUT_; }

    static final MemoryLayout _SECURITY_ATTRIBUTES$nLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _SECURITY_ATTRIBUTES$nLength$LAYOUT() { return _SECURITY_ATTRIBUTES$nLength$LAYOUT_; }

    static final VarHandle _SECURITY_ATTRIBUTES$nLength$VH_ = _SECURITY_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nLength"));
    public static java.lang.invoke.VarHandle _SECURITY_ATTRIBUTES$nLength$VH() { return _SECURITY_ATTRIBUTES$nLength$VH_; }

    static final MemoryLayout _SECURITY_ATTRIBUTES$lpSecurityDescriptor$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _SECURITY_ATTRIBUTES$lpSecurityDescriptor$LAYOUT() { return _SECURITY_ATTRIBUTES$lpSecurityDescriptor$LAYOUT_; }

    static final VarHandle _SECURITY_ATTRIBUTES$lpSecurityDescriptor$VH_ = MemoryHandles.asAddressVarHandle(_SECURITY_ATTRIBUTES$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSecurityDescriptor")));
    public static java.lang.invoke.VarHandle _SECURITY_ATTRIBUTES$lpSecurityDescriptor$VH() { return _SECURITY_ATTRIBUTES$lpSecurityDescriptor$VH_; }

    static final MemoryLayout _SECURITY_ATTRIBUTES$bInheritHandle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _SECURITY_ATTRIBUTES$bInheritHandle$LAYOUT() { return _SECURITY_ATTRIBUTES$bInheritHandle$LAYOUT_; }

    static final VarHandle _SECURITY_ATTRIBUTES$bInheritHandle$VH_ = _SECURITY_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bInheritHandle"));
    public static java.lang.invoke.VarHandle _SECURITY_ATTRIBUTES$bInheritHandle$VH() { return _SECURITY_ATTRIBUTES$bInheritHandle$VH_; }

    static final MemoryLayout _OVERLAPPED$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("Internal"),
        C_LONGLONG.withName("InternalHigh"),
        C_INT.withName("Offset"),
        C_INT.withName("OffsetHigh"),
        C_POINTER.withName("Pointer"),
        C_POINTER.withName("hEvent")
    ).withName("_OVERLAPPED");
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED$struct$LAYOUT() { return _OVERLAPPED$struct$LAYOUT_; }

    static final MemoryLayout _OVERLAPPED$Internal$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED$Internal$LAYOUT() { return _OVERLAPPED$Internal$LAYOUT_; }

    static final VarHandle _OVERLAPPED$Internal$VH_ = _OVERLAPPED$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Internal"));
    public static java.lang.invoke.VarHandle _OVERLAPPED$Internal$VH() { return _OVERLAPPED$Internal$VH_; }

    static final MemoryLayout _OVERLAPPED$InternalHigh$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED$InternalHigh$LAYOUT() { return _OVERLAPPED$InternalHigh$LAYOUT_; }

    static final VarHandle _OVERLAPPED$InternalHigh$VH_ = _OVERLAPPED$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InternalHigh"));
    public static java.lang.invoke.VarHandle _OVERLAPPED$InternalHigh$VH() { return _OVERLAPPED$InternalHigh$VH_; }

    static final MemoryLayout _OVERLAPPED$Offset$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED$Offset$LAYOUT() { return _OVERLAPPED$Offset$LAYOUT_; }

    static final VarHandle _OVERLAPPED$Offset$VH_ = _OVERLAPPED$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Offset"));
    public static java.lang.invoke.VarHandle _OVERLAPPED$Offset$VH() { return _OVERLAPPED$Offset$VH_; }

    static final MemoryLayout _OVERLAPPED$OffsetHigh$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED$OffsetHigh$LAYOUT() { return _OVERLAPPED$OffsetHigh$LAYOUT_; }

    static final VarHandle _OVERLAPPED$OffsetHigh$VH_ = _OVERLAPPED$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OffsetHigh"));
    public static java.lang.invoke.VarHandle _OVERLAPPED$OffsetHigh$VH() { return _OVERLAPPED$OffsetHigh$VH_; }

    static final MemoryLayout _OVERLAPPED$Pointer$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED$Pointer$LAYOUT() { return _OVERLAPPED$Pointer$LAYOUT_; }

    static final VarHandle _OVERLAPPED$Pointer$VH_ = MemoryHandles.asAddressVarHandle(_OVERLAPPED$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Pointer")));
    public static java.lang.invoke.VarHandle _OVERLAPPED$Pointer$VH() { return _OVERLAPPED$Pointer$VH_; }

    static final MemoryLayout _OVERLAPPED$hEvent$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED$hEvent$LAYOUT() { return _OVERLAPPED$hEvent$LAYOUT_; }

    static final VarHandle _OVERLAPPED$hEvent$VH_ = MemoryHandles.asAddressVarHandle(_OVERLAPPED$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hEvent")));
    public static java.lang.invoke.VarHandle _OVERLAPPED$hEvent$VH() { return _OVERLAPPED$hEvent$VH_; }

    static final MemoryLayout _OVERLAPPED_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("lpCompletionKey"),
        C_POINTER.withName("lpOverlapped"),
        C_LONGLONG.withName("Internal"),
        C_INT.withName("dwNumberOfBytesTransferred"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_OVERLAPPED_ENTRY");
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED_ENTRY$struct$LAYOUT() { return _OVERLAPPED_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _OVERLAPPED_ENTRY$lpCompletionKey$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED_ENTRY$lpCompletionKey$LAYOUT() { return _OVERLAPPED_ENTRY$lpCompletionKey$LAYOUT_; }

    static final VarHandle _OVERLAPPED_ENTRY$lpCompletionKey$VH_ = _OVERLAPPED_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpCompletionKey"));
    public static java.lang.invoke.VarHandle _OVERLAPPED_ENTRY$lpCompletionKey$VH() { return _OVERLAPPED_ENTRY$lpCompletionKey$VH_; }

    static final MemoryLayout _OVERLAPPED_ENTRY$lpOverlapped$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED_ENTRY$lpOverlapped$LAYOUT() { return _OVERLAPPED_ENTRY$lpOverlapped$LAYOUT_; }

    static final VarHandle _OVERLAPPED_ENTRY$lpOverlapped$VH_ = MemoryHandles.asAddressVarHandle(_OVERLAPPED_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpOverlapped")));
    public static java.lang.invoke.VarHandle _OVERLAPPED_ENTRY$lpOverlapped$VH() { return _OVERLAPPED_ENTRY$lpOverlapped$VH_; }

    static final MemoryLayout _OVERLAPPED_ENTRY$Internal$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED_ENTRY$Internal$LAYOUT() { return _OVERLAPPED_ENTRY$Internal$LAYOUT_; }

    static final VarHandle _OVERLAPPED_ENTRY$Internal$VH_ = _OVERLAPPED_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Internal"));
    public static java.lang.invoke.VarHandle _OVERLAPPED_ENTRY$Internal$VH() { return _OVERLAPPED_ENTRY$Internal$VH_; }

    static final MemoryLayout _OVERLAPPED_ENTRY$dwNumberOfBytesTransferred$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _OVERLAPPED_ENTRY$dwNumberOfBytesTransferred$LAYOUT() { return _OVERLAPPED_ENTRY$dwNumberOfBytesTransferred$LAYOUT_; }

    static final VarHandle _OVERLAPPED_ENTRY$dwNumberOfBytesTransferred$VH_ = _OVERLAPPED_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNumberOfBytesTransferred"));
    public static java.lang.invoke.VarHandle _OVERLAPPED_ENTRY$dwNumberOfBytesTransferred$VH() { return _OVERLAPPED_ENTRY$dwNumberOfBytesTransferred$VH_; }

    static final MemoryLayout _SYSTEMTIME$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wYear"),
        C_SHORT.withName("wMonth"),
        C_SHORT.withName("wDayOfWeek"),
        C_SHORT.withName("wDay"),
        C_SHORT.withName("wHour"),
        C_SHORT.withName("wMinute"),
        C_SHORT.withName("wSecond"),
        C_SHORT.withName("wMilliseconds")
    ).withName("_SYSTEMTIME");
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$struct$LAYOUT() { return _SYSTEMTIME$struct$LAYOUT_; }

    static final MemoryLayout _SYSTEMTIME$wYear$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$wYear$LAYOUT() { return _SYSTEMTIME$wYear$LAYOUT_; }

    static final VarHandle _SYSTEMTIME$wYear$VH_ = _SYSTEMTIME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wYear"));
    public static java.lang.invoke.VarHandle _SYSTEMTIME$wYear$VH() { return _SYSTEMTIME$wYear$VH_; }

    static final MemoryLayout _SYSTEMTIME$wMonth$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$wMonth$LAYOUT() { return _SYSTEMTIME$wMonth$LAYOUT_; }

    static final VarHandle _SYSTEMTIME$wMonth$VH_ = _SYSTEMTIME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMonth"));
    public static java.lang.invoke.VarHandle _SYSTEMTIME$wMonth$VH() { return _SYSTEMTIME$wMonth$VH_; }

    static final MemoryLayout _SYSTEMTIME$wDayOfWeek$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$wDayOfWeek$LAYOUT() { return _SYSTEMTIME$wDayOfWeek$LAYOUT_; }

    static final VarHandle _SYSTEMTIME$wDayOfWeek$VH_ = _SYSTEMTIME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wDayOfWeek"));
    public static java.lang.invoke.VarHandle _SYSTEMTIME$wDayOfWeek$VH() { return _SYSTEMTIME$wDayOfWeek$VH_; }

    static final MemoryLayout _SYSTEMTIME$wDay$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$wDay$LAYOUT() { return _SYSTEMTIME$wDay$LAYOUT_; }

    static final VarHandle _SYSTEMTIME$wDay$VH_ = _SYSTEMTIME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wDay"));
    public static java.lang.invoke.VarHandle _SYSTEMTIME$wDay$VH() { return _SYSTEMTIME$wDay$VH_; }

    static final MemoryLayout _SYSTEMTIME$wHour$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$wHour$LAYOUT() { return _SYSTEMTIME$wHour$LAYOUT_; }

    static final VarHandle _SYSTEMTIME$wHour$VH_ = _SYSTEMTIME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wHour"));
    public static java.lang.invoke.VarHandle _SYSTEMTIME$wHour$VH() { return _SYSTEMTIME$wHour$VH_; }

    static final MemoryLayout _SYSTEMTIME$wMinute$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$wMinute$LAYOUT() { return _SYSTEMTIME$wMinute$LAYOUT_; }

    static final VarHandle _SYSTEMTIME$wMinute$VH_ = _SYSTEMTIME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMinute"));
    public static java.lang.invoke.VarHandle _SYSTEMTIME$wMinute$VH() { return _SYSTEMTIME$wMinute$VH_; }

    static final MemoryLayout _SYSTEMTIME$wSecond$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$wSecond$LAYOUT() { return _SYSTEMTIME$wSecond$LAYOUT_; }

    static final VarHandle _SYSTEMTIME$wSecond$VH_ = _SYSTEMTIME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wSecond"));
    public static java.lang.invoke.VarHandle _SYSTEMTIME$wSecond$VH() { return _SYSTEMTIME$wSecond$VH_; }

    static final MemoryLayout _SYSTEMTIME$wMilliseconds$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _SYSTEMTIME$wMilliseconds$LAYOUT() { return _SYSTEMTIME$wMilliseconds$LAYOUT_; }

    static final VarHandle _SYSTEMTIME$wMilliseconds$VH_ = _SYSTEMTIME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMilliseconds"));
    public static java.lang.invoke.VarHandle _SYSTEMTIME$wMilliseconds$VH() { return _SYSTEMTIME$wMilliseconds$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("dwFileAttributes"),
        MemoryLayout.ofStruct(
            C_INT.withName("dwLowDateTime"),
            C_INT.withName("dwHighDateTime")
        ).withName("ftCreationTime"),
        MemoryLayout.ofStruct(
            C_INT.withName("dwLowDateTime"),
            C_INT.withName("dwHighDateTime")
        ).withName("ftLastAccessTime"),
        MemoryLayout.ofStruct(
            C_INT.withName("dwLowDateTime"),
            C_INT.withName("dwHighDateTime")
        ).withName("ftLastWriteTime"),
        C_INT.withName("nFileSizeHigh"),
        C_INT.withName("nFileSizeLow"),
        C_INT.withName("dwReserved0"),
        C_INT.withName("dwReserved1"),
        MemoryLayout.ofSequence(260, C_BOOL).withName("cFileName"),
        MemoryLayout.ofSequence(14, C_BOOL).withName("cAlternateFileName"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_WIN32_FIND_DATAA");
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAA$struct$LAYOUT() { return _WIN32_FIND_DATAA$struct$LAYOUT_; }

    static final MemoryLayout _WIN32_FIND_DATAA$dwFileAttributes$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAA$dwFileAttributes$LAYOUT() { return _WIN32_FIND_DATAA$dwFileAttributes$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAA$dwFileAttributes$VH_ = _WIN32_FIND_DATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFileAttributes"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAA$dwFileAttributes$VH() { return _WIN32_FIND_DATAA$dwFileAttributes$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAA$nFileSizeHigh$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAA$nFileSizeHigh$LAYOUT() { return _WIN32_FIND_DATAA$nFileSizeHigh$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAA$nFileSizeHigh$VH_ = _WIN32_FIND_DATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nFileSizeHigh"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAA$nFileSizeHigh$VH() { return _WIN32_FIND_DATAA$nFileSizeHigh$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAA$nFileSizeLow$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAA$nFileSizeLow$LAYOUT() { return _WIN32_FIND_DATAA$nFileSizeLow$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAA$nFileSizeLow$VH_ = _WIN32_FIND_DATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nFileSizeLow"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAA$nFileSizeLow$VH() { return _WIN32_FIND_DATAA$nFileSizeLow$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAA$dwReserved0$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAA$dwReserved0$LAYOUT() { return _WIN32_FIND_DATAA$dwReserved0$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAA$dwReserved0$VH_ = _WIN32_FIND_DATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved0"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAA$dwReserved0$VH() { return _WIN32_FIND_DATAA$dwReserved0$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAA$dwReserved1$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAA$dwReserved1$LAYOUT() { return _WIN32_FIND_DATAA$dwReserved1$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAA$dwReserved1$VH_ = _WIN32_FIND_DATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved1"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAA$dwReserved1$VH() { return _WIN32_FIND_DATAA$dwReserved1$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("dwFileAttributes"),
        MemoryLayout.ofStruct(
            C_INT.withName("dwLowDateTime"),
            C_INT.withName("dwHighDateTime")
        ).withName("ftCreationTime"),
        MemoryLayout.ofStruct(
            C_INT.withName("dwLowDateTime"),
            C_INT.withName("dwHighDateTime")
        ).withName("ftLastAccessTime"),
        MemoryLayout.ofStruct(
            C_INT.withName("dwLowDateTime"),
            C_INT.withName("dwHighDateTime")
        ).withName("ftLastWriteTime"),
        C_INT.withName("nFileSizeHigh"),
        C_INT.withName("nFileSizeLow"),
        C_INT.withName("dwReserved0"),
        C_INT.withName("dwReserved1"),
        MemoryLayout.ofSequence(260, C_SHORT).withName("cFileName"),
        MemoryLayout.ofSequence(14, C_SHORT).withName("cAlternateFileName")
    ).withName("_WIN32_FIND_DATAW");
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAW$struct$LAYOUT() { return _WIN32_FIND_DATAW$struct$LAYOUT_; }

    static final MemoryLayout _WIN32_FIND_DATAW$dwFileAttributes$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAW$dwFileAttributes$LAYOUT() { return _WIN32_FIND_DATAW$dwFileAttributes$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAW$dwFileAttributes$VH_ = _WIN32_FIND_DATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFileAttributes"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAW$dwFileAttributes$VH() { return _WIN32_FIND_DATAW$dwFileAttributes$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAW$nFileSizeHigh$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAW$nFileSizeHigh$LAYOUT() { return _WIN32_FIND_DATAW$nFileSizeHigh$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAW$nFileSizeHigh$VH_ = _WIN32_FIND_DATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nFileSizeHigh"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAW$nFileSizeHigh$VH() { return _WIN32_FIND_DATAW$nFileSizeHigh$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAW$nFileSizeLow$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAW$nFileSizeLow$LAYOUT() { return _WIN32_FIND_DATAW$nFileSizeLow$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAW$nFileSizeLow$VH_ = _WIN32_FIND_DATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nFileSizeLow"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAW$nFileSizeLow$VH() { return _WIN32_FIND_DATAW$nFileSizeLow$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAW$dwReserved0$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAW$dwReserved0$LAYOUT() { return _WIN32_FIND_DATAW$dwReserved0$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAW$dwReserved0$VH_ = _WIN32_FIND_DATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved0"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAW$dwReserved0$VH() { return _WIN32_FIND_DATAW$dwReserved0$VH_; }

    static final MemoryLayout _WIN32_FIND_DATAW$dwReserved1$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WIN32_FIND_DATAW$dwReserved1$LAYOUT() { return _WIN32_FIND_DATAW$dwReserved1$LAYOUT_; }

    static final VarHandle _WIN32_FIND_DATAW$dwReserved1$VH_ = _WIN32_FIND_DATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved1"));
    public static java.lang.invoke.VarHandle _WIN32_FIND_DATAW$dwReserved1$VH() { return _WIN32_FIND_DATAW$dwReserved1$VH_; }

    public static int FindExInfoStandard() { return (int)0L; }

    public static int FindExInfoBasic() { return (int)1L; }

    public static int FindExInfoMaxInfoLevel() { return (int)2L; }

    public static int FindExSearchNameMatch() { return (int)0L; }

    public static int FindExSearchLimitToDirectories() { return (int)1L; }

    public static int FindExSearchLimitToDevices() { return (int)2L; }

    public static int FindExSearchMaxSearchOp() { return (int)3L; }

    public static int ReadDirectoryNotifyInformation() { return (int)1L; }

    public static int ReadDirectoryNotifyExtendedInformation() { return (int)2L; }

    public static int GetFileExInfoStandard() { return (int)0L; }

    public static int GetFileExMaxInfoLevel() { return (int)1L; }

    public static int FileBasicInfo() { return (int)0L; }

    public static int FileStandardInfo() { return (int)1L; }

    public static int FileNameInfo() { return (int)2L; }

    public static int FileRenameInfo() { return (int)3L; }

    public static int FileDispositionInfo() { return (int)4L; }

    public static int FileAllocationInfo() { return (int)5L; }

    public static int FileEndOfFileInfo() { return (int)6L; }

    public static int FileStreamInfo() { return (int)7L; }

    public static int FileCompressionInfo() { return (int)8L; }

    public static int FileAttributeTagInfo() { return (int)9L; }

    public static int FileIdBothDirectoryInfo() { return (int)10L; }

    public static int FileIdBothDirectoryRestartInfo() { return (int)11L; }

    public static int FileIoPriorityHintInfo() { return (int)12L; }

    public static int FileRemoteProtocolInfo() { return (int)13L; }

    public static int FileFullDirectoryInfo() { return (int)14L; }

    public static int FileFullDirectoryRestartInfo() { return (int)15L; }

    public static int FileStorageInfo() { return (int)16L; }

    public static int FileAlignmentInfo() { return (int)17L; }

    public static int FileIdInfo() { return (int)18L; }

    public static int FileIdExtdDirectoryInfo() { return (int)19L; }

    public static int FileIdExtdDirectoryRestartInfo() { return (int)20L; }

    public static int FileDispositionInfoEx() { return (int)21L; }

    public static int FileRenameInfoEx() { return (int)22L; }

    public static int FileCaseSensitiveInfo() { return (int)23L; }

    public static int FileNormalizedNameInfo() { return (int)24L; }

    public static int MaximumFileInfoByHandleClass() { return (int)25L; }

    static final MemoryLayout _PROCESS_HEAP_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpData"),
        C_INT.withName("cbData"),
        C_BOOL.withName("cbOverhead"),
        C_BOOL.withName("iRegionIndex"),
        C_SHORT.withName("wFlags"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("hMem"),
            MemoryLayout.ofSequence(3, C_INT).withName("dwReserved"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("Block"),
        MemoryLayout.ofStruct(
            C_INT.withName("dwCommittedSize"),
            C_INT.withName("dwUnCommittedSize"),
            C_POINTER.withName("lpFirstBlock"),
            C_POINTER.withName("lpLastBlock")
        ).withName("Region")
    ).withName("_PROCESS_HEAP_ENTRY");
    public static jdk.incubator.foreign.MemoryLayout _PROCESS_HEAP_ENTRY$struct$LAYOUT() { return _PROCESS_HEAP_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_HEAP_ENTRY$lpData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _PROCESS_HEAP_ENTRY$lpData$LAYOUT() { return _PROCESS_HEAP_ENTRY$lpData$LAYOUT_; }

    static final VarHandle _PROCESS_HEAP_ENTRY$lpData$VH_ = MemoryHandles.asAddressVarHandle(_PROCESS_HEAP_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpData")));
    public static java.lang.invoke.VarHandle _PROCESS_HEAP_ENTRY$lpData$VH() { return _PROCESS_HEAP_ENTRY$lpData$VH_; }

    static final MemoryLayout _PROCESS_HEAP_ENTRY$cbData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _PROCESS_HEAP_ENTRY$cbData$LAYOUT() { return _PROCESS_HEAP_ENTRY$cbData$LAYOUT_; }

    static final VarHandle _PROCESS_HEAP_ENTRY$cbData$VH_ = _PROCESS_HEAP_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    public static java.lang.invoke.VarHandle _PROCESS_HEAP_ENTRY$cbData$VH() { return _PROCESS_HEAP_ENTRY$cbData$VH_; }

    static final MemoryLayout _PROCESS_HEAP_ENTRY$cbOverhead$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _PROCESS_HEAP_ENTRY$cbOverhead$LAYOUT() { return _PROCESS_HEAP_ENTRY$cbOverhead$LAYOUT_; }

    static final VarHandle _PROCESS_HEAP_ENTRY$cbOverhead$VH_ = _PROCESS_HEAP_ENTRY$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cbOverhead"));
    public static java.lang.invoke.VarHandle _PROCESS_HEAP_ENTRY$cbOverhead$VH() { return _PROCESS_HEAP_ENTRY$cbOverhead$VH_; }

    static final MemoryLayout _PROCESS_HEAP_ENTRY$iRegionIndex$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout _PROCESS_HEAP_ENTRY$iRegionIndex$LAYOUT() { return _PROCESS_HEAP_ENTRY$iRegionIndex$LAYOUT_; }

    static final VarHandle _PROCESS_HEAP_ENTRY$iRegionIndex$VH_ = _PROCESS_HEAP_ENTRY$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("iRegionIndex"));
    public static java.lang.invoke.VarHandle _PROCESS_HEAP_ENTRY$iRegionIndex$VH() { return _PROCESS_HEAP_ENTRY$iRegionIndex$VH_; }

    static final MemoryLayout _PROCESS_HEAP_ENTRY$wFlags$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout _PROCESS_HEAP_ENTRY$wFlags$LAYOUT() { return _PROCESS_HEAP_ENTRY$wFlags$LAYOUT_; }

    static final VarHandle _PROCESS_HEAP_ENTRY$wFlags$VH_ = _PROCESS_HEAP_ENTRY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wFlags"));
    public static java.lang.invoke.VarHandle _PROCESS_HEAP_ENTRY$wFlags$VH() { return _PROCESS_HEAP_ENTRY$wFlags$VH_; }

    static final MemoryLayout Block$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hMem"),
        MemoryLayout.ofSequence(3, C_INT).withName("dwReserved"),
        MemoryLayout.ofPaddingBits(32)
    );
    public static jdk.incubator.foreign.MemoryLayout Block$struct$LAYOUT() { return Block$struct$LAYOUT_; }

    static final MemoryLayout Block$hMem$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout Block$hMem$LAYOUT() { return Block$hMem$LAYOUT_; }

    static final VarHandle Block$hMem$VH_ = MemoryHandles.asAddressVarHandle(Block$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMem")));
    public static java.lang.invoke.VarHandle Block$hMem$VH() { return Block$hMem$VH_; }

    static final MemoryLayout Region$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("dwCommittedSize"),
        C_INT.withName("dwUnCommittedSize"),
        C_POINTER.withName("lpFirstBlock"),
        C_POINTER.withName("lpLastBlock")
    );
    public static jdk.incubator.foreign.MemoryLayout Region$struct$LAYOUT() { return Region$struct$LAYOUT_; }

    static final MemoryLayout Region$dwCommittedSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout Region$dwCommittedSize$LAYOUT() { return Region$dwCommittedSize$LAYOUT_; }

    static final VarHandle Region$dwCommittedSize$VH_ = Region$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCommittedSize"));
    public static java.lang.invoke.VarHandle Region$dwCommittedSize$VH() { return Region$dwCommittedSize$VH_; }

    static final MemoryLayout Region$dwUnCommittedSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout Region$dwUnCommittedSize$LAYOUT() { return Region$dwUnCommittedSize$LAYOUT_; }

    static final VarHandle Region$dwUnCommittedSize$VH_ = Region$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwUnCommittedSize"));
    public static java.lang.invoke.VarHandle Region$dwUnCommittedSize$VH() { return Region$dwUnCommittedSize$VH_; }

    static final MemoryLayout Region$lpFirstBlock$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout Region$lpFirstBlock$LAYOUT() { return Region$lpFirstBlock$LAYOUT_; }

    static final VarHandle Region$lpFirstBlock$VH_ = MemoryHandles.asAddressVarHandle(Region$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpFirstBlock")));
    public static java.lang.invoke.VarHandle Region$lpFirstBlock$VH() { return Region$lpFirstBlock$VH_; }

}

