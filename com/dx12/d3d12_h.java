// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;
public final class d3d12_h {

    private d3d12_h() {}
    public static @C("int") int __REQUIRED_RPCNDR_H_VERSION__() {
        return d3d12_h$constants$0.__REQUIRED_RPCNDR_H_VERSION__();
    }
    public static @C("int") int __REQUIRED_RPCSAL_H_VERSION__() {
        return d3d12_h$constants$0.__REQUIRED_RPCSAL_H_VERSION__();
    }
    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_MASK() {
        return d3d12_h$constants$0.D3D12_SHADER_COMPONENT_MAPPING_MASK();
    }
    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_SHIFT() {
        return d3d12_h$constants$0.D3D12_SHADER_COMPONENT_MAPPING_SHIFT();
    }
    public static @C("int") int D3D12_SHADING_RATE_X_AXIS_SHIFT() {
        return d3d12_h$constants$0.D3D12_SHADING_RATE_X_AXIS_SHIFT();
    }
    public static @C("int") int D3D12_SHADING_RATE_VALID_MASK() {
        return d3d12_h$constants$0.D3D12_SHADING_RATE_VALID_MASK();
    }
    public static @C("int") int D3D12_COMMAND_LIST_TYPE_DIRECT() {
        return d3d12_h$constants$0.D3D12_COMMAND_LIST_TYPE_DIRECT();
    }
    public static @C("int") int D3D12_COMMAND_LIST_TYPE_BUNDLE() {
        return d3d12_h$constants$0.D3D12_COMMAND_LIST_TYPE_BUNDLE();
    }
    public static @C("int") int D3D12_COMMAND_LIST_TYPE_COMPUTE() {
        return d3d12_h$constants$0.D3D12_COMMAND_LIST_TYPE_COMPUTE();
    }
    public static @C("int") int D3D12_COMMAND_LIST_TYPE_COPY() {
        return d3d12_h$constants$0.D3D12_COMMAND_LIST_TYPE_COPY();
    }
    public static @C("int") int D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE() {
        return d3d12_h$constants$0.D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE();
    }
    public static @C("int") int D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS() {
        return d3d12_h$constants$0.D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS();
    }
    public static @C("int") int D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE() {
        return d3d12_h$constants$0.D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE();
    }
    public static @C("int") int D3D12_COMMAND_QUEUE_FLAG_NONE() {
        return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_FLAG_NONE();
    }
    public static @C("int") int D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT() {
        return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT();
    }
    public static @C("int") int D3D12_COMMAND_QUEUE_PRIORITY_NORMAL() {
        return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_PRIORITY_NORMAL();
    }
    public static @C("int") int D3D12_COMMAND_QUEUE_PRIORITY_HIGH() {
        return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_PRIORITY_HIGH();
    }
    public static @C("int") int D3D12_COMMAND_QUEUE_PRIORITY_GLOBAL_REALTIME() {
        return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_PRIORITY_GLOBAL_REALTIME();
    }
    public static class D3D12_COMMAND_QUEUE_DESC {

        private D3D12_COMMAND_QUEUE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Type$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE") int Type$get(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Type$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE") int Type$get(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE") int x) {
            d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE") int x) {
            d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Priority$VH() {
            return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Priority$VH();
        }
        public static  @C("INT") int Priority$get(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Priority$VH().get(seg);
        }
        public static  @C("INT") int Priority$get(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Priority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Priority$set(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, @C("INT") int x) {
            d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Priority$VH().set(seg, x);
        }
        public static void Priority$set(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, long index, @C("INT") int x) {
            d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Priority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Flags$VH();
        }
        public static  @C("D3D12_COMMAND_QUEUE_FLAGS") int Flags$get(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_QUEUE_FLAGS") int Flags$get(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, @C("D3D12_COMMAND_QUEUE_FLAGS") int x) {
            d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, long index, @C("D3D12_COMMAND_QUEUE_FLAGS") int x) {
            d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_COMMAND_QUEUE_DESC$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_COMMAND_QUEUE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_COMMAND_QUEUE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_COMMAND_QUEUE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_COMMAND_QUEUE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_COMMAND_QUEUE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED() {
        return d3d12_h$constants$0.D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED();
    }
    public static @C("int") int D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT() {
        return d3d12_h$constants$0.D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT();
    }
    public static @C("int") int D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE() {
        return d3d12_h$constants$0.D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE();
    }
    public static @C("int") int D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE() {
        return d3d12_h$constants$0.D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE();
    }
    public static @C("int") int D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH() {
        return d3d12_h$constants$0.D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH();
    }
    public static @C("int") int D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA() {
        return d3d12_h$constants$0.D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA();
    }
    public static @C("int") int D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA() {
        return d3d12_h$constants$0.D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA();
    }
    public static class D3D12_INPUT_ELEMENT_DESC {

        private D3D12_INPUT_ELEMENT_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$struct$LAYOUT();
        }
        public static VarHandle SemanticName$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticName$VH();
        }
        public static  @C("LPCSTR") MemoryAddress SemanticName$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticName$VH().get(seg);
        }
        public static  @C("LPCSTR") MemoryAddress SemanticName$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SemanticName$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, @C("LPCSTR") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticName$VH().set(seg, x);
        }
        public static void SemanticName$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index, @C("LPCSTR") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SemanticIndex$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticIndex$VH();
        }
        public static  @C("UINT") int SemanticIndex$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticIndex$VH().get(seg);
        }
        public static  @C("UINT") int SemanticIndex$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SemanticIndex$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticIndex$VH().set(seg, x);
        }
        public static void SemanticIndex$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$SemanticIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InputSlot$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlot$VH();
        }
        public static  @C("UINT") int InputSlot$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlot$VH().get(seg);
        }
        public static  @C("UINT") int InputSlot$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlot$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InputSlot$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlot$VH().set(seg, x);
        }
        public static void InputSlot$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlot$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AlignedByteOffset$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$AlignedByteOffset$VH();
        }
        public static  @C("UINT") int AlignedByteOffset$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$AlignedByteOffset$VH().get(seg);
        }
        public static  @C("UINT") int AlignedByteOffset$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$AlignedByteOffset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AlignedByteOffset$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$AlignedByteOffset$VH().set(seg, x);
        }
        public static void AlignedByteOffset$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$AlignedByteOffset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InputSlotClass$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlotClass$VH();
        }
        public static  @C("D3D12_INPUT_CLASSIFICATION") int InputSlotClass$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlotClass$VH().get(seg);
        }
        public static  @C("D3D12_INPUT_CLASSIFICATION") int InputSlotClass$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlotClass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InputSlotClass$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, @C("D3D12_INPUT_CLASSIFICATION") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlotClass$VH().set(seg, x);
        }
        public static void InputSlotClass$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index, @C("D3D12_INPUT_CLASSIFICATION") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InputSlotClass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InstanceDataStepRate$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InstanceDataStepRate$VH();
        }
        public static  @C("UINT") int InstanceDataStepRate$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InstanceDataStepRate$VH().get(seg);
        }
        public static  @C("UINT") int InstanceDataStepRate$get(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InstanceDataStepRate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InstanceDataStepRate$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InstanceDataStepRate$VH().set(seg, x);
        }
        public static void InstanceDataStepRate$set(@C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_ELEMENT_DESC$InstanceDataStepRate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_INPUT_ELEMENT_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_INPUT_ELEMENT_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_INPUT_ELEMENT_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_INPUT_ELEMENT_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_INPUT_ELEMENT_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_FILL_MODE_WIREFRAME() {
        return d3d12_h$constants$0.D3D12_FILL_MODE_WIREFRAME();
    }
    public static @C("int") int D3D12_FILL_MODE_SOLID() {
        return d3d12_h$constants$0.D3D12_FILL_MODE_SOLID();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_UNDEFINED() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_UNDEFINED();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_POINTLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_POINTLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_LINELIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_LINELIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_LINESTRIP() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_LINESTRIP();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_POINTLIST() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_POINTLIST();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_LINELIST() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_LINELIST();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ();
    }
    public static @C("int") int D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_POINTLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_POINTLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_LINELIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_LINELIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST();
    }
    public static @C("int") int D3D_PRIMITIVE_UNDEFINED() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_UNDEFINED();
    }
    public static @C("int") int D3D_PRIMITIVE_POINT() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_POINT();
    }
    public static @C("int") int D3D_PRIMITIVE_LINE() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_LINE();
    }
    public static @C("int") int D3D_PRIMITIVE_TRIANGLE() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TRIANGLE();
    }
    public static @C("int") int D3D_PRIMITIVE_LINE_ADJ() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_LINE_ADJ();
    }
    public static @C("int") int D3D_PRIMITIVE_TRIANGLE_ADJ() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_TRIANGLE_ADJ();
    }
    public static @C("int") int D3D_PRIMITIVE_1_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_1_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_2_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_2_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_3_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_3_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_4_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_4_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_5_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_5_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_6_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_6_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_7_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_7_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_8_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_8_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_9_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_9_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_10_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_10_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_11_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_11_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_12_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_12_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_13_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_13_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_14_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_14_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_15_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_15_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_16_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_16_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_17_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_17_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_18_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_18_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_19_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_19_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_20_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_20_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_21_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_21_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_22_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_22_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_23_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_23_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_24_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_24_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_25_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_25_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_26_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_26_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_27_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_27_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_28_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_28_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_29_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_29_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_30_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_30_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_31_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_31_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D_PRIMITIVE_32_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D_PRIMITIVE_32_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D10_PRIMITIVE_UNDEFINED() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_UNDEFINED();
    }
    public static @C("int") int D3D10_PRIMITIVE_POINT() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_POINT();
    }
    public static @C("int") int D3D10_PRIMITIVE_LINE() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_LINE();
    }
    public static @C("int") int D3D10_PRIMITIVE_TRIANGLE() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TRIANGLE();
    }
    public static @C("int") int D3D10_PRIMITIVE_LINE_ADJ() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_LINE_ADJ();
    }
    public static @C("int") int D3D10_PRIMITIVE_TRIANGLE_ADJ() {
        return d3d12_h$constants$0.D3D10_PRIMITIVE_TRIANGLE_ADJ();
    }
    public static @C("int") int D3D11_PRIMITIVE_UNDEFINED() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_UNDEFINED();
    }
    public static @C("int") int D3D11_PRIMITIVE_POINT() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_POINT();
    }
    public static @C("int") int D3D11_PRIMITIVE_LINE() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_LINE();
    }
    public static @C("int") int D3D11_PRIMITIVE_TRIANGLE() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TRIANGLE();
    }
    public static @C("int") int D3D11_PRIMITIVE_LINE_ADJ() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_LINE_ADJ();
    }
    public static @C("int") int D3D11_PRIMITIVE_TRIANGLE_ADJ() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_TRIANGLE_ADJ();
    }
    public static @C("int") int D3D11_PRIMITIVE_1_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_1_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_2_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_2_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_3_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_3_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_4_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_4_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_5_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_5_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_6_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_6_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_7_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_7_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_8_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_8_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_9_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_9_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_10_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_10_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_11_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_11_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_12_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_12_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_13_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_13_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_14_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_14_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_15_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_15_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_16_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_16_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_17_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_17_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_18_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_18_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_19_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_19_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_20_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_20_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_21_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_21_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_22_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_22_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_23_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_23_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_24_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_24_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_25_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_25_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_26_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_26_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_27_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_27_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_28_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_28_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_29_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_29_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_30_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_30_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_31_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_31_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D11_PRIMITIVE_32_CONTROL_POINT_PATCH() {
        return d3d12_h$constants$0.D3D11_PRIMITIVE_32_CONTROL_POINT_PATCH();
    }
    public static @C("int") int D3D12_CULL_MODE_NONE() {
        return d3d12_h$constants$0.D3D12_CULL_MODE_NONE();
    }
    public static @C("int") int D3D12_CULL_MODE_FRONT() {
        return d3d12_h$constants$0.D3D12_CULL_MODE_FRONT();
    }
    public static @C("int") int D3D12_CULL_MODE_BACK() {
        return d3d12_h$constants$0.D3D12_CULL_MODE_BACK();
    }
    public static class D3D12_SO_DECLARATION_ENTRY {

        private D3D12_SO_DECLARATION_ENTRY() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$struct$LAYOUT();
        }
        public static VarHandle Stream$VH() {
            return d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$Stream$VH();
        }
        public static  @C("UINT") int Stream$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$Stream$VH().get(seg);
        }
        public static  @C("UINT") int Stream$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$Stream$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Stream$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$Stream$VH().set(seg, x);
        }
        public static void Stream$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$Stream$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SemanticName$VH() {
            return d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticName$VH();
        }
        public static  @C("LPCSTR") MemoryAddress SemanticName$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticName$VH().get(seg);
        }
        public static  @C("LPCSTR") MemoryAddress SemanticName$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SemanticName$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, @C("LPCSTR") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticName$VH().set(seg, x);
        }
        public static void SemanticName$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index, @C("LPCSTR") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SemanticIndex$VH() {
            return d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticIndex$VH();
        }
        public static  @C("UINT") int SemanticIndex$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticIndex$VH().get(seg);
        }
        public static  @C("UINT") int SemanticIndex$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SemanticIndex$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticIndex$VH().set(seg, x);
        }
        public static void SemanticIndex$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$SemanticIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartComponent$VH() {
            return d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$StartComponent$VH();
        }
        public static  @C("BYTE") byte StartComponent$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg) {
            return (byte)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$StartComponent$VH().get(seg);
        }
        public static  @C("BYTE") byte StartComponent$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$StartComponent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartComponent$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, @C("BYTE") byte x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$StartComponent$VH().set(seg, x);
        }
        public static void StartComponent$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index, @C("BYTE") byte x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$StartComponent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ComponentCount$VH() {
            return d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$ComponentCount$VH();
        }
        public static  @C("BYTE") byte ComponentCount$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg) {
            return (byte)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$ComponentCount$VH().get(seg);
        }
        public static  @C("BYTE") byte ComponentCount$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$ComponentCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ComponentCount$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, @C("BYTE") byte x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$ComponentCount$VH().set(seg, x);
        }
        public static void ComponentCount$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index, @C("BYTE") byte x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$ComponentCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OutputSlot$VH() {
            return d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$OutputSlot$VH();
        }
        public static  @C("BYTE") byte OutputSlot$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg) {
            return (byte)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$OutputSlot$VH().get(seg);
        }
        public static  @C("BYTE") byte OutputSlot$get(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$OutputSlot$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OutputSlot$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, @C("BYTE") byte x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$OutputSlot$VH().set(seg, x);
        }
        public static void OutputSlot$set(@C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment seg, long index, @C("BYTE") byte x) {
            d3d12_h$constants$0.D3D12_SO_DECLARATION_ENTRY$OutputSlot$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SO_DECLARATION_ENTRY") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SO_DECLARATION_ENTRY[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SO_DECLARATION_ENTRY[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SO_DECLARATION_ENTRY*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SO_DECLARATION_ENTRY*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_VIEWPORT {

        private D3D12_VIEWPORT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_VIEWPORT$struct$LAYOUT();
        }
        public static VarHandle TopLeftX$VH() {
            return d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftX$VH();
        }
        public static  @C("FLOAT") float TopLeftX$get(@C("struct D3D12_VIEWPORT") MemorySegment seg) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftX$VH().get(seg);
        }
        public static  @C("FLOAT") float TopLeftX$get(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void TopLeftX$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftX$VH().set(seg, x);
        }
        public static void TopLeftX$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle TopLeftY$VH() {
            return d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftY$VH();
        }
        public static  @C("FLOAT") float TopLeftY$get(@C("struct D3D12_VIEWPORT") MemorySegment seg) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftY$VH().get(seg);
        }
        public static  @C("FLOAT") float TopLeftY$get(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void TopLeftY$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftY$VH().set(seg, x);
        }
        public static void TopLeftY$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$TopLeftY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Width$VH() {
            return d3d12_h$constants$0.D3D12_VIEWPORT$Width$VH();
        }
        public static  @C("FLOAT") float Width$get(@C("struct D3D12_VIEWPORT") MemorySegment seg) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$Width$VH().get(seg);
        }
        public static  @C("FLOAT") float Width$get(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$Width$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Width$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$Width$VH().set(seg, x);
        }
        public static void Width$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$Width$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Height$VH() {
            return d3d12_h$constants$0.D3D12_VIEWPORT$Height$VH();
        }
        public static  @C("FLOAT") float Height$get(@C("struct D3D12_VIEWPORT") MemorySegment seg) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$Height$VH().get(seg);
        }
        public static  @C("FLOAT") float Height$get(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$Height$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Height$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$Height$VH().set(seg, x);
        }
        public static void Height$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$Height$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MinDepth$VH() {
            return d3d12_h$constants$0.D3D12_VIEWPORT$MinDepth$VH();
        }
        public static  @C("FLOAT") float MinDepth$get(@C("struct D3D12_VIEWPORT") MemorySegment seg) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$MinDepth$VH().get(seg);
        }
        public static  @C("FLOAT") float MinDepth$get(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$MinDepth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MinDepth$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$MinDepth$VH().set(seg, x);
        }
        public static void MinDepth$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$MinDepth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxDepth$VH() {
            return d3d12_h$constants$0.D3D12_VIEWPORT$MaxDepth$VH();
        }
        public static  @C("FLOAT") float MaxDepth$get(@C("struct D3D12_VIEWPORT") MemorySegment seg) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$MaxDepth$VH().get(seg);
        }
        public static  @C("FLOAT") float MaxDepth$get(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$0.D3D12_VIEWPORT$MaxDepth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxDepth$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$MaxDepth$VH().set(seg, x);
        }
        public static void MaxDepth$set(@C("struct D3D12_VIEWPORT") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_VIEWPORT$MaxDepth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_VIEWPORT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_VIEWPORT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_VIEWPORT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_VIEWPORT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_VIEWPORT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_VIEWPORT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_BOX {

        private D3D12_BOX() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_BOX$struct$LAYOUT();
        }
        public static VarHandle left$VH() {
            return d3d12_h$constants$0.D3D12_BOX$left$VH();
        }
        public static  @C("UINT") int left$get(@C("struct D3D12_BOX") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_BOX$left$VH().get(seg);
        }
        public static  @C("UINT") int left$get(@C("struct D3D12_BOX") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_BOX$left$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void left$set(@C("struct D3D12_BOX") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$left$VH().set(seg, x);
        }
        public static void left$set(@C("struct D3D12_BOX") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$left$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle top$VH() {
            return d3d12_h$constants$0.D3D12_BOX$top$VH();
        }
        public static  @C("UINT") int top$get(@C("struct D3D12_BOX") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_BOX$top$VH().get(seg);
        }
        public static  @C("UINT") int top$get(@C("struct D3D12_BOX") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_BOX$top$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void top$set(@C("struct D3D12_BOX") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$top$VH().set(seg, x);
        }
        public static void top$set(@C("struct D3D12_BOX") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$top$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle front$VH() {
            return d3d12_h$constants$0.D3D12_BOX$front$VH();
        }
        public static  @C("UINT") int front$get(@C("struct D3D12_BOX") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_BOX$front$VH().get(seg);
        }
        public static  @C("UINT") int front$get(@C("struct D3D12_BOX") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_BOX$front$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void front$set(@C("struct D3D12_BOX") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$front$VH().set(seg, x);
        }
        public static void front$set(@C("struct D3D12_BOX") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$front$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle right$VH() {
            return d3d12_h$constants$0.D3D12_BOX$right$VH();
        }
        public static  @C("UINT") int right$get(@C("struct D3D12_BOX") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_BOX$right$VH().get(seg);
        }
        public static  @C("UINT") int right$get(@C("struct D3D12_BOX") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_BOX$right$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void right$set(@C("struct D3D12_BOX") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$right$VH().set(seg, x);
        }
        public static void right$set(@C("struct D3D12_BOX") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$right$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle bottom$VH() {
            return d3d12_h$constants$0.D3D12_BOX$bottom$VH();
        }
        public static  @C("UINT") int bottom$get(@C("struct D3D12_BOX") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_BOX$bottom$VH().get(seg);
        }
        public static  @C("UINT") int bottom$get(@C("struct D3D12_BOX") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_BOX$bottom$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void bottom$set(@C("struct D3D12_BOX") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$bottom$VH().set(seg, x);
        }
        public static void bottom$set(@C("struct D3D12_BOX") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$bottom$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle back$VH() {
            return d3d12_h$constants$0.D3D12_BOX$back$VH();
        }
        public static  @C("UINT") int back$get(@C("struct D3D12_BOX") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_BOX$back$VH().get(seg);
        }
        public static  @C("UINT") int back$get(@C("struct D3D12_BOX") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_BOX$back$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void back$set(@C("struct D3D12_BOX") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$back$VH().set(seg, x);
        }
        public static void back$set(@C("struct D3D12_BOX") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_BOX$back$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_BOX") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_BOX") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_BOX[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_BOX[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_BOX*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_BOX*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_COMPARISON_FUNC_NEVER() {
        return d3d12_h$constants$0.D3D12_COMPARISON_FUNC_NEVER();
    }
    public static @C("int") int D3D12_COMPARISON_FUNC_LESS() {
        return d3d12_h$constants$0.D3D12_COMPARISON_FUNC_LESS();
    }
    public static @C("int") int D3D12_COMPARISON_FUNC_EQUAL() {
        return d3d12_h$constants$0.D3D12_COMPARISON_FUNC_EQUAL();
    }
    public static @C("int") int D3D12_COMPARISON_FUNC_LESS_EQUAL() {
        return d3d12_h$constants$0.D3D12_COMPARISON_FUNC_LESS_EQUAL();
    }
    public static @C("int") int D3D12_COMPARISON_FUNC_GREATER() {
        return d3d12_h$constants$0.D3D12_COMPARISON_FUNC_GREATER();
    }
    public static @C("int") int D3D12_COMPARISON_FUNC_NOT_EQUAL() {
        return d3d12_h$constants$0.D3D12_COMPARISON_FUNC_NOT_EQUAL();
    }
    public static @C("int") int D3D12_COMPARISON_FUNC_GREATER_EQUAL() {
        return d3d12_h$constants$0.D3D12_COMPARISON_FUNC_GREATER_EQUAL();
    }
    public static @C("int") int D3D12_COMPARISON_FUNC_ALWAYS() {
        return d3d12_h$constants$0.D3D12_COMPARISON_FUNC_ALWAYS();
    }
    public static @C("int") int D3D12_DEPTH_WRITE_MASK_ZERO() {
        return d3d12_h$constants$0.D3D12_DEPTH_WRITE_MASK_ZERO();
    }
    public static @C("int") int D3D12_DEPTH_WRITE_MASK_ALL() {
        return d3d12_h$constants$0.D3D12_DEPTH_WRITE_MASK_ALL();
    }
    public static @C("int") int D3D12_STENCIL_OP_KEEP() {
        return d3d12_h$constants$0.D3D12_STENCIL_OP_KEEP();
    }
    public static @C("int") int D3D12_STENCIL_OP_ZERO() {
        return d3d12_h$constants$0.D3D12_STENCIL_OP_ZERO();
    }
    public static @C("int") int D3D12_STENCIL_OP_REPLACE() {
        return d3d12_h$constants$0.D3D12_STENCIL_OP_REPLACE();
    }
    public static @C("int") int D3D12_STENCIL_OP_INCR_SAT() {
        return d3d12_h$constants$0.D3D12_STENCIL_OP_INCR_SAT();
    }
    public static @C("int") int D3D12_STENCIL_OP_DECR_SAT() {
        return d3d12_h$constants$0.D3D12_STENCIL_OP_DECR_SAT();
    }
    public static @C("int") int D3D12_STENCIL_OP_INVERT() {
        return d3d12_h$constants$0.D3D12_STENCIL_OP_INVERT();
    }
    public static @C("int") int D3D12_STENCIL_OP_INCR() {
        return d3d12_h$constants$0.D3D12_STENCIL_OP_INCR();
    }
    public static @C("int") int D3D12_STENCIL_OP_DECR() {
        return d3d12_h$constants$0.D3D12_STENCIL_OP_DECR();
    }
    public static class D3D12_DEPTH_STENCILOP_DESC {

        private D3D12_DEPTH_STENCILOP_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$struct$LAYOUT();
        }
        public static VarHandle StencilFailOp$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFailOp$VH();
        }
        public static  @C("D3D12_STENCIL_OP") int StencilFailOp$get(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFailOp$VH().get(seg);
        }
        public static  @C("D3D12_STENCIL_OP") int StencilFailOp$get(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFailOp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilFailOp$set(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, @C("D3D12_STENCIL_OP") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFailOp$VH().set(seg, x);
        }
        public static void StencilFailOp$set(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, long index, @C("D3D12_STENCIL_OP") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFailOp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilDepthFailOp$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilDepthFailOp$VH();
        }
        public static  @C("D3D12_STENCIL_OP") int StencilDepthFailOp$get(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilDepthFailOp$VH().get(seg);
        }
        public static  @C("D3D12_STENCIL_OP") int StencilDepthFailOp$get(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilDepthFailOp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilDepthFailOp$set(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, @C("D3D12_STENCIL_OP") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilDepthFailOp$VH().set(seg, x);
        }
        public static void StencilDepthFailOp$set(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, long index, @C("D3D12_STENCIL_OP") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilDepthFailOp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilPassOp$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilPassOp$VH();
        }
        public static  @C("D3D12_STENCIL_OP") int StencilPassOp$get(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilPassOp$VH().get(seg);
        }
        public static  @C("D3D12_STENCIL_OP") int StencilPassOp$get(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilPassOp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilPassOp$set(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, @C("D3D12_STENCIL_OP") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilPassOp$VH().set(seg, x);
        }
        public static void StencilPassOp$set(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, long index, @C("D3D12_STENCIL_OP") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilPassOp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilFunc$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFunc$VH();
        }
        public static  @C("D3D12_COMPARISON_FUNC") int StencilFunc$get(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFunc$VH().get(seg);
        }
        public static  @C("D3D12_COMPARISON_FUNC") int StencilFunc$get(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFunc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilFunc$set(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFunc$VH().set(seg, x);
        }
        public static void StencilFunc$set(@C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment seg, long index, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCILOP_DESC$StencilFunc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCILOP_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCILOP_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DEPTH_STENCILOP_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DEPTH_STENCILOP_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DEPTH_STENCILOP_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DEPTH_STENCIL_DESC {

        private D3D12_DEPTH_STENCIL_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$struct$LAYOUT();
        }
        public static VarHandle DepthEnable$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthEnable$VH();
        }
        public static  @C("BOOL") int DepthEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthEnable$VH().get(seg);
        }
        public static  @C("BOOL") int DepthEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthEnable$VH().set(seg, x);
        }
        public static void DepthEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthWriteMask$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthWriteMask$VH();
        }
        public static  @C("D3D12_DEPTH_WRITE_MASK") int DepthWriteMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthWriteMask$VH().get(seg);
        }
        public static  @C("D3D12_DEPTH_WRITE_MASK") int DepthWriteMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthWriteMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthWriteMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, @C("D3D12_DEPTH_WRITE_MASK") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthWriteMask$VH().set(seg, x);
        }
        public static void DepthWriteMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index, @C("D3D12_DEPTH_WRITE_MASK") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthWriteMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthFunc$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthFunc$VH();
        }
        public static  @C("D3D12_COMPARISON_FUNC") int DepthFunc$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthFunc$VH().get(seg);
        }
        public static  @C("D3D12_COMPARISON_FUNC") int DepthFunc$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthFunc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthFunc$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthFunc$VH().set(seg, x);
        }
        public static void DepthFunc$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$DepthFunc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilEnable$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilEnable$VH();
        }
        public static  @C("BOOL") int StencilEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilEnable$VH().get(seg);
        }
        public static  @C("BOOL") int StencilEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilEnable$VH().set(seg, x);
        }
        public static void StencilEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilReadMask$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilReadMask$VH();
        }
        public static  @C("UINT8") byte StencilReadMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg) {
            return (byte)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilReadMask$VH().get(seg);
        }
        public static  @C("UINT8") byte StencilReadMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilReadMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilReadMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilReadMask$VH().set(seg, x);
        }
        public static void StencilReadMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilReadMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilWriteMask$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilWriteMask$VH();
        }
        public static  @C("UINT8") byte StencilWriteMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg) {
            return (byte)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilWriteMask$VH().get(seg);
        }
        public static  @C("UINT8") byte StencilWriteMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilWriteMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilWriteMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilWriteMask$VH().set(seg, x);
        }
        public static void StencilWriteMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC$StencilWriteMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment FrontFace$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 16));
        }
        public static MemorySegment BackFace$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(36, 16));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DEPTH_STENCIL_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DEPTH_STENCIL_DESC1 {

        private D3D12_DEPTH_STENCIL_DESC1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$struct$LAYOUT();
        }
        public static VarHandle DepthEnable$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthEnable$VH();
        }
        public static  @C("BOOL") int DepthEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthEnable$VH().get(seg);
        }
        public static  @C("BOOL") int DepthEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthEnable$VH().set(seg, x);
        }
        public static void DepthEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthWriteMask$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthWriteMask$VH();
        }
        public static  @C("D3D12_DEPTH_WRITE_MASK") int DepthWriteMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthWriteMask$VH().get(seg);
        }
        public static  @C("D3D12_DEPTH_WRITE_MASK") int DepthWriteMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthWriteMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthWriteMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, @C("D3D12_DEPTH_WRITE_MASK") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthWriteMask$VH().set(seg, x);
        }
        public static void DepthWriteMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index, @C("D3D12_DEPTH_WRITE_MASK") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthWriteMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthFunc$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthFunc$VH();
        }
        public static  @C("D3D12_COMPARISON_FUNC") int DepthFunc$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthFunc$VH().get(seg);
        }
        public static  @C("D3D12_COMPARISON_FUNC") int DepthFunc$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthFunc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthFunc$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthFunc$VH().set(seg, x);
        }
        public static void DepthFunc$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthFunc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilEnable$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilEnable$VH();
        }
        public static  @C("BOOL") int StencilEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilEnable$VH().get(seg);
        }
        public static  @C("BOOL") int StencilEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilEnable$VH().set(seg, x);
        }
        public static void StencilEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilReadMask$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilReadMask$VH();
        }
        public static  @C("UINT8") byte StencilReadMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg) {
            return (byte)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilReadMask$VH().get(seg);
        }
        public static  @C("UINT8") byte StencilReadMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilReadMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilReadMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilReadMask$VH().set(seg, x);
        }
        public static void StencilReadMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilReadMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StencilWriteMask$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilWriteMask$VH();
        }
        public static  @C("UINT8") byte StencilWriteMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg) {
            return (byte)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilWriteMask$VH().get(seg);
        }
        public static  @C("UINT8") byte StencilWriteMask$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilWriteMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StencilWriteMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilWriteMask$VH().set(seg, x);
        }
        public static void StencilWriteMask$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$StencilWriteMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment FrontFace$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 16));
        }
        public static MemorySegment BackFace$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(36, 16));
        }
        public static VarHandle DepthBoundsTestEnable$VH() {
            return d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthBoundsTestEnable$VH();
        }
        public static  @C("BOOL") int DepthBoundsTestEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthBoundsTestEnable$VH().get(seg);
        }
        public static  @C("BOOL") int DepthBoundsTestEnable$get(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthBoundsTestEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthBoundsTestEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthBoundsTestEnable$VH().set(seg, x);
        }
        public static void DepthBoundsTestEnable$set(@C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_DEPTH_STENCIL_DESC1$DepthBoundsTestEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DEPTH_STENCIL_DESC1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DEPTH_STENCIL_DESC1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_BLEND_ZERO() {
        return d3d12_h$constants$0.D3D12_BLEND_ZERO();
    }
    public static @C("int") int D3D12_BLEND_ONE() {
        return d3d12_h$constants$0.D3D12_BLEND_ONE();
    }
    public static @C("int") int D3D12_BLEND_SRC_COLOR() {
        return d3d12_h$constants$0.D3D12_BLEND_SRC_COLOR();
    }
    public static @C("int") int D3D12_BLEND_INV_SRC_COLOR() {
        return d3d12_h$constants$0.D3D12_BLEND_INV_SRC_COLOR();
    }
    public static @C("int") int D3D12_BLEND_SRC_ALPHA() {
        return d3d12_h$constants$0.D3D12_BLEND_SRC_ALPHA();
    }
    public static @C("int") int D3D12_BLEND_INV_SRC_ALPHA() {
        return d3d12_h$constants$0.D3D12_BLEND_INV_SRC_ALPHA();
    }
    public static @C("int") int D3D12_BLEND_DEST_ALPHA() {
        return d3d12_h$constants$0.D3D12_BLEND_DEST_ALPHA();
    }
    public static @C("int") int D3D12_BLEND_INV_DEST_ALPHA() {
        return d3d12_h$constants$0.D3D12_BLEND_INV_DEST_ALPHA();
    }
    public static @C("int") int D3D12_BLEND_DEST_COLOR() {
        return d3d12_h$constants$0.D3D12_BLEND_DEST_COLOR();
    }
    public static @C("int") int D3D12_BLEND_INV_DEST_COLOR() {
        return d3d12_h$constants$0.D3D12_BLEND_INV_DEST_COLOR();
    }
    public static @C("int") int D3D12_BLEND_SRC_ALPHA_SAT() {
        return d3d12_h$constants$0.D3D12_BLEND_SRC_ALPHA_SAT();
    }
    public static @C("int") int D3D12_BLEND_BLEND_FACTOR() {
        return d3d12_h$constants$0.D3D12_BLEND_BLEND_FACTOR();
    }
    public static @C("int") int D3D12_BLEND_INV_BLEND_FACTOR() {
        return d3d12_h$constants$0.D3D12_BLEND_INV_BLEND_FACTOR();
    }
    public static @C("int") int D3D12_BLEND_SRC1_COLOR() {
        return d3d12_h$constants$0.D3D12_BLEND_SRC1_COLOR();
    }
    public static @C("int") int D3D12_BLEND_INV_SRC1_COLOR() {
        return d3d12_h$constants$0.D3D12_BLEND_INV_SRC1_COLOR();
    }
    public static @C("int") int D3D12_BLEND_SRC1_ALPHA() {
        return d3d12_h$constants$0.D3D12_BLEND_SRC1_ALPHA();
    }
    public static @C("int") int D3D12_BLEND_INV_SRC1_ALPHA() {
        return d3d12_h$constants$0.D3D12_BLEND_INV_SRC1_ALPHA();
    }
    public static @C("int") int D3D12_BLEND_OP_ADD() {
        return d3d12_h$constants$0.D3D12_BLEND_OP_ADD();
    }
    public static @C("int") int D3D12_BLEND_OP_SUBTRACT() {
        return d3d12_h$constants$0.D3D12_BLEND_OP_SUBTRACT();
    }
    public static @C("int") int D3D12_BLEND_OP_REV_SUBTRACT() {
        return d3d12_h$constants$0.D3D12_BLEND_OP_REV_SUBTRACT();
    }
    public static @C("int") int D3D12_BLEND_OP_MIN() {
        return d3d12_h$constants$0.D3D12_BLEND_OP_MIN();
    }
    public static @C("int") int D3D12_BLEND_OP_MAX() {
        return d3d12_h$constants$0.D3D12_BLEND_OP_MAX();
    }
    public static @C("int") int D3D12_COLOR_WRITE_ENABLE_RED() {
        return d3d12_h$constants$0.D3D12_COLOR_WRITE_ENABLE_RED();
    }
    public static @C("int") int D3D12_COLOR_WRITE_ENABLE_GREEN() {
        return d3d12_h$constants$0.D3D12_COLOR_WRITE_ENABLE_GREEN();
    }
    public static @C("int") int D3D12_COLOR_WRITE_ENABLE_BLUE() {
        return d3d12_h$constants$0.D3D12_COLOR_WRITE_ENABLE_BLUE();
    }
    public static @C("int") int D3D12_COLOR_WRITE_ENABLE_ALPHA() {
        return d3d12_h$constants$0.D3D12_COLOR_WRITE_ENABLE_ALPHA();
    }
    public static @C("int") int D3D12_COLOR_WRITE_ENABLE_ALL() {
        return d3d12_h$constants$0.D3D12_COLOR_WRITE_ENABLE_ALL();
    }
    public static @C("int") int D3D12_LOGIC_OP_CLEAR() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_CLEAR();
    }
    public static @C("int") int D3D12_LOGIC_OP_SET() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_SET();
    }
    public static @C("int") int D3D12_LOGIC_OP_COPY() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_COPY();
    }
    public static @C("int") int D3D12_LOGIC_OP_COPY_INVERTED() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_COPY_INVERTED();
    }
    public static @C("int") int D3D12_LOGIC_OP_NOOP() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_NOOP();
    }
    public static @C("int") int D3D12_LOGIC_OP_INVERT() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_INVERT();
    }
    public static @C("int") int D3D12_LOGIC_OP_AND() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_AND();
    }
    public static @C("int") int D3D12_LOGIC_OP_NAND() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_NAND();
    }
    public static @C("int") int D3D12_LOGIC_OP_OR() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_OR();
    }
    public static @C("int") int D3D12_LOGIC_OP_NOR() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_NOR();
    }
    public static @C("int") int D3D12_LOGIC_OP_XOR() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_XOR();
    }
    public static @C("int") int D3D12_LOGIC_OP_EQUIV() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_EQUIV();
    }
    public static @C("int") int D3D12_LOGIC_OP_AND_REVERSE() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_AND_REVERSE();
    }
    public static @C("int") int D3D12_LOGIC_OP_AND_INVERTED() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_AND_INVERTED();
    }
    public static @C("int") int D3D12_LOGIC_OP_OR_REVERSE() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_OR_REVERSE();
    }
    public static @C("int") int D3D12_LOGIC_OP_OR_INVERTED() {
        return d3d12_h$constants$0.D3D12_LOGIC_OP_OR_INVERTED();
    }
    public static class D3D12_RENDER_TARGET_BLEND_DESC {

        private D3D12_RENDER_TARGET_BLEND_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$struct$LAYOUT();
        }
        public static VarHandle BlendEnable$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendEnable$VH();
        }
        public static  @C("BOOL") int BlendEnable$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendEnable$VH().get(seg);
        }
        public static  @C("BOOL") int BlendEnable$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BlendEnable$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendEnable$VH().set(seg, x);
        }
        public static void BlendEnable$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LogicOpEnable$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOpEnable$VH();
        }
        public static  @C("BOOL") int LogicOpEnable$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOpEnable$VH().get(seg);
        }
        public static  @C("BOOL") int LogicOpEnable$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOpEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LogicOpEnable$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOpEnable$VH().set(seg, x);
        }
        public static void LogicOpEnable$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOpEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SrcBlend$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlend$VH();
        }
        public static  @C("D3D12_BLEND") int SrcBlend$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlend$VH().get(seg);
        }
        public static  @C("D3D12_BLEND") int SrcBlend$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlend$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SrcBlend$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("D3D12_BLEND") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlend$VH().set(seg, x);
        }
        public static void SrcBlend$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("D3D12_BLEND") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlend$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DestBlend$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlend$VH();
        }
        public static  @C("D3D12_BLEND") int DestBlend$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlend$VH().get(seg);
        }
        public static  @C("D3D12_BLEND") int DestBlend$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlend$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DestBlend$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("D3D12_BLEND") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlend$VH().set(seg, x);
        }
        public static void DestBlend$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("D3D12_BLEND") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlend$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BlendOp$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOp$VH();
        }
        public static  @C("D3D12_BLEND_OP") int BlendOp$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOp$VH().get(seg);
        }
        public static  @C("D3D12_BLEND_OP") int BlendOp$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BlendOp$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("D3D12_BLEND_OP") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOp$VH().set(seg, x);
        }
        public static void BlendOp$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("D3D12_BLEND_OP") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SrcBlendAlpha$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlendAlpha$VH();
        }
        public static  @C("D3D12_BLEND") int SrcBlendAlpha$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlendAlpha$VH().get(seg);
        }
        public static  @C("D3D12_BLEND") int SrcBlendAlpha$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlendAlpha$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SrcBlendAlpha$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("D3D12_BLEND") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlendAlpha$VH().set(seg, x);
        }
        public static void SrcBlendAlpha$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("D3D12_BLEND") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$SrcBlendAlpha$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DestBlendAlpha$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlendAlpha$VH();
        }
        public static  @C("D3D12_BLEND") int DestBlendAlpha$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlendAlpha$VH().get(seg);
        }
        public static  @C("D3D12_BLEND") int DestBlendAlpha$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlendAlpha$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DestBlendAlpha$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("D3D12_BLEND") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlendAlpha$VH().set(seg, x);
        }
        public static void DestBlendAlpha$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("D3D12_BLEND") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$DestBlendAlpha$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BlendOpAlpha$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOpAlpha$VH();
        }
        public static  @C("D3D12_BLEND_OP") int BlendOpAlpha$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOpAlpha$VH().get(seg);
        }
        public static  @C("D3D12_BLEND_OP") int BlendOpAlpha$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOpAlpha$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BlendOpAlpha$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("D3D12_BLEND_OP") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOpAlpha$VH().set(seg, x);
        }
        public static void BlendOpAlpha$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("D3D12_BLEND_OP") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$BlendOpAlpha$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LogicOp$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOp$VH();
        }
        public static  @C("D3D12_LOGIC_OP") int LogicOp$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOp$VH().get(seg);
        }
        public static  @C("D3D12_LOGIC_OP") int LogicOp$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LogicOp$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("D3D12_LOGIC_OP") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOp$VH().set(seg, x);
        }
        public static void LogicOp$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("D3D12_LOGIC_OP") int x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$LogicOp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RenderTargetWriteMask$VH() {
            return d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$RenderTargetWriteMask$VH();
        }
        public static  @C("UINT8") byte RenderTargetWriteMask$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg) {
            return (byte)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$RenderTargetWriteMask$VH().get(seg);
        }
        public static  @C("UINT8") byte RenderTargetWriteMask$get(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$RenderTargetWriteMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RenderTargetWriteMask$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$RenderTargetWriteMask$VH().set(seg, x);
        }
        public static void RenderTargetWriteMask$set(@C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$0.D3D12_RENDER_TARGET_BLEND_DESC$RenderTargetWriteMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_TARGET_BLEND_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_TARGET_BLEND_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_TARGET_BLEND_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_TARGET_BLEND_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_TARGET_BLEND_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_BLEND_DESC {

        private D3D12_BLEND_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_BLEND_DESC$struct$LAYOUT();
        }
        public static VarHandle AlphaToCoverageEnable$VH() {
            return d3d12_h$constants$0.D3D12_BLEND_DESC$AlphaToCoverageEnable$VH();
        }
        public static  @C("BOOL") int AlphaToCoverageEnable$get(@C("struct D3D12_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_BLEND_DESC$AlphaToCoverageEnable$VH().get(seg);
        }
        public static  @C("BOOL") int AlphaToCoverageEnable$get(@C("struct D3D12_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_BLEND_DESC$AlphaToCoverageEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AlphaToCoverageEnable$set(@C("struct D3D12_BLEND_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_BLEND_DESC$AlphaToCoverageEnable$VH().set(seg, x);
        }
        public static void AlphaToCoverageEnable$set(@C("struct D3D12_BLEND_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_BLEND_DESC$AlphaToCoverageEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IndependentBlendEnable$VH() {
            return d3d12_h$constants$0.D3D12_BLEND_DESC$IndependentBlendEnable$VH();
        }
        public static  @C("BOOL") int IndependentBlendEnable$get(@C("struct D3D12_BLEND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_BLEND_DESC$IndependentBlendEnable$VH().get(seg);
        }
        public static  @C("BOOL") int IndependentBlendEnable$get(@C("struct D3D12_BLEND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_BLEND_DESC$IndependentBlendEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IndependentBlendEnable$set(@C("struct D3D12_BLEND_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_BLEND_DESC$IndependentBlendEnable$VH().set(seg, x);
        }
        public static void IndependentBlendEnable$set(@C("struct D3D12_BLEND_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_BLEND_DESC$IndependentBlendEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment RenderTarget$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 320));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_BLEND_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_BLEND_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_BLEND_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_BLEND_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_BLEND_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_BLEND_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF() {
        return d3d12_h$constants$0.D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF();
    }
    public static @C("int") int D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON() {
        return d3d12_h$constants$0.D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON();
    }
    public static class D3D12_RASTERIZER_DESC {

        private D3D12_RASTERIZER_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$struct$LAYOUT();
        }
        public static VarHandle FillMode$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FillMode$VH();
        }
        public static  @C("D3D12_FILL_MODE") int FillMode$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FillMode$VH().get(seg);
        }
        public static  @C("D3D12_FILL_MODE") int FillMode$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FillMode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FillMode$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("D3D12_FILL_MODE") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FillMode$VH().set(seg, x);
        }
        public static void FillMode$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("D3D12_FILL_MODE") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FillMode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CullMode$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$CullMode$VH();
        }
        public static  @C("D3D12_CULL_MODE") int CullMode$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$CullMode$VH().get(seg);
        }
        public static  @C("D3D12_CULL_MODE") int CullMode$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$CullMode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CullMode$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("D3D12_CULL_MODE") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$CullMode$VH().set(seg, x);
        }
        public static void CullMode$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("D3D12_CULL_MODE") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$CullMode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FrontCounterClockwise$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FrontCounterClockwise$VH();
        }
        public static  @C("BOOL") int FrontCounterClockwise$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FrontCounterClockwise$VH().get(seg);
        }
        public static  @C("BOOL") int FrontCounterClockwise$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FrontCounterClockwise$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FrontCounterClockwise$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FrontCounterClockwise$VH().set(seg, x);
        }
        public static void FrontCounterClockwise$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$FrontCounterClockwise$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthBias$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBias$VH();
        }
        public static  @C("INT") int DepthBias$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBias$VH().get(seg);
        }
        public static  @C("INT") int DepthBias$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBias$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthBias$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("INT") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBias$VH().set(seg, x);
        }
        public static void DepthBias$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("INT") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBias$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthBiasClamp$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBiasClamp$VH();
        }
        public static  @C("FLOAT") float DepthBiasClamp$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (float)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBiasClamp$VH().get(seg);
        }
        public static  @C("FLOAT") float DepthBiasClamp$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBiasClamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthBiasClamp$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBiasClamp$VH().set(seg, x);
        }
        public static void DepthBiasClamp$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthBiasClamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SlopeScaledDepthBias$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$SlopeScaledDepthBias$VH();
        }
        public static  @C("FLOAT") float SlopeScaledDepthBias$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (float)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$SlopeScaledDepthBias$VH().get(seg);
        }
        public static  @C("FLOAT") float SlopeScaledDepthBias$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$SlopeScaledDepthBias$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SlopeScaledDepthBias$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$SlopeScaledDepthBias$VH().set(seg, x);
        }
        public static void SlopeScaledDepthBias$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$SlopeScaledDepthBias$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthClipEnable$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthClipEnable$VH();
        }
        public static  @C("BOOL") int DepthClipEnable$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthClipEnable$VH().get(seg);
        }
        public static  @C("BOOL") int DepthClipEnable$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthClipEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthClipEnable$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthClipEnable$VH().set(seg, x);
        }
        public static void DepthClipEnable$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$DepthClipEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MultisampleEnable$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$MultisampleEnable$VH();
        }
        public static  @C("BOOL") int MultisampleEnable$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$MultisampleEnable$VH().get(seg);
        }
        public static  @C("BOOL") int MultisampleEnable$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$MultisampleEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MultisampleEnable$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$MultisampleEnable$VH().set(seg, x);
        }
        public static void MultisampleEnable$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$MultisampleEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AntialiasedLineEnable$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$AntialiasedLineEnable$VH();
        }
        public static  @C("BOOL") int AntialiasedLineEnable$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$AntialiasedLineEnable$VH().get(seg);
        }
        public static  @C("BOOL") int AntialiasedLineEnable$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$AntialiasedLineEnable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AntialiasedLineEnable$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$AntialiasedLineEnable$VH().set(seg, x);
        }
        public static void AntialiasedLineEnable$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$AntialiasedLineEnable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ForcedSampleCount$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ForcedSampleCount$VH();
        }
        public static  @C("UINT") int ForcedSampleCount$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ForcedSampleCount$VH().get(seg);
        }
        public static  @C("UINT") int ForcedSampleCount$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ForcedSampleCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ForcedSampleCount$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ForcedSampleCount$VH().set(seg, x);
        }
        public static void ForcedSampleCount$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ForcedSampleCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ConservativeRaster$VH() {
            return d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ConservativeRaster$VH();
        }
        public static  @C("D3D12_CONSERVATIVE_RASTERIZATION_MODE") int ConservativeRaster$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ConservativeRaster$VH().get(seg);
        }
        public static  @C("D3D12_CONSERVATIVE_RASTERIZATION_MODE") int ConservativeRaster$get(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ConservativeRaster$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ConservativeRaster$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, @C("D3D12_CONSERVATIVE_RASTERIZATION_MODE") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ConservativeRaster$VH().set(seg, x);
        }
        public static void ConservativeRaster$set(@C("struct D3D12_RASTERIZER_DESC") MemorySegment seg, long index, @C("D3D12_CONSERVATIVE_RASTERIZATION_MODE") int x) {
            d3d12_h$constants$0.D3D12_RASTERIZER_DESC$ConservativeRaster$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RASTERIZER_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RASTERIZER_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RASTERIZER_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RASTERIZER_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RASTERIZER_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RASTERIZER_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$VH().get(d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$VH().set(d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$VH().get(d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$VH().set(d3d12_h$constants$0.__MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12Object$SEGMENT() {
        return d3d12_h$constants$0.IID_ID3D12Object$SEGMENT();
    }
    public static class ID3D12ObjectVtbl {

        private ID3D12ObjectVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.ID3D12ObjectVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$0.ID3D12ObjectVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Object*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Object*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Object*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Object*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$0.ID3D12ObjectVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Object*)") MemoryAddress AddRef$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Object*)") MemoryAddress AddRef$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Object*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Object*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$0.ID3D12ObjectVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Object*)") MemoryAddress Release$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Object*)") MemoryAddress Release$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Object*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Object*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$0.ID3D12ObjectVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Object*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Object*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Object*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Object*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Object*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Object*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Object*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Object*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Object*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Object*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Object*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Object*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$0.ID3D12ObjectVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Object*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Object*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12ObjectVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Object*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12ObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Object*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12ObjectVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ObjectVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ObjectVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ObjectVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ObjectVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ObjectVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ObjectVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Object {

        private ID3D12Object() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.ID3D12Object$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$0.ID3D12Object$lpVtbl$VH();
        }
        public static  @C("struct ID3D12ObjectVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Object") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12Object$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12ObjectVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Object") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12Object$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Object") MemorySegment seg, @C("struct ID3D12ObjectVtbl*") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12Object$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Object") MemorySegment seg, long index, @C("struct ID3D12ObjectVtbl*") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12Object$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Object") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Object") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Object[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Object[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Object*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Object*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12DeviceChild$SEGMENT() {
        return d3d12_h$constants$0.IID_ID3D12DeviceChild$SEGMENT();
    }
    public static class ID3D12DeviceChildVtbl {

        private ID3D12DeviceChildVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceChild*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceChild*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceChild*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceChild*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceChild*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceChild*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceChild*)") MemoryAddress Release$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceChild*)") MemoryAddress Release$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceChild*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceChild*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceChild*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceChild*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceChild*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceChild*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceChild*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12DeviceChildVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceChild*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChildVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceChildVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceChildVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceChildVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceChildVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceChildVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceChildVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12DeviceChild {

        private ID3D12DeviceChild() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.ID3D12DeviceChild$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$0.ID3D12DeviceChild$lpVtbl$VH();
        }
        public static  @C("struct ID3D12DeviceChildVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceChild") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChild$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12DeviceChildVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceChild") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12DeviceChild$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceChild") MemorySegment seg, @C("struct ID3D12DeviceChildVtbl*") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChild$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceChild") MemorySegment seg, long index, @C("struct ID3D12DeviceChildVtbl*") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12DeviceChild$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceChild") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceChild") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceChild[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceChild[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceChild*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceChild*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12RootSignature$SEGMENT() {
        return d3d12_h$constants$0.IID_ID3D12RootSignature$SEGMENT();
    }
    public static class ID3D12RootSignatureVtbl {

        private ID3D12RootSignatureVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12RootSignature*)") MemoryAddress AddRef$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12RootSignature*)") MemoryAddress AddRef$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12RootSignature*)") MemoryAddress Release$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12RootSignature*)") MemoryAddress Release$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12RootSignature*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12RootSignature*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12RootSignature*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12RootSignature*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12RootSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignatureVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12RootSignatureVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12RootSignatureVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12RootSignatureVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12RootSignatureVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12RootSignatureVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12RootSignatureVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12RootSignature {

        private ID3D12RootSignature() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.ID3D12RootSignature$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$0.ID3D12RootSignature$lpVtbl$VH();
        }
        public static  @C("struct ID3D12RootSignatureVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12RootSignature") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignature$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12RootSignatureVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12RootSignature") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.ID3D12RootSignature$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12RootSignature") MemorySegment seg, @C("struct ID3D12RootSignatureVtbl*") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignature$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12RootSignature") MemorySegment seg, long index, @C("struct ID3D12RootSignatureVtbl*") MemoryAddress x) {
            d3d12_h$constants$0.ID3D12RootSignature$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12RootSignature") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12RootSignature") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12RootSignature[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12RootSignature[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12RootSignature*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12RootSignature*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_SHADER_BYTECODE {

        private D3D12_SHADER_BYTECODE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_SHADER_BYTECODE$struct$LAYOUT();
        }
        public static VarHandle pShaderBytecode$VH() {
            return d3d12_h$constants$0.D3D12_SHADER_BYTECODE$pShaderBytecode$VH();
        }
        public static  @C("void*") MemoryAddress pShaderBytecode$get(@C("struct D3D12_SHADER_BYTECODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_SHADER_BYTECODE$pShaderBytecode$VH().get(seg);
        }
        public static  @C("void*") MemoryAddress pShaderBytecode$get(@C("struct D3D12_SHADER_BYTECODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_SHADER_BYTECODE$pShaderBytecode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pShaderBytecode$set(@C("struct D3D12_SHADER_BYTECODE") MemorySegment seg, @C("void*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_SHADER_BYTECODE$pShaderBytecode$VH().set(seg, x);
        }
        public static void pShaderBytecode$set(@C("struct D3D12_SHADER_BYTECODE") MemorySegment seg, long index, @C("void*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_SHADER_BYTECODE$pShaderBytecode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BytecodeLength$VH() {
            return d3d12_h$constants$0.D3D12_SHADER_BYTECODE$BytecodeLength$VH();
        }
        public static  @C("SIZE_T") long BytecodeLength$get(@C("struct D3D12_SHADER_BYTECODE") MemorySegment seg) {
            return (long)d3d12_h$constants$0.D3D12_SHADER_BYTECODE$BytecodeLength$VH().get(seg);
        }
        public static  @C("SIZE_T") long BytecodeLength$get(@C("struct D3D12_SHADER_BYTECODE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$0.D3D12_SHADER_BYTECODE$BytecodeLength$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BytecodeLength$set(@C("struct D3D12_SHADER_BYTECODE") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$0.D3D12_SHADER_BYTECODE$BytecodeLength$VH().set(seg, x);
        }
        public static void BytecodeLength$set(@C("struct D3D12_SHADER_BYTECODE") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$0.D3D12_SHADER_BYTECODE$BytecodeLength$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SHADER_BYTECODE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SHADER_BYTECODE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SHADER_BYTECODE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SHADER_BYTECODE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SHADER_BYTECODE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SHADER_BYTECODE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_STREAM_OUTPUT_DESC {

        private D3D12_STREAM_OUTPUT_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$struct$LAYOUT();
        }
        public static VarHandle pSODeclaration$VH() {
            return d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pSODeclaration$VH();
        }
        public static  @C("const D3D12_SO_DECLARATION_ENTRY*") MemoryAddress pSODeclaration$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pSODeclaration$VH().get(seg);
        }
        public static  @C("const D3D12_SO_DECLARATION_ENTRY*") MemoryAddress pSODeclaration$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pSODeclaration$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pSODeclaration$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, @C("const D3D12_SO_DECLARATION_ENTRY*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pSODeclaration$VH().set(seg, x);
        }
        public static void pSODeclaration$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index, @C("const D3D12_SO_DECLARATION_ENTRY*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pSODeclaration$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumEntries$VH() {
            return d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumEntries$VH();
        }
        public static  @C("UINT") int NumEntries$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumEntries$VH().get(seg);
        }
        public static  @C("UINT") int NumEntries$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumEntries$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumEntries$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumEntries$VH().set(seg, x);
        }
        public static void NumEntries$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumEntries$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pBufferStrides$VH() {
            return d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pBufferStrides$VH();
        }
        public static  @C("const UINT*") MemoryAddress pBufferStrides$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pBufferStrides$VH().get(seg);
        }
        public static  @C("const UINT*") MemoryAddress pBufferStrides$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pBufferStrides$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pBufferStrides$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, @C("const UINT*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pBufferStrides$VH().set(seg, x);
        }
        public static void pBufferStrides$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index, @C("const UINT*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$pBufferStrides$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumStrides$VH() {
            return d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumStrides$VH();
        }
        public static  @C("UINT") int NumStrides$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumStrides$VH().get(seg);
        }
        public static  @C("UINT") int NumStrides$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumStrides$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumStrides$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumStrides$VH().set(seg, x);
        }
        public static void NumStrides$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$NumStrides$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RasterizedStream$VH() {
            return d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$RasterizedStream$VH();
        }
        public static  @C("UINT") int RasterizedStream$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$RasterizedStream$VH().get(seg);
        }
        public static  @C("UINT") int RasterizedStream$get(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$RasterizedStream$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RasterizedStream$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$RasterizedStream$VH().set(seg, x);
        }
        public static void RasterizedStream$set(@C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_STREAM_OUTPUT_DESC$RasterizedStream$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_STREAM_OUTPUT_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_STREAM_OUTPUT_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_STREAM_OUTPUT_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_STREAM_OUTPUT_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_STREAM_OUTPUT_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_INPUT_LAYOUT_DESC {

        private D3D12_INPUT_LAYOUT_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$struct$LAYOUT();
        }
        public static VarHandle pInputElementDescs$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$pInputElementDescs$VH();
        }
        public static  @C("const D3D12_INPUT_ELEMENT_DESC*") MemoryAddress pInputElementDescs$get(@C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$pInputElementDescs$VH().get(seg);
        }
        public static  @C("const D3D12_INPUT_ELEMENT_DESC*") MemoryAddress pInputElementDescs$get(@C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$pInputElementDescs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pInputElementDescs$set(@C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment seg, @C("const D3D12_INPUT_ELEMENT_DESC*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$pInputElementDescs$VH().set(seg, x);
        }
        public static void pInputElementDescs$set(@C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment seg, long index, @C("const D3D12_INPUT_ELEMENT_DESC*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$pInputElementDescs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumElements$VH() {
            return d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$NumElements$VH();
        }
        public static  @C("UINT") int NumElements$get(@C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$NumElements$VH().get(seg);
        }
        public static  @C("UINT") int NumElements$get(@C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$NumElements$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumElements$set(@C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$NumElements$VH().set(seg, x);
        }
        public static void NumElements$set(@C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_INPUT_LAYOUT_DESC$NumElements$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_INPUT_LAYOUT_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_INPUT_LAYOUT_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_INPUT_LAYOUT_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_INPUT_LAYOUT_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_INPUT_LAYOUT_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED() {
        return d3d12_h$constants$0.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED();
    }
    public static @C("int") int D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF() {
        return d3d12_h$constants$0.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF();
    }
    public static @C("int") int D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF() {
        return d3d12_h$constants$0.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF();
    }
    public static class D3D12_CACHED_PIPELINE_STATE {

        private D3D12_CACHED_PIPELINE_STATE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$struct$LAYOUT();
        }
        public static VarHandle pCachedBlob$VH() {
            return d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$pCachedBlob$VH();
        }
        public static  @C("void*") MemoryAddress pCachedBlob$get(@C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$pCachedBlob$VH().get(seg);
        }
        public static  @C("void*") MemoryAddress pCachedBlob$get(@C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$pCachedBlob$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCachedBlob$set(@C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment seg, @C("void*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$pCachedBlob$VH().set(seg, x);
        }
        public static void pCachedBlob$set(@C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment seg, long index, @C("void*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$pCachedBlob$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CachedBlobSizeInBytes$VH() {
            return d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$CachedBlobSizeInBytes$VH();
        }
        public static  @C("SIZE_T") long CachedBlobSizeInBytes$get(@C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment seg) {
            return (long)d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$CachedBlobSizeInBytes$VH().get(seg);
        }
        public static  @C("SIZE_T") long CachedBlobSizeInBytes$get(@C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$CachedBlobSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CachedBlobSizeInBytes$set(@C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$CachedBlobSizeInBytes$VH().set(seg, x);
        }
        public static void CachedBlobSizeInBytes$set(@C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$0.D3D12_CACHED_PIPELINE_STATE$CachedBlobSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_CACHED_PIPELINE_STATE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_CACHED_PIPELINE_STATE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_CACHED_PIPELINE_STATE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_CACHED_PIPELINE_STATE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_CACHED_PIPELINE_STATE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_PIPELINE_STATE_FLAG_NONE() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_FLAG_NONE();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG();
    }
    public static class D3D12_GRAPHICS_PIPELINE_STATE_DESC {

        private D3D12_GRAPHICS_PIPELINE_STATE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$struct$LAYOUT();
        }
        public static VarHandle pRootSignature$VH() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$pRootSignature$VH();
        }
        public static  @C("ID3D12RootSignature*") MemoryAddress pRootSignature$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$pRootSignature$VH().get(seg);
        }
        public static  @C("ID3D12RootSignature*") MemoryAddress pRootSignature$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$pRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pRootSignature$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, @C("ID3D12RootSignature*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$pRootSignature$VH().set(seg, x);
        }
        public static void pRootSignature$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("ID3D12RootSignature*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$pRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment VS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static MemorySegment PS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 16));
        }
        public static MemorySegment DS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 16));
        }
        public static MemorySegment HS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(56, 16));
        }
        public static MemorySegment GS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(72, 16));
        }
        public static MemorySegment StreamOutput$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(88, 32));
        }
        public static MemorySegment BlendState$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(120, 328));
        }
        public static VarHandle SampleMask$VH() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$SampleMask$VH();
        }
        public static  @C("UINT") int SampleMask$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$SampleMask$VH().get(seg);
        }
        public static  @C("UINT") int SampleMask$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$SampleMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SampleMask$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$SampleMask$VH().set(seg, x);
        }
        public static void SampleMask$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$SampleMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment RasterizerState$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(452, 44));
        }
        public static MemorySegment DepthStencilState$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(496, 52));
        }
        public static MemorySegment InputLayout$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(552, 16));
        }
        public static VarHandle IBStripCutValue$VH() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$IBStripCutValue$VH();
        }
        public static  @C("D3D12_INDEX_BUFFER_STRIP_CUT_VALUE") int IBStripCutValue$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$IBStripCutValue$VH().get(seg);
        }
        public static  @C("D3D12_INDEX_BUFFER_STRIP_CUT_VALUE") int IBStripCutValue$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$IBStripCutValue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IBStripCutValue$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, @C("D3D12_INDEX_BUFFER_STRIP_CUT_VALUE") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$IBStripCutValue$VH().set(seg, x);
        }
        public static void IBStripCutValue$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("D3D12_INDEX_BUFFER_STRIP_CUT_VALUE") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$IBStripCutValue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PrimitiveTopologyType$VH() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$PrimitiveTopologyType$VH();
        }
        public static  @C("D3D12_PRIMITIVE_TOPOLOGY_TYPE") int PrimitiveTopologyType$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$PrimitiveTopologyType$VH().get(seg);
        }
        public static  @C("D3D12_PRIMITIVE_TOPOLOGY_TYPE") int PrimitiveTopologyType$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$PrimitiveTopologyType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PrimitiveTopologyType$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, @C("D3D12_PRIMITIVE_TOPOLOGY_TYPE") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$PrimitiveTopologyType$VH().set(seg, x);
        }
        public static void PrimitiveTopologyType$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("D3D12_PRIMITIVE_TOPOLOGY_TYPE") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$PrimitiveTopologyType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumRenderTargets$VH() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NumRenderTargets$VH();
        }
        public static  @C("UINT") int NumRenderTargets$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NumRenderTargets$VH().get(seg);
        }
        public static  @C("UINT") int NumRenderTargets$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NumRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumRenderTargets$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NumRenderTargets$VH().set(seg, x);
        }
        public static void NumRenderTargets$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NumRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment RTVFormats$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(580, 32));
        }
        public static VarHandle DSVFormat$VH() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$DSVFormat$VH();
        }
        public static  @C("DXGI_FORMAT") int DSVFormat$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$DSVFormat$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int DSVFormat$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$DSVFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DSVFormat$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$DSVFormat$VH().set(seg, x);
        }
        public static void DSVFormat$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$DSVFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment SampleDesc$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(616, 8));
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment CachedPSO$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(632, 16));
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$Flags$VH();
        }
        public static  @C("D3D12_PIPELINE_STATE_FLAGS") int Flags$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_PIPELINE_STATE_FLAGS") int Flags$get(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, @C("D3D12_PIPELINE_STATE_FLAGS") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("D3D12_PIPELINE_STATE_FLAGS") int x) {
            d3d12_h$constants$0.D3D12_GRAPHICS_PIPELINE_STATE_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_GRAPHICS_PIPELINE_STATE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_COMPUTE_PIPELINE_STATE_DESC {

        private D3D12_COMPUTE_PIPELINE_STATE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$struct$LAYOUT();
        }
        public static VarHandle pRootSignature$VH() {
            return d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$pRootSignature$VH();
        }
        public static  @C("ID3D12RootSignature*") MemoryAddress pRootSignature$get(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$pRootSignature$VH().get(seg);
        }
        public static  @C("ID3D12RootSignature*") MemoryAddress pRootSignature$get(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$pRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pRootSignature$set(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, @C("ID3D12RootSignature*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$pRootSignature$VH().set(seg, x);
        }
        public static void pRootSignature$set(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("ID3D12RootSignature*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$pRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment CS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment CachedPSO$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 16));
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$Flags$VH();
        }
        public static  @C("D3D12_PIPELINE_STATE_FLAGS") int Flags$get(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_PIPELINE_STATE_FLAGS") int Flags$get(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, @C("D3D12_PIPELINE_STATE_FLAGS") int x) {
            d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment seg, long index, @C("D3D12_PIPELINE_STATE_FLAGS") int x) {
            d3d12_h$constants$0.D3D12_COMPUTE_PIPELINE_STATE_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_COMPUTE_PIPELINE_STATE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RT_FORMAT_ARRAY {

        private D3D12_RT_FORMAT_ARRAY() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_RT_FORMAT_ARRAY$struct$LAYOUT();
        }
        public static MemorySegment RTFormats$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 32));
        }
        public static VarHandle NumRenderTargets$VH() {
            return d3d12_h$constants$0.D3D12_RT_FORMAT_ARRAY$NumRenderTargets$VH();
        }
        public static  @C("UINT") int NumRenderTargets$get(@C("struct D3D12_RT_FORMAT_ARRAY") MemorySegment seg) {
            return (int)d3d12_h$constants$0.D3D12_RT_FORMAT_ARRAY$NumRenderTargets$VH().get(seg);
        }
        public static  @C("UINT") int NumRenderTargets$get(@C("struct D3D12_RT_FORMAT_ARRAY") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$0.D3D12_RT_FORMAT_ARRAY$NumRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumRenderTargets$set(@C("struct D3D12_RT_FORMAT_ARRAY") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_RT_FORMAT_ARRAY$NumRenderTargets$VH().set(seg, x);
        }
        public static void NumRenderTargets$set(@C("struct D3D12_RT_FORMAT_ARRAY") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$0.D3D12_RT_FORMAT_ARRAY$NumRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RT_FORMAT_ARRAY") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RT_FORMAT_ARRAY") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RT_FORMAT_ARRAY[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RT_FORMAT_ARRAY[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RT_FORMAT_ARRAY*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RT_FORMAT_ARRAY*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_PIPELINE_STATE_STREAM_DESC {

        private D3D12_PIPELINE_STATE_STREAM_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$struct$LAYOUT();
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$SizeInBytes$VH();
        }
        public static  @C("SIZE_T") long SizeInBytes$get(@C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$SizeInBytes$VH().get(seg);
        }
        public static  @C("SIZE_T") long SizeInBytes$get(@C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pPipelineStateSubobjectStream$VH() {
            return d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$pPipelineStateSubobjectStream$VH();
        }
        public static  @C("void*") MemoryAddress pPipelineStateSubobjectStream$get(@C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$pPipelineStateSubobjectStream$VH().get(seg);
        }
        public static  @C("void*") MemoryAddress pPipelineStateSubobjectStream$get(@C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$pPipelineStateSubobjectStream$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pPipelineStateSubobjectStream$set(@C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment seg, @C("void*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$pPipelineStateSubobjectStream$VH().set(seg, x);
        }
        public static void pPipelineStateSubobjectStream$set(@C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment seg, long index, @C("void*") MemoryAddress x) {
            d3d12_h$constants$0.D3D12_PIPELINE_STATE_STREAM_DESC$pPipelineStateSubobjectStream$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_PIPELINE_STATE_STREAM_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_PIPELINE_STATE_STREAM_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_PIPELINE_STATE_STREAM_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_PIPELINE_STATE_STREAM_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_PIPELINE_STATE_STREAM_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_AS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_AS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS();
    }
    public static @C("int") int D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MAX_VALID() {
        return d3d12_h$constants$0.D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MAX_VALID();
    }
    public static @C("int") int D3D12_FEATURE_D3D12_OPTIONS() {
        return d3d12_h$constants$0.D3D12_FEATURE_D3D12_OPTIONS();
    }
    public static @C("int") int D3D12_FEATURE_ARCHITECTURE() {
        return d3d12_h$constants$0.D3D12_FEATURE_ARCHITECTURE();
    }
    public static @C("int") int D3D12_FEATURE_FEATURE_LEVELS() {
        return d3d12_h$constants$0.D3D12_FEATURE_FEATURE_LEVELS();
    }
    public static @C("int") int D3D12_FEATURE_FORMAT_SUPPORT() {
        return d3d12_h$constants$0.D3D12_FEATURE_FORMAT_SUPPORT();
    }
    public static @C("int") int D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS() {
        return d3d12_h$constants$0.D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS();
    }
    public static @C("int") int D3D12_FEATURE_FORMAT_INFO() {
        return d3d12_h$constants$0.D3D12_FEATURE_FORMAT_INFO();
    }
    public static @C("int") int D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT() {
        return d3d12_h$constants$0.D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT();
    }
    public static @C("int") int D3D12_FEATURE_SHADER_MODEL() {
        return d3d12_h$constants$0.D3D12_FEATURE_SHADER_MODEL();
    }
    public static @C("int") int D3D12_FEATURE_D3D12_OPTIONS1() {
        return d3d12_h$constants$0.D3D12_FEATURE_D3D12_OPTIONS1();
    }
    public static @C("int") int D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT() {
        return d3d12_h$constants$0.D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT();
    }
    public static @C("int") int D3D12_FEATURE_ROOT_SIGNATURE() {
        return d3d12_h$constants$0.D3D12_FEATURE_ROOT_SIGNATURE();
    }
    public static @C("int") int D3D12_FEATURE_ARCHITECTURE1() {
        return d3d12_h$constants$0.D3D12_FEATURE_ARCHITECTURE1();
    }
    public static @C("int") int D3D12_FEATURE_D3D12_OPTIONS2() {
        return d3d12_h$constants$0.D3D12_FEATURE_D3D12_OPTIONS2();
    }
    public static @C("int") int D3D12_FEATURE_SHADER_CACHE() {
        return d3d12_h$constants$0.D3D12_FEATURE_SHADER_CACHE();
    }
    public static @C("int") int D3D12_FEATURE_COMMAND_QUEUE_PRIORITY() {
        return d3d12_h$constants$0.D3D12_FEATURE_COMMAND_QUEUE_PRIORITY();
    }
    public static @C("int") int D3D12_FEATURE_D3D12_OPTIONS3() {
        return d3d12_h$constants$0.D3D12_FEATURE_D3D12_OPTIONS3();
    }
    public static @C("int") int D3D12_FEATURE_EXISTING_HEAPS() {
        return d3d12_h$constants$0.D3D12_FEATURE_EXISTING_HEAPS();
    }
    public static @C("int") int D3D12_FEATURE_D3D12_OPTIONS4() {
        return d3d12_h$constants$0.D3D12_FEATURE_D3D12_OPTIONS4();
    }
    public static @C("int") int D3D12_FEATURE_SERIALIZATION() {
        return d3d12_h$constants$0.D3D12_FEATURE_SERIALIZATION();
    }
    public static @C("int") int D3D12_FEATURE_CROSS_NODE() {
        return d3d12_h$constants$0.D3D12_FEATURE_CROSS_NODE();
    }
    public static @C("int") int D3D12_FEATURE_D3D12_OPTIONS5() {
        return d3d12_h$constants$0.D3D12_FEATURE_D3D12_OPTIONS5();
    }
    public static @C("int") int D3D12_FEATURE_D3D12_OPTIONS6() {
        return d3d12_h$constants$0.D3D12_FEATURE_D3D12_OPTIONS6();
    }
    public static @C("int") int D3D12_FEATURE_QUERY_META_COMMAND() {
        return d3d12_h$constants$0.D3D12_FEATURE_QUERY_META_COMMAND();
    }
    public static @C("int") int D3D12_FEATURE_D3D12_OPTIONS7() {
        return d3d12_h$constants$0.D3D12_FEATURE_D3D12_OPTIONS7();
    }
    public static @C("int") int D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT() {
        return d3d12_h$constants$0.D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT();
    }
    public static @C("int") int D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES() {
        return d3d12_h$constants$0.D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES();
    }
    public static @C("int") int D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE() {
        return d3d12_h$constants$0.D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE();
    }
    public static @C("int") int D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT() {
        return d3d12_h$constants$0.D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT();
    }
    public static @C("int") int D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT() {
        return d3d12_h$constants$0.D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT();
    }
    public static @C("int") int D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$0.D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_TILED_RESOURCES_TIER_1() {
        return d3d12_h$constants$0.D3D12_TILED_RESOURCES_TIER_1();
    }
    public static @C("int") int D3D12_TILED_RESOURCES_TIER_2() {
        return d3d12_h$constants$0.D3D12_TILED_RESOURCES_TIER_2();
    }
    public static @C("int") int D3D12_TILED_RESOURCES_TIER_3() {
        return d3d12_h$constants$0.D3D12_TILED_RESOURCES_TIER_3();
    }
    public static @C("int") int D3D12_TILED_RESOURCES_TIER_4() {
        return d3d12_h$constants$0.D3D12_TILED_RESOURCES_TIER_4();
    }
    public static @C("int") int D3D12_RESOURCE_BINDING_TIER_1() {
        return d3d12_h$constants$0.D3D12_RESOURCE_BINDING_TIER_1();
    }
    public static @C("int") int D3D12_RESOURCE_BINDING_TIER_2() {
        return d3d12_h$constants$0.D3D12_RESOURCE_BINDING_TIER_2();
    }
    public static @C("int") int D3D12_RESOURCE_BINDING_TIER_3() {
        return d3d12_h$constants$0.D3D12_RESOURCE_BINDING_TIER_3();
    }
    public static @C("int") int D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$0.D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_CONSERVATIVE_RASTERIZATION_TIER_1() {
        return d3d12_h$constants$0.D3D12_CONSERVATIVE_RASTERIZATION_TIER_1();
    }
    public static @C("int") int D3D12_CONSERVATIVE_RASTERIZATION_TIER_2() {
        return d3d12_h$constants$0.D3D12_CONSERVATIVE_RASTERIZATION_TIER_2();
    }
    public static @C("int") int D3D12_CONSERVATIVE_RASTERIZATION_TIER_3() {
        return d3d12_h$constants$0.D3D12_CONSERVATIVE_RASTERIZATION_TIER_3();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_NONE() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_NONE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_BUFFER() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_BUFFER();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_SO_BUFFER() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_SO_BUFFER();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_TEXTURE1D() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_TEXTURE1D();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_TEXTURE2D() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_TEXTURE2D();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_TEXTURE3D() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_TEXTURE3D();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_TEXTURECUBE() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_TEXTURECUBE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_SHADER_LOAD() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_SHADER_LOAD();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_MIP() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_MIP();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_RENDER_TARGET() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_RENDER_TARGET();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_BLENDABLE() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_BLENDABLE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE() {
        return d3d12_h$constants$0.D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_DISPLAY() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_DISPLAY();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_SHADER_GATHER() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_SHADER_GATHER();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_NONE() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_NONE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_TILED() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_TILED();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY();
    }
    public static @C("int") int D3D12_FORMAT_SUPPORT2_SAMPLER_FEEDBACK() {
        return d3d12_h$constants$1.D3D12_FORMAT_SUPPORT2_SAMPLER_FEEDBACK();
    }
    public static @C("int") int D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE() {
        return d3d12_h$constants$1.D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE();
    }
    public static @C("int") int D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE() {
        return d3d12_h$constants$1.D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE();
    }
    public static @C("int") int D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$1.D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED() {
        return d3d12_h$constants$1.D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED();
    }
    public static @C("int") int D3D12_CROSS_NODE_SHARING_TIER_1() {
        return d3d12_h$constants$1.D3D12_CROSS_NODE_SHARING_TIER_1();
    }
    public static @C("int") int D3D12_CROSS_NODE_SHARING_TIER_2() {
        return d3d12_h$constants$1.D3D12_CROSS_NODE_SHARING_TIER_2();
    }
    public static @C("int") int D3D12_CROSS_NODE_SHARING_TIER_3() {
        return d3d12_h$constants$1.D3D12_CROSS_NODE_SHARING_TIER_3();
    }
    public static @C("int") int D3D12_RESOURCE_HEAP_TIER_1() {
        return d3d12_h$constants$1.D3D12_RESOURCE_HEAP_TIER_1();
    }
    public static @C("int") int D3D12_RESOURCE_HEAP_TIER_2() {
        return d3d12_h$constants$1.D3D12_RESOURCE_HEAP_TIER_2();
    }
    public static @C("int") int D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$1.D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1() {
        return d3d12_h$constants$1.D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1();
    }
    public static @C("int") int D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2() {
        return d3d12_h$constants$1.D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2();
    }
    public static @C("int") int D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$1.D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_VIEW_INSTANCING_TIER_1() {
        return d3d12_h$constants$1.D3D12_VIEW_INSTANCING_TIER_1();
    }
    public static @C("int") int D3D12_VIEW_INSTANCING_TIER_2() {
        return d3d12_h$constants$1.D3D12_VIEW_INSTANCING_TIER_2();
    }
    public static @C("int") int D3D12_VIEW_INSTANCING_TIER_3() {
        return d3d12_h$constants$1.D3D12_VIEW_INSTANCING_TIER_3();
    }
    public static class D3D12_FEATURE_DATA_D3D12_OPTIONS {

        private D3D12_FEATURE_DATA_D3D12_OPTIONS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$struct$LAYOUT();
        }
        public static VarHandle DoublePrecisionFloatShaderOps$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$VH();
        }
        public static  @C("BOOL") int DoublePrecisionFloatShaderOps$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$VH().get(seg);
        }
        public static  @C("BOOL") int DoublePrecisionFloatShaderOps$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DoublePrecisionFloatShaderOps$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$VH().set(seg, x);
        }
        public static void DoublePrecisionFloatShaderOps$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$DoublePrecisionFloatShaderOps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OutputMergerLogicOp$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$VH();
        }
        public static  @C("BOOL") int OutputMergerLogicOp$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$VH().get(seg);
        }
        public static  @C("BOOL") int OutputMergerLogicOp$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OutputMergerLogicOp$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$VH().set(seg, x);
        }
        public static void OutputMergerLogicOp$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$OutputMergerLogicOp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MinPrecisionSupport$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$VH();
        }
        public static  @C("D3D12_SHADER_MIN_PRECISION_SUPPORT") int MinPrecisionSupport$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$VH().get(seg);
        }
        public static  @C("D3D12_SHADER_MIN_PRECISION_SUPPORT") int MinPrecisionSupport$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MinPrecisionSupport$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("D3D12_SHADER_MIN_PRECISION_SUPPORT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$VH().set(seg, x);
        }
        public static void MinPrecisionSupport$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("D3D12_SHADER_MIN_PRECISION_SUPPORT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MinPrecisionSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle TiledResourcesTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$VH();
        }
        public static  @C("D3D12_TILED_RESOURCES_TIER") int TiledResourcesTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$VH().get(seg);
        }
        public static  @C("D3D12_TILED_RESOURCES_TIER") int TiledResourcesTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void TiledResourcesTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("D3D12_TILED_RESOURCES_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$VH().set(seg, x);
        }
        public static void TiledResourcesTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("D3D12_TILED_RESOURCES_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TiledResourcesTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceBindingTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$VH();
        }
        public static  @C("D3D12_RESOURCE_BINDING_TIER") int ResourceBindingTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_BINDING_TIER") int ResourceBindingTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceBindingTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("D3D12_RESOURCE_BINDING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$VH().set(seg, x);
        }
        public static void ResourceBindingTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("D3D12_RESOURCE_BINDING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceBindingTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PSSpecifiedStencilRefSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$VH();
        }
        public static  @C("BOOL") int PSSpecifiedStencilRefSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$VH().get(seg);
        }
        public static  @C("BOOL") int PSSpecifiedStencilRefSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PSSpecifiedStencilRefSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$VH().set(seg, x);
        }
        public static void PSSpecifiedStencilRefSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$PSSpecifiedStencilRefSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle TypedUAVLoadAdditionalFormats$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$VH();
        }
        public static  @C("BOOL") int TypedUAVLoadAdditionalFormats$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$VH().get(seg);
        }
        public static  @C("BOOL") int TypedUAVLoadAdditionalFormats$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void TypedUAVLoadAdditionalFormats$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$VH().set(seg, x);
        }
        public static void TypedUAVLoadAdditionalFormats$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$TypedUAVLoadAdditionalFormats$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ROVsSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$VH();
        }
        public static  @C("BOOL") int ROVsSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$VH().get(seg);
        }
        public static  @C("BOOL") int ROVsSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ROVsSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$VH().set(seg, x);
        }
        public static void ROVsSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ROVsSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ConservativeRasterizationTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$VH();
        }
        public static  @C("D3D12_CONSERVATIVE_RASTERIZATION_TIER") int ConservativeRasterizationTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$VH().get(seg);
        }
        public static  @C("D3D12_CONSERVATIVE_RASTERIZATION_TIER") int ConservativeRasterizationTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ConservativeRasterizationTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("D3D12_CONSERVATIVE_RASTERIZATION_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$VH().set(seg, x);
        }
        public static void ConservativeRasterizationTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("D3D12_CONSERVATIVE_RASTERIZATION_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ConservativeRasterizationTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxGPUVirtualAddressBitsPerResource$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$VH();
        }
        public static  @C("UINT") int MaxGPUVirtualAddressBitsPerResource$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$VH().get(seg);
        }
        public static  @C("UINT") int MaxGPUVirtualAddressBitsPerResource$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxGPUVirtualAddressBitsPerResource$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$VH().set(seg, x);
        }
        public static void MaxGPUVirtualAddressBitsPerResource$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$MaxGPUVirtualAddressBitsPerResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StandardSwizzle64KBSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$VH();
        }
        public static  @C("BOOL") int StandardSwizzle64KBSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$VH().get(seg);
        }
        public static  @C("BOOL") int StandardSwizzle64KBSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StandardSwizzle64KBSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$VH().set(seg, x);
        }
        public static void StandardSwizzle64KBSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$StandardSwizzle64KBSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CrossNodeSharingTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$VH();
        }
        public static  @C("D3D12_CROSS_NODE_SHARING_TIER") int CrossNodeSharingTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$VH().get(seg);
        }
        public static  @C("D3D12_CROSS_NODE_SHARING_TIER") int CrossNodeSharingTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CrossNodeSharingTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("D3D12_CROSS_NODE_SHARING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$VH().set(seg, x);
        }
        public static void CrossNodeSharingTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("D3D12_CROSS_NODE_SHARING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossNodeSharingTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CrossAdapterRowMajorTextureSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$VH();
        }
        public static  @C("BOOL") int CrossAdapterRowMajorTextureSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$VH().get(seg);
        }
        public static  @C("BOOL") int CrossAdapterRowMajorTextureSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CrossAdapterRowMajorTextureSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$VH().set(seg, x);
        }
        public static void CrossAdapterRowMajorTextureSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$CrossAdapterRowMajorTextureSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH();
        }
        public static  @C("BOOL") int VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH().get(seg);
        }
        public static  @C("BOOL") int VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH().set(seg, x);
        }
        public static void VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceHeapTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$VH();
        }
        public static  @C("D3D12_RESOURCE_HEAP_TIER") int ResourceHeapTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_HEAP_TIER") int ResourceHeapTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceHeapTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, @C("D3D12_RESOURCE_HEAP_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$VH().set(seg, x);
        }
        public static void ResourceHeapTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment seg, long index, @C("D3D12_RESOURCE_HEAP_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS$ResourceHeapTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_D3D12_OPTIONS1 {

        private D3D12_FEATURE_DATA_D3D12_OPTIONS1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$struct$LAYOUT();
        }
        public static VarHandle WaveOps$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$VH();
        }
        public static  @C("BOOL") int WaveOps$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$VH().get(seg);
        }
        public static  @C("BOOL") int WaveOps$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WaveOps$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$VH().set(seg, x);
        }
        public static void WaveOps$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveOps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WaveLaneCountMin$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$VH();
        }
        public static  @C("UINT") int WaveLaneCountMin$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$VH().get(seg);
        }
        public static  @C("UINT") int WaveLaneCountMin$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WaveLaneCountMin$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$VH().set(seg, x);
        }
        public static void WaveLaneCountMin$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMin$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WaveLaneCountMax$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$VH();
        }
        public static  @C("UINT") int WaveLaneCountMax$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$VH().get(seg);
        }
        public static  @C("UINT") int WaveLaneCountMax$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WaveLaneCountMax$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$VH().set(seg, x);
        }
        public static void WaveLaneCountMax$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$WaveLaneCountMax$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle TotalLaneCount$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$VH();
        }
        public static  @C("UINT") int TotalLaneCount$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$VH().get(seg);
        }
        public static  @C("UINT") int TotalLaneCount$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void TotalLaneCount$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$VH().set(seg, x);
        }
        public static void TotalLaneCount$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$TotalLaneCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExpandedComputeResourceStates$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$VH();
        }
        public static  @C("BOOL") int ExpandedComputeResourceStates$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$VH().get(seg);
        }
        public static  @C("BOOL") int ExpandedComputeResourceStates$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExpandedComputeResourceStates$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$VH().set(seg, x);
        }
        public static void ExpandedComputeResourceStates$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$ExpandedComputeResourceStates$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Int64ShaderOps$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$VH();
        }
        public static  @C("BOOL") int Int64ShaderOps$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$VH().get(seg);
        }
        public static  @C("BOOL") int Int64ShaderOps$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Int64ShaderOps$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$VH().set(seg, x);
        }
        public static void Int64ShaderOps$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS1$Int64ShaderOps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_D3D12_OPTIONS2 {

        private D3D12_FEATURE_DATA_D3D12_OPTIONS2() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$struct$LAYOUT();
        }
        public static VarHandle DepthBoundsTestSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$VH();
        }
        public static  @C("BOOL") int DepthBoundsTestSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$VH().get(seg);
        }
        public static  @C("BOOL") int DepthBoundsTestSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthBoundsTestSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$VH().set(seg, x);
        }
        public static void DepthBoundsTestSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$DepthBoundsTestSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ProgrammableSamplePositionsTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$VH();
        }
        public static  @C("D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER") int ProgrammableSamplePositionsTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$VH().get(seg);
        }
        public static  @C("D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER") int ProgrammableSamplePositionsTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ProgrammableSamplePositionsTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment seg, @C("D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$VH().set(seg, x);
        }
        public static void ProgrammableSamplePositionsTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment seg, long index, @C("D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS2$ProgrammableSamplePositionsTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D_ROOT_SIGNATURE_VERSION_1() {
        return d3d12_h$constants$1.D3D_ROOT_SIGNATURE_VERSION_1();
    }
    public static @C("int") int D3D_ROOT_SIGNATURE_VERSION_1_0() {
        return d3d12_h$constants$1.D3D_ROOT_SIGNATURE_VERSION_1_0();
    }
    public static @C("int") int D3D_ROOT_SIGNATURE_VERSION_1_1() {
        return d3d12_h$constants$1.D3D_ROOT_SIGNATURE_VERSION_1_1();
    }
    public static class D3D12_FEATURE_DATA_ROOT_SIGNATURE {

        private D3D12_FEATURE_DATA_ROOT_SIGNATURE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ROOT_SIGNATURE$struct$LAYOUT();
        }
        public static VarHandle HighestVersion$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$VH();
        }
        public static  @C("D3D_ROOT_SIGNATURE_VERSION") int HighestVersion$get(@C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$VH().get(seg);
        }
        public static  @C("D3D_ROOT_SIGNATURE_VERSION") int HighestVersion$get(@C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HighestVersion$set(@C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE") MemorySegment seg, @C("D3D_ROOT_SIGNATURE_VERSION") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$VH().set(seg, x);
        }
        public static void HighestVersion$set(@C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE") MemorySegment seg, long index, @C("D3D_ROOT_SIGNATURE_VERSION") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ROOT_SIGNATURE$HighestVersion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_ROOT_SIGNATURE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_ARCHITECTURE {

        private D3D12_FEATURE_DATA_ARCHITECTURE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$struct$LAYOUT();
        }
        public static VarHandle NodeIndex$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$VH();
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$VH().get(seg);
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$VH().set(seg, x);
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$NodeIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle TileBasedRenderer$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$VH();
        }
        public static  @C("BOOL") int TileBasedRenderer$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$VH().get(seg);
        }
        public static  @C("BOOL") int TileBasedRenderer$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void TileBasedRenderer$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$VH().set(seg, x);
        }
        public static void TileBasedRenderer$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$TileBasedRenderer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle UMA$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$UMA$VH();
        }
        public static  @C("BOOL") int UMA$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$UMA$VH().get(seg);
        }
        public static  @C("BOOL") int UMA$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$UMA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UMA$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$UMA$VH().set(seg, x);
        }
        public static void UMA$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$UMA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CacheCoherentUMA$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$VH();
        }
        public static  @C("BOOL") int CacheCoherentUMA$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$VH().get(seg);
        }
        public static  @C("BOOL") int CacheCoherentUMA$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CacheCoherentUMA$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$VH().set(seg, x);
        }
        public static void CacheCoherentUMA$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE$CacheCoherentUMA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_ARCHITECTURE1 {

        private D3D12_FEATURE_DATA_ARCHITECTURE1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$struct$LAYOUT();
        }
        public static VarHandle NodeIndex$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$VH();
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$VH().get(seg);
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$VH().set(seg, x);
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$NodeIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle TileBasedRenderer$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$VH();
        }
        public static  @C("BOOL") int TileBasedRenderer$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$VH().get(seg);
        }
        public static  @C("BOOL") int TileBasedRenderer$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void TileBasedRenderer$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$VH().set(seg, x);
        }
        public static void TileBasedRenderer$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$TileBasedRenderer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle UMA$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$VH();
        }
        public static  @C("BOOL") int UMA$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$VH().get(seg);
        }
        public static  @C("BOOL") int UMA$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UMA$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$VH().set(seg, x);
        }
        public static void UMA$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$UMA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CacheCoherentUMA$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$VH();
        }
        public static  @C("BOOL") int CacheCoherentUMA$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$VH().get(seg);
        }
        public static  @C("BOOL") int CacheCoherentUMA$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CacheCoherentUMA$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$VH().set(seg, x);
        }
        public static void CacheCoherentUMA$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$CacheCoherentUMA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsolatedMMU$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$VH();
        }
        public static  @C("BOOL") int IsolatedMMU$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$VH().get(seg);
        }
        public static  @C("BOOL") int IsolatedMMU$get(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsolatedMMU$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$VH().set(seg, x);
        }
        public static void IsolatedMMU$set(@C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_ARCHITECTURE1$IsolatedMMU$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_ARCHITECTURE1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_FEATURE_LEVELS {

        private D3D12_FEATURE_DATA_FEATURE_LEVELS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$struct$LAYOUT();
        }
        public static VarHandle NumFeatureLevels$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$VH();
        }
        public static  @C("UINT") int NumFeatureLevels$get(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$VH().get(seg);
        }
        public static  @C("UINT") int NumFeatureLevels$get(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumFeatureLevels$set(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$VH().set(seg, x);
        }
        public static void NumFeatureLevels$set(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$NumFeatureLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pFeatureLevelsRequested$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$VH();
        }
        public static  @C("const D3D_FEATURE_LEVEL*") MemoryAddress pFeatureLevelsRequested$get(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$VH().get(seg);
        }
        public static  @C("const D3D_FEATURE_LEVEL*") MemoryAddress pFeatureLevelsRequested$get(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pFeatureLevelsRequested$set(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, @C("const D3D_FEATURE_LEVEL*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$VH().set(seg, x);
        }
        public static void pFeatureLevelsRequested$set(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, long index, @C("const D3D_FEATURE_LEVEL*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$pFeatureLevelsRequested$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxSupportedFeatureLevel$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$VH();
        }
        public static  @C("D3D_FEATURE_LEVEL") int MaxSupportedFeatureLevel$get(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$VH().get(seg);
        }
        public static  @C("D3D_FEATURE_LEVEL") int MaxSupportedFeatureLevel$get(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxSupportedFeatureLevel$set(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, @C("D3D_FEATURE_LEVEL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$VH().set(seg, x);
        }
        public static void MaxSupportedFeatureLevel$set(@C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment seg, long index, @C("D3D_FEATURE_LEVEL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FEATURE_LEVELS$MaxSupportedFeatureLevel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_FEATURE_LEVELS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D_SHADER_MODEL_5_1() {
        return d3d12_h$constants$1.D3D_SHADER_MODEL_5_1();
    }
    public static @C("int") int D3D_SHADER_MODEL_6_0() {
        return d3d12_h$constants$1.D3D_SHADER_MODEL_6_0();
    }
    public static @C("int") int D3D_SHADER_MODEL_6_1() {
        return d3d12_h$constants$1.D3D_SHADER_MODEL_6_1();
    }
    public static @C("int") int D3D_SHADER_MODEL_6_2() {
        return d3d12_h$constants$1.D3D_SHADER_MODEL_6_2();
    }
    public static @C("int") int D3D_SHADER_MODEL_6_3() {
        return d3d12_h$constants$1.D3D_SHADER_MODEL_6_3();
    }
    public static @C("int") int D3D_SHADER_MODEL_6_4() {
        return d3d12_h$constants$1.D3D_SHADER_MODEL_6_4();
    }
    public static @C("int") int D3D_SHADER_MODEL_6_5() {
        return d3d12_h$constants$1.D3D_SHADER_MODEL_6_5();
    }
    public static @C("int") int D3D_SHADER_MODEL_6_6() {
        return d3d12_h$constants$1.D3D_SHADER_MODEL_6_6();
    }
    public static class D3D12_FEATURE_DATA_SHADER_MODEL {

        private D3D12_FEATURE_DATA_SHADER_MODEL() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_MODEL$struct$LAYOUT();
        }
        public static VarHandle HighestShaderModel$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$VH();
        }
        public static  @C("D3D_SHADER_MODEL") int HighestShaderModel$get(@C("struct D3D12_FEATURE_DATA_SHADER_MODEL") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$VH().get(seg);
        }
        public static  @C("D3D_SHADER_MODEL") int HighestShaderModel$get(@C("struct D3D12_FEATURE_DATA_SHADER_MODEL") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HighestShaderModel$set(@C("struct D3D12_FEATURE_DATA_SHADER_MODEL") MemorySegment seg, @C("D3D_SHADER_MODEL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$VH().set(seg, x);
        }
        public static void HighestShaderModel$set(@C("struct D3D12_FEATURE_DATA_SHADER_MODEL") MemorySegment seg, long index, @C("D3D_SHADER_MODEL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_MODEL$HighestShaderModel$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_MODEL") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_MODEL") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_MODEL[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_SHADER_MODEL[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_MODEL*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_MODEL*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_FORMAT_SUPPORT {

        private D3D12_FEATURE_DATA_FORMAT_SUPPORT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Support1$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$VH();
        }
        public static  @C("D3D12_FORMAT_SUPPORT1") int Support1$get(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$VH().get(seg);
        }
        public static  @C("D3D12_FORMAT_SUPPORT1") int Support1$get(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Support1$set(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, @C("D3D12_FORMAT_SUPPORT1") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$VH().set(seg, x);
        }
        public static void Support1$set(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, long index, @C("D3D12_FORMAT_SUPPORT1") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Support2$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$VH();
        }
        public static  @C("D3D12_FORMAT_SUPPORT2") int Support2$get(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$VH().get(seg);
        }
        public static  @C("D3D12_FORMAT_SUPPORT2") int Support2$get(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Support2$set(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, @C("D3D12_FORMAT_SUPPORT2") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$VH().set(seg, x);
        }
        public static void Support2$set(@C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment seg, long index, @C("D3D12_FORMAT_SUPPORT2") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_SUPPORT$Support2$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_SUPPORT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS {

        private D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SampleCount$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$VH();
        }
        public static  @C("UINT") int SampleCount$get(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$VH().get(seg);
        }
        public static  @C("UINT") int SampleCount$get(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SampleCount$set(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$VH().set(seg, x);
        }
        public static void SampleCount$set(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$SampleCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$VH();
        }
        public static  @C("D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS") int Flags$get(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$VH().get(seg);
        }
        public static  @C("D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS") int Flags$get(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, @C("D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, long index, @C("D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumQualityLevels$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$VH();
        }
        public static  @C("UINT") int NumQualityLevels$get(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$VH().get(seg);
        }
        public static  @C("UINT") int NumQualityLevels$get(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumQualityLevels$set(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$VH().set(seg, x);
        }
        public static void NumQualityLevels$set(@C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS$NumQualityLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_FORMAT_INFO {

        private D3D12_FEATURE_DATA_FORMAT_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PlaneCount$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$VH();
        }
        public static  @C("UINT8") byte PlaneCount$get(@C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment seg) {
            return (byte)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$VH().get(seg);
        }
        public static  @C("UINT8") byte PlaneCount$get(@C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PlaneCount$set(@C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$VH().set(seg, x);
        }
        public static void PlaneCount$set(@C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_FORMAT_INFO$PlaneCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_FORMAT_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_FORMAT_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT {

        private D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$struct$LAYOUT();
        }
        public static VarHandle MaxGPUVirtualAddressBitsPerResource$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$VH();
        }
        public static  @C("UINT") int MaxGPUVirtualAddressBitsPerResource$get(@C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$VH().get(seg);
        }
        public static  @C("UINT") int MaxGPUVirtualAddressBitsPerResource$get(@C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxGPUVirtualAddressBitsPerResource$set(@C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$VH().set(seg, x);
        }
        public static void MaxGPUVirtualAddressBitsPerResource$set(@C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxGPUVirtualAddressBitsPerProcess$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$VH();
        }
        public static  @C("UINT") int MaxGPUVirtualAddressBitsPerProcess$get(@C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$VH().get(seg);
        }
        public static  @C("UINT") int MaxGPUVirtualAddressBitsPerProcess$get(@C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxGPUVirtualAddressBitsPerProcess$set(@C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$VH().set(seg, x);
        }
        public static void MaxGPUVirtualAddressBitsPerProcess$set(@C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT$MaxGPUVirtualAddressBitsPerProcess$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_SHADER_CACHE_SUPPORT_NONE() {
        return d3d12_h$constants$1.D3D12_SHADER_CACHE_SUPPORT_NONE();
    }
    public static @C("int") int D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO() {
        return d3d12_h$constants$1.D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO();
    }
    public static @C("int") int D3D12_SHADER_CACHE_SUPPORT_LIBRARY() {
        return d3d12_h$constants$1.D3D12_SHADER_CACHE_SUPPORT_LIBRARY();
    }
    public static @C("int") int D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE() {
        return d3d12_h$constants$1.D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE();
    }
    public static @C("int") int D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE() {
        return d3d12_h$constants$1.D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE();
    }
    public static class D3D12_FEATURE_DATA_SHADER_CACHE {

        private D3D12_FEATURE_DATA_SHADER_CACHE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_CACHE$struct$LAYOUT();
        }
        public static VarHandle SupportFlags$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$VH();
        }
        public static  @C("D3D12_SHADER_CACHE_SUPPORT_FLAGS") int SupportFlags$get(@C("struct D3D12_FEATURE_DATA_SHADER_CACHE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$VH().get(seg);
        }
        public static  @C("D3D12_SHADER_CACHE_SUPPORT_FLAGS") int SupportFlags$get(@C("struct D3D12_FEATURE_DATA_SHADER_CACHE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SupportFlags$set(@C("struct D3D12_FEATURE_DATA_SHADER_CACHE") MemorySegment seg, @C("D3D12_SHADER_CACHE_SUPPORT_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$VH().set(seg, x);
        }
        public static void SupportFlags$set(@C("struct D3D12_FEATURE_DATA_SHADER_CACHE") MemorySegment seg, long index, @C("D3D12_SHADER_CACHE_SUPPORT_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_SHADER_CACHE$SupportFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_CACHE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_CACHE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_CACHE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_SHADER_CACHE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_CACHE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_SHADER_CACHE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY {

        private D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$struct$LAYOUT();
        }
        public static VarHandle CommandListType$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE") int CommandListType$get(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE") int CommandListType$get(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CommandListType$set(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$VH().set(seg, x);
        }
        public static void CommandListType$set(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$CommandListType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Priority$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$VH();
        }
        public static  @C("UINT") int Priority$get(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$VH().get(seg);
        }
        public static  @C("UINT") int Priority$get(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Priority$set(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$VH().set(seg, x);
        }
        public static void Priority$set(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$Priority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PriorityForTypeIsSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$VH();
        }
        public static  @C("BOOL") int PriorityForTypeIsSupported$get(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$VH().get(seg);
        }
        public static  @C("BOOL") int PriorityForTypeIsSupported$get(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PriorityForTypeIsSupported$set(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$VH().set(seg, x);
        }
        public static void PriorityForTypeIsSupported$set(@C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY$PriorityForTypeIsSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE() {
        return d3d12_h$constants$1.D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE();
    }
    public static @C("int") int D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT() {
        return d3d12_h$constants$1.D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT();
    }
    public static @C("int") int D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE() {
        return d3d12_h$constants$1.D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE();
    }
    public static @C("int") int D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE() {
        return d3d12_h$constants$1.D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE();
    }
    public static @C("int") int D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY() {
        return d3d12_h$constants$1.D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY();
    }
    public static @C("int") int D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE() {
        return d3d12_h$constants$1.D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE();
    }
    public static @C("int") int D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS() {
        return d3d12_h$constants$1.D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS();
    }
    public static @C("int") int D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE() {
        return d3d12_h$constants$1.D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE();
    }
    public static class D3D12_FEATURE_DATA_D3D12_OPTIONS3 {

        private D3D12_FEATURE_DATA_D3D12_OPTIONS3() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$struct$LAYOUT();
        }
        public static VarHandle CopyQueueTimestampQueriesSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$VH();
        }
        public static  @C("BOOL") int CopyQueueTimestampQueriesSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$VH().get(seg);
        }
        public static  @C("BOOL") int CopyQueueTimestampQueriesSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyQueueTimestampQueriesSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$VH().set(seg, x);
        }
        public static void CopyQueueTimestampQueriesSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CopyQueueTimestampQueriesSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CastingFullyTypedFormatSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$VH();
        }
        public static  @C("BOOL") int CastingFullyTypedFormatSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$VH().get(seg);
        }
        public static  @C("BOOL") int CastingFullyTypedFormatSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CastingFullyTypedFormatSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$VH().set(seg, x);
        }
        public static void CastingFullyTypedFormatSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$CastingFullyTypedFormatSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteBufferImmediateSupportFlags$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_SUPPORT_FLAGS") int WriteBufferImmediateSupportFlags$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_SUPPORT_FLAGS") int WriteBufferImmediateSupportFlags$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteBufferImmediateSupportFlags$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, @C("D3D12_COMMAND_LIST_SUPPORT_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$VH().set(seg, x);
        }
        public static void WriteBufferImmediateSupportFlags$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_SUPPORT_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$WriteBufferImmediateSupportFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ViewInstancingTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$VH();
        }
        public static  @C("D3D12_VIEW_INSTANCING_TIER") int ViewInstancingTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$VH().get(seg);
        }
        public static  @C("D3D12_VIEW_INSTANCING_TIER") int ViewInstancingTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ViewInstancingTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, @C("D3D12_VIEW_INSTANCING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$VH().set(seg, x);
        }
        public static void ViewInstancingTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index, @C("D3D12_VIEW_INSTANCING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$ViewInstancingTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BarycentricsSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$VH();
        }
        public static  @C("BOOL") int BarycentricsSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$VH().get(seg);
        }
        public static  @C("BOOL") int BarycentricsSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BarycentricsSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$VH().set(seg, x);
        }
        public static void BarycentricsSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS3$BarycentricsSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS3*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_EXISTING_HEAPS {

        private D3D12_FEATURE_DATA_EXISTING_HEAPS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_EXISTING_HEAPS$struct$LAYOUT();
        }
        public static VarHandle Supported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$VH();
        }
        public static  @C("BOOL") int Supported$get(@C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$VH().get(seg);
        }
        public static  @C("BOOL") int Supported$get(@C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Supported$set(@C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$VH().set(seg, x);
        }
        public static void Supported$set(@C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_EXISTING_HEAPS$Supported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_EXISTING_HEAPS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0() {
        return d3d12_h$constants$1.D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0();
    }
    public static @C("int") int D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1() {
        return d3d12_h$constants$1.D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1();
    }
    public static @C("int") int D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_2() {
        return d3d12_h$constants$1.D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_2();
    }
    public static class D3D12_FEATURE_DATA_D3D12_OPTIONS4 {

        private D3D12_FEATURE_DATA_D3D12_OPTIONS4() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$struct$LAYOUT();
        }
        public static VarHandle MSAA64KBAlignedTextureSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$VH();
        }
        public static  @C("BOOL") int MSAA64KBAlignedTextureSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$VH().get(seg);
        }
        public static  @C("BOOL") int MSAA64KBAlignedTextureSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MSAA64KBAlignedTextureSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$VH().set(seg, x);
        }
        public static void MSAA64KBAlignedTextureSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$MSAA64KBAlignedTextureSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SharedResourceCompatibilityTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$VH();
        }
        public static  @C("D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER") int SharedResourceCompatibilityTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$VH().get(seg);
        }
        public static  @C("D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER") int SharedResourceCompatibilityTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SharedResourceCompatibilityTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, @C("D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$VH().set(seg, x);
        }
        public static void SharedResourceCompatibilityTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, long index, @C("D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$SharedResourceCompatibilityTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Native16BitShaderOpsSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$VH();
        }
        public static  @C("BOOL") int Native16BitShaderOpsSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$VH().get(seg);
        }
        public static  @C("BOOL") int Native16BitShaderOpsSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Native16BitShaderOpsSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$VH().set(seg, x);
        }
        public static void Native16BitShaderOpsSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS4$Native16BitShaderOpsSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS4*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_HEAP_SERIALIZATION_TIER_0() {
        return d3d12_h$constants$1.D3D12_HEAP_SERIALIZATION_TIER_0();
    }
    public static @C("int") int D3D12_HEAP_SERIALIZATION_TIER_10() {
        return d3d12_h$constants$1.D3D12_HEAP_SERIALIZATION_TIER_10();
    }
    public static class D3D12_FEATURE_DATA_SERIALIZATION {

        private D3D12_FEATURE_DATA_SERIALIZATION() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$struct$LAYOUT();
        }
        public static VarHandle NodeIndex$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$VH();
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$VH().get(seg);
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$VH().set(seg, x);
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$NodeIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HeapSerializationTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$VH();
        }
        public static  @C("D3D12_HEAP_SERIALIZATION_TIER") int HeapSerializationTier$get(@C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_SERIALIZATION_TIER") int HeapSerializationTier$get(@C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HeapSerializationTier$set(@C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment seg, @C("D3D12_HEAP_SERIALIZATION_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$VH().set(seg, x);
        }
        public static void HeapSerializationTier$set(@C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment seg, long index, @C("D3D12_HEAP_SERIALIZATION_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_SERIALIZATION$HeapSerializationTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_SERIALIZATION") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_SERIALIZATION[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_SERIALIZATION[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_SERIALIZATION*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_SERIALIZATION*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_CROSS_NODE {

        private D3D12_FEATURE_DATA_CROSS_NODE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$struct$LAYOUT();
        }
        public static VarHandle SharingTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$VH();
        }
        public static  @C("D3D12_CROSS_NODE_SHARING_TIER") int SharingTier$get(@C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$VH().get(seg);
        }
        public static  @C("D3D12_CROSS_NODE_SHARING_TIER") int SharingTier$get(@C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SharingTier$set(@C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment seg, @C("D3D12_CROSS_NODE_SHARING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$VH().set(seg, x);
        }
        public static void SharingTier$set(@C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment seg, long index, @C("D3D12_CROSS_NODE_SHARING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$SharingTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicShaderInstructions$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$VH();
        }
        public static  @C("BOOL") int AtomicShaderInstructions$get(@C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$VH().get(seg);
        }
        public static  @C("BOOL") int AtomicShaderInstructions$get(@C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicShaderInstructions$set(@C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$VH().set(seg, x);
        }
        public static void AtomicShaderInstructions$set(@C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_CROSS_NODE$AtomicShaderInstructions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_CROSS_NODE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_CROSS_NODE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_CROSS_NODE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_CROSS_NODE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_CROSS_NODE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RENDER_PASS_TIER_0() {
        return d3d12_h$constants$1.D3D12_RENDER_PASS_TIER_0();
    }
    public static @C("int") int D3D12_RENDER_PASS_TIER_1() {
        return d3d12_h$constants$1.D3D12_RENDER_PASS_TIER_1();
    }
    public static @C("int") int D3D12_RENDER_PASS_TIER_2() {
        return d3d12_h$constants$1.D3D12_RENDER_PASS_TIER_2();
    }
    public static @C("int") int D3D12_RAYTRACING_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$1.D3D12_RAYTRACING_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_RAYTRACING_TIER_1_0() {
        return d3d12_h$constants$1.D3D12_RAYTRACING_TIER_1_0();
    }
    public static @C("int") int D3D12_RAYTRACING_TIER_1_1() {
        return d3d12_h$constants$1.D3D12_RAYTRACING_TIER_1_1();
    }
    public static class D3D12_FEATURE_DATA_D3D12_OPTIONS5 {

        private D3D12_FEATURE_DATA_D3D12_OPTIONS5() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$struct$LAYOUT();
        }
        public static VarHandle SRVOnlyTiledResourceTier3$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$VH();
        }
        public static  @C("BOOL") int SRVOnlyTiledResourceTier3$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$VH().get(seg);
        }
        public static  @C("BOOL") int SRVOnlyTiledResourceTier3$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SRVOnlyTiledResourceTier3$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$VH().set(seg, x);
        }
        public static void SRVOnlyTiledResourceTier3$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$SRVOnlyTiledResourceTier3$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RenderPassesTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$VH();
        }
        public static  @C("D3D12_RENDER_PASS_TIER") int RenderPassesTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$VH().get(seg);
        }
        public static  @C("D3D12_RENDER_PASS_TIER") int RenderPassesTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RenderPassesTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, @C("D3D12_RENDER_PASS_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$VH().set(seg, x);
        }
        public static void RenderPassesTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, long index, @C("D3D12_RENDER_PASS_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RenderPassesTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RaytracingTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$VH();
        }
        public static  @C("D3D12_RAYTRACING_TIER") int RaytracingTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$VH().get(seg);
        }
        public static  @C("D3D12_RAYTRACING_TIER") int RaytracingTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RaytracingTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, @C("D3D12_RAYTRACING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$VH().set(seg, x);
        }
        public static void RaytracingTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment seg, long index, @C("D3D12_RAYTRACING_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS5$RaytracingTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS5*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$1.D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_VARIABLE_SHADING_RATE_TIER_1() {
        return d3d12_h$constants$1.D3D12_VARIABLE_SHADING_RATE_TIER_1();
    }
    public static @C("int") int D3D12_VARIABLE_SHADING_RATE_TIER_2() {
        return d3d12_h$constants$1.D3D12_VARIABLE_SHADING_RATE_TIER_2();
    }
    public static class D3D12_FEATURE_DATA_D3D12_OPTIONS6 {

        private D3D12_FEATURE_DATA_D3D12_OPTIONS6() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$struct$LAYOUT();
        }
        public static VarHandle AdditionalShadingRatesSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$VH();
        }
        public static  @C("BOOL") int AdditionalShadingRatesSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$VH().get(seg);
        }
        public static  @C("BOOL") int AdditionalShadingRatesSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AdditionalShadingRatesSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$VH().set(seg, x);
        }
        public static void AdditionalShadingRatesSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$AdditionalShadingRatesSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PerPrimitiveShadingRateSupportedWithViewportIndexing$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$VH();
        }
        public static  @C("BOOL") int PerPrimitiveShadingRateSupportedWithViewportIndexing$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$VH().get(seg);
        }
        public static  @C("BOOL") int PerPrimitiveShadingRateSupportedWithViewportIndexing$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PerPrimitiveShadingRateSupportedWithViewportIndexing$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$VH().set(seg, x);
        }
        public static void PerPrimitiveShadingRateSupportedWithViewportIndexing$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$PerPrimitiveShadingRateSupportedWithViewportIndexing$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle VariableShadingRateTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$VH();
        }
        public static  @C("D3D12_VARIABLE_SHADING_RATE_TIER") int VariableShadingRateTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$VH().get(seg);
        }
        public static  @C("D3D12_VARIABLE_SHADING_RATE_TIER") int VariableShadingRateTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VariableShadingRateTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, @C("D3D12_VARIABLE_SHADING_RATE_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$VH().set(seg, x);
        }
        public static void VariableShadingRateTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index, @C("D3D12_VARIABLE_SHADING_RATE_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$VariableShadingRateTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ShadingRateImageTileSize$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$VH();
        }
        public static  @C("UINT") int ShadingRateImageTileSize$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$VH().get(seg);
        }
        public static  @C("UINT") int ShadingRateImageTileSize$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShadingRateImageTileSize$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$VH().set(seg, x);
        }
        public static void ShadingRateImageTileSize$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$ShadingRateImageTileSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BackgroundProcessingSupported$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$VH();
        }
        public static  @C("BOOL") int BackgroundProcessingSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$VH().get(seg);
        }
        public static  @C("BOOL") int BackgroundProcessingSupported$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BackgroundProcessingSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$VH().set(seg, x);
        }
        public static void BackgroundProcessingSupported$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS6$BackgroundProcessingSupported$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS6*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_MESH_SHADER_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$1.D3D12_MESH_SHADER_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_MESH_SHADER_TIER_1() {
        return d3d12_h$constants$1.D3D12_MESH_SHADER_TIER_1();
    }
    public static @C("int") int D3D12_SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED() {
        return d3d12_h$constants$1.D3D12_SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED();
    }
    public static @C("int") int D3D12_SAMPLER_FEEDBACK_TIER_0_9() {
        return d3d12_h$constants$1.D3D12_SAMPLER_FEEDBACK_TIER_0_9();
    }
    public static @C("int") int D3D12_SAMPLER_FEEDBACK_TIER_1_0() {
        return d3d12_h$constants$1.D3D12_SAMPLER_FEEDBACK_TIER_1_0();
    }
    public static class D3D12_FEATURE_DATA_D3D12_OPTIONS7 {

        private D3D12_FEATURE_DATA_D3D12_OPTIONS7() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$struct$LAYOUT();
        }
        public static VarHandle MeshShaderTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$VH();
        }
        public static  @C("D3D12_MESH_SHADER_TIER") int MeshShaderTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$VH().get(seg);
        }
        public static  @C("D3D12_MESH_SHADER_TIER") int MeshShaderTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MeshShaderTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment seg, @C("D3D12_MESH_SHADER_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$VH().set(seg, x);
        }
        public static void MeshShaderTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment seg, long index, @C("D3D12_MESH_SHADER_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$MeshShaderTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SamplerFeedbackTier$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$VH();
        }
        public static  @C("D3D12_SAMPLER_FEEDBACK_TIER") int SamplerFeedbackTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$VH().get(seg);
        }
        public static  @C("D3D12_SAMPLER_FEEDBACK_TIER") int SamplerFeedbackTier$get(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SamplerFeedbackTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment seg, @C("D3D12_SAMPLER_FEEDBACK_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$VH().set(seg, x);
        }
        public static void SamplerFeedbackTier$set(@C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment seg, long index, @C("D3D12_SAMPLER_FEEDBACK_TIER") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_D3D12_OPTIONS7$SamplerFeedbackTier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_D3D12_OPTIONS7*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_QUERY_META_COMMAND {

        private D3D12_FEATURE_DATA_QUERY_META_COMMAND() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$struct$LAYOUT();
        }
        public static MemorySegment CommandId$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pQueryInputData$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$VH();
        }
        public static  @C("void*") MemoryAddress pQueryInputData$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$VH().get(seg);
        }
        public static  @C("void*") MemoryAddress pQueryInputData$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pQueryInputData$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, @C("void*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$VH().set(seg, x);
        }
        public static void pQueryInputData$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index, @C("void*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryInputData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle QueryInputDataSizeInBytes$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$VH();
        }
        public static  @C("SIZE_T") long QueryInputDataSizeInBytes$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$VH().get(seg);
        }
        public static  @C("SIZE_T") long QueryInputDataSizeInBytes$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInputDataSizeInBytes$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$VH().set(seg, x);
        }
        public static void QueryInputDataSizeInBytes$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryInputDataSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pQueryOutputData$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$VH();
        }
        public static  @C("void*") MemoryAddress pQueryOutputData$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$VH().get(seg);
        }
        public static  @C("void*") MemoryAddress pQueryOutputData$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pQueryOutputData$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, @C("void*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$VH().set(seg, x);
        }
        public static void pQueryOutputData$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index, @C("void*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$pQueryOutputData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle QueryOutputDataSizeInBytes$VH() {
            return d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$VH();
        }
        public static  @C("SIZE_T") long QueryOutputDataSizeInBytes$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$VH().get(seg);
        }
        public static  @C("SIZE_T") long QueryOutputDataSizeInBytes$get(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryOutputDataSizeInBytes$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$VH().set(seg, x);
        }
        public static void QueryOutputDataSizeInBytes$set(@C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$1.D3D12_FEATURE_DATA_QUERY_META_COMMAND$QueryOutputDataSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_QUERY_META_COMMAND*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RESOURCE_ALLOCATION_INFO {

        private D3D12_RESOURCE_ALLOCATION_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$struct$LAYOUT();
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$VH();
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Alignment$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$Alignment$VH();
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$Alignment$VH().get(seg);
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$Alignment$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Alignment$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$Alignment$VH().set(seg, x);
        }
        public static void Alignment$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO$Alignment$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RESOURCE_ALLOCATION_INFO1 {

        private D3D12_RESOURCE_ALLOCATION_INFO1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$struct$LAYOUT();
        }
        public static VarHandle Offset$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Offset$VH();
        }
        public static  @C("UINT64") long Offset$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Offset$VH().get(seg);
        }
        public static  @C("UINT64") long Offset$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Offset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Offset$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Offset$VH().set(seg, x);
        }
        public static void Offset$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Offset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Alignment$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$VH();
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$VH().get(seg);
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Alignment$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$VH().set(seg, x);
        }
        public static void Alignment$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$Alignment$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$VH();
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALLOCATION_INFO1$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RESOURCE_ALLOCATION_INFO1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_HEAP_TYPE_DEFAULT() {
        return d3d12_h$constants$1.D3D12_HEAP_TYPE_DEFAULT();
    }
    public static @C("int") int D3D12_HEAP_TYPE_UPLOAD() {
        return d3d12_h$constants$1.D3D12_HEAP_TYPE_UPLOAD();
    }
    public static @C("int") int D3D12_HEAP_TYPE_READBACK() {
        return d3d12_h$constants$1.D3D12_HEAP_TYPE_READBACK();
    }
    public static @C("int") int D3D12_HEAP_TYPE_CUSTOM() {
        return d3d12_h$constants$1.D3D12_HEAP_TYPE_CUSTOM();
    }
    public static @C("int") int D3D12_CPU_PAGE_PROPERTY_UNKNOWN() {
        return d3d12_h$constants$1.D3D12_CPU_PAGE_PROPERTY_UNKNOWN();
    }
    public static @C("int") int D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE() {
        return d3d12_h$constants$1.D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE();
    }
    public static @C("int") int D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE() {
        return d3d12_h$constants$1.D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE();
    }
    public static @C("int") int D3D12_CPU_PAGE_PROPERTY_WRITE_BACK() {
        return d3d12_h$constants$1.D3D12_CPU_PAGE_PROPERTY_WRITE_BACK();
    }
    public static @C("int") int D3D12_MEMORY_POOL_UNKNOWN() {
        return d3d12_h$constants$1.D3D12_MEMORY_POOL_UNKNOWN();
    }
    public static @C("int") int D3D12_MEMORY_POOL_L0() {
        return d3d12_h$constants$1.D3D12_MEMORY_POOL_L0();
    }
    public static @C("int") int D3D12_MEMORY_POOL_L1() {
        return d3d12_h$constants$1.D3D12_MEMORY_POOL_L1();
    }
    public static class D3D12_HEAP_PROPERTIES {

        private D3D12_HEAP_PROPERTIES() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$Type$VH();
        }
        public static  @C("D3D12_HEAP_TYPE") int Type$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$Type$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_TYPE") int Type$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, @C("D3D12_HEAP_TYPE") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index, @C("D3D12_HEAP_TYPE") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CPUPageProperty$VH() {
            return d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CPUPageProperty$VH();
        }
        public static  @C("D3D12_CPU_PAGE_PROPERTY") int CPUPageProperty$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CPUPageProperty$VH().get(seg);
        }
        public static  @C("D3D12_CPU_PAGE_PROPERTY") int CPUPageProperty$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CPUPageProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CPUPageProperty$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, @C("D3D12_CPU_PAGE_PROPERTY") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CPUPageProperty$VH().set(seg, x);
        }
        public static void CPUPageProperty$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index, @C("D3D12_CPU_PAGE_PROPERTY") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CPUPageProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MemoryPoolPreference$VH() {
            return d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$MemoryPoolPreference$VH();
        }
        public static  @C("D3D12_MEMORY_POOL") int MemoryPoolPreference$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$MemoryPoolPreference$VH().get(seg);
        }
        public static  @C("D3D12_MEMORY_POOL") int MemoryPoolPreference$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$MemoryPoolPreference$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MemoryPoolPreference$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, @C("D3D12_MEMORY_POOL") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$MemoryPoolPreference$VH().set(seg, x);
        }
        public static void MemoryPoolPreference$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index, @C("D3D12_MEMORY_POOL") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$MemoryPoolPreference$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreationNodeMask$VH() {
            return d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CreationNodeMask$VH();
        }
        public static  @C("UINT") int CreationNodeMask$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CreationNodeMask$VH().get(seg);
        }
        public static  @C("UINT") int CreationNodeMask$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CreationNodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreationNodeMask$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CreationNodeMask$VH().set(seg, x);
        }
        public static void CreationNodeMask$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$CreationNodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle VisibleNodeMask$VH() {
            return d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$VisibleNodeMask$VH();
        }
        public static  @C("UINT") int VisibleNodeMask$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$VisibleNodeMask$VH().get(seg);
        }
        public static  @C("UINT") int VisibleNodeMask$get(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$VisibleNodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VisibleNodeMask$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$VisibleNodeMask$VH().set(seg, x);
        }
        public static void VisibleNodeMask$set(@C("struct D3D12_HEAP_PROPERTIES") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_HEAP_PROPERTIES$VisibleNodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_HEAP_PROPERTIES") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_HEAP_PROPERTIES") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_HEAP_PROPERTIES[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_HEAP_PROPERTIES[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_HEAP_PROPERTIES*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_HEAP_PROPERTIES*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_HEAP_FLAG_NONE() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_NONE();
    }
    public static @C("int") int D3D12_HEAP_FLAG_SHARED() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_SHARED();
    }
    public static @C("int") int D3D12_HEAP_FLAG_DENY_BUFFERS() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_DENY_BUFFERS();
    }
    public static @C("int") int D3D12_HEAP_FLAG_ALLOW_DISPLAY() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_ALLOW_DISPLAY();
    }
    public static @C("int") int D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER();
    }
    public static @C("int") int D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES();
    }
    public static @C("int") int D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES();
    }
    public static @C("int") int D3D12_HEAP_FLAG_HARDWARE_PROTECTED() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_HARDWARE_PROTECTED();
    }
    public static @C("int") int D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH();
    }
    public static @C("int") int D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS();
    }
    public static @C("int") int D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT();
    }
    public static @C("int") int D3D12_HEAP_FLAG_CREATE_NOT_ZEROED() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_CREATE_NOT_ZEROED();
    }
    public static @C("int") int D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES();
    }
    public static @C("int") int D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS();
    }
    public static @C("int") int D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES();
    }
    public static @C("int") int D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES() {
        return d3d12_h$constants$1.D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES();
    }
    public static class D3D12_HEAP_DESC {

        private D3D12_HEAP_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_HEAP_DESC$struct$LAYOUT();
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$1.D3D12_HEAP_DESC$SizeInBytes$VH();
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_HEAP_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_HEAP_DESC$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_HEAP_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_HEAP_DESC$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_HEAP_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_HEAP_DESC$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_HEAP_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_HEAP_DESC$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Properties$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 20));
        }
        public static VarHandle Alignment$VH() {
            return d3d12_h$constants$1.D3D12_HEAP_DESC$Alignment$VH();
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_HEAP_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_HEAP_DESC$Alignment$VH().get(seg);
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_HEAP_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_HEAP_DESC$Alignment$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Alignment$set(@C("struct D3D12_HEAP_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_HEAP_DESC$Alignment$VH().set(seg, x);
        }
        public static void Alignment$set(@C("struct D3D12_HEAP_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_HEAP_DESC$Alignment$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$1.D3D12_HEAP_DESC$Flags$VH();
        }
        public static  @C("D3D12_HEAP_FLAGS") int Flags$get(@C("struct D3D12_HEAP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_FLAGS") int Flags$get(@C("struct D3D12_HEAP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_HEAP_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_HEAP_DESC") MemorySegment seg, @C("D3D12_HEAP_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_HEAP_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_HEAP_DESC") MemorySegment seg, long index, @C("D3D12_HEAP_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_HEAP_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_HEAP_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_HEAP_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_HEAP_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_HEAP_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_HEAP_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_HEAP_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RESOURCE_DIMENSION_UNKNOWN() {
        return d3d12_h$constants$1.D3D12_RESOURCE_DIMENSION_UNKNOWN();
    }
    public static @C("int") int D3D12_RESOURCE_DIMENSION_BUFFER() {
        return d3d12_h$constants$1.D3D12_RESOURCE_DIMENSION_BUFFER();
    }
    public static @C("int") int D3D12_RESOURCE_DIMENSION_TEXTURE1D() {
        return d3d12_h$constants$1.D3D12_RESOURCE_DIMENSION_TEXTURE1D();
    }
    public static @C("int") int D3D12_RESOURCE_DIMENSION_TEXTURE2D() {
        return d3d12_h$constants$1.D3D12_RESOURCE_DIMENSION_TEXTURE2D();
    }
    public static @C("int") int D3D12_RESOURCE_DIMENSION_TEXTURE3D() {
        return d3d12_h$constants$1.D3D12_RESOURCE_DIMENSION_TEXTURE3D();
    }
    public static @C("int") int D3D12_TEXTURE_LAYOUT_UNKNOWN() {
        return d3d12_h$constants$1.D3D12_TEXTURE_LAYOUT_UNKNOWN();
    }
    public static @C("int") int D3D12_TEXTURE_LAYOUT_ROW_MAJOR() {
        return d3d12_h$constants$1.D3D12_TEXTURE_LAYOUT_ROW_MAJOR();
    }
    public static @C("int") int D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE() {
        return d3d12_h$constants$1.D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE();
    }
    public static @C("int") int D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE() {
        return d3d12_h$constants$1.D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE();
    }
    public static @C("int") int D3D12_RESOURCE_FLAG_NONE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_FLAG_NONE();
    }
    public static @C("int") int D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET() {
        return d3d12_h$constants$1.D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET();
    }
    public static @C("int") int D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL() {
        return d3d12_h$constants$1.D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL();
    }
    public static @C("int") int D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS() {
        return d3d12_h$constants$1.D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS();
    }
    public static @C("int") int D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE();
    }
    public static @C("int") int D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER() {
        return d3d12_h$constants$1.D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER();
    }
    public static @C("int") int D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS() {
        return d3d12_h$constants$1.D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS();
    }
    public static @C("int") int D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY() {
        return d3d12_h$constants$1.D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY();
    }
    public static class D3D12_MIP_REGION {

        private D3D12_MIP_REGION() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_MIP_REGION$struct$LAYOUT();
        }
        public static VarHandle Width$VH() {
            return d3d12_h$constants$1.D3D12_MIP_REGION$Width$VH();
        }
        public static  @C("UINT") int Width$get(@C("struct D3D12_MIP_REGION") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_MIP_REGION$Width$VH().get(seg);
        }
        public static  @C("UINT") int Width$get(@C("struct D3D12_MIP_REGION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_MIP_REGION$Width$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Width$set(@C("struct D3D12_MIP_REGION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_MIP_REGION$Width$VH().set(seg, x);
        }
        public static void Width$set(@C("struct D3D12_MIP_REGION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_MIP_REGION$Width$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Height$VH() {
            return d3d12_h$constants$1.D3D12_MIP_REGION$Height$VH();
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_MIP_REGION") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_MIP_REGION$Height$VH().get(seg);
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_MIP_REGION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_MIP_REGION$Height$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Height$set(@C("struct D3D12_MIP_REGION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_MIP_REGION$Height$VH().set(seg, x);
        }
        public static void Height$set(@C("struct D3D12_MIP_REGION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_MIP_REGION$Height$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Depth$VH() {
            return d3d12_h$constants$1.D3D12_MIP_REGION$Depth$VH();
        }
        public static  @C("UINT") int Depth$get(@C("struct D3D12_MIP_REGION") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_MIP_REGION$Depth$VH().get(seg);
        }
        public static  @C("UINT") int Depth$get(@C("struct D3D12_MIP_REGION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_MIP_REGION$Depth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Depth$set(@C("struct D3D12_MIP_REGION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_MIP_REGION$Depth$VH().set(seg, x);
        }
        public static void Depth$set(@C("struct D3D12_MIP_REGION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_MIP_REGION$Depth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_MIP_REGION") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_MIP_REGION") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_MIP_REGION[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_MIP_REGION[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_MIP_REGION*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_MIP_REGION*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RESOURCE_DESC {

        private D3D12_RESOURCE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$struct$LAYOUT();
        }
        public static VarHandle Dimension$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$Dimension$VH();
        }
        public static  @C("D3D12_RESOURCE_DIMENSION") int Dimension$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Dimension$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_DIMENSION") int Dimension$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Dimension$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dimension$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("D3D12_RESOURCE_DIMENSION") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Dimension$VH().set(seg, x);
        }
        public static void Dimension$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("D3D12_RESOURCE_DIMENSION") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Dimension$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Alignment$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$Alignment$VH();
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Alignment$VH().get(seg);
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Alignment$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Alignment$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Alignment$VH().set(seg, x);
        }
        public static void Alignment$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Alignment$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Width$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$Width$VH();
        }
        public static  @C("UINT64") long Width$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Width$VH().get(seg);
        }
        public static  @C("UINT64") long Width$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Width$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Width$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Width$VH().set(seg, x);
        }
        public static void Width$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Width$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Height$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$Height$VH();
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Height$VH().get(seg);
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Height$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Height$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Height$VH().set(seg, x);
        }
        public static void Height$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Height$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthOrArraySize$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$DepthOrArraySize$VH();
        }
        public static  @C("UINT16") short DepthOrArraySize$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (short)d3d12_h$constants$1.D3D12_RESOURCE_DESC$DepthOrArraySize$VH().get(seg);
        }
        public static  @C("UINT16") short DepthOrArraySize$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (short)d3d12_h$constants$1.D3D12_RESOURCE_DESC$DepthOrArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthOrArraySize$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$DepthOrArraySize$VH().set(seg, x);
        }
        public static void DepthOrArraySize$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$DepthOrArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$MipLevels$VH();
        }
        public static  @C("UINT16") short MipLevels$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (short)d3d12_h$constants$1.D3D12_RESOURCE_DESC$MipLevels$VH().get(seg);
        }
        public static  @C("UINT16") short MipLevels$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (short)d3d12_h$constants$1.D3D12_RESOURCE_DESC$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment SampleDesc$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(36, 8));
        }
        public static VarHandle Layout$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$Layout$VH();
        }
        public static  @C("D3D12_TEXTURE_LAYOUT") int Layout$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Layout$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_LAYOUT") int Layout$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Layout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Layout$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("D3D12_TEXTURE_LAYOUT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Layout$VH().set(seg, x);
        }
        public static void Layout$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("D3D12_TEXTURE_LAYOUT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Layout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC$Flags$VH();
        }
        public static  @C("D3D12_RESOURCE_FLAGS") int Flags$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_FLAGS") int Flags$get(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, @C("D3D12_RESOURCE_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_RESOURCE_DESC") MemorySegment seg, long index, @C("D3D12_RESOURCE_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RESOURCE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RESOURCE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RESOURCE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RESOURCE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RESOURCE_DESC1 {

        private D3D12_RESOURCE_DESC1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$struct$LAYOUT();
        }
        public static VarHandle Dimension$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Dimension$VH();
        }
        public static  @C("D3D12_RESOURCE_DIMENSION") int Dimension$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Dimension$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_DIMENSION") int Dimension$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Dimension$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dimension$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("D3D12_RESOURCE_DIMENSION") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Dimension$VH().set(seg, x);
        }
        public static void Dimension$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("D3D12_RESOURCE_DIMENSION") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Dimension$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Alignment$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Alignment$VH();
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Alignment$VH().get(seg);
        }
        public static  @C("UINT64") long Alignment$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Alignment$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Alignment$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Alignment$VH().set(seg, x);
        }
        public static void Alignment$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Alignment$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Width$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Width$VH();
        }
        public static  @C("UINT64") long Width$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Width$VH().get(seg);
        }
        public static  @C("UINT64") long Width$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Width$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Width$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Width$VH().set(seg, x);
        }
        public static void Width$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Width$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Height$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Height$VH();
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Height$VH().get(seg);
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Height$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Height$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Height$VH().set(seg, x);
        }
        public static void Height$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Height$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthOrArraySize$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$DepthOrArraySize$VH();
        }
        public static  @C("UINT16") short DepthOrArraySize$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (short)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$DepthOrArraySize$VH().get(seg);
        }
        public static  @C("UINT16") short DepthOrArraySize$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (short)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$DepthOrArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthOrArraySize$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$DepthOrArraySize$VH().set(seg, x);
        }
        public static void DepthOrArraySize$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$DepthOrArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$MipLevels$VH();
        }
        public static  @C("UINT16") short MipLevels$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (short)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$MipLevels$VH().get(seg);
        }
        public static  @C("UINT16") short MipLevels$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (short)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment SampleDesc$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(36, 8));
        }
        public static VarHandle Layout$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Layout$VH();
        }
        public static  @C("D3D12_TEXTURE_LAYOUT") int Layout$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Layout$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_LAYOUT") int Layout$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Layout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Layout$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("D3D12_TEXTURE_LAYOUT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Layout$VH().set(seg, x);
        }
        public static void Layout$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("D3D12_TEXTURE_LAYOUT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Layout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Flags$VH();
        }
        public static  @C("D3D12_RESOURCE_FLAGS") int Flags$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Flags$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_FLAGS") int Flags$get(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, @C("D3D12_RESOURCE_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_RESOURCE_DESC1") MemorySegment seg, long index, @C("D3D12_RESOURCE_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_DESC1$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment SamplerFeedbackMipRegion$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(52, 12));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RESOURCE_DESC1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_DESC1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_DESC1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RESOURCE_DESC1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RESOURCE_DESC1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RESOURCE_DESC1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DEPTH_STENCIL_VALUE {

        private D3D12_DEPTH_STENCIL_VALUE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$struct$LAYOUT();
        }
        public static VarHandle Depth$VH() {
            return d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Depth$VH();
        }
        public static  @C("FLOAT") float Depth$get(@C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment seg) {
            return (float)d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Depth$VH().get(seg);
        }
        public static  @C("FLOAT") float Depth$get(@C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Depth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Depth$set(@C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Depth$VH().set(seg, x);
        }
        public static void Depth$set(@C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Depth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Stencil$VH() {
            return d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Stencil$VH();
        }
        public static  @C("UINT8") byte Stencil$get(@C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment seg) {
            return (byte)d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Stencil$VH().get(seg);
        }
        public static  @C("UINT8") byte Stencil$get(@C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Stencil$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Stencil$set(@C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Stencil$VH().set(seg, x);
        }
        public static void Stencil$set(@C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$1.D3D12_DEPTH_STENCIL_VALUE$Stencil$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCIL_VALUE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCIL_VALUE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DEPTH_STENCIL_VALUE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DEPTH_STENCIL_VALUE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DEPTH_STENCIL_VALUE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_CLEAR_VALUE {

        private D3D12_CLEAR_VALUE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_CLEAR_VALUE$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$1.D3D12_CLEAR_VALUE$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_CLEAR_VALUE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_CLEAR_VALUE$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_CLEAR_VALUE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_CLEAR_VALUE$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_CLEAR_VALUE") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_CLEAR_VALUE$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_CLEAR_VALUE") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_CLEAR_VALUE$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Color$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 16));
        }
        public static MemorySegment DepthStencil$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_CLEAR_VALUE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_CLEAR_VALUE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_CLEAR_VALUE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_CLEAR_VALUE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_CLEAR_VALUE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_CLEAR_VALUE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RANGE {

        private D3D12_RANGE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RANGE$struct$LAYOUT();
        }
        public static VarHandle Begin$VH() {
            return d3d12_h$constants$1.D3D12_RANGE$Begin$VH();
        }
        public static  @C("SIZE_T") long Begin$get(@C("struct D3D12_RANGE") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RANGE$Begin$VH().get(seg);
        }
        public static  @C("SIZE_T") long Begin$get(@C("struct D3D12_RANGE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RANGE$Begin$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Begin$set(@C("struct D3D12_RANGE") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$1.D3D12_RANGE$Begin$VH().set(seg, x);
        }
        public static void Begin$set(@C("struct D3D12_RANGE") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$1.D3D12_RANGE$Begin$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle End$VH() {
            return d3d12_h$constants$1.D3D12_RANGE$End$VH();
        }
        public static  @C("SIZE_T") long End$get(@C("struct D3D12_RANGE") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RANGE$End$VH().get(seg);
        }
        public static  @C("SIZE_T") long End$get(@C("struct D3D12_RANGE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RANGE$End$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void End$set(@C("struct D3D12_RANGE") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$1.D3D12_RANGE$End$VH().set(seg, x);
        }
        public static void End$set(@C("struct D3D12_RANGE") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$1.D3D12_RANGE$End$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RANGE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RANGE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RANGE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RANGE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RANGE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RANGE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RANGE_UINT64 {

        private D3D12_RANGE_UINT64() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RANGE_UINT64$struct$LAYOUT();
        }
        public static VarHandle Begin$VH() {
            return d3d12_h$constants$1.D3D12_RANGE_UINT64$Begin$VH();
        }
        public static  @C("UINT64") long Begin$get(@C("struct D3D12_RANGE_UINT64") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RANGE_UINT64$Begin$VH().get(seg);
        }
        public static  @C("UINT64") long Begin$get(@C("struct D3D12_RANGE_UINT64") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RANGE_UINT64$Begin$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Begin$set(@C("struct D3D12_RANGE_UINT64") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RANGE_UINT64$Begin$VH().set(seg, x);
        }
        public static void Begin$set(@C("struct D3D12_RANGE_UINT64") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RANGE_UINT64$Begin$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle End$VH() {
            return d3d12_h$constants$1.D3D12_RANGE_UINT64$End$VH();
        }
        public static  @C("UINT64") long End$get(@C("struct D3D12_RANGE_UINT64") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_RANGE_UINT64$End$VH().get(seg);
        }
        public static  @C("UINT64") long End$get(@C("struct D3D12_RANGE_UINT64") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_RANGE_UINT64$End$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void End$set(@C("struct D3D12_RANGE_UINT64") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RANGE_UINT64$End$VH().set(seg, x);
        }
        public static void End$set(@C("struct D3D12_RANGE_UINT64") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_RANGE_UINT64$End$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RANGE_UINT64") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RANGE_UINT64") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RANGE_UINT64[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RANGE_UINT64[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RANGE_UINT64*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RANGE_UINT64*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_SUBRESOURCE_RANGE_UINT64 {

        private D3D12_SUBRESOURCE_RANGE_UINT64() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_RANGE_UINT64$struct$LAYOUT();
        }
        public static VarHandle Subresource$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$VH();
        }
        public static  @C("UINT") int Subresource$get(@C("struct D3D12_SUBRESOURCE_RANGE_UINT64") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$VH().get(seg);
        }
        public static  @C("UINT") int Subresource$get(@C("struct D3D12_SUBRESOURCE_RANGE_UINT64") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Subresource$set(@C("struct D3D12_SUBRESOURCE_RANGE_UINT64") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$VH().set(seg, x);
        }
        public static void Subresource$set(@C("struct D3D12_SUBRESOURCE_RANGE_UINT64") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_RANGE_UINT64$Subresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Range$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SUBRESOURCE_RANGE_UINT64") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_RANGE_UINT64") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_RANGE_UINT64[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SUBRESOURCE_RANGE_UINT64[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SUBRESOURCE_RANGE_UINT64*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SUBRESOURCE_RANGE_UINT64*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_SUBRESOURCE_INFO {

        private D3D12_SUBRESOURCE_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$struct$LAYOUT();
        }
        public static VarHandle Offset$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$Offset$VH();
        }
        public static  @C("UINT64") long Offset$get(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg) {
            return (long)d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$Offset$VH().get(seg);
        }
        public static  @C("UINT64") long Offset$get(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$Offset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Offset$set(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$Offset$VH().set(seg, x);
        }
        public static void Offset$set(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$Offset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RowPitch$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$RowPitch$VH();
        }
        public static  @C("UINT") int RowPitch$get(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$RowPitch$VH().get(seg);
        }
        public static  @C("UINT") int RowPitch$get(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$RowPitch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RowPitch$set(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$RowPitch$VH().set(seg, x);
        }
        public static void RowPitch$set(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$RowPitch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthPitch$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$DepthPitch$VH();
        }
        public static  @C("UINT") int DepthPitch$get(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$DepthPitch$VH().get(seg);
        }
        public static  @C("UINT") int DepthPitch$get(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$DepthPitch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthPitch$set(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$DepthPitch$VH().set(seg, x);
        }
        public static void DepthPitch$set(@C("struct D3D12_SUBRESOURCE_INFO") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_INFO$DepthPitch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SUBRESOURCE_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SUBRESOURCE_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SUBRESOURCE_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SUBRESOURCE_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TILED_RESOURCE_COORDINATE {

        private D3D12_TILED_RESOURCE_COORDINATE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$struct$LAYOUT();
        }
        public static VarHandle X$VH() {
            return d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$X$VH();
        }
        public static  @C("UINT") int X$get(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$X$VH().get(seg);
        }
        public static  @C("UINT") int X$get(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$X$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void X$set(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$X$VH().set(seg, x);
        }
        public static void X$set(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$X$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Y$VH() {
            return d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Y$VH();
        }
        public static  @C("UINT") int Y$get(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Y$VH().get(seg);
        }
        public static  @C("UINT") int Y$get(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Y$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Y$set(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Y$VH().set(seg, x);
        }
        public static void Y$set(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Y$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Z$VH() {
            return d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Z$VH();
        }
        public static  @C("UINT") int Z$get(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Z$VH().get(seg);
        }
        public static  @C("UINT") int Z$get(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Z$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Z$set(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Z$VH().set(seg, x);
        }
        public static void Z$set(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Z$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Subresource$VH() {
            return d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Subresource$VH();
        }
        public static  @C("UINT") int Subresource$get(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Subresource$VH().get(seg);
        }
        public static  @C("UINT") int Subresource$get(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Subresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Subresource$set(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Subresource$VH().set(seg, x);
        }
        public static void Subresource$set(@C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILED_RESOURCE_COORDINATE$Subresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TILED_RESOURCE_COORDINATE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TILED_RESOURCE_COORDINATE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TILED_RESOURCE_COORDINATE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TILED_RESOURCE_COORDINATE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TILED_RESOURCE_COORDINATE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TILE_REGION_SIZE {

        private D3D12_TILE_REGION_SIZE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$struct$LAYOUT();
        }
        public static VarHandle NumTiles$VH() {
            return d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$NumTiles$VH();
        }
        public static  @C("UINT") int NumTiles$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$NumTiles$VH().get(seg);
        }
        public static  @C("UINT") int NumTiles$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$NumTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumTiles$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$NumTiles$VH().set(seg, x);
        }
        public static void NumTiles$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$NumTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle UseBox$VH() {
            return d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$UseBox$VH();
        }
        public static  @C("BOOL") int UseBox$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$UseBox$VH().get(seg);
        }
        public static  @C("BOOL") int UseBox$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$UseBox$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UseBox$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$UseBox$VH().set(seg, x);
        }
        public static void UseBox$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$UseBox$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Width$VH() {
            return d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Width$VH();
        }
        public static  @C("UINT") int Width$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Width$VH().get(seg);
        }
        public static  @C("UINT") int Width$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Width$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Width$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Width$VH().set(seg, x);
        }
        public static void Width$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Width$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Height$VH() {
            return d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Height$VH();
        }
        public static  @C("UINT16") short Height$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg) {
            return (short)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Height$VH().get(seg);
        }
        public static  @C("UINT16") short Height$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index) {
            return (short)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Height$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Height$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Height$VH().set(seg, x);
        }
        public static void Height$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Height$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Depth$VH() {
            return d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Depth$VH();
        }
        public static  @C("UINT16") short Depth$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg) {
            return (short)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Depth$VH().get(seg);
        }
        public static  @C("UINT16") short Depth$get(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index) {
            return (short)d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Depth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Depth$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Depth$VH().set(seg, x);
        }
        public static void Depth$set(@C("struct D3D12_TILE_REGION_SIZE") MemorySegment seg, long index, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_TILE_REGION_SIZE$Depth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TILE_REGION_SIZE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TILE_REGION_SIZE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TILE_REGION_SIZE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TILE_REGION_SIZE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TILE_REGION_SIZE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TILE_REGION_SIZE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_TILE_RANGE_FLAG_NONE() {
        return d3d12_h$constants$1.D3D12_TILE_RANGE_FLAG_NONE();
    }
    public static @C("int") int D3D12_TILE_RANGE_FLAG_NULL() {
        return d3d12_h$constants$1.D3D12_TILE_RANGE_FLAG_NULL();
    }
    public static @C("int") int D3D12_TILE_RANGE_FLAG_SKIP() {
        return d3d12_h$constants$1.D3D12_TILE_RANGE_FLAG_SKIP();
    }
    public static @C("int") int D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE() {
        return d3d12_h$constants$1.D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE();
    }
    public static class D3D12_SUBRESOURCE_TILING {

        private D3D12_SUBRESOURCE_TILING() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$struct$LAYOUT();
        }
        public static VarHandle WidthInTiles$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$WidthInTiles$VH();
        }
        public static  @C("UINT") int WidthInTiles$get(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$WidthInTiles$VH().get(seg);
        }
        public static  @C("UINT") int WidthInTiles$get(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$WidthInTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WidthInTiles$set(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$WidthInTiles$VH().set(seg, x);
        }
        public static void WidthInTiles$set(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$WidthInTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HeightInTiles$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$HeightInTiles$VH();
        }
        public static  @C("UINT16") short HeightInTiles$get(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg) {
            return (short)d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$HeightInTiles$VH().get(seg);
        }
        public static  @C("UINT16") short HeightInTiles$get(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, long index) {
            return (short)d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$HeightInTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HeightInTiles$set(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$HeightInTiles$VH().set(seg, x);
        }
        public static void HeightInTiles$set(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, long index, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$HeightInTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthInTiles$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$DepthInTiles$VH();
        }
        public static  @C("UINT16") short DepthInTiles$get(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg) {
            return (short)d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$DepthInTiles$VH().get(seg);
        }
        public static  @C("UINT16") short DepthInTiles$get(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, long index) {
            return (short)d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$DepthInTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthInTiles$set(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$DepthInTiles$VH().set(seg, x);
        }
        public static void DepthInTiles$set(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, long index, @C("UINT16") short x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$DepthInTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartTileIndexInOverallResource$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$VH();
        }
        public static  @C("UINT") int StartTileIndexInOverallResource$get(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$VH().get(seg);
        }
        public static  @C("UINT") int StartTileIndexInOverallResource$get(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartTileIndexInOverallResource$set(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$VH().set(seg, x);
        }
        public static void StartTileIndexInOverallResource$set(@C("struct D3D12_SUBRESOURCE_TILING") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_TILING$StartTileIndexInOverallResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SUBRESOURCE_TILING") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_TILING") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_TILING[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SUBRESOURCE_TILING[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SUBRESOURCE_TILING*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SUBRESOURCE_TILING*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TILE_SHAPE {

        private D3D12_TILE_SHAPE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_TILE_SHAPE$struct$LAYOUT();
        }
        public static VarHandle WidthInTexels$VH() {
            return d3d12_h$constants$1.D3D12_TILE_SHAPE$WidthInTexels$VH();
        }
        public static  @C("UINT") int WidthInTexels$get(@C("struct D3D12_TILE_SHAPE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILE_SHAPE$WidthInTexels$VH().get(seg);
        }
        public static  @C("UINT") int WidthInTexels$get(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILE_SHAPE$WidthInTexels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WidthInTexels$set(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_SHAPE$WidthInTexels$VH().set(seg, x);
        }
        public static void WidthInTexels$set(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_SHAPE$WidthInTexels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HeightInTexels$VH() {
            return d3d12_h$constants$1.D3D12_TILE_SHAPE$HeightInTexels$VH();
        }
        public static  @C("UINT") int HeightInTexels$get(@C("struct D3D12_TILE_SHAPE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILE_SHAPE$HeightInTexels$VH().get(seg);
        }
        public static  @C("UINT") int HeightInTexels$get(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILE_SHAPE$HeightInTexels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HeightInTexels$set(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_SHAPE$HeightInTexels$VH().set(seg, x);
        }
        public static void HeightInTexels$set(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_SHAPE$HeightInTexels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DepthInTexels$VH() {
            return d3d12_h$constants$1.D3D12_TILE_SHAPE$DepthInTexels$VH();
        }
        public static  @C("UINT") int DepthInTexels$get(@C("struct D3D12_TILE_SHAPE") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_TILE_SHAPE$DepthInTexels$VH().get(seg);
        }
        public static  @C("UINT") int DepthInTexels$get(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_TILE_SHAPE$DepthInTexels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DepthInTexels$set(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_SHAPE$DepthInTexels$VH().set(seg, x);
        }
        public static void DepthInTexels$set(@C("struct D3D12_TILE_SHAPE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_TILE_SHAPE$DepthInTexels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TILE_SHAPE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TILE_SHAPE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TILE_SHAPE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TILE_SHAPE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TILE_SHAPE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TILE_SHAPE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_PACKED_MIP_INFO {

        private D3D12_PACKED_MIP_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$struct$LAYOUT();
        }
        public static VarHandle NumStandardMips$VH() {
            return d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumStandardMips$VH();
        }
        public static  @C("UINT8") byte NumStandardMips$get(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg) {
            return (byte)d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumStandardMips$VH().get(seg);
        }
        public static  @C("UINT8") byte NumStandardMips$get(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumStandardMips$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumStandardMips$set(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumStandardMips$VH().set(seg, x);
        }
        public static void NumStandardMips$set(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumStandardMips$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumPackedMips$VH() {
            return d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumPackedMips$VH();
        }
        public static  @C("UINT8") byte NumPackedMips$get(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg) {
            return (byte)d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumPackedMips$VH().get(seg);
        }
        public static  @C("UINT8") byte NumPackedMips$get(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumPackedMips$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumPackedMips$set(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, @C("UINT8") byte x) {
            d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumPackedMips$VH().set(seg, x);
        }
        public static void NumPackedMips$set(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, long index, @C("UINT8") byte x) {
            d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumPackedMips$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumTilesForPackedMips$VH() {
            return d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$VH();
        }
        public static  @C("UINT") int NumTilesForPackedMips$get(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$VH().get(seg);
        }
        public static  @C("UINT") int NumTilesForPackedMips$get(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumTilesForPackedMips$set(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$VH().set(seg, x);
        }
        public static void NumTilesForPackedMips$set(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$NumTilesForPackedMips$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartTileIndexInOverallResource$VH() {
            return d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$VH();
        }
        public static  @C("UINT") int StartTileIndexInOverallResource$get(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$VH().get(seg);
        }
        public static  @C("UINT") int StartTileIndexInOverallResource$get(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartTileIndexInOverallResource$set(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$VH().set(seg, x);
        }
        public static void StartTileIndexInOverallResource$set(@C("struct D3D12_PACKED_MIP_INFO") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_PACKED_MIP_INFO$StartTileIndexInOverallResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_PACKED_MIP_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_PACKED_MIP_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_PACKED_MIP_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_PACKED_MIP_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_PACKED_MIP_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_PACKED_MIP_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_TILE_MAPPING_FLAG_NONE() {
        return d3d12_h$constants$1.D3D12_TILE_MAPPING_FLAG_NONE();
    }
    public static @C("int") int D3D12_TILE_MAPPING_FLAG_NO_HAZARD() {
        return d3d12_h$constants$1.D3D12_TILE_MAPPING_FLAG_NO_HAZARD();
    }
    public static @C("int") int D3D12_TILE_COPY_FLAG_NONE() {
        return d3d12_h$constants$1.D3D12_TILE_COPY_FLAG_NONE();
    }
    public static @C("int") int D3D12_TILE_COPY_FLAG_NO_HAZARD() {
        return d3d12_h$constants$1.D3D12_TILE_COPY_FLAG_NO_HAZARD();
    }
    public static @C("int") int D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE() {
        return d3d12_h$constants$1.D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE();
    }
    public static @C("int") int D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER() {
        return d3d12_h$constants$1.D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_COMMON() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_COMMON();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_INDEX_BUFFER() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_INDEX_BUFFER();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_RENDER_TARGET() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_RENDER_TARGET();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_UNORDERED_ACCESS() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_UNORDERED_ACCESS();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_DEPTH_WRITE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_DEPTH_WRITE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_DEPTH_READ() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_DEPTH_READ();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_STREAM_OUT() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_STREAM_OUT();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_COPY_DEST() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_COPY_DEST();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_COPY_SOURCE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_COPY_SOURCE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_RESOLVE_DEST() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_RESOLVE_DEST();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_RESOLVE_SOURCE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_RESOLVE_SOURCE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_GENERIC_READ() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_GENERIC_READ();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_PRESENT() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_PRESENT();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_PREDICATION() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_PREDICATION();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_VIDEO_DECODE_READ() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_VIDEO_DECODE_READ();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ();
    }
    public static @C("int") int D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE();
    }
    public static @C("int") int D3D12_RESOURCE_BARRIER_TYPE_TRANSITION() {
        return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER_TYPE_TRANSITION();
    }
    public static @C("int") int D3D12_RESOURCE_BARRIER_TYPE_ALIASING() {
        return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER_TYPE_ALIASING();
    }
    public static @C("int") int D3D12_RESOURCE_BARRIER_TYPE_UAV() {
        return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER_TYPE_UAV();
    }
    public static class D3D12_RESOURCE_TRANSITION_BARRIER {

        private D3D12_RESOURCE_TRANSITION_BARRIER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$struct$LAYOUT();
        }
        public static VarHandle pResource$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$pResource$VH();
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResource$get(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$pResource$VH().get(seg);
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResource$get(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$pResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pResource$set(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$pResource$VH().set(seg, x);
        }
        public static void pResource$set(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, long index, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$pResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Subresource$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$VH();
        }
        public static  @C("UINT") int Subresource$get(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$VH().get(seg);
        }
        public static  @C("UINT") int Subresource$get(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Subresource$set(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$VH().set(seg, x);
        }
        public static void Subresource$set(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$Subresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StateBefore$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$VH();
        }
        public static  @C("D3D12_RESOURCE_STATES") int StateBefore$get(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_STATES") int StateBefore$get(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StateBefore$set(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, @C("D3D12_RESOURCE_STATES") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$VH().set(seg, x);
        }
        public static void StateBefore$set(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, long index, @C("D3D12_RESOURCE_STATES") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateBefore$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StateAfter$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$VH();
        }
        public static  @C("D3D12_RESOURCE_STATES") int StateAfter$get(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_STATES") int StateAfter$get(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StateAfter$set(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, @C("D3D12_RESOURCE_STATES") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$VH().set(seg, x);
        }
        public static void StateAfter$set(@C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment seg, long index, @C("D3D12_RESOURCE_STATES") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_TRANSITION_BARRIER$StateAfter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_TRANSITION_BARRIER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_TRANSITION_BARRIER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RESOURCE_TRANSITION_BARRIER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RESOURCE_TRANSITION_BARRIER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RESOURCE_TRANSITION_BARRIER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RESOURCE_ALIASING_BARRIER {

        private D3D12_RESOURCE_ALIASING_BARRIER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$struct$LAYOUT();
        }
        public static VarHandle pResourceBefore$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$VH();
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResourceBefore$get(@C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$VH().get(seg);
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResourceBefore$get(@C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pResourceBefore$set(@C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment seg, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$VH().set(seg, x);
        }
        public static void pResourceBefore$set(@C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment seg, long index, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceBefore$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pResourceAfter$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$VH();
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResourceAfter$get(@C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$VH().get(seg);
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResourceAfter$get(@C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pResourceAfter$set(@C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment seg, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$VH().set(seg, x);
        }
        public static void pResourceAfter$set(@C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment seg, long index, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_RESOURCE_ALIASING_BARRIER$pResourceAfter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_ALIASING_BARRIER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_ALIASING_BARRIER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RESOURCE_ALIASING_BARRIER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RESOURCE_ALIASING_BARRIER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RESOURCE_ALIASING_BARRIER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RESOURCE_UAV_BARRIER {

        private D3D12_RESOURCE_UAV_BARRIER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RESOURCE_UAV_BARRIER$struct$LAYOUT();
        }
        public static VarHandle pResource$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_UAV_BARRIER$pResource$VH();
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResource$get(@C("struct D3D12_RESOURCE_UAV_BARRIER") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_RESOURCE_UAV_BARRIER$pResource$VH().get(seg);
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResource$get(@C("struct D3D12_RESOURCE_UAV_BARRIER") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$1.D3D12_RESOURCE_UAV_BARRIER$pResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pResource$set(@C("struct D3D12_RESOURCE_UAV_BARRIER") MemorySegment seg, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_RESOURCE_UAV_BARRIER$pResource$VH().set(seg, x);
        }
        public static void pResource$set(@C("struct D3D12_RESOURCE_UAV_BARRIER") MemorySegment seg, long index, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$1.D3D12_RESOURCE_UAV_BARRIER$pResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RESOURCE_UAV_BARRIER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_UAV_BARRIER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_UAV_BARRIER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RESOURCE_UAV_BARRIER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RESOURCE_UAV_BARRIER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RESOURCE_UAV_BARRIER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RESOURCE_BARRIER_FLAG_NONE() {
        return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER_FLAG_NONE();
    }
    public static @C("int") int D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY() {
        return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY();
    }
    public static @C("int") int D3D12_RESOURCE_BARRIER_FLAG_END_ONLY() {
        return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER_FLAG_END_ONLY();
    }
    public static class D3D12_RESOURCE_BARRIER {

        private D3D12_RESOURCE_BARRIER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Type$VH();
        }
        public static  @C("D3D12_RESOURCE_BARRIER_TYPE") int Type$get(@C("struct D3D12_RESOURCE_BARRIER") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Type$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_BARRIER_TYPE") int Type$get(@C("struct D3D12_RESOURCE_BARRIER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_RESOURCE_BARRIER") MemorySegment seg, @C("D3D12_RESOURCE_BARRIER_TYPE") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_RESOURCE_BARRIER") MemorySegment seg, long index, @C("D3D12_RESOURCE_BARRIER_TYPE") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Flags$VH();
        }
        public static  @C("D3D12_RESOURCE_BARRIER_FLAGS") int Flags$get(@C("struct D3D12_RESOURCE_BARRIER") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Flags$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_BARRIER_FLAGS") int Flags$get(@C("struct D3D12_RESOURCE_BARRIER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_RESOURCE_BARRIER") MemorySegment seg, @C("D3D12_RESOURCE_BARRIER_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_RESOURCE_BARRIER") MemorySegment seg, long index, @C("D3D12_RESOURCE_BARRIER_FLAGS") int x) {
            d3d12_h$constants$1.D3D12_RESOURCE_BARRIER$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Transition$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 24));
        }
        public static MemorySegment Aliasing$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 16));
        }
        public static MemorySegment UAV$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(48, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RESOURCE_BARRIER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_BARRIER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RESOURCE_BARRIER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RESOURCE_BARRIER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RESOURCE_BARRIER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RESOURCE_BARRIER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_SUBRESOURCE_FOOTPRINT {

        private D3D12_SUBRESOURCE_FOOTPRINT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Width$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Width$VH();
        }
        public static  @C("UINT") int Width$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Width$VH().get(seg);
        }
        public static  @C("UINT") int Width$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Width$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Width$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Width$VH().set(seg, x);
        }
        public static void Width$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Width$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Height$VH() {
            return d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Height$VH();
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Height$VH().get(seg);
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Height$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Height$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Height$VH().set(seg, x);
        }
        public static void Height$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$1.D3D12_SUBRESOURCE_FOOTPRINT$Height$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Depth$VH() {
            return d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$Depth$VH();
        }
        public static  @C("UINT") int Depth$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$Depth$VH().get(seg);
        }
        public static  @C("UINT") int Depth$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$Depth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Depth$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$Depth$VH().set(seg, x);
        }
        public static void Depth$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$Depth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RowPitch$VH() {
            return d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$RowPitch$VH();
        }
        public static  @C("UINT") int RowPitch$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$RowPitch$VH().get(seg);
        }
        public static  @C("UINT") int RowPitch$get(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$RowPitch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RowPitch$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$RowPitch$VH().set(seg, x);
        }
        public static void RowPitch$set(@C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_SUBRESOURCE_FOOTPRINT$RowPitch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_FOOTPRINT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_FOOTPRINT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SUBRESOURCE_FOOTPRINT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SUBRESOURCE_FOOTPRINT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SUBRESOURCE_FOOTPRINT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_PLACED_SUBRESOURCE_FOOTPRINT {

        private D3D12_PLACED_SUBRESOURCE_FOOTPRINT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_PLACED_SUBRESOURCE_FOOTPRINT$struct$LAYOUT();
        }
        public static VarHandle Offset$VH() {
            return d3d12_h$constants$2.D3D12_PLACED_SUBRESOURCE_FOOTPRINT$Offset$VH();
        }
        public static  @C("UINT64") long Offset$get(@C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT") MemorySegment seg) {
            return (long)d3d12_h$constants$2.D3D12_PLACED_SUBRESOURCE_FOOTPRINT$Offset$VH().get(seg);
        }
        public static  @C("UINT64") long Offset$get(@C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$2.D3D12_PLACED_SUBRESOURCE_FOOTPRINT$Offset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Offset$set(@C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_PLACED_SUBRESOURCE_FOOTPRINT$Offset$VH().set(seg, x);
        }
        public static void Offset$set(@C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_PLACED_SUBRESOURCE_FOOTPRINT$Offset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Footprint$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 20));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX() {
        return d3d12_h$constants$2.D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX();
    }
    public static @C("int") int D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT() {
        return d3d12_h$constants$2.D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT();
    }
    public static class D3D12_TEXTURE_COPY_LOCATION {

        private D3D12_TEXTURE_COPY_LOCATION() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$struct$LAYOUT();
        }
        public static VarHandle pResource$VH() {
            return d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$pResource$VH();
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResource$get(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$pResource$VH().get(seg);
        }
        public static  @C("ID3D12Resource*") MemoryAddress pResource$get(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$pResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pResource$set(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$pResource$VH().set(seg, x);
        }
        public static void pResource$set(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, long index, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$pResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$Type$VH();
        }
        public static  @C("D3D12_TEXTURE_COPY_TYPE") int Type$get(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$Type$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_COPY_TYPE") int Type$get(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, @C("D3D12_TEXTURE_COPY_TYPE") int x) {
            d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, long index, @C("D3D12_TEXTURE_COPY_TYPE") int x) {
            d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment PlacedFootprint$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 32));
        }
        public static VarHandle SubresourceIndex$VH() {
            return d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$SubresourceIndex$VH();
        }
        public static  @C("UINT") int SubresourceIndex$get(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$SubresourceIndex$VH().get(seg);
        }
        public static  @C("UINT") int SubresourceIndex$get(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$SubresourceIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SubresourceIndex$set(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$SubresourceIndex$VH().set(seg, x);
        }
        public static void SubresourceIndex$set(@C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXTURE_COPY_LOCATION$SubresourceIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEXTURE_COPY_LOCATION") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEXTURE_COPY_LOCATION[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEXTURE_COPY_LOCATION[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEXTURE_COPY_LOCATION*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEXTURE_COPY_LOCATION*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RESOLVE_MODE_DECOMPRESS() {
        return d3d12_h$constants$2.D3D12_RESOLVE_MODE_DECOMPRESS();
    }
    public static @C("int") int D3D12_RESOLVE_MODE_MIN() {
        return d3d12_h$constants$2.D3D12_RESOLVE_MODE_MIN();
    }
    public static @C("int") int D3D12_RESOLVE_MODE_MAX() {
        return d3d12_h$constants$2.D3D12_RESOLVE_MODE_MAX();
    }
    public static @C("int") int D3D12_RESOLVE_MODE_AVERAGE() {
        return d3d12_h$constants$2.D3D12_RESOLVE_MODE_AVERAGE();
    }
    public static @C("int") int D3D12_RESOLVE_MODE_ENCODE_SAMPLER_FEEDBACK() {
        return d3d12_h$constants$2.D3D12_RESOLVE_MODE_ENCODE_SAMPLER_FEEDBACK();
    }
    public static @C("int") int D3D12_RESOLVE_MODE_DECODE_SAMPLER_FEEDBACK() {
        return d3d12_h$constants$2.D3D12_RESOLVE_MODE_DECODE_SAMPLER_FEEDBACK();
    }
    public static class D3D12_SAMPLE_POSITION {

        private D3D12_SAMPLE_POSITION() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_SAMPLE_POSITION$struct$LAYOUT();
        }
        public static VarHandle X$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLE_POSITION$X$VH();
        }
        public static  @C("INT8") byte X$get(@C("struct D3D12_SAMPLE_POSITION") MemorySegment seg) {
            return (byte)d3d12_h$constants$2.D3D12_SAMPLE_POSITION$X$VH().get(seg);
        }
        public static  @C("INT8") byte X$get(@C("struct D3D12_SAMPLE_POSITION") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$2.D3D12_SAMPLE_POSITION$X$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void X$set(@C("struct D3D12_SAMPLE_POSITION") MemorySegment seg, @C("INT8") byte x) {
            d3d12_h$constants$2.D3D12_SAMPLE_POSITION$X$VH().set(seg, x);
        }
        public static void X$set(@C("struct D3D12_SAMPLE_POSITION") MemorySegment seg, long index, @C("INT8") byte x) {
            d3d12_h$constants$2.D3D12_SAMPLE_POSITION$X$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Y$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLE_POSITION$Y$VH();
        }
        public static  @C("INT8") byte Y$get(@C("struct D3D12_SAMPLE_POSITION") MemorySegment seg) {
            return (byte)d3d12_h$constants$2.D3D12_SAMPLE_POSITION$Y$VH().get(seg);
        }
        public static  @C("INT8") byte Y$get(@C("struct D3D12_SAMPLE_POSITION") MemorySegment seg, long index) {
            return (byte)d3d12_h$constants$2.D3D12_SAMPLE_POSITION$Y$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Y$set(@C("struct D3D12_SAMPLE_POSITION") MemorySegment seg, @C("INT8") byte x) {
            d3d12_h$constants$2.D3D12_SAMPLE_POSITION$Y$VH().set(seg, x);
        }
        public static void Y$set(@C("struct D3D12_SAMPLE_POSITION") MemorySegment seg, long index, @C("INT8") byte x) {
            d3d12_h$constants$2.D3D12_SAMPLE_POSITION$Y$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SAMPLE_POSITION") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SAMPLE_POSITION") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SAMPLE_POSITION[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SAMPLE_POSITION[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SAMPLE_POSITION*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SAMPLE_POSITION*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_VIEW_INSTANCE_LOCATION {

        private D3D12_VIEW_INSTANCE_LOCATION() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$struct$LAYOUT();
        }
        public static VarHandle ViewportArrayIndex$VH() {
            return d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$ViewportArrayIndex$VH();
        }
        public static  @C("UINT") int ViewportArrayIndex$get(@C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$ViewportArrayIndex$VH().get(seg);
        }
        public static  @C("UINT") int ViewportArrayIndex$get(@C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$ViewportArrayIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ViewportArrayIndex$set(@C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$ViewportArrayIndex$VH().set(seg, x);
        }
        public static void ViewportArrayIndex$set(@C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$ViewportArrayIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RenderTargetArrayIndex$VH() {
            return d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$RenderTargetArrayIndex$VH();
        }
        public static  @C("UINT") int RenderTargetArrayIndex$get(@C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$RenderTargetArrayIndex$VH().get(seg);
        }
        public static  @C("UINT") int RenderTargetArrayIndex$get(@C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$RenderTargetArrayIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RenderTargetArrayIndex$set(@C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$RenderTargetArrayIndex$VH().set(seg, x);
        }
        public static void RenderTargetArrayIndex$set(@C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCE_LOCATION$RenderTargetArrayIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_VIEW_INSTANCE_LOCATION") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_VIEW_INSTANCE_LOCATION[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_VIEW_INSTANCE_LOCATION[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_VIEW_INSTANCE_LOCATION*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_VIEW_INSTANCE_LOCATION*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_VIEW_INSTANCING_FLAG_NONE() {
        return d3d12_h$constants$2.D3D12_VIEW_INSTANCING_FLAG_NONE();
    }
    public static @C("int") int D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING() {
        return d3d12_h$constants$2.D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING();
    }
    public static class D3D12_VIEW_INSTANCING_DESC {

        private D3D12_VIEW_INSTANCING_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$struct$LAYOUT();
        }
        public static VarHandle ViewInstanceCount$VH() {
            return d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$ViewInstanceCount$VH();
        }
        public static  @C("UINT") int ViewInstanceCount$get(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$ViewInstanceCount$VH().get(seg);
        }
        public static  @C("UINT") int ViewInstanceCount$get(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$ViewInstanceCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ViewInstanceCount$set(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$ViewInstanceCount$VH().set(seg, x);
        }
        public static void ViewInstanceCount$set(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$ViewInstanceCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pViewInstanceLocations$VH() {
            return d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$pViewInstanceLocations$VH();
        }
        public static  @C("const D3D12_VIEW_INSTANCE_LOCATION*") MemoryAddress pViewInstanceLocations$get(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$pViewInstanceLocations$VH().get(seg);
        }
        public static  @C("const D3D12_VIEW_INSTANCE_LOCATION*") MemoryAddress pViewInstanceLocations$get(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$pViewInstanceLocations$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pViewInstanceLocations$set(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, @C("const D3D12_VIEW_INSTANCE_LOCATION*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$pViewInstanceLocations$VH().set(seg, x);
        }
        public static void pViewInstanceLocations$set(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, long index, @C("const D3D12_VIEW_INSTANCE_LOCATION*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$pViewInstanceLocations$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$Flags$VH();
        }
        public static  @C("D3D12_VIEW_INSTANCING_FLAGS") int Flags$get(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_VIEW_INSTANCING_FLAGS") int Flags$get(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, @C("D3D12_VIEW_INSTANCING_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment seg, long index, @C("D3D12_VIEW_INSTANCING_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_VIEW_INSTANCING_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_VIEW_INSTANCING_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_VIEW_INSTANCING_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_VIEW_INSTANCING_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_VIEW_INSTANCING_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_VIEW_INSTANCING_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0() {
        return d3d12_h$constants$2.D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0();
    }
    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1() {
        return d3d12_h$constants$2.D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1();
    }
    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2() {
        return d3d12_h$constants$2.D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2();
    }
    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3() {
        return d3d12_h$constants$2.D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3();
    }
    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0() {
        return d3d12_h$constants$2.D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0();
    }
    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1() {
        return d3d12_h$constants$2.D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1();
    }
    public static @C("int") int D3D12_BUFFER_SRV_FLAG_NONE() {
        return d3d12_h$constants$2.D3D12_BUFFER_SRV_FLAG_NONE();
    }
    public static @C("int") int D3D12_BUFFER_SRV_FLAG_RAW() {
        return d3d12_h$constants$2.D3D12_BUFFER_SRV_FLAG_RAW();
    }
    public static class D3D12_BUFFER_SRV {

        private D3D12_BUFFER_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_BUFFER_SRV$struct$LAYOUT();
        }
        public static VarHandle FirstElement$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_SRV$FirstElement$VH();
        }
        public static  @C("UINT64") long FirstElement$get(@C("struct D3D12_BUFFER_SRV") MemorySegment seg) {
            return (long)d3d12_h$constants$2.D3D12_BUFFER_SRV$FirstElement$VH().get(seg);
        }
        public static  @C("UINT64") long FirstElement$get(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$2.D3D12_BUFFER_SRV$FirstElement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstElement$set(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_BUFFER_SRV$FirstElement$VH().set(seg, x);
        }
        public static void FirstElement$set(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_BUFFER_SRV$FirstElement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumElements$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_SRV$NumElements$VH();
        }
        public static  @C("UINT") int NumElements$get(@C("struct D3D12_BUFFER_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_SRV$NumElements$VH().get(seg);
        }
        public static  @C("UINT") int NumElements$get(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_SRV$NumElements$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumElements$set(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_SRV$NumElements$VH().set(seg, x);
        }
        public static void NumElements$set(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_SRV$NumElements$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StructureByteStride$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_SRV$StructureByteStride$VH();
        }
        public static  @C("UINT") int StructureByteStride$get(@C("struct D3D12_BUFFER_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_SRV$StructureByteStride$VH().get(seg);
        }
        public static  @C("UINT") int StructureByteStride$get(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_SRV$StructureByteStride$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StructureByteStride$set(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_SRV$StructureByteStride$VH().set(seg, x);
        }
        public static void StructureByteStride$set(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_SRV$StructureByteStride$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_SRV$Flags$VH();
        }
        public static  @C("D3D12_BUFFER_SRV_FLAGS") int Flags$get(@C("struct D3D12_BUFFER_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_SRV$Flags$VH().get(seg);
        }
        public static  @C("D3D12_BUFFER_SRV_FLAGS") int Flags$get(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_SRV$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, @C("D3D12_BUFFER_SRV_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_SRV$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_BUFFER_SRV") MemorySegment seg, long index, @C("D3D12_BUFFER_SRV_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_SRV$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_BUFFER_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_BUFFER_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_BUFFER_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_BUFFER_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_BUFFER_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_BUFFER_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX1D_SRV {

        private D3D12_TEX1D_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX1D_SRV$struct$LAYOUT();
        }
        public static VarHandle MostDetailedMip$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_SRV$MostDetailedMip$VH();
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX1D_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_SRV$MostDetailedMip$VH().get(seg);
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_SRV$MostDetailedMip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_SRV$MostDetailedMip$VH().set(seg, x);
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_SRV$MostDetailedMip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_SRV$MipLevels$VH();
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX1D_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_SRV$MipLevels$VH().get(seg);
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_SRV$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_SRV$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_SRV$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceMinLODClamp$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_SRV$ResourceMinLODClamp$VH();
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX1D_SRV") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_TEX1D_SRV$ResourceMinLODClamp$VH().get(seg);
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_TEX1D_SRV$ResourceMinLODClamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX1D_SRV$ResourceMinLODClamp$VH().set(seg, x);
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX1D_SRV") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX1D_SRV$ResourceMinLODClamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX1D_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX1D_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX1D_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX1D_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX1D_ARRAY_SRV {

        private D3D12_TEX1D_ARRAY_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$struct$LAYOUT();
        }
        public static VarHandle MostDetailedMip$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MostDetailedMip$VH();
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MostDetailedMip$VH().get(seg);
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MostDetailedMip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MostDetailedMip$VH().set(seg, x);
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MostDetailedMip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MipLevels$VH();
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MipLevels$VH().get(seg);
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceMinLODClamp$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ResourceMinLODClamp$VH();
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ResourceMinLODClamp$VH().get(seg);
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ResourceMinLODClamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ResourceMinLODClamp$VH().set(seg, x);
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_SRV$ResourceMinLODClamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_ARRAY_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_ARRAY_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX1D_ARRAY_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX1D_ARRAY_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX1D_ARRAY_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2D_SRV {

        private D3D12_TEX2D_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2D_SRV$struct$LAYOUT();
        }
        public static VarHandle MostDetailedMip$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_SRV$MostDetailedMip$VH();
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX2D_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_SRV$MostDetailedMip$VH().get(seg);
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_SRV$MostDetailedMip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_SRV$MostDetailedMip$VH().set(seg, x);
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_SRV$MostDetailedMip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_SRV$MipLevels$VH();
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX2D_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_SRV$MipLevels$VH().get(seg);
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_SRV$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_SRV$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_SRV$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PlaneSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_SRV$PlaneSlice$VH();
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_SRV$PlaneSlice$VH().get(seg);
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_SRV$PlaneSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_SRV$PlaneSlice$VH().set(seg, x);
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_SRV$PlaneSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceMinLODClamp$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_SRV$ResourceMinLODClamp$VH();
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX2D_SRV") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_TEX2D_SRV$ResourceMinLODClamp$VH().get(seg);
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_TEX2D_SRV$ResourceMinLODClamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX2D_SRV$ResourceMinLODClamp$VH().set(seg, x);
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX2D_SRV") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX2D_SRV$ResourceMinLODClamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2D_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2D_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2D_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2D_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2D_ARRAY_SRV {

        private D3D12_TEX2D_ARRAY_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$struct$LAYOUT();
        }
        public static VarHandle MostDetailedMip$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MostDetailedMip$VH();
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MostDetailedMip$VH().get(seg);
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MostDetailedMip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MostDetailedMip$VH().set(seg, x);
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MostDetailedMip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MipLevels$VH();
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MipLevels$VH().get(seg);
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PlaneSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$PlaneSlice$VH();
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$PlaneSlice$VH().get(seg);
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$PlaneSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$PlaneSlice$VH().set(seg, x);
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$PlaneSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceMinLODClamp$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ResourceMinLODClamp$VH();
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ResourceMinLODClamp$VH().get(seg);
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ResourceMinLODClamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ResourceMinLODClamp$VH().set(seg, x);
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_SRV$ResourceMinLODClamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_ARRAY_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_ARRAY_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2D_ARRAY_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2D_ARRAY_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2D_ARRAY_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX3D_SRV {

        private D3D12_TEX3D_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX3D_SRV$struct$LAYOUT();
        }
        public static VarHandle MostDetailedMip$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_SRV$MostDetailedMip$VH();
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX3D_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_SRV$MostDetailedMip$VH().get(seg);
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_SRV$MostDetailedMip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_SRV$MostDetailedMip$VH().set(seg, x);
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_SRV$MostDetailedMip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_SRV$MipLevels$VH();
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX3D_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_SRV$MipLevels$VH().get(seg);
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_SRV$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_SRV$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_SRV$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceMinLODClamp$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_SRV$ResourceMinLODClamp$VH();
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX3D_SRV") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_TEX3D_SRV$ResourceMinLODClamp$VH().get(seg);
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_TEX3D_SRV$ResourceMinLODClamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX3D_SRV$ResourceMinLODClamp$VH().set(seg, x);
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEX3D_SRV") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEX3D_SRV$ResourceMinLODClamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX3D_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX3D_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX3D_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX3D_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX3D_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX3D_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEXCUBE_SRV {

        private D3D12_TEXCUBE_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_SRV$struct$LAYOUT();
        }
        public static VarHandle MostDetailedMip$VH() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MostDetailedMip$VH();
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MostDetailedMip$VH().get(seg);
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MostDetailedMip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MostDetailedMip$VH().set(seg, x);
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MostDetailedMip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MipLevels$VH();
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MipLevels$VH().get(seg);
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_SRV$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceMinLODClamp$VH() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_SRV$ResourceMinLODClamp$VH();
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_TEXCUBE_SRV$ResourceMinLODClamp$VH().get(seg);
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_TEXCUBE_SRV$ResourceMinLODClamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_SRV$ResourceMinLODClamp$VH().set(seg, x);
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEXCUBE_SRV") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_SRV$ResourceMinLODClamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEXCUBE_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEXCUBE_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEXCUBE_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEXCUBE_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEXCUBE_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEXCUBE_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEXCUBE_ARRAY_SRV {

        private D3D12_TEXCUBE_ARRAY_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$struct$LAYOUT();
        }
        public static VarHandle MostDetailedMip$VH() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MostDetailedMip$VH();
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MostDetailedMip$VH().get(seg);
        }
        public static  @C("UINT") int MostDetailedMip$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MostDetailedMip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MostDetailedMip$VH().set(seg, x);
        }
        public static void MostDetailedMip$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MostDetailedMip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLevels$VH() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MipLevels$VH();
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MipLevels$VH().get(seg);
        }
        public static  @C("UINT") int MipLevels$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MipLevels$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLevels$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MipLevels$VH().set(seg, x);
        }
        public static void MipLevels$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$MipLevels$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle First2DArrayFace$VH() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$First2DArrayFace$VH();
        }
        public static  @C("UINT") int First2DArrayFace$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$First2DArrayFace$VH().get(seg);
        }
        public static  @C("UINT") int First2DArrayFace$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$First2DArrayFace$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void First2DArrayFace$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$First2DArrayFace$VH().set(seg, x);
        }
        public static void First2DArrayFace$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$First2DArrayFace$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumCubes$VH() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$NumCubes$VH();
        }
        public static  @C("UINT") int NumCubes$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$NumCubes$VH().get(seg);
        }
        public static  @C("UINT") int NumCubes$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$NumCubes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumCubes$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$NumCubes$VH().set(seg, x);
        }
        public static void NumCubes$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$NumCubes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceMinLODClamp$VH() {
            return d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$ResourceMinLODClamp$VH();
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$ResourceMinLODClamp$VH().get(seg);
        }
        public static  @C("FLOAT") float ResourceMinLODClamp$get(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$ResourceMinLODClamp$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$ResourceMinLODClamp$VH().set(seg, x);
        }
        public static void ResourceMinLODClamp$set(@C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_TEXCUBE_ARRAY_SRV$ResourceMinLODClamp$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEXCUBE_ARRAY_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEXCUBE_ARRAY_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEXCUBE_ARRAY_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEXCUBE_ARRAY_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEXCUBE_ARRAY_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2DMS_SRV {

        private D3D12_TEX2DMS_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_SRV$struct$LAYOUT();
        }
        public static VarHandle UnusedField_NothingToDefine$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_SRV$UnusedField_NothingToDefine$VH();
        }
        public static  @C("UINT") int UnusedField_NothingToDefine$get(@C("struct D3D12_TEX2DMS_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_SRV$UnusedField_NothingToDefine$VH().get(seg);
        }
        public static  @C("UINT") int UnusedField_NothingToDefine$get(@C("struct D3D12_TEX2DMS_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_SRV$UnusedField_NothingToDefine$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UnusedField_NothingToDefine$set(@C("struct D3D12_TEX2DMS_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_SRV$UnusedField_NothingToDefine$VH().set(seg, x);
        }
        public static void UnusedField_NothingToDefine$set(@C("struct D3D12_TEX2DMS_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_SRV$UnusedField_NothingToDefine$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2DMS_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2DMS_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2DMS_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2DMS_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2DMS_ARRAY_SRV {

        private D3D12_TEX2DMS_ARRAY_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$struct$LAYOUT();
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_SRV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2DMS_ARRAY_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2DMS_ARRAY_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2DMS_ARRAY_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV {

        private D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV$struct$LAYOUT();
        }
        public static VarHandle Location$VH() {
            return d3d12_h$constants$2.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV$Location$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long Location$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV") MemorySegment seg) {
            return (long)d3d12_h$constants$2.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV$Location$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long Location$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$2.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV$Location$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Location$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$2.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV$Location$VH().set(seg, x);
        }
        public static void Location$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$2.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV$Location$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_SRV_DIMENSION_UNKNOWN() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_UNKNOWN();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_BUFFER() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_BUFFER();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURE1D() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURE1D();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURE1DARRAY() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURE1DARRAY();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURE2D() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURE2D();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURE2DARRAY() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURE2DARRAY();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURE2DMS() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURE2DMS();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURE3D() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURE3D();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURECUBE() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURECUBE();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_TEXTURECUBEARRAY() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_TEXTURECUBEARRAY();
    }
    public static @C("int") int D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE() {
        return d3d12_h$constants$2.D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE();
    }
    public static class D3D12_SHADER_RESOURCE_VIEW_DESC {

        private D3D12_SHADER_RESOURCE_VIEW_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ViewDimension$VH() {
            return d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$ViewDimension$VH();
        }
        public static  @C("D3D12_SRV_DIMENSION") int ViewDimension$get(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$ViewDimension$VH().get(seg);
        }
        public static  @C("D3D12_SRV_DIMENSION") int ViewDimension$get(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$ViewDimension$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ViewDimension$set(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, @C("D3D12_SRV_DIMENSION") int x) {
            d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$ViewDimension$VH().set(seg, x);
        }
        public static void ViewDimension$set(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, long index, @C("D3D12_SRV_DIMENSION") int x) {
            d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$ViewDimension$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Shader4ComponentMapping$VH() {
            return d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Shader4ComponentMapping$VH();
        }
        public static  @C("UINT") int Shader4ComponentMapping$get(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Shader4ComponentMapping$VH().get(seg);
        }
        public static  @C("UINT") int Shader4ComponentMapping$get(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Shader4ComponentMapping$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Shader4ComponentMapping$set(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Shader4ComponentMapping$VH().set(seg, x);
        }
        public static void Shader4ComponentMapping$set(@C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_SHADER_RESOURCE_VIEW_DESC$Shader4ComponentMapping$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Buffer$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 24));
        }
        public static MemorySegment Texture1D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 12));
        }
        public static MemorySegment Texture1DArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(52, 20));
        }
        public static MemorySegment Texture2D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(72, 16));
        }
        public static MemorySegment Texture2DArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(88, 24));
        }
        public static MemorySegment Texture2DMS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(112, 4));
        }
        public static MemorySegment Texture2DMSArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(116, 8));
        }
        public static MemorySegment Texture3D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(124, 12));
        }
        public static MemorySegment TextureCube$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(136, 12));
        }
        public static MemorySegment TextureCubeArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(148, 20));
        }
        public static MemorySegment RaytracingAccelerationStructure$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(168, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SHADER_RESOURCE_VIEW_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SHADER_RESOURCE_VIEW_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SHADER_RESOURCE_VIEW_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SHADER_RESOURCE_VIEW_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SHADER_RESOURCE_VIEW_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_CONSTANT_BUFFER_VIEW_DESC {

        private D3D12_CONSTANT_BUFFER_VIEW_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$struct$LAYOUT();
        }
        public static VarHandle BufferLocation$VH() {
            return d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$BufferLocation$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferLocation$get(@C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$BufferLocation$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferLocation$get(@C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$BufferLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BufferLocation$set(@C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$BufferLocation$VH().set(seg, x);
        }
        public static void BufferLocation$set(@C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$BufferLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$SizeInBytes$VH();
        }
        public static  @C("UINT") int SizeInBytes$get(@C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT") int SizeInBytes$get(@C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_CONSTANT_BUFFER_VIEW_DESC$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_CONSTANT_BUFFER_VIEW_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_FILTER_MIN_MAG_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MIN_MAG_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MIN_MAG_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MIN_MAG_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_ANISOTROPIC() {
        return d3d12_h$constants$2.D3D12_FILTER_ANISOTROPIC();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_COMPARISON_ANISOTROPIC() {
        return d3d12_h$constants$2.D3D12_FILTER_COMPARISON_ANISOTROPIC();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MINIMUM_ANISOTROPIC() {
        return d3d12_h$constants$2.D3D12_FILTER_MINIMUM_ANISOTROPIC();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_MAXIMUM_ANISOTROPIC() {
        return d3d12_h$constants$2.D3D12_FILTER_MAXIMUM_ANISOTROPIC();
    }
    public static @C("int") int D3D12_FILTER_TYPE_POINT() {
        return d3d12_h$constants$2.D3D12_FILTER_TYPE_POINT();
    }
    public static @C("int") int D3D12_FILTER_TYPE_LINEAR() {
        return d3d12_h$constants$2.D3D12_FILTER_TYPE_LINEAR();
    }
    public static @C("int") int D3D12_FILTER_REDUCTION_TYPE_STANDARD() {
        return d3d12_h$constants$2.D3D12_FILTER_REDUCTION_TYPE_STANDARD();
    }
    public static @C("int") int D3D12_FILTER_REDUCTION_TYPE_COMPARISON() {
        return d3d12_h$constants$2.D3D12_FILTER_REDUCTION_TYPE_COMPARISON();
    }
    public static @C("int") int D3D12_FILTER_REDUCTION_TYPE_MINIMUM() {
        return d3d12_h$constants$2.D3D12_FILTER_REDUCTION_TYPE_MINIMUM();
    }
    public static @C("int") int D3D12_FILTER_REDUCTION_TYPE_MAXIMUM() {
        return d3d12_h$constants$2.D3D12_FILTER_REDUCTION_TYPE_MAXIMUM();
    }
    public static @C("int") int D3D12_TEXTURE_ADDRESS_MODE_WRAP() {
        return d3d12_h$constants$2.D3D12_TEXTURE_ADDRESS_MODE_WRAP();
    }
    public static @C("int") int D3D12_TEXTURE_ADDRESS_MODE_MIRROR() {
        return d3d12_h$constants$2.D3D12_TEXTURE_ADDRESS_MODE_MIRROR();
    }
    public static @C("int") int D3D12_TEXTURE_ADDRESS_MODE_CLAMP() {
        return d3d12_h$constants$2.D3D12_TEXTURE_ADDRESS_MODE_CLAMP();
    }
    public static @C("int") int D3D12_TEXTURE_ADDRESS_MODE_BORDER() {
        return d3d12_h$constants$2.D3D12_TEXTURE_ADDRESS_MODE_BORDER();
    }
    public static @C("int") int D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE() {
        return d3d12_h$constants$2.D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE();
    }
    public static class D3D12_SAMPLER_DESC {

        private D3D12_SAMPLER_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$struct$LAYOUT();
        }
        public static VarHandle Filter$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$Filter$VH();
        }
        public static  @C("D3D12_FILTER") int Filter$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$Filter$VH().get(seg);
        }
        public static  @C("D3D12_FILTER") int Filter$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$Filter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Filter$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("D3D12_FILTER") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$Filter$VH().set(seg, x);
        }
        public static void Filter$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_FILTER") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$Filter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddressU$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressU$VH();
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressU$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressU$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressU$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressU$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddressU$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressU$VH().set(seg, x);
        }
        public static void AddressU$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressU$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddressV$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressV$VH();
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressV$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressV$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressV$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressV$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddressV$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressV$VH().set(seg, x);
        }
        public static void AddressV$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressV$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddressW$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressW$VH();
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressW$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressW$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressW$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressW$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddressW$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressW$VH().set(seg, x);
        }
        public static void AddressW$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$AddressW$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLODBias$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$MipLODBias$VH();
        }
        public static  @C("FLOAT") float MipLODBias$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_SAMPLER_DESC$MipLODBias$VH().get(seg);
        }
        public static  @C("FLOAT") float MipLODBias$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_SAMPLER_DESC$MipLODBias$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLODBias$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$MipLODBias$VH().set(seg, x);
        }
        public static void MipLODBias$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$MipLODBias$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxAnisotropy$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxAnisotropy$VH();
        }
        public static  @C("UINT") int MaxAnisotropy$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxAnisotropy$VH().get(seg);
        }
        public static  @C("UINT") int MaxAnisotropy$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxAnisotropy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxAnisotropy$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxAnisotropy$VH().set(seg, x);
        }
        public static void MaxAnisotropy$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxAnisotropy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ComparisonFunc$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$ComparisonFunc$VH();
        }
        public static  @C("D3D12_COMPARISON_FUNC") int ComparisonFunc$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$ComparisonFunc$VH().get(seg);
        }
        public static  @C("D3D12_COMPARISON_FUNC") int ComparisonFunc$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_SAMPLER_DESC$ComparisonFunc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ComparisonFunc$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$ComparisonFunc$VH().set(seg, x);
        }
        public static void ComparisonFunc$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$ComparisonFunc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment BorderColor$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(28, 16));
        }
        public static VarHandle MinLOD$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$MinLOD$VH();
        }
        public static  @C("FLOAT") float MinLOD$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_SAMPLER_DESC$MinLOD$VH().get(seg);
        }
        public static  @C("FLOAT") float MinLOD$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_SAMPLER_DESC$MinLOD$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MinLOD$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$MinLOD$VH().set(seg, x);
        }
        public static void MinLOD$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$MinLOD$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxLOD$VH() {
            return d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxLOD$VH();
        }
        public static  @C("FLOAT") float MaxLOD$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxLOD$VH().get(seg);
        }
        public static  @C("FLOAT") float MaxLOD$get(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxLOD$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxLOD$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxLOD$VH().set(seg, x);
        }
        public static void MaxLOD$set(@C("struct D3D12_SAMPLER_DESC") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_SAMPLER_DESC$MaxLOD$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SAMPLER_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SAMPLER_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SAMPLER_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SAMPLER_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SAMPLER_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SAMPLER_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_BUFFER_UAV_FLAG_NONE() {
        return d3d12_h$constants$2.D3D12_BUFFER_UAV_FLAG_NONE();
    }
    public static @C("int") int D3D12_BUFFER_UAV_FLAG_RAW() {
        return d3d12_h$constants$2.D3D12_BUFFER_UAV_FLAG_RAW();
    }
    public static class D3D12_BUFFER_UAV {

        private D3D12_BUFFER_UAV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_BUFFER_UAV$struct$LAYOUT();
        }
        public static VarHandle FirstElement$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_UAV$FirstElement$VH();
        }
        public static  @C("UINT64") long FirstElement$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg) {
            return (long)d3d12_h$constants$2.D3D12_BUFFER_UAV$FirstElement$VH().get(seg);
        }
        public static  @C("UINT64") long FirstElement$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$2.D3D12_BUFFER_UAV$FirstElement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstElement$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$FirstElement$VH().set(seg, x);
        }
        public static void FirstElement$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$FirstElement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumElements$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_UAV$NumElements$VH();
        }
        public static  @C("UINT") int NumElements$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_UAV$NumElements$VH().get(seg);
        }
        public static  @C("UINT") int NumElements$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_UAV$NumElements$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumElements$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$NumElements$VH().set(seg, x);
        }
        public static void NumElements$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$NumElements$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StructureByteStride$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_UAV$StructureByteStride$VH();
        }
        public static  @C("UINT") int StructureByteStride$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_UAV$StructureByteStride$VH().get(seg);
        }
        public static  @C("UINT") int StructureByteStride$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_UAV$StructureByteStride$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StructureByteStride$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$StructureByteStride$VH().set(seg, x);
        }
        public static void StructureByteStride$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$StructureByteStride$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CounterOffsetInBytes$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_UAV$CounterOffsetInBytes$VH();
        }
        public static  @C("UINT64") long CounterOffsetInBytes$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg) {
            return (long)d3d12_h$constants$2.D3D12_BUFFER_UAV$CounterOffsetInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long CounterOffsetInBytes$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$2.D3D12_BUFFER_UAV$CounterOffsetInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CounterOffsetInBytes$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$CounterOffsetInBytes$VH().set(seg, x);
        }
        public static void CounterOffsetInBytes$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$CounterOffsetInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_UAV$Flags$VH();
        }
        public static  @C("D3D12_BUFFER_UAV_FLAGS") int Flags$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_UAV$Flags$VH().get(seg);
        }
        public static  @C("D3D12_BUFFER_UAV_FLAGS") int Flags$get(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_UAV$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, @C("D3D12_BUFFER_UAV_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_BUFFER_UAV") MemorySegment seg, long index, @C("D3D12_BUFFER_UAV_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_UAV$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_BUFFER_UAV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_BUFFER_UAV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_BUFFER_UAV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_BUFFER_UAV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_BUFFER_UAV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_BUFFER_UAV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX1D_UAV {

        private D3D12_TEX1D_UAV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX1D_UAV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_UAV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_UAV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_UAV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_UAV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_UAV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX1D_UAV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_UAV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_UAV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX1D_UAV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX1D_UAV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX1D_UAV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX1D_ARRAY_UAV {

        private D3D12_TEX1D_ARRAY_UAV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_UAV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_ARRAY_UAV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_ARRAY_UAV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX1D_ARRAY_UAV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX1D_ARRAY_UAV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX1D_ARRAY_UAV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2D_UAV {

        private D3D12_TEX2D_UAV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2D_UAV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_UAV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_UAV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_UAV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_UAV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_UAV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PlaneSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_UAV$PlaneSlice$VH();
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_UAV$PlaneSlice$VH().get(seg);
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_UAV$PlaneSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_UAV$PlaneSlice$VH().set(seg, x);
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_UAV$PlaneSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2D_UAV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_UAV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_UAV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2D_UAV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2D_UAV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2D_UAV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2D_ARRAY_UAV {

        private D3D12_TEX2D_ARRAY_UAV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PlaneSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$PlaneSlice$VH();
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$PlaneSlice$VH().get(seg);
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$PlaneSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$PlaneSlice$VH().set(seg, x);
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_UAV$PlaneSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_ARRAY_UAV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_ARRAY_UAV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2D_ARRAY_UAV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2D_ARRAY_UAV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2D_ARRAY_UAV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX3D_UAV {

        private D3D12_TEX3D_UAV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX3D_UAV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_UAV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX3D_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_UAV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_UAV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_UAV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_UAV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstWSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_UAV$FirstWSlice$VH();
        }
        public static  @C("UINT") int FirstWSlice$get(@C("struct D3D12_TEX3D_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_UAV$FirstWSlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstWSlice$get(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_UAV$FirstWSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstWSlice$set(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_UAV$FirstWSlice$VH().set(seg, x);
        }
        public static void FirstWSlice$set(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_UAV$FirstWSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WSize$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_UAV$WSize$VH();
        }
        public static  @C("UINT") int WSize$get(@C("struct D3D12_TEX3D_UAV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_UAV$WSize$VH().get(seg);
        }
        public static  @C("UINT") int WSize$get(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_UAV$WSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WSize$set(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_UAV$WSize$VH().set(seg, x);
        }
        public static void WSize$set(@C("struct D3D12_TEX3D_UAV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_UAV$WSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX3D_UAV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX3D_UAV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX3D_UAV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX3D_UAV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX3D_UAV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX3D_UAV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_UAV_DIMENSION_UNKNOWN() {
        return d3d12_h$constants$2.D3D12_UAV_DIMENSION_UNKNOWN();
    }
    public static @C("int") int D3D12_UAV_DIMENSION_BUFFER() {
        return d3d12_h$constants$2.D3D12_UAV_DIMENSION_BUFFER();
    }
    public static @C("int") int D3D12_UAV_DIMENSION_TEXTURE1D() {
        return d3d12_h$constants$2.D3D12_UAV_DIMENSION_TEXTURE1D();
    }
    public static @C("int") int D3D12_UAV_DIMENSION_TEXTURE1DARRAY() {
        return d3d12_h$constants$2.D3D12_UAV_DIMENSION_TEXTURE1DARRAY();
    }
    public static @C("int") int D3D12_UAV_DIMENSION_TEXTURE2D() {
        return d3d12_h$constants$2.D3D12_UAV_DIMENSION_TEXTURE2D();
    }
    public static @C("int") int D3D12_UAV_DIMENSION_TEXTURE2DARRAY() {
        return d3d12_h$constants$2.D3D12_UAV_DIMENSION_TEXTURE2DARRAY();
    }
    public static @C("int") int D3D12_UAV_DIMENSION_TEXTURE3D() {
        return d3d12_h$constants$2.D3D12_UAV_DIMENSION_TEXTURE3D();
    }
    public static class D3D12_UNORDERED_ACCESS_VIEW_DESC {

        private D3D12_UNORDERED_ACCESS_VIEW_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ViewDimension$VH() {
            return d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$ViewDimension$VH();
        }
        public static  @C("D3D12_UAV_DIMENSION") int ViewDimension$get(@C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$ViewDimension$VH().get(seg);
        }
        public static  @C("D3D12_UAV_DIMENSION") int ViewDimension$get(@C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$ViewDimension$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ViewDimension$set(@C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment seg, @C("D3D12_UAV_DIMENSION") int x) {
            d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$ViewDimension$VH().set(seg, x);
        }
        public static void ViewDimension$set(@C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment seg, long index, @C("D3D12_UAV_DIMENSION") int x) {
            d3d12_h$constants$2.D3D12_UNORDERED_ACCESS_VIEW_DESC$ViewDimension$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Buffer$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 32));
        }
        public static MemorySegment Texture1D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 4));
        }
        public static MemorySegment Texture1DArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(44, 12));
        }
        public static MemorySegment Texture2D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(56, 8));
        }
        public static MemorySegment Texture2DArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 16));
        }
        public static MemorySegment Texture3D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(80, 12));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_UNORDERED_ACCESS_VIEW_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_BUFFER_RTV {

        private D3D12_BUFFER_RTV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_BUFFER_RTV$struct$LAYOUT();
        }
        public static VarHandle FirstElement$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_RTV$FirstElement$VH();
        }
        public static  @C("UINT64") long FirstElement$get(@C("struct D3D12_BUFFER_RTV") MemorySegment seg) {
            return (long)d3d12_h$constants$2.D3D12_BUFFER_RTV$FirstElement$VH().get(seg);
        }
        public static  @C("UINT64") long FirstElement$get(@C("struct D3D12_BUFFER_RTV") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$2.D3D12_BUFFER_RTV$FirstElement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstElement$set(@C("struct D3D12_BUFFER_RTV") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_BUFFER_RTV$FirstElement$VH().set(seg, x);
        }
        public static void FirstElement$set(@C("struct D3D12_BUFFER_RTV") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$2.D3D12_BUFFER_RTV$FirstElement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumElements$VH() {
            return d3d12_h$constants$2.D3D12_BUFFER_RTV$NumElements$VH();
        }
        public static  @C("UINT") int NumElements$get(@C("struct D3D12_BUFFER_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_RTV$NumElements$VH().get(seg);
        }
        public static  @C("UINT") int NumElements$get(@C("struct D3D12_BUFFER_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_BUFFER_RTV$NumElements$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumElements$set(@C("struct D3D12_BUFFER_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_RTV$NumElements$VH().set(seg, x);
        }
        public static void NumElements$set(@C("struct D3D12_BUFFER_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_BUFFER_RTV$NumElements$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_BUFFER_RTV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_BUFFER_RTV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_BUFFER_RTV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_BUFFER_RTV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_BUFFER_RTV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_BUFFER_RTV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX1D_RTV {

        private D3D12_TEX1D_RTV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX1D_RTV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_RTV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_RTV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_RTV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_RTV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_RTV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX1D_RTV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_RTV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_RTV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX1D_RTV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX1D_RTV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX1D_RTV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX1D_ARRAY_RTV {

        private D3D12_TEX1D_ARRAY_RTV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_RTV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_ARRAY_RTV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_ARRAY_RTV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX1D_ARRAY_RTV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX1D_ARRAY_RTV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX1D_ARRAY_RTV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2D_RTV {

        private D3D12_TEX2D_RTV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2D_RTV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_RTV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_RTV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_RTV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_RTV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_RTV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PlaneSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_RTV$PlaneSlice$VH();
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_RTV$PlaneSlice$VH().get(seg);
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_RTV$PlaneSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_RTV$PlaneSlice$VH().set(seg, x);
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_RTV$PlaneSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2D_RTV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_RTV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_RTV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2D_RTV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2D_RTV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2D_RTV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2DMS_RTV {

        private D3D12_TEX2DMS_RTV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_RTV$struct$LAYOUT();
        }
        public static VarHandle UnusedField_NothingToDefine$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_RTV$UnusedField_NothingToDefine$VH();
        }
        public static  @C("UINT") int UnusedField_NothingToDefine$get(@C("struct D3D12_TEX2DMS_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_RTV$UnusedField_NothingToDefine$VH().get(seg);
        }
        public static  @C("UINT") int UnusedField_NothingToDefine$get(@C("struct D3D12_TEX2DMS_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_RTV$UnusedField_NothingToDefine$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UnusedField_NothingToDefine$set(@C("struct D3D12_TEX2DMS_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_RTV$UnusedField_NothingToDefine$VH().set(seg, x);
        }
        public static void UnusedField_NothingToDefine$set(@C("struct D3D12_TEX2DMS_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_RTV$UnusedField_NothingToDefine$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2DMS_RTV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_RTV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_RTV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2DMS_RTV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2DMS_RTV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2DMS_RTV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2D_ARRAY_RTV {

        private D3D12_TEX2D_ARRAY_RTV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PlaneSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$PlaneSlice$VH();
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$PlaneSlice$VH().get(seg);
        }
        public static  @C("UINT") int PlaneSlice$get(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$PlaneSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$PlaneSlice$VH().set(seg, x);
        }
        public static void PlaneSlice$set(@C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_RTV$PlaneSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_ARRAY_RTV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_ARRAY_RTV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2D_ARRAY_RTV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2D_ARRAY_RTV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2D_ARRAY_RTV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2DMS_ARRAY_RTV {

        private D3D12_TEX2DMS_ARRAY_RTV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$struct$LAYOUT();
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_RTV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_RTV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_RTV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2DMS_ARRAY_RTV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2DMS_ARRAY_RTV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2DMS_ARRAY_RTV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX3D_RTV {

        private D3D12_TEX3D_RTV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX3D_RTV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_RTV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX3D_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_RTV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_RTV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_RTV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_RTV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstWSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_RTV$FirstWSlice$VH();
        }
        public static  @C("UINT") int FirstWSlice$get(@C("struct D3D12_TEX3D_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_RTV$FirstWSlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstWSlice$get(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_RTV$FirstWSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstWSlice$set(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_RTV$FirstWSlice$VH().set(seg, x);
        }
        public static void FirstWSlice$set(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_RTV$FirstWSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WSize$VH() {
            return d3d12_h$constants$2.D3D12_TEX3D_RTV$WSize$VH();
        }
        public static  @C("UINT") int WSize$get(@C("struct D3D12_TEX3D_RTV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_RTV$WSize$VH().get(seg);
        }
        public static  @C("UINT") int WSize$get(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX3D_RTV$WSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WSize$set(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_RTV$WSize$VH().set(seg, x);
        }
        public static void WSize$set(@C("struct D3D12_TEX3D_RTV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX3D_RTV$WSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX3D_RTV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX3D_RTV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX3D_RTV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX3D_RTV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX3D_RTV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX3D_RTV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RTV_DIMENSION_UNKNOWN() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_UNKNOWN();
    }
    public static @C("int") int D3D12_RTV_DIMENSION_BUFFER() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_BUFFER();
    }
    public static @C("int") int D3D12_RTV_DIMENSION_TEXTURE1D() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_TEXTURE1D();
    }
    public static @C("int") int D3D12_RTV_DIMENSION_TEXTURE1DARRAY() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_TEXTURE1DARRAY();
    }
    public static @C("int") int D3D12_RTV_DIMENSION_TEXTURE2D() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_TEXTURE2D();
    }
    public static @C("int") int D3D12_RTV_DIMENSION_TEXTURE2DARRAY() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_TEXTURE2DARRAY();
    }
    public static @C("int") int D3D12_RTV_DIMENSION_TEXTURE2DMS() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_TEXTURE2DMS();
    }
    public static @C("int") int D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY();
    }
    public static @C("int") int D3D12_RTV_DIMENSION_TEXTURE3D() {
        return d3d12_h$constants$2.D3D12_RTV_DIMENSION_TEXTURE3D();
    }
    public static class D3D12_RENDER_TARGET_VIEW_DESC {

        private D3D12_RENDER_TARGET_VIEW_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ViewDimension$VH() {
            return d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$ViewDimension$VH();
        }
        public static  @C("D3D12_RTV_DIMENSION") int ViewDimension$get(@C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$ViewDimension$VH().get(seg);
        }
        public static  @C("D3D12_RTV_DIMENSION") int ViewDimension$get(@C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$ViewDimension$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ViewDimension$set(@C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment seg, @C("D3D12_RTV_DIMENSION") int x) {
            d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$ViewDimension$VH().set(seg, x);
        }
        public static void ViewDimension$set(@C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment seg, long index, @C("D3D12_RTV_DIMENSION") int x) {
            d3d12_h$constants$2.D3D12_RENDER_TARGET_VIEW_DESC$ViewDimension$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Buffer$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static MemorySegment Texture1D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 4));
        }
        public static MemorySegment Texture1DArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(28, 12));
        }
        public static MemorySegment Texture2D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 8));
        }
        public static MemorySegment Texture2DArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(48, 16));
        }
        public static MemorySegment Texture2DMS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 4));
        }
        public static MemorySegment Texture2DMSArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(68, 8));
        }
        public static MemorySegment Texture3D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(76, 12));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_TARGET_VIEW_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_TARGET_VIEW_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_TARGET_VIEW_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_TARGET_VIEW_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_TARGET_VIEW_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX1D_DSV {

        private D3D12_TEX1D_DSV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX1D_DSV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_DSV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_DSV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_DSV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_DSV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_DSV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX1D_DSV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_DSV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_DSV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX1D_DSV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX1D_DSV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX1D_DSV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX1D_ARRAY_DSV {

        private D3D12_TEX1D_ARRAY_DSV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX1D_ARRAY_DSV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_ARRAY_DSV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX1D_ARRAY_DSV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX1D_ARRAY_DSV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX1D_ARRAY_DSV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX1D_ARRAY_DSV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2D_DSV {

        private D3D12_TEX2D_DSV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2D_DSV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_DSV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_DSV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_DSV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_DSV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_DSV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2D_DSV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_DSV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_DSV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2D_DSV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2D_DSV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2D_DSV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2D_ARRAY_DSV {

        private D3D12_TEX2D_ARRAY_DSV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$struct$LAYOUT();
        }
        public static VarHandle MipSlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$MipSlice$VH();
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$MipSlice$VH().get(seg);
        }
        public static  @C("UINT") int MipSlice$get(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$MipSlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$MipSlice$VH().set(seg, x);
        }
        public static void MipSlice$set(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$MipSlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2D_ARRAY_DSV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_ARRAY_DSV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2D_ARRAY_DSV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2D_ARRAY_DSV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2D_ARRAY_DSV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2D_ARRAY_DSV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2DMS_DSV {

        private D3D12_TEX2DMS_DSV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_DSV$struct$LAYOUT();
        }
        public static VarHandle UnusedField_NothingToDefine$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_DSV$UnusedField_NothingToDefine$VH();
        }
        public static  @C("UINT") int UnusedField_NothingToDefine$get(@C("struct D3D12_TEX2DMS_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_DSV$UnusedField_NothingToDefine$VH().get(seg);
        }
        public static  @C("UINT") int UnusedField_NothingToDefine$get(@C("struct D3D12_TEX2DMS_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_DSV$UnusedField_NothingToDefine$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UnusedField_NothingToDefine$set(@C("struct D3D12_TEX2DMS_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_DSV$UnusedField_NothingToDefine$VH().set(seg, x);
        }
        public static void UnusedField_NothingToDefine$set(@C("struct D3D12_TEX2DMS_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_DSV$UnusedField_NothingToDefine$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2DMS_DSV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_DSV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_DSV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2DMS_DSV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2DMS_DSV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2DMS_DSV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_TEX2DMS_ARRAY_DSV {

        private D3D12_TEX2DMS_ARRAY_DSV() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$struct$LAYOUT();
        }
        public static VarHandle FirstArraySlice$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$FirstArraySlice$VH();
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$FirstArraySlice$VH().get(seg);
        }
        public static  @C("UINT") int FirstArraySlice$get(@C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$FirstArraySlice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$FirstArraySlice$VH().set(seg, x);
        }
        public static void FirstArraySlice$set(@C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$FirstArraySlice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ArraySize$VH() {
            return d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$ArraySize$VH();
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$ArraySize$VH().get(seg);
        }
        public static  @C("UINT") int ArraySize$get(@C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$ArraySize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$ArraySize$VH().set(seg, x);
        }
        public static void ArraySize$set(@C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_TEX2DMS_ARRAY_DSV$ArraySize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_DSV") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_TEX2DMS_ARRAY_DSV[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_TEX2DMS_ARRAY_DSV[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_TEX2DMS_ARRAY_DSV*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_TEX2DMS_ARRAY_DSV*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_DSV_FLAG_NONE() {
        return d3d12_h$constants$2.D3D12_DSV_FLAG_NONE();
    }
    public static @C("int") int D3D12_DSV_FLAG_READ_ONLY_DEPTH() {
        return d3d12_h$constants$2.D3D12_DSV_FLAG_READ_ONLY_DEPTH();
    }
    public static @C("int") int D3D12_DSV_FLAG_READ_ONLY_STENCIL() {
        return d3d12_h$constants$2.D3D12_DSV_FLAG_READ_ONLY_STENCIL();
    }
    public static @C("int") int D3D12_DSV_DIMENSION_UNKNOWN() {
        return d3d12_h$constants$2.D3D12_DSV_DIMENSION_UNKNOWN();
    }
    public static @C("int") int D3D12_DSV_DIMENSION_TEXTURE1D() {
        return d3d12_h$constants$2.D3D12_DSV_DIMENSION_TEXTURE1D();
    }
    public static @C("int") int D3D12_DSV_DIMENSION_TEXTURE1DARRAY() {
        return d3d12_h$constants$2.D3D12_DSV_DIMENSION_TEXTURE1DARRAY();
    }
    public static @C("int") int D3D12_DSV_DIMENSION_TEXTURE2D() {
        return d3d12_h$constants$2.D3D12_DSV_DIMENSION_TEXTURE2D();
    }
    public static @C("int") int D3D12_DSV_DIMENSION_TEXTURE2DARRAY() {
        return d3d12_h$constants$2.D3D12_DSV_DIMENSION_TEXTURE2DARRAY();
    }
    public static @C("int") int D3D12_DSV_DIMENSION_TEXTURE2DMS() {
        return d3d12_h$constants$2.D3D12_DSV_DIMENSION_TEXTURE2DMS();
    }
    public static @C("int") int D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY() {
        return d3d12_h$constants$2.D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY();
    }
    public static class D3D12_DEPTH_STENCIL_VIEW_DESC {

        private D3D12_DEPTH_STENCIL_VIEW_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$struct$LAYOUT();
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ViewDimension$VH() {
            return d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$ViewDimension$VH();
        }
        public static  @C("D3D12_DSV_DIMENSION") int ViewDimension$get(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$ViewDimension$VH().get(seg);
        }
        public static  @C("D3D12_DSV_DIMENSION") int ViewDimension$get(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$ViewDimension$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ViewDimension$set(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, @C("D3D12_DSV_DIMENSION") int x) {
            d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$ViewDimension$VH().set(seg, x);
        }
        public static void ViewDimension$set(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, long index, @C("D3D12_DSV_DIMENSION") int x) {
            d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$ViewDimension$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Flags$VH();
        }
        public static  @C("D3D12_DSV_FLAGS") int Flags$get(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_DSV_FLAGS") int Flags$get(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, @C("D3D12_DSV_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment seg, long index, @C("D3D12_DSV_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_DEPTH_STENCIL_VIEW_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Texture1D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(12, 4));
        }
        public static MemorySegment Texture1DArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 12));
        }
        public static MemorySegment Texture2D$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(28, 4));
        }
        public static MemorySegment Texture2DArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 12));
        }
        public static MemorySegment Texture2DMS$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(44, 4));
        }
        public static MemorySegment Texture2DMSArray$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(48, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCIL_VIEW_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DEPTH_STENCIL_VIEW_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DEPTH_STENCIL_VIEW_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DEPTH_STENCIL_VIEW_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DEPTH_STENCIL_VIEW_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_CLEAR_FLAG_DEPTH() {
        return d3d12_h$constants$2.D3D12_CLEAR_FLAG_DEPTH();
    }
    public static @C("int") int D3D12_CLEAR_FLAG_STENCIL() {
        return d3d12_h$constants$2.D3D12_CLEAR_FLAG_STENCIL();
    }
    public static @C("int") int D3D12_FENCE_FLAG_NONE() {
        return d3d12_h$constants$2.D3D12_FENCE_FLAG_NONE();
    }
    public static @C("int") int D3D12_FENCE_FLAG_SHARED() {
        return d3d12_h$constants$2.D3D12_FENCE_FLAG_SHARED();
    }
    public static @C("int") int D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER() {
        return d3d12_h$constants$2.D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER();
    }
    public static @C("int") int D3D12_FENCE_FLAG_NON_MONITORED() {
        return d3d12_h$constants$2.D3D12_FENCE_FLAG_NON_MONITORED();
    }
    public static @C("int") int D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV();
    }
    public static @C("int") int D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER();
    }
    public static @C("int") int D3D12_DESCRIPTOR_HEAP_TYPE_RTV() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_TYPE_RTV();
    }
    public static @C("int") int D3D12_DESCRIPTOR_HEAP_TYPE_DSV() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_TYPE_DSV();
    }
    public static @C("int") int D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES();
    }
    public static @C("int") int D3D12_DESCRIPTOR_HEAP_FLAG_NONE() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_FLAG_NONE();
    }
    public static @C("int") int D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE();
    }
    public static class D3D12_DESCRIPTOR_HEAP_DESC {

        private D3D12_DESCRIPTOR_HEAP_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Type$VH();
        }
        public static  @C("D3D12_DESCRIPTOR_HEAP_TYPE") int Type$get(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Type$VH().get(seg);
        }
        public static  @C("D3D12_DESCRIPTOR_HEAP_TYPE") int Type$get(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, @C("D3D12_DESCRIPTOR_HEAP_TYPE") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, long index, @C("D3D12_DESCRIPTOR_HEAP_TYPE") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumDescriptors$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NumDescriptors$VH();
        }
        public static  @C("UINT") int NumDescriptors$get(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NumDescriptors$VH().get(seg);
        }
        public static  @C("UINT") int NumDescriptors$get(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NumDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumDescriptors$set(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NumDescriptors$VH().set(seg, x);
        }
        public static void NumDescriptors$set(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NumDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Flags$VH();
        }
        public static  @C("D3D12_DESCRIPTOR_HEAP_FLAGS") int Flags$get(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_DESCRIPTOR_HEAP_FLAGS") int Flags$get(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, @C("D3D12_DESCRIPTOR_HEAP_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, long index, @C("D3D12_DESCRIPTOR_HEAP_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_HEAP_DESC$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DESCRIPTOR_HEAP_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DESCRIPTOR_HEAP_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DESCRIPTOR_HEAP_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DESCRIPTOR_HEAP_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DESCRIPTOR_HEAP_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_DESCRIPTOR_RANGE_TYPE_SRV() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_TYPE_SRV();
    }
    public static @C("int") int D3D12_DESCRIPTOR_RANGE_TYPE_UAV() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_TYPE_UAV();
    }
    public static @C("int") int D3D12_DESCRIPTOR_RANGE_TYPE_CBV() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_TYPE_CBV();
    }
    public static @C("int") int D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER();
    }
    public static class D3D12_DESCRIPTOR_RANGE {

        private D3D12_DESCRIPTOR_RANGE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$struct$LAYOUT();
        }
        public static VarHandle RangeType$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RangeType$VH();
        }
        public static  @C("D3D12_DESCRIPTOR_RANGE_TYPE") int RangeType$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RangeType$VH().get(seg);
        }
        public static  @C("D3D12_DESCRIPTOR_RANGE_TYPE") int RangeType$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RangeType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RangeType$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, @C("D3D12_DESCRIPTOR_RANGE_TYPE") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RangeType$VH().set(seg, x);
        }
        public static void RangeType$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index, @C("D3D12_DESCRIPTOR_RANGE_TYPE") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RangeType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumDescriptors$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$NumDescriptors$VH();
        }
        public static  @C("UINT") int NumDescriptors$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$NumDescriptors$VH().get(seg);
        }
        public static  @C("UINT") int NumDescriptors$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$NumDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumDescriptors$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$NumDescriptors$VH().set(seg, x);
        }
        public static void NumDescriptors$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$NumDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BaseShaderRegister$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$BaseShaderRegister$VH();
        }
        public static  @C("UINT") int BaseShaderRegister$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$BaseShaderRegister$VH().get(seg);
        }
        public static  @C("UINT") int BaseShaderRegister$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$BaseShaderRegister$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BaseShaderRegister$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$BaseShaderRegister$VH().set(seg, x);
        }
        public static void BaseShaderRegister$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$BaseShaderRegister$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RegisterSpace$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RegisterSpace$VH();
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RegisterSpace$VH().get(seg);
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RegisterSpace$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RegisterSpace$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RegisterSpace$VH().set(seg, x);
        }
        public static void RegisterSpace$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$RegisterSpace$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OffsetInDescriptorsFromTableStart$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$OffsetInDescriptorsFromTableStart$VH();
        }
        public static  @C("UINT") int OffsetInDescriptorsFromTableStart$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$OffsetInDescriptorsFromTableStart$VH().get(seg);
        }
        public static  @C("UINT") int OffsetInDescriptorsFromTableStart$get(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$OffsetInDescriptorsFromTableStart$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OffsetInDescriptorsFromTableStart$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$OffsetInDescriptorsFromTableStart$VH().set(seg, x);
        }
        public static void OffsetInDescriptorsFromTableStart$set(@C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE$OffsetInDescriptorsFromTableStart$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DESCRIPTOR_RANGE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DESCRIPTOR_RANGE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DESCRIPTOR_RANGE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DESCRIPTOR_RANGE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DESCRIPTOR_RANGE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_ROOT_DESCRIPTOR_TABLE {

        private D3D12_ROOT_DESCRIPTOR_TABLE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$struct$LAYOUT();
        }
        public static VarHandle NumDescriptorRanges$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$NumDescriptorRanges$VH();
        }
        public static  @C("UINT") int NumDescriptorRanges$get(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$NumDescriptorRanges$VH().get(seg);
        }
        public static  @C("UINT") int NumDescriptorRanges$get(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$NumDescriptorRanges$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumDescriptorRanges$set(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$NumDescriptorRanges$VH().set(seg, x);
        }
        public static void NumDescriptorRanges$set(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$NumDescriptorRanges$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pDescriptorRanges$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$pDescriptorRanges$VH();
        }
        public static  @C("const D3D12_DESCRIPTOR_RANGE*") MemoryAddress pDescriptorRanges$get(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$pDescriptorRanges$VH().get(seg);
        }
        public static  @C("const D3D12_DESCRIPTOR_RANGE*") MemoryAddress pDescriptorRanges$get(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$pDescriptorRanges$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pDescriptorRanges$set(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment seg, @C("const D3D12_DESCRIPTOR_RANGE*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$pDescriptorRanges$VH().set(seg, x);
        }
        public static void pDescriptorRanges$set(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment seg, long index, @C("const D3D12_DESCRIPTOR_RANGE*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR_TABLE$pDescriptorRanges$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_ROOT_CONSTANTS {

        private D3D12_ROOT_CONSTANTS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$struct$LAYOUT();
        }
        public static VarHandle ShaderRegister$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$ShaderRegister$VH();
        }
        public static  @C("UINT") int ShaderRegister$get(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$ShaderRegister$VH().get(seg);
        }
        public static  @C("UINT") int ShaderRegister$get(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$ShaderRegister$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShaderRegister$set(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$ShaderRegister$VH().set(seg, x);
        }
        public static void ShaderRegister$set(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$ShaderRegister$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RegisterSpace$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$RegisterSpace$VH();
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$RegisterSpace$VH().get(seg);
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$RegisterSpace$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RegisterSpace$set(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$RegisterSpace$VH().set(seg, x);
        }
        public static void RegisterSpace$set(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$RegisterSpace$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Num32BitValues$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$Num32BitValues$VH();
        }
        public static  @C("UINT") int Num32BitValues$get(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$Num32BitValues$VH().get(seg);
        }
        public static  @C("UINT") int Num32BitValues$get(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$Num32BitValues$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Num32BitValues$set(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$Num32BitValues$VH().set(seg, x);
        }
        public static void Num32BitValues$set(@C("struct D3D12_ROOT_CONSTANTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_CONSTANTS$Num32BitValues$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_CONSTANTS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_CONSTANTS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_CONSTANTS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_CONSTANTS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_CONSTANTS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_CONSTANTS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_ROOT_DESCRIPTOR {

        private D3D12_ROOT_DESCRIPTOR() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$struct$LAYOUT();
        }
        public static VarHandle ShaderRegister$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$ShaderRegister$VH();
        }
        public static  @C("UINT") int ShaderRegister$get(@C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$ShaderRegister$VH().get(seg);
        }
        public static  @C("UINT") int ShaderRegister$get(@C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$ShaderRegister$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShaderRegister$set(@C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$ShaderRegister$VH().set(seg, x);
        }
        public static void ShaderRegister$set(@C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$ShaderRegister$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RegisterSpace$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$RegisterSpace$VH();
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$RegisterSpace$VH().get(seg);
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$RegisterSpace$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RegisterSpace$set(@C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$RegisterSpace$VH().set(seg, x);
        }
        public static void RegisterSpace$set(@C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_DESCRIPTOR$RegisterSpace$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_DESCRIPTOR[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_DESCRIPTOR*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_DESCRIPTOR*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_SHADER_VISIBILITY_ALL() {
        return d3d12_h$constants$2.D3D12_SHADER_VISIBILITY_ALL();
    }
    public static @C("int") int D3D12_SHADER_VISIBILITY_VERTEX() {
        return d3d12_h$constants$2.D3D12_SHADER_VISIBILITY_VERTEX();
    }
    public static @C("int") int D3D12_SHADER_VISIBILITY_HULL() {
        return d3d12_h$constants$2.D3D12_SHADER_VISIBILITY_HULL();
    }
    public static @C("int") int D3D12_SHADER_VISIBILITY_DOMAIN() {
        return d3d12_h$constants$2.D3D12_SHADER_VISIBILITY_DOMAIN();
    }
    public static @C("int") int D3D12_SHADER_VISIBILITY_GEOMETRY() {
        return d3d12_h$constants$2.D3D12_SHADER_VISIBILITY_GEOMETRY();
    }
    public static @C("int") int D3D12_SHADER_VISIBILITY_PIXEL() {
        return d3d12_h$constants$2.D3D12_SHADER_VISIBILITY_PIXEL();
    }
    public static @C("int") int D3D12_SHADER_VISIBILITY_AMPLIFICATION() {
        return d3d12_h$constants$2.D3D12_SHADER_VISIBILITY_AMPLIFICATION();
    }
    public static @C("int") int D3D12_SHADER_VISIBILITY_MESH() {
        return d3d12_h$constants$2.D3D12_SHADER_VISIBILITY_MESH();
    }
    public static @C("int") int D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE() {
        return d3d12_h$constants$2.D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE();
    }
    public static @C("int") int D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS() {
        return d3d12_h$constants$2.D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS();
    }
    public static @C("int") int D3D12_ROOT_PARAMETER_TYPE_CBV() {
        return d3d12_h$constants$2.D3D12_ROOT_PARAMETER_TYPE_CBV();
    }
    public static @C("int") int D3D12_ROOT_PARAMETER_TYPE_SRV() {
        return d3d12_h$constants$2.D3D12_ROOT_PARAMETER_TYPE_SRV();
    }
    public static @C("int") int D3D12_ROOT_PARAMETER_TYPE_UAV() {
        return d3d12_h$constants$2.D3D12_ROOT_PARAMETER_TYPE_UAV();
    }
    public static class D3D12_ROOT_PARAMETER {

        private D3D12_ROOT_PARAMETER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_ROOT_PARAMETER$struct$LAYOUT();
        }
        public static VarHandle ParameterType$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ParameterType$VH();
        }
        public static  @C("D3D12_ROOT_PARAMETER_TYPE") int ParameterType$get(@C("struct D3D12_ROOT_PARAMETER") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ParameterType$VH().get(seg);
        }
        public static  @C("D3D12_ROOT_PARAMETER_TYPE") int ParameterType$get(@C("struct D3D12_ROOT_PARAMETER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ParameterType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ParameterType$set(@C("struct D3D12_ROOT_PARAMETER") MemorySegment seg, @C("D3D12_ROOT_PARAMETER_TYPE") int x) {
            d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ParameterType$VH().set(seg, x);
        }
        public static void ParameterType$set(@C("struct D3D12_ROOT_PARAMETER") MemorySegment seg, long index, @C("D3D12_ROOT_PARAMETER_TYPE") int x) {
            d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ParameterType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment DescriptorTable$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static MemorySegment Constants$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 12));
        }
        public static MemorySegment Descriptor$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(36, 8));
        }
        public static VarHandle ShaderVisibility$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ShaderVisibility$VH();
        }
        public static  @C("D3D12_SHADER_VISIBILITY") int ShaderVisibility$get(@C("struct D3D12_ROOT_PARAMETER") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ShaderVisibility$VH().get(seg);
        }
        public static  @C("D3D12_SHADER_VISIBILITY") int ShaderVisibility$get(@C("struct D3D12_ROOT_PARAMETER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ShaderVisibility$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShaderVisibility$set(@C("struct D3D12_ROOT_PARAMETER") MemorySegment seg, @C("D3D12_SHADER_VISIBILITY") int x) {
            d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ShaderVisibility$VH().set(seg, x);
        }
        public static void ShaderVisibility$set(@C("struct D3D12_ROOT_PARAMETER") MemorySegment seg, long index, @C("D3D12_SHADER_VISIBILITY") int x) {
            d3d12_h$constants$2.D3D12_ROOT_PARAMETER$ShaderVisibility$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_PARAMETER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_PARAMETER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_PARAMETER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_PARAMETER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_PARAMETER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_PARAMETER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_NONE() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_NONE();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_DENY_AMPLIFICATION_SHADER_ROOT_ACCESS() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_DENY_AMPLIFICATION_SHADER_ROOT_ACCESS();
    }
    public static @C("int") int D3D12_ROOT_SIGNATURE_FLAG_DENY_MESH_SHADER_ROOT_ACCESS() {
        return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_FLAG_DENY_MESH_SHADER_ROOT_ACCESS();
    }
    public static @C("int") int D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK() {
        return d3d12_h$constants$2.D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK();
    }
    public static @C("int") int D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK() {
        return d3d12_h$constants$2.D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK();
    }
    public static @C("int") int D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE() {
        return d3d12_h$constants$2.D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE();
    }
    public static class D3D12_STATIC_SAMPLER_DESC {

        private D3D12_STATIC_SAMPLER_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$struct$LAYOUT();
        }
        public static VarHandle Filter$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$Filter$VH();
        }
        public static  @C("D3D12_FILTER") int Filter$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$Filter$VH().get(seg);
        }
        public static  @C("D3D12_FILTER") int Filter$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$Filter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Filter$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("D3D12_FILTER") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$Filter$VH().set(seg, x);
        }
        public static void Filter$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_FILTER") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$Filter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddressU$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressU$VH();
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressU$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressU$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressU$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressU$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddressU$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressU$VH().set(seg, x);
        }
        public static void AddressU$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressU$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddressV$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressV$VH();
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressV$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressV$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressV$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressV$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddressV$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressV$VH().set(seg, x);
        }
        public static void AddressV$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressV$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddressW$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressW$VH();
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressW$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressW$VH().get(seg);
        }
        public static  @C("D3D12_TEXTURE_ADDRESS_MODE") int AddressW$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressW$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddressW$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressW$VH().set(seg, x);
        }
        public static void AddressW$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_TEXTURE_ADDRESS_MODE") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$AddressW$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MipLODBias$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MipLODBias$VH();
        }
        public static  @C("FLOAT") float MipLODBias$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MipLODBias$VH().get(seg);
        }
        public static  @C("FLOAT") float MipLODBias$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MipLODBias$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MipLODBias$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MipLODBias$VH().set(seg, x);
        }
        public static void MipLODBias$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MipLODBias$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxAnisotropy$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxAnisotropy$VH();
        }
        public static  @C("UINT") int MaxAnisotropy$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxAnisotropy$VH().get(seg);
        }
        public static  @C("UINT") int MaxAnisotropy$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxAnisotropy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxAnisotropy$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxAnisotropy$VH().set(seg, x);
        }
        public static void MaxAnisotropy$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxAnisotropy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ComparisonFunc$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ComparisonFunc$VH();
        }
        public static  @C("D3D12_COMPARISON_FUNC") int ComparisonFunc$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ComparisonFunc$VH().get(seg);
        }
        public static  @C("D3D12_COMPARISON_FUNC") int ComparisonFunc$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ComparisonFunc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ComparisonFunc$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ComparisonFunc$VH().set(seg, x);
        }
        public static void ComparisonFunc$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_COMPARISON_FUNC") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ComparisonFunc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BorderColor$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$BorderColor$VH();
        }
        public static  @C("D3D12_STATIC_BORDER_COLOR") int BorderColor$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$BorderColor$VH().get(seg);
        }
        public static  @C("D3D12_STATIC_BORDER_COLOR") int BorderColor$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$BorderColor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BorderColor$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("D3D12_STATIC_BORDER_COLOR") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$BorderColor$VH().set(seg, x);
        }
        public static void BorderColor$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_STATIC_BORDER_COLOR") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$BorderColor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MinLOD$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MinLOD$VH();
        }
        public static  @C("FLOAT") float MinLOD$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MinLOD$VH().get(seg);
        }
        public static  @C("FLOAT") float MinLOD$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MinLOD$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MinLOD$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MinLOD$VH().set(seg, x);
        }
        public static void MinLOD$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MinLOD$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxLOD$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxLOD$VH();
        }
        public static  @C("FLOAT") float MaxLOD$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (float)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxLOD$VH().get(seg);
        }
        public static  @C("FLOAT") float MaxLOD$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxLOD$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxLOD$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxLOD$VH().set(seg, x);
        }
        public static void MaxLOD$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$MaxLOD$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ShaderRegister$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderRegister$VH();
        }
        public static  @C("UINT") int ShaderRegister$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderRegister$VH().get(seg);
        }
        public static  @C("UINT") int ShaderRegister$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderRegister$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShaderRegister$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderRegister$VH().set(seg, x);
        }
        public static void ShaderRegister$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderRegister$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RegisterSpace$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$RegisterSpace$VH();
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$RegisterSpace$VH().get(seg);
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$RegisterSpace$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RegisterSpace$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$RegisterSpace$VH().set(seg, x);
        }
        public static void RegisterSpace$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$RegisterSpace$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ShaderVisibility$VH() {
            return d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderVisibility$VH();
        }
        public static  @C("D3D12_SHADER_VISIBILITY") int ShaderVisibility$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderVisibility$VH().get(seg);
        }
        public static  @C("D3D12_SHADER_VISIBILITY") int ShaderVisibility$get(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderVisibility$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShaderVisibility$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, @C("D3D12_SHADER_VISIBILITY") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderVisibility$VH().set(seg, x);
        }
        public static void ShaderVisibility$set(@C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment seg, long index, @C("D3D12_SHADER_VISIBILITY") int x) {
            d3d12_h$constants$2.D3D12_STATIC_SAMPLER_DESC$ShaderVisibility$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_STATIC_SAMPLER_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_STATIC_SAMPLER_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_STATIC_SAMPLER_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_STATIC_SAMPLER_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_STATIC_SAMPLER_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_ROOT_SIGNATURE_DESC {

        private D3D12_ROOT_SIGNATURE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$struct$LAYOUT();
        }
        public static VarHandle NumParameters$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumParameters$VH();
        }
        public static  @C("UINT") int NumParameters$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumParameters$VH().get(seg);
        }
        public static  @C("UINT") int NumParameters$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumParameters$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumParameters$VH().set(seg, x);
        }
        public static void NumParameters$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pParameters$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pParameters$VH();
        }
        public static  @C("const D3D12_ROOT_PARAMETER*") MemoryAddress pParameters$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pParameters$VH().get(seg);
        }
        public static  @C("const D3D12_ROOT_PARAMETER*") MemoryAddress pParameters$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pParameters$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, @C("const D3D12_ROOT_PARAMETER*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pParameters$VH().set(seg, x);
        }
        public static void pParameters$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index, @C("const D3D12_ROOT_PARAMETER*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumStaticSamplers$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumStaticSamplers$VH();
        }
        public static  @C("UINT") int NumStaticSamplers$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumStaticSamplers$VH().get(seg);
        }
        public static  @C("UINT") int NumStaticSamplers$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumStaticSamplers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumStaticSamplers$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumStaticSamplers$VH().set(seg, x);
        }
        public static void NumStaticSamplers$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$NumStaticSamplers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pStaticSamplers$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pStaticSamplers$VH();
        }
        public static  @C("const D3D12_STATIC_SAMPLER_DESC*") MemoryAddress pStaticSamplers$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pStaticSamplers$VH().get(seg);
        }
        public static  @C("const D3D12_STATIC_SAMPLER_DESC*") MemoryAddress pStaticSamplers$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pStaticSamplers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pStaticSamplers$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, @C("const D3D12_STATIC_SAMPLER_DESC*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pStaticSamplers$VH().set(seg, x);
        }
        public static void pStaticSamplers$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index, @C("const D3D12_STATIC_SAMPLER_DESC*") MemoryAddress x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$pStaticSamplers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$Flags$VH();
        }
        public static  @C("D3D12_ROOT_SIGNATURE_FLAGS") int Flags$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_ROOT_SIGNATURE_FLAGS") int Flags$get(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, @C("D3D12_ROOT_SIGNATURE_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment seg, long index, @C("D3D12_ROOT_SIGNATURE_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_ROOT_SIGNATURE_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_SIGNATURE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_DESCRIPTOR_RANGE_FLAG_NONE() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_FLAG_NONE();
    }
    public static @C("int") int D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE();
    }
    public static @C("int") int D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE();
    }
    public static @C("int") int D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE();
    }
    public static @C("int") int D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC();
    }
    public static @C("int") int D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS() {
        return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS();
    }
    public static class D3D12_DESCRIPTOR_RANGE1 {

        private D3D12_DESCRIPTOR_RANGE1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$struct$LAYOUT();
        }
        public static VarHandle RangeType$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RangeType$VH();
        }
        public static  @C("D3D12_DESCRIPTOR_RANGE_TYPE") int RangeType$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RangeType$VH().get(seg);
        }
        public static  @C("D3D12_DESCRIPTOR_RANGE_TYPE") int RangeType$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RangeType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RangeType$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, @C("D3D12_DESCRIPTOR_RANGE_TYPE") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RangeType$VH().set(seg, x);
        }
        public static void RangeType$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index, @C("D3D12_DESCRIPTOR_RANGE_TYPE") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RangeType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumDescriptors$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$NumDescriptors$VH();
        }
        public static  @C("UINT") int NumDescriptors$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$NumDescriptors$VH().get(seg);
        }
        public static  @C("UINT") int NumDescriptors$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$NumDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumDescriptors$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$NumDescriptors$VH().set(seg, x);
        }
        public static void NumDescriptors$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$NumDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BaseShaderRegister$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$BaseShaderRegister$VH();
        }
        public static  @C("UINT") int BaseShaderRegister$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$BaseShaderRegister$VH().get(seg);
        }
        public static  @C("UINT") int BaseShaderRegister$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$BaseShaderRegister$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BaseShaderRegister$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$BaseShaderRegister$VH().set(seg, x);
        }
        public static void BaseShaderRegister$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$BaseShaderRegister$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RegisterSpace$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RegisterSpace$VH();
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RegisterSpace$VH().get(seg);
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RegisterSpace$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RegisterSpace$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RegisterSpace$VH().set(seg, x);
        }
        public static void RegisterSpace$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$RegisterSpace$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$Flags$VH();
        }
        public static  @C("D3D12_DESCRIPTOR_RANGE_FLAGS") int Flags$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$Flags$VH().get(seg);
        }
        public static  @C("D3D12_DESCRIPTOR_RANGE_FLAGS") int Flags$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, @C("D3D12_DESCRIPTOR_RANGE_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index, @C("D3D12_DESCRIPTOR_RANGE_FLAGS") int x) {
            d3d12_h$constants$2.D3D12_DESCRIPTOR_RANGE1$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OffsetInDescriptorsFromTableStart$VH() {
            return d3d12_h$constants$3.D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$VH();
        }
        public static  @C("UINT") int OffsetInDescriptorsFromTableStart$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$VH().get(seg);
        }
        public static  @C("UINT") int OffsetInDescriptorsFromTableStart$get(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OffsetInDescriptorsFromTableStart$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$VH().set(seg, x);
        }
        public static void OffsetInDescriptorsFromTableStart$set(@C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DESCRIPTOR_RANGE1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DESCRIPTOR_RANGE1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DESCRIPTOR_RANGE1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DESCRIPTOR_RANGE1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DESCRIPTOR_RANGE1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_ROOT_DESCRIPTOR_TABLE1 {

        private D3D12_ROOT_DESCRIPTOR_TABLE1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$struct$LAYOUT();
        }
        public static VarHandle NumDescriptorRanges$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$VH();
        }
        public static  @C("UINT") int NumDescriptorRanges$get(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$VH().get(seg);
        }
        public static  @C("UINT") int NumDescriptorRanges$get(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumDescriptorRanges$set(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$VH().set(seg, x);
        }
        public static void NumDescriptorRanges$set(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pDescriptorRanges$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$VH();
        }
        public static  @C("const D3D12_DESCRIPTOR_RANGE1*") MemoryAddress pDescriptorRanges$get(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$VH().get(seg);
        }
        public static  @C("const D3D12_DESCRIPTOR_RANGE1*") MemoryAddress pDescriptorRanges$get(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pDescriptorRanges$set(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment seg, @C("const D3D12_DESCRIPTOR_RANGE1*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$VH().set(seg, x);
        }
        public static void pDescriptorRanges$set(@C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment seg, long index, @C("const D3D12_DESCRIPTOR_RANGE1*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_DESCRIPTOR_TABLE1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_ROOT_DESCRIPTOR_FLAG_NONE() {
        return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_FLAG_NONE();
    }
    public static @C("int") int D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE() {
        return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE();
    }
    public static @C("int") int D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE() {
        return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE();
    }
    public static @C("int") int D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC() {
        return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC();
    }
    public static class D3D12_ROOT_DESCRIPTOR1 {

        private D3D12_ROOT_DESCRIPTOR1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$struct$LAYOUT();
        }
        public static VarHandle ShaderRegister$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$ShaderRegister$VH();
        }
        public static  @C("UINT") int ShaderRegister$get(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$ShaderRegister$VH().get(seg);
        }
        public static  @C("UINT") int ShaderRegister$get(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$ShaderRegister$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShaderRegister$set(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$ShaderRegister$VH().set(seg, x);
        }
        public static void ShaderRegister$set(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$ShaderRegister$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RegisterSpace$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$RegisterSpace$VH();
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$RegisterSpace$VH().get(seg);
        }
        public static  @C("UINT") int RegisterSpace$get(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$RegisterSpace$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RegisterSpace$set(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$RegisterSpace$VH().set(seg, x);
        }
        public static void RegisterSpace$set(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$RegisterSpace$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$Flags$VH();
        }
        public static  @C("D3D12_ROOT_DESCRIPTOR_FLAGS") int Flags$get(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$Flags$VH().get(seg);
        }
        public static  @C("D3D12_ROOT_DESCRIPTOR_FLAGS") int Flags$get(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, @C("D3D12_ROOT_DESCRIPTOR_FLAGS") int x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment seg, long index, @C("D3D12_ROOT_DESCRIPTOR_FLAGS") int x) {
            d3d12_h$constants$3.D3D12_ROOT_DESCRIPTOR1$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_DESCRIPTOR1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_DESCRIPTOR1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_DESCRIPTOR1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_DESCRIPTOR1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_ROOT_PARAMETER1 {

        private D3D12_ROOT_PARAMETER1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$struct$LAYOUT();
        }
        public static VarHandle ParameterType$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ParameterType$VH();
        }
        public static  @C("D3D12_ROOT_PARAMETER_TYPE") int ParameterType$get(@C("struct D3D12_ROOT_PARAMETER1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ParameterType$VH().get(seg);
        }
        public static  @C("D3D12_ROOT_PARAMETER_TYPE") int ParameterType$get(@C("struct D3D12_ROOT_PARAMETER1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ParameterType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ParameterType$set(@C("struct D3D12_ROOT_PARAMETER1") MemorySegment seg, @C("D3D12_ROOT_PARAMETER_TYPE") int x) {
            d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ParameterType$VH().set(seg, x);
        }
        public static void ParameterType$set(@C("struct D3D12_ROOT_PARAMETER1") MemorySegment seg, long index, @C("D3D12_ROOT_PARAMETER_TYPE") int x) {
            d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ParameterType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment DescriptorTable$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static MemorySegment Constants$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 12));
        }
        public static MemorySegment Descriptor$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(36, 12));
        }
        public static VarHandle ShaderVisibility$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ShaderVisibility$VH();
        }
        public static  @C("D3D12_SHADER_VISIBILITY") int ShaderVisibility$get(@C("struct D3D12_ROOT_PARAMETER1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ShaderVisibility$VH().get(seg);
        }
        public static  @C("D3D12_SHADER_VISIBILITY") int ShaderVisibility$get(@C("struct D3D12_ROOT_PARAMETER1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ShaderVisibility$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShaderVisibility$set(@C("struct D3D12_ROOT_PARAMETER1") MemorySegment seg, @C("D3D12_SHADER_VISIBILITY") int x) {
            d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ShaderVisibility$VH().set(seg, x);
        }
        public static void ShaderVisibility$set(@C("struct D3D12_ROOT_PARAMETER1") MemorySegment seg, long index, @C("D3D12_SHADER_VISIBILITY") int x) {
            d3d12_h$constants$3.D3D12_ROOT_PARAMETER1$ShaderVisibility$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_PARAMETER1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_PARAMETER1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_PARAMETER1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_PARAMETER1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_PARAMETER1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_PARAMETER1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_ROOT_SIGNATURE_DESC1 {

        private D3D12_ROOT_SIGNATURE_DESC1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT();
        }
        public static VarHandle NumParameters$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumParameters$VH();
        }
        public static  @C("UINT") int NumParameters$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumParameters$VH().get(seg);
        }
        public static  @C("UINT") int NumParameters$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumParameters$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumParameters$VH().set(seg, x);
        }
        public static void NumParameters$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pParameters$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pParameters$VH();
        }
        public static  @C("const D3D12_ROOT_PARAMETER1*") MemoryAddress pParameters$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pParameters$VH().get(seg);
        }
        public static  @C("const D3D12_ROOT_PARAMETER1*") MemoryAddress pParameters$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pParameters$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, @C("const D3D12_ROOT_PARAMETER1*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pParameters$VH().set(seg, x);
        }
        public static void pParameters$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index, @C("const D3D12_ROOT_PARAMETER1*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumStaticSamplers$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$VH();
        }
        public static  @C("UINT") int NumStaticSamplers$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$VH().get(seg);
        }
        public static  @C("UINT") int NumStaticSamplers$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumStaticSamplers$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$VH().set(seg, x);
        }
        public static void NumStaticSamplers$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pStaticSamplers$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$VH();
        }
        public static  @C("const D3D12_STATIC_SAMPLER_DESC*") MemoryAddress pStaticSamplers$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$VH().get(seg);
        }
        public static  @C("const D3D12_STATIC_SAMPLER_DESC*") MemoryAddress pStaticSamplers$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pStaticSamplers$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, @C("const D3D12_STATIC_SAMPLER_DESC*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$VH().set(seg, x);
        }
        public static void pStaticSamplers$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index, @C("const D3D12_STATIC_SAMPLER_DESC*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$Flags$VH();
        }
        public static  @C("D3D12_ROOT_SIGNATURE_FLAGS") int Flags$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$Flags$VH().get(seg);
        }
        public static  @C("D3D12_ROOT_SIGNATURE_FLAGS") int Flags$get(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, @C("D3D12_ROOT_SIGNATURE_FLAGS") int x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment seg, long index, @C("D3D12_ROOT_SIGNATURE_FLAGS") int x) {
            d3d12_h$constants$3.D3D12_ROOT_SIGNATURE_DESC1$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_ROOT_SIGNATURE_DESC1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_ROOT_SIGNATURE_DESC1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_VERSIONED_ROOT_SIGNATURE_DESC {

        private D3D12_VERSIONED_ROOT_SIGNATURE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_VERSIONED_ROOT_SIGNATURE_DESC$struct$LAYOUT();
        }
        public static VarHandle Version$VH() {
            return d3d12_h$constants$3.D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$VH();
        }
        public static  @C("D3D_ROOT_SIGNATURE_VERSION") int Version$get(@C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$VH().get(seg);
        }
        public static  @C("D3D_ROOT_SIGNATURE_VERSION") int Version$get(@C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Version$set(@C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC") MemorySegment seg, @C("D3D_ROOT_SIGNATURE_VERSION") int x) {
            d3d12_h$constants$3.D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$VH().set(seg, x);
        }
        public static void Version$set(@C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC") MemorySegment seg, long index, @C("D3D_ROOT_SIGNATURE_VERSION") int x) {
            d3d12_h$constants$3.D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Desc_1_0$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 40));
        }
        public static MemorySegment Desc_1_1$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(48, 40));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$VH().get(d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$VH().set(d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$VH().get(d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$VH().set(d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12RootSignatureDeserializer$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12RootSignatureDeserializer$SEGMENT();
    }
    public static class ID3D12RootSignatureDeserializerVtbl {

        private ID3D12RootSignatureDeserializerVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12RootSignatureDeserializer*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12RootSignatureDeserializer*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12RootSignatureDeserializer*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12RootSignatureDeserializer*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress AddRef$get(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress AddRef$get(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress Release$get(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress Release$get(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRootSignatureDesc$VH() {
            return d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$VH();
        }
        public static  @C("const D3D12_ROOT_SIGNATURE_DESC*(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress GetRootSignatureDesc$get(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$VH().get(seg);
        }
        public static  @C("const D3D12_ROOT_SIGNATURE_DESC*(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress GetRootSignatureDesc$get(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRootSignatureDesc$set(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, @C("const D3D12_ROOT_SIGNATURE_DESC*(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$VH().set(seg, x);
        }
        public static void GetRootSignatureDesc$set(@C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("const D3D12_ROOT_SIGNATURE_DESC*(*)(ID3D12RootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12RootSignatureDeserializerVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12RootSignatureDeserializerVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12RootSignatureDeserializerVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12RootSignatureDeserializerVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12RootSignatureDeserializerVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12RootSignatureDeserializer {

        private ID3D12RootSignatureDeserializer() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12RootSignatureDeserializer$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12RootSignatureDeserializer$lpVtbl$VH();
        }
        public static  @C("struct ID3D12RootSignatureDeserializerVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12RootSignatureDeserializer") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializer$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12RootSignatureDeserializerVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12RootSignatureDeserializer") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12RootSignatureDeserializer$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12RootSignatureDeserializer") MemorySegment seg, @C("struct ID3D12RootSignatureDeserializerVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializer$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12RootSignatureDeserializer") MemorySegment seg, long index, @C("struct ID3D12RootSignatureDeserializerVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12RootSignatureDeserializer$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12RootSignatureDeserializer") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12RootSignatureDeserializer") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12RootSignatureDeserializer[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12RootSignatureDeserializer[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12RootSignatureDeserializer*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12RootSignatureDeserializer*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12VersionedRootSignatureDeserializer$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12VersionedRootSignatureDeserializer$SEGMENT();
    }
    public static class ID3D12VersionedRootSignatureDeserializerVtbl {

        private ID3D12VersionedRootSignatureDeserializerVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12VersionedRootSignatureDeserializer*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12VersionedRootSignatureDeserializer*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12VersionedRootSignatureDeserializer*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12VersionedRootSignatureDeserializer*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress AddRef$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress AddRef$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress Release$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress Release$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRootSignatureDescAtVersion$VH() {
            return d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12VersionedRootSignatureDeserializer*,D3D_ROOT_SIGNATURE_VERSION,const D3D12_VERSIONED_ROOT_SIGNATURE_DESC**)") MemoryAddress GetRootSignatureDescAtVersion$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12VersionedRootSignatureDeserializer*,D3D_ROOT_SIGNATURE_VERSION,const D3D12_VERSIONED_ROOT_SIGNATURE_DESC**)") MemoryAddress GetRootSignatureDescAtVersion$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRootSignatureDescAtVersion$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12VersionedRootSignatureDeserializer*,D3D_ROOT_SIGNATURE_VERSION,const D3D12_VERSIONED_ROOT_SIGNATURE_DESC**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$VH().set(seg, x);
        }
        public static void GetRootSignatureDescAtVersion$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12VersionedRootSignatureDeserializer*,D3D_ROOT_SIGNATURE_VERSION,const D3D12_VERSIONED_ROOT_SIGNATURE_DESC**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetUnconvertedRootSignatureDesc$VH() {
            return d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$VH();
        }
        public static  @C("const D3D12_VERSIONED_ROOT_SIGNATURE_DESC*(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress GetUnconvertedRootSignatureDesc$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$VH().get(seg);
        }
        public static  @C("const D3D12_VERSIONED_ROOT_SIGNATURE_DESC*(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress GetUnconvertedRootSignatureDesc$get(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetUnconvertedRootSignatureDesc$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, @C("const D3D12_VERSIONED_ROOT_SIGNATURE_DESC*(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$VH().set(seg, x);
        }
        public static void GetUnconvertedRootSignatureDesc$set(@C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment seg, long index, @C("const D3D12_VERSIONED_ROOT_SIGNATURE_DESC*(*)(ID3D12VersionedRootSignatureDeserializer*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12VersionedRootSignatureDeserializerVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12VersionedRootSignatureDeserializerVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12VersionedRootSignatureDeserializerVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12VersionedRootSignatureDeserializerVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12VersionedRootSignatureDeserializerVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12VersionedRootSignatureDeserializer {

        private ID3D12VersionedRootSignatureDeserializer() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializer$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializer$lpVtbl$VH();
        }
        public static  @C("struct ID3D12VersionedRootSignatureDeserializerVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12VersionedRootSignatureDeserializer") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializer$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12VersionedRootSignatureDeserializerVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12VersionedRootSignatureDeserializer") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializer$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12VersionedRootSignatureDeserializer") MemorySegment seg, @C("struct ID3D12VersionedRootSignatureDeserializerVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializer$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12VersionedRootSignatureDeserializer") MemorySegment seg, long index, @C("struct ID3D12VersionedRootSignatureDeserializerVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12VersionedRootSignatureDeserializer$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12VersionedRootSignatureDeserializer") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12VersionedRootSignatureDeserializer") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12VersionedRootSignatureDeserializer[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12VersionedRootSignatureDeserializer[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12VersionedRootSignatureDeserializer*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12VersionedRootSignatureDeserializer*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MethodHandle D3D12SerializeRootSignature$MH() {
        return d3d12_h$constants$3.D3D12SerializeRootSignature$MH();
    }
    public static @C("HRESULT") int D3D12SerializeRootSignature (@C("const D3D12_ROOT_SIGNATURE_DESC*") Addressable pRootSignature, @C("D3D_ROOT_SIGNATURE_VERSION") int Version, @C("ID3DBlob**") Addressable ppBlob, @C("ID3DBlob**") Addressable ppErrorBlob) {
        try {
            return (int)d3d12_h$constants$3.D3D12SerializeRootSignature$MH().invokeExact(pRootSignature.address(), Version, ppBlob.address(), ppErrorBlob.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle D3D12CreateRootSignatureDeserializer$MH() {
        return d3d12_h$constants$3.D3D12CreateRootSignatureDeserializer$MH();
    }
    public static @C("HRESULT") int D3D12CreateRootSignatureDeserializer (@C("LPCVOID") Addressable pSrcData, @C("SIZE_T") long SrcDataSizeInBytes, @C("const IID*") Addressable pRootSignatureDeserializerInterface, @C("void**") Addressable ppRootSignatureDeserializer) {
        try {
            return (int)d3d12_h$constants$3.D3D12CreateRootSignatureDeserializer$MH().invokeExact(pSrcData.address(), SrcDataSizeInBytes, pRootSignatureDeserializerInterface.address(), ppRootSignatureDeserializer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle D3D12SerializeVersionedRootSignature$MH() {
        return d3d12_h$constants$3.D3D12SerializeVersionedRootSignature$MH();
    }
    public static @C("HRESULT") int D3D12SerializeVersionedRootSignature (@C("const D3D12_VERSIONED_ROOT_SIGNATURE_DESC*") Addressable pRootSignature, @C("ID3DBlob**") Addressable ppBlob, @C("ID3DBlob**") Addressable ppErrorBlob) {
        try {
            return (int)d3d12_h$constants$3.D3D12SerializeVersionedRootSignature$MH().invokeExact(pRootSignature.address(), ppBlob.address(), ppErrorBlob.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle D3D12CreateVersionedRootSignatureDeserializer$MH() {
        return d3d12_h$constants$3.D3D12CreateVersionedRootSignatureDeserializer$MH();
    }
    public static @C("HRESULT") int D3D12CreateVersionedRootSignatureDeserializer (@C("LPCVOID") Addressable pSrcData, @C("SIZE_T") long SrcDataSizeInBytes, @C("const IID*") Addressable pRootSignatureDeserializerInterface, @C("void**") Addressable ppRootSignatureDeserializer) {
        try {
            return (int)d3d12_h$constants$3.D3D12CreateVersionedRootSignatureDeserializer$MH().invokeExact(pSrcData.address(), SrcDataSizeInBytes, pRootSignatureDeserializerInterface.address(), ppRootSignatureDeserializer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static class D3D12_CPU_DESCRIPTOR_HANDLE {

        private D3D12_CPU_DESCRIPTOR_HANDLE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_CPU_DESCRIPTOR_HANDLE$struct$LAYOUT();
        }
        public static VarHandle ptr$VH() {
            return d3d12_h$constants$3.D3D12_CPU_DESCRIPTOR_HANDLE$ptr$VH();
        }
        public static  @C("SIZE_T") long ptr$get(@C("struct D3D12_CPU_DESCRIPTOR_HANDLE") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_CPU_DESCRIPTOR_HANDLE$ptr$VH().get(seg);
        }
        public static  @C("SIZE_T") long ptr$get(@C("struct D3D12_CPU_DESCRIPTOR_HANDLE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_CPU_DESCRIPTOR_HANDLE$ptr$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ptr$set(@C("struct D3D12_CPU_DESCRIPTOR_HANDLE") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$3.D3D12_CPU_DESCRIPTOR_HANDLE$ptr$VH().set(seg, x);
        }
        public static void ptr$set(@C("struct D3D12_CPU_DESCRIPTOR_HANDLE") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$3.D3D12_CPU_DESCRIPTOR_HANDLE$ptr$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_CPU_DESCRIPTOR_HANDLE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_CPU_DESCRIPTOR_HANDLE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_CPU_DESCRIPTOR_HANDLE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_CPU_DESCRIPTOR_HANDLE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_CPU_DESCRIPTOR_HANDLE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_CPU_DESCRIPTOR_HANDLE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_GPU_DESCRIPTOR_HANDLE {

        private D3D12_GPU_DESCRIPTOR_HANDLE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_GPU_DESCRIPTOR_HANDLE$struct$LAYOUT();
        }
        public static VarHandle ptr$VH() {
            return d3d12_h$constants$3.D3D12_GPU_DESCRIPTOR_HANDLE$ptr$VH();
        }
        public static  @C("UINT64") long ptr$get(@C("struct D3D12_GPU_DESCRIPTOR_HANDLE") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_GPU_DESCRIPTOR_HANDLE$ptr$VH().get(seg);
        }
        public static  @C("UINT64") long ptr$get(@C("struct D3D12_GPU_DESCRIPTOR_HANDLE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_GPU_DESCRIPTOR_HANDLE$ptr$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ptr$set(@C("struct D3D12_GPU_DESCRIPTOR_HANDLE") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_GPU_DESCRIPTOR_HANDLE$ptr$VH().set(seg, x);
        }
        public static void ptr$set(@C("struct D3D12_GPU_DESCRIPTOR_HANDLE") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_GPU_DESCRIPTOR_HANDLE$ptr$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_GPU_DESCRIPTOR_HANDLE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_GPU_DESCRIPTOR_HANDLE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_GPU_DESCRIPTOR_HANDLE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_GPU_DESCRIPTOR_HANDLE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_GPU_DESCRIPTOR_HANDLE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_GPU_DESCRIPTOR_HANDLE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DISCARD_REGION {

        private D3D12_DISCARD_REGION() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_DISCARD_REGION$struct$LAYOUT();
        }
        public static VarHandle NumRects$VH() {
            return d3d12_h$constants$3.D3D12_DISCARD_REGION$NumRects$VH();
        }
        public static  @C("UINT") int NumRects$get(@C("struct D3D12_DISCARD_REGION") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DISCARD_REGION$NumRects$VH().get(seg);
        }
        public static  @C("UINT") int NumRects$get(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DISCARD_REGION$NumRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumRects$set(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISCARD_REGION$NumRects$VH().set(seg, x);
        }
        public static void NumRects$set(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISCARD_REGION$NumRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pRects$VH() {
            return d3d12_h$constants$3.D3D12_DISCARD_REGION$pRects$VH();
        }
        public static  @C("const D3D12_RECT*") MemoryAddress pRects$get(@C("struct D3D12_DISCARD_REGION") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_DISCARD_REGION$pRects$VH().get(seg);
        }
        public static  @C("const D3D12_RECT*") MemoryAddress pRects$get(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_DISCARD_REGION$pRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pRects$set(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, @C("const D3D12_RECT*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_DISCARD_REGION$pRects$VH().set(seg, x);
        }
        public static void pRects$set(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, long index, @C("const D3D12_RECT*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_DISCARD_REGION$pRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle FirstSubresource$VH() {
            return d3d12_h$constants$3.D3D12_DISCARD_REGION$FirstSubresource$VH();
        }
        public static  @C("UINT") int FirstSubresource$get(@C("struct D3D12_DISCARD_REGION") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DISCARD_REGION$FirstSubresource$VH().get(seg);
        }
        public static  @C("UINT") int FirstSubresource$get(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DISCARD_REGION$FirstSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void FirstSubresource$set(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISCARD_REGION$FirstSubresource$VH().set(seg, x);
        }
        public static void FirstSubresource$set(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISCARD_REGION$FirstSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumSubresources$VH() {
            return d3d12_h$constants$3.D3D12_DISCARD_REGION$NumSubresources$VH();
        }
        public static  @C("UINT") int NumSubresources$get(@C("struct D3D12_DISCARD_REGION") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DISCARD_REGION$NumSubresources$VH().get(seg);
        }
        public static  @C("UINT") int NumSubresources$get(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DISCARD_REGION$NumSubresources$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumSubresources$set(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISCARD_REGION$NumSubresources$VH().set(seg, x);
        }
        public static void NumSubresources$set(@C("struct D3D12_DISCARD_REGION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISCARD_REGION$NumSubresources$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DISCARD_REGION") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DISCARD_REGION") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DISCARD_REGION[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DISCARD_REGION[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DISCARD_REGION*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DISCARD_REGION*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_QUERY_HEAP_TYPE_OCCLUSION() {
        return d3d12_h$constants$3.D3D12_QUERY_HEAP_TYPE_OCCLUSION();
    }
    public static @C("int") int D3D12_QUERY_HEAP_TYPE_TIMESTAMP() {
        return d3d12_h$constants$3.D3D12_QUERY_HEAP_TYPE_TIMESTAMP();
    }
    public static @C("int") int D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS() {
        return d3d12_h$constants$3.D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS();
    }
    public static @C("int") int D3D12_QUERY_HEAP_TYPE_SO_STATISTICS() {
        return d3d12_h$constants$3.D3D12_QUERY_HEAP_TYPE_SO_STATISTICS();
    }
    public static @C("int") int D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS() {
        return d3d12_h$constants$3.D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS();
    }
    public static @C("int") int D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP() {
        return d3d12_h$constants$3.D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP();
    }
    public static class D3D12_QUERY_HEAP_DESC {

        private D3D12_QUERY_HEAP_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Type$VH();
        }
        public static  @C("D3D12_QUERY_HEAP_TYPE") int Type$get(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Type$VH().get(seg);
        }
        public static  @C("D3D12_QUERY_HEAP_TYPE") int Type$get(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, @C("D3D12_QUERY_HEAP_TYPE") int x) {
            d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, long index, @C("D3D12_QUERY_HEAP_TYPE") int x) {
            d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Count$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Count$VH();
        }
        public static  @C("UINT") int Count$get(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Count$VH().get(seg);
        }
        public static  @C("UINT") int Count$get(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Count$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Count$set(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Count$VH().set(seg, x);
        }
        public static void Count$set(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$Count$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_QUERY_HEAP_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_QUERY_HEAP_DESC$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_QUERY_HEAP_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_QUERY_HEAP_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_QUERY_HEAP_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_QUERY_HEAP_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_QUERY_HEAP_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_QUERY_HEAP_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_QUERY_TYPE_OCCLUSION() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_OCCLUSION();
    }
    public static @C("int") int D3D12_QUERY_TYPE_BINARY_OCCLUSION() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_BINARY_OCCLUSION();
    }
    public static @C("int") int D3D12_QUERY_TYPE_TIMESTAMP() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_TIMESTAMP();
    }
    public static @C("int") int D3D12_QUERY_TYPE_PIPELINE_STATISTICS() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_PIPELINE_STATISTICS();
    }
    public static @C("int") int D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0();
    }
    public static @C("int") int D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1();
    }
    public static @C("int") int D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2();
    }
    public static @C("int") int D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3();
    }
    public static @C("int") int D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS() {
        return d3d12_h$constants$3.D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS();
    }
    public static @C("int") int D3D12_PREDICATION_OP_EQUAL_ZERO() {
        return d3d12_h$constants$3.D3D12_PREDICATION_OP_EQUAL_ZERO();
    }
    public static @C("int") int D3D12_PREDICATION_OP_NOT_EQUAL_ZERO() {
        return d3d12_h$constants$3.D3D12_PREDICATION_OP_NOT_EQUAL_ZERO();
    }
    public static class D3D12_QUERY_DATA_PIPELINE_STATISTICS {

        private D3D12_QUERY_DATA_PIPELINE_STATISTICS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT();
        }
        public static VarHandle IAVertices$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$VH();
        }
        public static  @C("UINT64") long IAVertices$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$VH().get(seg);
        }
        public static  @C("UINT64") long IAVertices$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IAVertices$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$VH().set(seg, x);
        }
        public static void IAVertices$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IAPrimitives$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$VH();
        }
        public static  @C("UINT64") long IAPrimitives$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$VH().get(seg);
        }
        public static  @C("UINT64") long IAPrimitives$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IAPrimitives$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$VH().set(seg, x);
        }
        public static void IAPrimitives$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle VSInvocations$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$VH();
        }
        public static  @C("UINT64") long VSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$VH().get(seg);
        }
        public static  @C("UINT64") long VSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$VH().set(seg, x);
        }
        public static void VSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GSInvocations$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$VH();
        }
        public static  @C("UINT64") long GSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$VH().get(seg);
        }
        public static  @C("UINT64") long GSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$VH().set(seg, x);
        }
        public static void GSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GSPrimitives$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$VH();
        }
        public static  @C("UINT64") long GSPrimitives$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$VH().get(seg);
        }
        public static  @C("UINT64") long GSPrimitives$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GSPrimitives$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$VH().set(seg, x);
        }
        public static void GSPrimitives$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CInvocations$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$VH();
        }
        public static  @C("UINT64") long CInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$VH().get(seg);
        }
        public static  @C("UINT64") long CInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$VH().set(seg, x);
        }
        public static void CInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CPrimitives$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$VH();
        }
        public static  @C("UINT64") long CPrimitives$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$VH().get(seg);
        }
        public static  @C("UINT64") long CPrimitives$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CPrimitives$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$VH().set(seg, x);
        }
        public static void CPrimitives$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PSInvocations$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$VH();
        }
        public static  @C("UINT64") long PSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$VH().get(seg);
        }
        public static  @C("UINT64") long PSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$VH().set(seg, x);
        }
        public static void PSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HSInvocations$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$VH();
        }
        public static  @C("UINT64") long HSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$VH().get(seg);
        }
        public static  @C("UINT64") long HSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$VH().set(seg, x);
        }
        public static void HSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DSInvocations$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$VH();
        }
        public static  @C("UINT64") long DSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$VH().get(seg);
        }
        public static  @C("UINT64") long DSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$VH().set(seg, x);
        }
        public static void DSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CSInvocations$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$VH();
        }
        public static  @C("UINT64") long CSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$VH().get(seg);
        }
        public static  @C("UINT64") long CSInvocations$get(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$VH().set(seg, x);
        }
        public static void CSInvocations$set(@C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_QUERY_DATA_PIPELINE_STATISTICS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_QUERY_DATA_SO_STATISTICS {

        private D3D12_QUERY_DATA_SO_STATISTICS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$struct$LAYOUT();
        }
        public static VarHandle NumPrimitivesWritten$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$VH();
        }
        public static  @C("UINT64") long NumPrimitivesWritten$get(@C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$VH().get(seg);
        }
        public static  @C("UINT64") long NumPrimitivesWritten$get(@C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumPrimitivesWritten$set(@C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$VH().set(seg, x);
        }
        public static void NumPrimitivesWritten$set(@C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PrimitivesStorageNeeded$VH() {
            return d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$VH();
        }
        public static  @C("UINT64") long PrimitivesStorageNeeded$get(@C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$VH().get(seg);
        }
        public static  @C("UINT64") long PrimitivesStorageNeeded$get(@C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PrimitivesStorageNeeded$set(@C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$VH().set(seg, x);
        }
        public static void PrimitivesStorageNeeded$set(@C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_QUERY_DATA_SO_STATISTICS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_QUERY_DATA_SO_STATISTICS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_QUERY_DATA_SO_STATISTICS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_QUERY_DATA_SO_STATISTICS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_QUERY_DATA_SO_STATISTICS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_STREAM_OUTPUT_BUFFER_VIEW {

        private D3D12_STREAM_OUTPUT_BUFFER_VIEW() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$struct$LAYOUT();
        }
        public static VarHandle BufferLocation$VH() {
            return d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferLocation$get(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferLocation$get(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BufferLocation$set(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$VH().set(seg, x);
        }
        public static void BufferLocation$set(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$VH();
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BufferFilledSizeLocation$VH() {
            return d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferFilledSizeLocation$get(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferFilledSizeLocation$get(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BufferFilledSizeLocation$set(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$VH().set(seg, x);
        }
        public static void BufferFilledSizeLocation$set(@C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$3.D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_STREAM_OUTPUT_BUFFER_VIEW*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DRAW_ARGUMENTS {

        private D3D12_DRAW_ARGUMENTS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$struct$LAYOUT();
        }
        public static VarHandle VertexCountPerInstance$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$VH();
        }
        public static  @C("UINT") int VertexCountPerInstance$get(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$VH().get(seg);
        }
        public static  @C("UINT") int VertexCountPerInstance$get(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VertexCountPerInstance$set(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$VH().set(seg, x);
        }
        public static void VertexCountPerInstance$set(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InstanceCount$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$InstanceCount$VH();
        }
        public static  @C("UINT") int InstanceCount$get(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$InstanceCount$VH().get(seg);
        }
        public static  @C("UINT") int InstanceCount$get(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$InstanceCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InstanceCount$set(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$InstanceCount$VH().set(seg, x);
        }
        public static void InstanceCount$set(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$InstanceCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartVertexLocation$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartVertexLocation$VH();
        }
        public static  @C("UINT") int StartVertexLocation$get(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartVertexLocation$VH().get(seg);
        }
        public static  @C("UINT") int StartVertexLocation$get(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartVertexLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartVertexLocation$set(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartVertexLocation$VH().set(seg, x);
        }
        public static void StartVertexLocation$set(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartVertexLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartInstanceLocation$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartInstanceLocation$VH();
        }
        public static  @C("UINT") int StartInstanceLocation$get(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartInstanceLocation$VH().get(seg);
        }
        public static  @C("UINT") int StartInstanceLocation$get(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartInstanceLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartInstanceLocation$set(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartInstanceLocation$VH().set(seg, x);
        }
        public static void StartInstanceLocation$set(@C("struct D3D12_DRAW_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_ARGUMENTS$StartInstanceLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRAW_ARGUMENTS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRAW_ARGUMENTS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRAW_ARGUMENTS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRAW_ARGUMENTS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRAW_ARGUMENTS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRAW_ARGUMENTS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DRAW_INDEXED_ARGUMENTS {

        private D3D12_DRAW_INDEXED_ARGUMENTS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT();
        }
        public static VarHandle IndexCountPerInstance$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$VH();
        }
        public static  @C("UINT") int IndexCountPerInstance$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$VH().get(seg);
        }
        public static  @C("UINT") int IndexCountPerInstance$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IndexCountPerInstance$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$VH().set(seg, x);
        }
        public static void IndexCountPerInstance$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InstanceCount$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$VH();
        }
        public static  @C("UINT") int InstanceCount$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$VH().get(seg);
        }
        public static  @C("UINT") int InstanceCount$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InstanceCount$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$VH().set(seg, x);
        }
        public static void InstanceCount$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartIndexLocation$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$VH();
        }
        public static  @C("UINT") int StartIndexLocation$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$VH().get(seg);
        }
        public static  @C("UINT") int StartIndexLocation$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartIndexLocation$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$VH().set(seg, x);
        }
        public static void StartIndexLocation$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BaseVertexLocation$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$VH();
        }
        public static  @C("INT") int BaseVertexLocation$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$VH().get(seg);
        }
        public static  @C("INT") int BaseVertexLocation$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BaseVertexLocation$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, @C("INT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$VH().set(seg, x);
        }
        public static void BaseVertexLocation$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index, @C("INT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartInstanceLocation$VH() {
            return d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$VH();
        }
        public static  @C("UINT") int StartInstanceLocation$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$VH().get(seg);
        }
        public static  @C("UINT") int StartInstanceLocation$get(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartInstanceLocation$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$VH().set(seg, x);
        }
        public static void StartInstanceLocation$set(@C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRAW_INDEXED_ARGUMENTS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRAW_INDEXED_ARGUMENTS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRAW_INDEXED_ARGUMENTS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRAW_INDEXED_ARGUMENTS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRAW_INDEXED_ARGUMENTS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DISPATCH_ARGUMENTS {

        private D3D12_DISPATCH_ARGUMENTS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$struct$LAYOUT();
        }
        public static VarHandle ThreadGroupCountX$VH() {
            return d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$VH();
        }
        public static  @C("UINT") int ThreadGroupCountX$get(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$VH().get(seg);
        }
        public static  @C("UINT") int ThreadGroupCountX$get(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadGroupCountX$set(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$VH().set(seg, x);
        }
        public static void ThreadGroupCountX$set(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ThreadGroupCountY$VH() {
            return d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$VH();
        }
        public static  @C("UINT") int ThreadGroupCountY$get(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$VH().get(seg);
        }
        public static  @C("UINT") int ThreadGroupCountY$get(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadGroupCountY$set(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$VH().set(seg, x);
        }
        public static void ThreadGroupCountY$set(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ThreadGroupCountZ$VH() {
            return d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$VH();
        }
        public static  @C("UINT") int ThreadGroupCountZ$get(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$VH().get(seg);
        }
        public static  @C("UINT") int ThreadGroupCountZ$get(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadGroupCountZ$set(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$VH().set(seg, x);
        }
        public static void ThreadGroupCountZ$set(@C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DISPATCH_ARGUMENTS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DISPATCH_ARGUMENTS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DISPATCH_ARGUMENTS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DISPATCH_ARGUMENTS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DISPATCH_ARGUMENTS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_VERTEX_BUFFER_VIEW {

        private D3D12_VERTEX_BUFFER_VIEW() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$struct$LAYOUT();
        }
        public static VarHandle BufferLocation$VH() {
            return d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$BufferLocation$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferLocation$get(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$BufferLocation$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferLocation$get(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$BufferLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BufferLocation$set(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$BufferLocation$VH().set(seg, x);
        }
        public static void BufferLocation$set(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$BufferLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$VH();
        }
        public static  @C("UINT") int SizeInBytes$get(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT") int SizeInBytes$get(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StrideInBytes$VH() {
            return d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$VH();
        }
        public static  @C("UINT") int StrideInBytes$get(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$VH().get(seg);
        }
        public static  @C("UINT") int StrideInBytes$get(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StrideInBytes$set(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$VH().set(seg, x);
        }
        public static void StrideInBytes$set(@C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_VERTEX_BUFFER_VIEW") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_VERTEX_BUFFER_VIEW[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_VERTEX_BUFFER_VIEW[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_VERTEX_BUFFER_VIEW*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_VERTEX_BUFFER_VIEW*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_INDEX_BUFFER_VIEW {

        private D3D12_INDEX_BUFFER_VIEW() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$struct$LAYOUT();
        }
        public static VarHandle BufferLocation$VH() {
            return d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$BufferLocation$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferLocation$get(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg) {
            return (long)d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$BufferLocation$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long BufferLocation$get(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$BufferLocation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BufferLocation$set(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$BufferLocation$VH().set(seg, x);
        }
        public static void BufferLocation$set(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$BufferLocation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$SizeInBytes$VH();
        }
        public static  @C("UINT") int SizeInBytes$get(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT") int SizeInBytes$get(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$3.D3D12_INDEX_BUFFER_VIEW$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_INDEX_BUFFER_VIEW") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_INDEX_BUFFER_VIEW[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_INDEX_BUFFER_VIEW[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_INDEX_BUFFER_VIEW*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_INDEX_BUFFER_VIEW*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_DRAW() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_DRAW();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS();
    }
    public static @C("int") int D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_MESH() {
        return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_MESH();
    }
    public static class D3D12_INDIRECT_ARGUMENT_DESC {

        private D3D12_INDIRECT_ARGUMENT_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_DESC$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_DESC$Type$VH();
        }
        public static  @C("D3D12_INDIRECT_ARGUMENT_TYPE") int Type$get(@C("struct D3D12_INDIRECT_ARGUMENT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_DESC$Type$VH().get(seg);
        }
        public static  @C("D3D12_INDIRECT_ARGUMENT_TYPE") int Type$get(@C("struct D3D12_INDIRECT_ARGUMENT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_DESC$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_INDIRECT_ARGUMENT_DESC") MemorySegment seg, @C("D3D12_INDIRECT_ARGUMENT_TYPE") int x) {
            d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_DESC$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_INDIRECT_ARGUMENT_DESC") MemorySegment seg, long index, @C("D3D12_INDIRECT_ARGUMENT_TYPE") int x) {
            d3d12_h$constants$3.D3D12_INDIRECT_ARGUMENT_DESC$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static class VertexBuffer {

            private VertexBuffer() {}
            public static MemoryLayout $LAYOUT() {
                return d3d12_h$constants$3.VertexBuffer$struct$LAYOUT();
            }
            public static VarHandle Slot$VH() {
                return d3d12_h$constants$3.VertexBuffer$Slot$VH();
            }
            public static  @C("UINT") int Slot$get(@C("struct ") MemorySegment seg) {
                return (int)d3d12_h$constants$3.VertexBuffer$Slot$VH().get(seg);
            }
            public static  @C("UINT") int Slot$get(@C("struct ") MemorySegment seg, long index) {
                return (int)d3d12_h$constants$3.VertexBuffer$Slot$VH().get(seg.asSlice(index*sizeof()));
            }
            public static void Slot$set(@C("struct ") MemorySegment seg, @C("UINT") int x) {
                d3d12_h$constants$3.VertexBuffer$Slot$VH().set(seg, x);
            }
            public static void Slot$set(@C("struct ") MemorySegment seg, long index, @C("UINT") int x) {
                d3d12_h$constants$3.VertexBuffer$Slot$VH().set(seg.asSlice(index*sizeof()), x);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static @C("struct ") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
            public static @C("struct ") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
            public static @C("struct []") MemorySegment allocateArray(int len) {
                return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
            }            public static @C("struct []") MemorySegment allocateArray(int len, NativeScope scope) {
                return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
            }
            public static @C("struct *") MemorySegment allocatePointer() {
                return MemorySegment.allocateNative(C_POINTER);
            }
            public static @C("struct *") MemorySegment allocatePointer(NativeScope scope) {
                return scope.allocate(C_POINTER);
            }
        }

        public static MemorySegment VertexBuffer$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 4));
        }
        public static class Constant {

            private Constant() {}
            public static MemoryLayout $LAYOUT() {
                return d3d12_h$constants$3.Constant$struct$LAYOUT();
            }
            public static VarHandle RootParameterIndex$VH() {
                return d3d12_h$constants$3.Constant$RootParameterIndex$VH();
            }
            public static  @C("UINT") int RootParameterIndex$get(@C("struct ") MemorySegment seg) {
                return (int)d3d12_h$constants$3.Constant$RootParameterIndex$VH().get(seg);
            }
            public static  @C("UINT") int RootParameterIndex$get(@C("struct ") MemorySegment seg, long index) {
                return (int)d3d12_h$constants$3.Constant$RootParameterIndex$VH().get(seg.asSlice(index*sizeof()));
            }
            public static void RootParameterIndex$set(@C("struct ") MemorySegment seg, @C("UINT") int x) {
                d3d12_h$constants$3.Constant$RootParameterIndex$VH().set(seg, x);
            }
            public static void RootParameterIndex$set(@C("struct ") MemorySegment seg, long index, @C("UINT") int x) {
                d3d12_h$constants$3.Constant$RootParameterIndex$VH().set(seg.asSlice(index*sizeof()), x);
            }
            public static VarHandle DestOffsetIn32BitValues$VH() {
                return d3d12_h$constants$3.Constant$DestOffsetIn32BitValues$VH();
            }
            public static  @C("UINT") int DestOffsetIn32BitValues$get(@C("struct ") MemorySegment seg) {
                return (int)d3d12_h$constants$3.Constant$DestOffsetIn32BitValues$VH().get(seg);
            }
            public static  @C("UINT") int DestOffsetIn32BitValues$get(@C("struct ") MemorySegment seg, long index) {
                return (int)d3d12_h$constants$3.Constant$DestOffsetIn32BitValues$VH().get(seg.asSlice(index*sizeof()));
            }
            public static void DestOffsetIn32BitValues$set(@C("struct ") MemorySegment seg, @C("UINT") int x) {
                d3d12_h$constants$3.Constant$DestOffsetIn32BitValues$VH().set(seg, x);
            }
            public static void DestOffsetIn32BitValues$set(@C("struct ") MemorySegment seg, long index, @C("UINT") int x) {
                d3d12_h$constants$3.Constant$DestOffsetIn32BitValues$VH().set(seg.asSlice(index*sizeof()), x);
            }
            public static VarHandle Num32BitValuesToSet$VH() {
                return d3d12_h$constants$3.Constant$Num32BitValuesToSet$VH();
            }
            public static  @C("UINT") int Num32BitValuesToSet$get(@C("struct ") MemorySegment seg) {
                return (int)d3d12_h$constants$3.Constant$Num32BitValuesToSet$VH().get(seg);
            }
            public static  @C("UINT") int Num32BitValuesToSet$get(@C("struct ") MemorySegment seg, long index) {
                return (int)d3d12_h$constants$3.Constant$Num32BitValuesToSet$VH().get(seg.asSlice(index*sizeof()));
            }
            public static void Num32BitValuesToSet$set(@C("struct ") MemorySegment seg, @C("UINT") int x) {
                d3d12_h$constants$3.Constant$Num32BitValuesToSet$VH().set(seg, x);
            }
            public static void Num32BitValuesToSet$set(@C("struct ") MemorySegment seg, long index, @C("UINT") int x) {
                d3d12_h$constants$3.Constant$Num32BitValuesToSet$VH().set(seg.asSlice(index*sizeof()), x);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static @C("struct ") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
            public static @C("struct ") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
            public static @C("struct []") MemorySegment allocateArray(int len) {
                return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
            }            public static @C("struct []") MemorySegment allocateArray(int len, NativeScope scope) {
                return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
            }
            public static @C("struct *") MemorySegment allocatePointer() {
                return MemorySegment.allocateNative(C_POINTER);
            }
            public static @C("struct *") MemorySegment allocatePointer(NativeScope scope) {
                return scope.allocate(C_POINTER);
            }
        }

        public static MemorySegment Constant$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 12));
        }
        public static class ConstantBufferView {

            private ConstantBufferView() {}
            public static MemoryLayout $LAYOUT() {
                return d3d12_h$constants$3.ConstantBufferView$struct$LAYOUT();
            }
            public static VarHandle RootParameterIndex$VH() {
                return d3d12_h$constants$3.ConstantBufferView$RootParameterIndex$VH();
            }
            public static  @C("UINT") int RootParameterIndex$get(@C("struct ") MemorySegment seg) {
                return (int)d3d12_h$constants$3.ConstantBufferView$RootParameterIndex$VH().get(seg);
            }
            public static  @C("UINT") int RootParameterIndex$get(@C("struct ") MemorySegment seg, long index) {
                return (int)d3d12_h$constants$3.ConstantBufferView$RootParameterIndex$VH().get(seg.asSlice(index*sizeof()));
            }
            public static void RootParameterIndex$set(@C("struct ") MemorySegment seg, @C("UINT") int x) {
                d3d12_h$constants$3.ConstantBufferView$RootParameterIndex$VH().set(seg, x);
            }
            public static void RootParameterIndex$set(@C("struct ") MemorySegment seg, long index, @C("UINT") int x) {
                d3d12_h$constants$3.ConstantBufferView$RootParameterIndex$VH().set(seg.asSlice(index*sizeof()), x);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static @C("struct ") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
            public static @C("struct ") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
            public static @C("struct []") MemorySegment allocateArray(int len) {
                return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
            }            public static @C("struct []") MemorySegment allocateArray(int len, NativeScope scope) {
                return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
            }
            public static @C("struct *") MemorySegment allocatePointer() {
                return MemorySegment.allocateNative(C_POINTER);
            }
            public static @C("struct *") MemorySegment allocatePointer(NativeScope scope) {
                return scope.allocate(C_POINTER);
            }
        }

        public static MemorySegment ConstantBufferView$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(20, 4));
        }
        public static class ShaderResourceView {

            private ShaderResourceView() {}
            public static MemoryLayout $LAYOUT() {
                return d3d12_h$constants$3.ShaderResourceView$struct$LAYOUT();
            }
            public static VarHandle RootParameterIndex$VH() {
                return d3d12_h$constants$3.ShaderResourceView$RootParameterIndex$VH();
            }
            public static  @C("UINT") int RootParameterIndex$get(@C("struct ") MemorySegment seg) {
                return (int)d3d12_h$constants$3.ShaderResourceView$RootParameterIndex$VH().get(seg);
            }
            public static  @C("UINT") int RootParameterIndex$get(@C("struct ") MemorySegment seg, long index) {
                return (int)d3d12_h$constants$3.ShaderResourceView$RootParameterIndex$VH().get(seg.asSlice(index*sizeof()));
            }
            public static void RootParameterIndex$set(@C("struct ") MemorySegment seg, @C("UINT") int x) {
                d3d12_h$constants$3.ShaderResourceView$RootParameterIndex$VH().set(seg, x);
            }
            public static void RootParameterIndex$set(@C("struct ") MemorySegment seg, long index, @C("UINT") int x) {
                d3d12_h$constants$3.ShaderResourceView$RootParameterIndex$VH().set(seg.asSlice(index*sizeof()), x);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static @C("struct ") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
            public static @C("struct ") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
            public static @C("struct []") MemorySegment allocateArray(int len) {
                return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
            }            public static @C("struct []") MemorySegment allocateArray(int len, NativeScope scope) {
                return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
            }
            public static @C("struct *") MemorySegment allocatePointer() {
                return MemorySegment.allocateNative(C_POINTER);
            }
            public static @C("struct *") MemorySegment allocatePointer(NativeScope scope) {
                return scope.allocate(C_POINTER);
            }
        }

        public static MemorySegment ShaderResourceView$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 4));
        }
        public static class UnorderedAccessView {

            private UnorderedAccessView() {}
            public static MemoryLayout $LAYOUT() {
                return d3d12_h$constants$3.UnorderedAccessView$struct$LAYOUT();
            }
            public static VarHandle RootParameterIndex$VH() {
                return d3d12_h$constants$3.UnorderedAccessView$RootParameterIndex$VH();
            }
            public static  @C("UINT") int RootParameterIndex$get(@C("struct ") MemorySegment seg) {
                return (int)d3d12_h$constants$3.UnorderedAccessView$RootParameterIndex$VH().get(seg);
            }
            public static  @C("UINT") int RootParameterIndex$get(@C("struct ") MemorySegment seg, long index) {
                return (int)d3d12_h$constants$3.UnorderedAccessView$RootParameterIndex$VH().get(seg.asSlice(index*sizeof()));
            }
            public static void RootParameterIndex$set(@C("struct ") MemorySegment seg, @C("UINT") int x) {
                d3d12_h$constants$3.UnorderedAccessView$RootParameterIndex$VH().set(seg, x);
            }
            public static void RootParameterIndex$set(@C("struct ") MemorySegment seg, long index, @C("UINT") int x) {
                d3d12_h$constants$3.UnorderedAccessView$RootParameterIndex$VH().set(seg.asSlice(index*sizeof()), x);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static @C("struct ") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
            public static @C("struct ") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
            public static @C("struct []") MemorySegment allocateArray(int len) {
                return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
            }            public static @C("struct []") MemorySegment allocateArray(int len, NativeScope scope) {
                return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
            }
            public static @C("struct *") MemorySegment allocatePointer() {
                return MemorySegment.allocateNative(C_POINTER);
            }
            public static @C("struct *") MemorySegment allocatePointer(NativeScope scope) {
                return scope.allocate(C_POINTER);
            }
        }

        public static MemorySegment UnorderedAccessView$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(28, 4));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_INDIRECT_ARGUMENT_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_INDIRECT_ARGUMENT_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_INDIRECT_ARGUMENT_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_INDIRECT_ARGUMENT_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_INDIRECT_ARGUMENT_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_INDIRECT_ARGUMENT_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_COMMAND_SIGNATURE_DESC {

        private D3D12_COMMAND_SIGNATURE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$struct$LAYOUT();
        }
        public static VarHandle ByteStride$VH() {
            return d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$ByteStride$VH();
        }
        public static  @C("UINT") int ByteStride$get(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$ByteStride$VH().get(seg);
        }
        public static  @C("UINT") int ByteStride$get(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$ByteStride$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ByteStride$set(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$ByteStride$VH().set(seg, x);
        }
        public static void ByteStride$set(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$ByteStride$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumArgumentDescs$VH() {
            return d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$VH();
        }
        public static  @C("UINT") int NumArgumentDescs$get(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$VH().get(seg);
        }
        public static  @C("UINT") int NumArgumentDescs$get(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumArgumentDescs$set(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$VH().set(seg, x);
        }
        public static void NumArgumentDescs$set(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pArgumentDescs$VH() {
            return d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$VH();
        }
        public static  @C("const D3D12_INDIRECT_ARGUMENT_DESC*") MemoryAddress pArgumentDescs$get(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$VH().get(seg);
        }
        public static  @C("const D3D12_INDIRECT_ARGUMENT_DESC*") MemoryAddress pArgumentDescs$get(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pArgumentDescs$set(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, @C("const D3D12_INDIRECT_ARGUMENT_DESC*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$VH().set(seg, x);
        }
        public static void pArgumentDescs$set(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, long index, @C("const D3D12_INDIRECT_ARGUMENT_DESC*") MemoryAddress x) {
            d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$3.D3D12_COMMAND_SIGNATURE_DESC$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_COMMAND_SIGNATURE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_COMMAND_SIGNATURE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_COMMAND_SIGNATURE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_COMMAND_SIGNATURE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_COMMAND_SIGNATURE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$VH().get(d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$VH().set(d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$VH().get(d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$VH().set(d3d12_h$constants$3.__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12Pageable$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12Pageable$SEGMENT();
    }
    public static class ID3D12PageableVtbl {

        private ID3D12PageableVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12PageableVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Pageable*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Pageable*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Pageable*)") MemoryAddress AddRef$get(@C("struct ID3D12PageableVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Pageable*)") MemoryAddress AddRef$get(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Pageable*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Pageable*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Pageable*)") MemoryAddress Release$get(@C("struct ID3D12PageableVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Pageable*)") MemoryAddress Release$get(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Pageable*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Pageable*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12PageableVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Pageable*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Pageable*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12PageableVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Pageable*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Pageable*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12PageableVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Pageable*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Pageable*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12PageableVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Pageable*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Pageable*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$3.ID3D12PageableVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12PageableVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Pageable*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PageableVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Pageable*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12PageableVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Pageable*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PageableVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12PageableVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12PageableVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12PageableVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12PageableVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12PageableVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12PageableVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Pageable {

        private ID3D12Pageable() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12Pageable$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12Pageable$lpVtbl$VH();
        }
        public static  @C("struct ID3D12PageableVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Pageable") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Pageable$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12PageableVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Pageable") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Pageable$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Pageable") MemorySegment seg, @C("struct ID3D12PageableVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Pageable$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Pageable") MemorySegment seg, long index, @C("struct ID3D12PageableVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Pageable$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Pageable") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Pageable") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Pageable[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Pageable[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Pageable*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Pageable*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Heap$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12Heap$SEGMENT();
    }
    public static class ID3D12HeapVtbl {

        private ID3D12HeapVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Heap*)") MemoryAddress AddRef$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Heap*)") MemoryAddress AddRef$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Heap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Heap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Heap*)") MemoryAddress Release$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Heap*)") MemoryAddress Release$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Heap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Heap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$3.ID3D12HeapVtbl$GetDesc$VH();
        }
        public static  @C("D3D12_HEAP_DESC(*)(ID3D12Heap*)") MemoryAddress GetDesc$get(@C("struct ID3D12HeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_DESC(*)(ID3D12Heap*)") MemoryAddress GetDesc$get(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12HeapVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, @C("D3D12_HEAP_DESC(*)(ID3D12Heap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12HeapVtbl") MemorySegment seg, long index, @C("D3D12_HEAP_DESC(*)(ID3D12Heap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12HeapVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12HeapVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12HeapVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12HeapVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12HeapVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12HeapVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12HeapVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Heap {

        private ID3D12Heap() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12Heap$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12Heap$lpVtbl$VH();
        }
        public static  @C("struct ID3D12HeapVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Heap") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Heap$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12HeapVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Heap") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Heap$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Heap") MemorySegment seg, @C("struct ID3D12HeapVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Heap$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Heap") MemorySegment seg, long index, @C("struct ID3D12HeapVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Heap$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Heap") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Heap") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Heap[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Heap[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Heap*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Heap*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Resource$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12Resource$SEGMENT();
    }
    public static class ID3D12ResourceVtbl {

        private ID3D12ResourceVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Resource*)") MemoryAddress AddRef$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Resource*)") MemoryAddress AddRef$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Resource*)") MemoryAddress Release$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Resource*)") MemoryAddress Release$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Map$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$Map$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,UINT,const D3D12_RANGE*,void**)") MemoryAddress Map$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$Map$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,UINT,const D3D12_RANGE*,void**)") MemoryAddress Map$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$Map$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Map$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,UINT,const D3D12_RANGE*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$Map$VH().set(seg, x);
        }
        public static void Map$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,UINT,const D3D12_RANGE*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$Map$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Unmap$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$Unmap$VH();
        }
        public static  @C("void(*)(ID3D12Resource*,UINT,const D3D12_RANGE*)") MemoryAddress Unmap$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$Unmap$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Resource*,UINT,const D3D12_RANGE*)") MemoryAddress Unmap$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$Unmap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unmap$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("void(*)(ID3D12Resource*,UINT,const D3D12_RANGE*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$Unmap$VH().set(seg, x);
        }
        public static void Unmap$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Resource*,UINT,const D3D12_RANGE*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$Unmap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$GetDesc$VH();
        }
        public static  @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource*)") MemoryAddress GetDesc$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource*)") MemoryAddress GetDesc$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetGPUVirtualAddress$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$GetGPUVirtualAddress$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource*)") MemoryAddress GetGPUVirtualAddress$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetGPUVirtualAddress$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource*)") MemoryAddress GetGPUVirtualAddress$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetGPUVirtualAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetGPUVirtualAddress$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetGPUVirtualAddress$VH().set(seg, x);
        }
        public static void GetGPUVirtualAddress$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetGPUVirtualAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteToSubresource$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$WriteToSubresource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress WriteToSubresource$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$WriteToSubresource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress WriteToSubresource$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$WriteToSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteToSubresource$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$WriteToSubresource$VH().set(seg, x);
        }
        public static void WriteToSubresource$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$WriteToSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReadFromSubresource$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$ReadFromSubresource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress ReadFromSubresource$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$ReadFromSubresource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress ReadFromSubresource$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$ReadFromSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReadFromSubresource$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$ReadFromSubresource$VH().set(seg, x);
        }
        public static void ReadFromSubresource$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$ReadFromSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetHeapProperties$VH() {
            return d3d12_h$constants$3.ID3D12ResourceVtbl$GetHeapProperties$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress GetHeapProperties$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetHeapProperties$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress GetHeapProperties$get(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12ResourceVtbl$GetHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetHeapProperties$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetHeapProperties$VH().set(seg, x);
        }
        public static void GetHeapProperties$set(@C("struct ID3D12ResourceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12ResourceVtbl$GetHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ResourceVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ResourceVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ResourceVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ResourceVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ResourceVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ResourceVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Resource {

        private ID3D12Resource() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12Resource$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12Resource$lpVtbl$VH();
        }
        public static  @C("struct ID3D12ResourceVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Resource") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Resource$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12ResourceVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Resource") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Resource$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Resource") MemorySegment seg, @C("struct ID3D12ResourceVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Resource$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Resource") MemorySegment seg, long index, @C("struct ID3D12ResourceVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Resource$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Resource") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Resource") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Resource[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Resource[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Resource*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Resource*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12CommandAllocator$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12CommandAllocator$SEGMENT();
    }
    public static class ID3D12CommandAllocatorVtbl {

        private ID3D12CommandAllocatorVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandAllocator*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandAllocator*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12CommandAllocator*)") MemoryAddress AddRef$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12CommandAllocator*)") MemoryAddress AddRef$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12CommandAllocator*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12CommandAllocator*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12CommandAllocator*)") MemoryAddress Release$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12CommandAllocator*)") MemoryAddress Release$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12CommandAllocator*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12CommandAllocator*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandAllocator*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandAllocator*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandAllocator*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandAllocator*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandAllocator*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*)") MemoryAddress Reset$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandAllocator*)") MemoryAddress Reset$get(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandAllocator*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ID3D12CommandAllocatorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandAllocator*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocatorVtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12CommandAllocatorVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12CommandAllocatorVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12CommandAllocatorVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12CommandAllocatorVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12CommandAllocatorVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12CommandAllocatorVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12CommandAllocator {

        private ID3D12CommandAllocator() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12CommandAllocator$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12CommandAllocator$lpVtbl$VH();
        }
        public static  @C("struct ID3D12CommandAllocatorVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12CommandAllocator") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocator$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12CommandAllocatorVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12CommandAllocator") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12CommandAllocator$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12CommandAllocator") MemorySegment seg, @C("struct ID3D12CommandAllocatorVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocator$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12CommandAllocator") MemorySegment seg, long index, @C("struct ID3D12CommandAllocatorVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12CommandAllocator$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12CommandAllocator") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12CommandAllocator") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12CommandAllocator[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12CommandAllocator[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12CommandAllocator*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12CommandAllocator*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Fence$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12Fence$SEGMENT();
    }
    public static class ID3D12FenceVtbl {

        private ID3D12FenceVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Fence*)") MemoryAddress AddRef$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Fence*)") MemoryAddress AddRef$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Fence*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Fence*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Fence*)") MemoryAddress Release$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Fence*)") MemoryAddress Release$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Fence*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Fence*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCompletedValue$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$GetCompletedValue$VH();
        }
        public static  @C("UINT64(*)(ID3D12Fence*)") MemoryAddress GetCompletedValue$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$GetCompletedValue$VH().get(seg);
        }
        public static  @C("UINT64(*)(ID3D12Fence*)") MemoryAddress GetCompletedValue$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$GetCompletedValue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCompletedValue$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("UINT64(*)(ID3D12Fence*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$GetCompletedValue$VH().set(seg, x);
        }
        public static void GetCompletedValue$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("UINT64(*)(ID3D12Fence*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$GetCompletedValue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnCompletion$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$SetEventOnCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,UINT64,HANDLE)") MemoryAddress SetEventOnCompletion$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$SetEventOnCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,UINT64,HANDLE)") MemoryAddress SetEventOnCompletion$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$SetEventOnCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnCompletion$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence*,UINT64,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$SetEventOnCompletion$VH().set(seg, x);
        }
        public static void SetEventOnCompletion$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence*,UINT64,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$SetEventOnCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Signal$VH() {
            return d3d12_h$constants$3.ID3D12FenceVtbl$Signal$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,UINT64)") MemoryAddress Signal$get(@C("struct ID3D12FenceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$Signal$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence*,UINT64)") MemoryAddress Signal$get(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12FenceVtbl$Signal$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Signal$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$Signal$VH().set(seg, x);
        }
        public static void Signal$set(@C("struct ID3D12FenceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12FenceVtbl$Signal$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12FenceVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12FenceVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12FenceVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12FenceVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12FenceVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12FenceVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Fence {

        private ID3D12Fence() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12Fence$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12Fence$lpVtbl$VH();
        }
        public static  @C("struct ID3D12FenceVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Fence") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12FenceVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Fence") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Fence") MemorySegment seg, @C("struct ID3D12FenceVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Fence") MemorySegment seg, long index, @C("struct ID3D12FenceVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Fence") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Fence") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Fence[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Fence[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Fence*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Fence*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Fence1$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12Fence1$SEGMENT();
    }
    public static class ID3D12Fence1Vtbl {

        private ID3D12Fence1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Fence1*)") MemoryAddress AddRef$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Fence1*)") MemoryAddress AddRef$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Fence1*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Fence1*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Fence1*)") MemoryAddress Release$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Fence1*)") MemoryAddress Release$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Fence1*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Fence1*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCompletedValue$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCompletedValue$VH();
        }
        public static  @C("UINT64(*)(ID3D12Fence1*)") MemoryAddress GetCompletedValue$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCompletedValue$VH().get(seg);
        }
        public static  @C("UINT64(*)(ID3D12Fence1*)") MemoryAddress GetCompletedValue$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCompletedValue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCompletedValue$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("UINT64(*)(ID3D12Fence1*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCompletedValue$VH().set(seg, x);
        }
        public static void GetCompletedValue$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("UINT64(*)(ID3D12Fence1*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCompletedValue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnCompletion$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$SetEventOnCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,UINT64,HANDLE)") MemoryAddress SetEventOnCompletion$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$SetEventOnCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,UINT64,HANDLE)") MemoryAddress SetEventOnCompletion$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$SetEventOnCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnCompletion$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence1*,UINT64,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$SetEventOnCompletion$VH().set(seg, x);
        }
        public static void SetEventOnCompletion$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence1*,UINT64,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$SetEventOnCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Signal$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$Signal$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,UINT64)") MemoryAddress Signal$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$Signal$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Fence1*,UINT64)") MemoryAddress Signal$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$Signal$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Signal$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Fence1*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$Signal$VH().set(seg, x);
        }
        public static void Signal$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Fence1*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$Signal$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCreationFlags$VH() {
            return d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCreationFlags$VH();
        }
        public static  @C("D3D12_FENCE_FLAGS(*)(ID3D12Fence1*)") MemoryAddress GetCreationFlags$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCreationFlags$VH().get(seg);
        }
        public static  @C("D3D12_FENCE_FLAGS(*)(ID3D12Fence1*)") MemoryAddress GetCreationFlags$get(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCreationFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCreationFlags$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, @C("D3D12_FENCE_FLAGS(*)(ID3D12Fence1*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCreationFlags$VH().set(seg, x);
        }
        public static void GetCreationFlags$set(@C("struct ID3D12Fence1Vtbl") MemorySegment seg, long index, @C("D3D12_FENCE_FLAGS(*)(ID3D12Fence1*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1Vtbl$GetCreationFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Fence1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Fence1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Fence1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Fence1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Fence1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Fence1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Fence1 {

        private ID3D12Fence1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12Fence1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12Fence1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Fence1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Fence1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Fence1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Fence1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12Fence1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Fence1") MemorySegment seg, @C("struct ID3D12Fence1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Fence1") MemorySegment seg, long index, @C("struct ID3D12Fence1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12Fence1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Fence1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Fence1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Fence1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Fence1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Fence1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Fence1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12PipelineState$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12PipelineState$SEGMENT();
    }
    public static class ID3D12PipelineStateVtbl {

        private ID3D12PipelineStateVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12PipelineState*)") MemoryAddress AddRef$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12PipelineState*)") MemoryAddress AddRef$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12PipelineState*)") MemoryAddress Release$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12PipelineState*)") MemoryAddress Release$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineState*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineState*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineState*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCachedBlob$VH() {
            return d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetCachedBlob$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,ID3DBlob**)") MemoryAddress GetCachedBlob$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetCachedBlob$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineState*,ID3DBlob**)") MemoryAddress GetCachedBlob$get(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetCachedBlob$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCachedBlob$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineState*,ID3DBlob**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetCachedBlob$VH().set(seg, x);
        }
        public static void GetCachedBlob$set(@C("struct ID3D12PipelineStateVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineState*,ID3DBlob**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineStateVtbl$GetCachedBlob$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12PipelineStateVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12PipelineStateVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12PipelineStateVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12PipelineStateVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12PipelineStateVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12PipelineStateVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12PipelineState {

        private ID3D12PipelineState() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12PipelineState$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12PipelineState$lpVtbl$VH();
        }
        public static  @C("struct ID3D12PipelineStateVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12PipelineState") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineState$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12PipelineStateVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12PipelineState") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12PipelineState$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12PipelineState") MemorySegment seg, @C("struct ID3D12PipelineStateVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineState$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12PipelineState") MemorySegment seg, long index, @C("struct ID3D12PipelineStateVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12PipelineState$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12PipelineState") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12PipelineState") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12PipelineState[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12PipelineState[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12PipelineState*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12PipelineState*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12DescriptorHeap$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12DescriptorHeap$SEGMENT();
    }
    public static class ID3D12DescriptorHeapVtbl {

        private ID3D12DescriptorHeapVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DescriptorHeap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DescriptorHeap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12DescriptorHeap*)") MemoryAddress AddRef$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DescriptorHeap*)") MemoryAddress AddRef$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12DescriptorHeap*)") MemoryAddress Release$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DescriptorHeap*)") MemoryAddress Release$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DescriptorHeap*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DescriptorHeap*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DescriptorHeap*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DescriptorHeap*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DescriptorHeap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DescriptorHeap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDesc$VH();
        }
        public static  @C("D3D12_DESCRIPTOR_HEAP_DESC(*)(ID3D12DescriptorHeap*)") MemoryAddress GetDesc$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_DESCRIPTOR_HEAP_DESC(*)(ID3D12DescriptorHeap*)") MemoryAddress GetDesc$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("D3D12_DESCRIPTOR_HEAP_DESC(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("D3D12_DESCRIPTOR_HEAP_DESC(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCPUDescriptorHandleForHeapStart$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$VH();
        }
        public static  @C("D3D12_CPU_DESCRIPTOR_HANDLE(*)(ID3D12DescriptorHeap*)") MemoryAddress GetCPUDescriptorHandleForHeapStart$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$VH().get(seg);
        }
        public static  @C("D3D12_CPU_DESCRIPTOR_HANDLE(*)(ID3D12DescriptorHeap*)") MemoryAddress GetCPUDescriptorHandleForHeapStart$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCPUDescriptorHandleForHeapStart$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("D3D12_CPU_DESCRIPTOR_HANDLE(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$VH().set(seg, x);
        }
        public static void GetCPUDescriptorHandleForHeapStart$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("D3D12_CPU_DESCRIPTOR_HANDLE(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetGPUDescriptorHandleForHeapStart$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$VH();
        }
        public static  @C("D3D12_GPU_DESCRIPTOR_HANDLE(*)(ID3D12DescriptorHeap*)") MemoryAddress GetGPUDescriptorHandleForHeapStart$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$VH().get(seg);
        }
        public static  @C("D3D12_GPU_DESCRIPTOR_HANDLE(*)(ID3D12DescriptorHeap*)") MemoryAddress GetGPUDescriptorHandleForHeapStart$get(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetGPUDescriptorHandleForHeapStart$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, @C("D3D12_GPU_DESCRIPTOR_HANDLE(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$VH().set(seg, x);
        }
        public static void GetGPUDescriptorHandleForHeapStart$set(@C("struct ID3D12DescriptorHeapVtbl") MemorySegment seg, long index, @C("D3D12_GPU_DESCRIPTOR_HANDLE(*)(ID3D12DescriptorHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DescriptorHeapVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DescriptorHeapVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DescriptorHeapVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DescriptorHeapVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DescriptorHeapVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DescriptorHeapVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12DescriptorHeap {

        private ID3D12DescriptorHeap() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12DescriptorHeap$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$3.ID3D12DescriptorHeap$lpVtbl$VH();
        }
        public static  @C("struct ID3D12DescriptorHeapVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DescriptorHeap") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeap$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12DescriptorHeapVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DescriptorHeap") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12DescriptorHeap$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12DescriptorHeap") MemorySegment seg, @C("struct ID3D12DescriptorHeapVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeap$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12DescriptorHeap") MemorySegment seg, long index, @C("struct ID3D12DescriptorHeapVtbl*") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12DescriptorHeap$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DescriptorHeap") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DescriptorHeap") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DescriptorHeap[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DescriptorHeap[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DescriptorHeap*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DescriptorHeap*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12QueryHeap$SEGMENT() {
        return d3d12_h$constants$3.IID_ID3D12QueryHeap$SEGMENT();
    }
    public static class ID3D12QueryHeapVtbl {

        private ID3D12QueryHeapVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$3.ID3D12QueryHeapVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$3.ID3D12QueryHeapVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12QueryHeapVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12QueryHeapVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12QueryHeap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12QueryHeapVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12QueryHeap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12QueryHeapVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$3.ID3D12QueryHeapVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12QueryHeap*)") MemoryAddress AddRef$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12QueryHeapVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12QueryHeap*)") MemoryAddress AddRef$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12QueryHeapVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12QueryHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12QueryHeapVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12QueryHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12QueryHeapVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$3.ID3D12QueryHeapVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12QueryHeap*)") MemoryAddress Release$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12QueryHeapVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12QueryHeap*)") MemoryAddress Release$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12QueryHeapVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12QueryHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12QueryHeapVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12QueryHeap*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12QueryHeapVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$3.ID3D12QueryHeapVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12QueryHeapVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$3.ID3D12QueryHeapVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12QueryHeapVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$3.ID3D12QueryHeapVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12QueryHeap*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12QueryHeap*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12QueryHeap*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeapVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$4.ID3D12QueryHeapVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeapVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12QueryHeap*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeapVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12QueryHeap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeapVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12QueryHeapVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12QueryHeap*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeapVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12QueryHeapVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12QueryHeapVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12QueryHeapVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12QueryHeapVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12QueryHeapVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12QueryHeapVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12QueryHeap {

        private ID3D12QueryHeap() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12QueryHeap$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$4.ID3D12QueryHeap$lpVtbl$VH();
        }
        public static  @C("struct ID3D12QueryHeapVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12QueryHeap") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeap$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12QueryHeapVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12QueryHeap") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12QueryHeap$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12QueryHeap") MemorySegment seg, @C("struct ID3D12QueryHeapVtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeap$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12QueryHeap") MemorySegment seg, long index, @C("struct ID3D12QueryHeapVtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12QueryHeap$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12QueryHeap") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12QueryHeap") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12QueryHeap[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12QueryHeap[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12QueryHeap*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12QueryHeap*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12CommandSignature$SEGMENT() {
        return d3d12_h$constants$4.IID_ID3D12CommandSignature$SEGMENT();
    }
    public static class ID3D12CommandSignatureVtbl {

        private ID3D12CommandSignatureVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12CommandSignature*)") MemoryAddress AddRef$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12CommandSignature*)") MemoryAddress AddRef$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12CommandSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12CommandSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12CommandSignature*)") MemoryAddress Release$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12CommandSignature*)") MemoryAddress Release$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12CommandSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12CommandSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandSignature*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandSignature*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandSignature*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandSignature*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12CommandSignatureVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignatureVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12CommandSignatureVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12CommandSignatureVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12CommandSignatureVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12CommandSignatureVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12CommandSignatureVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12CommandSignatureVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12CommandSignature {

        private ID3D12CommandSignature() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12CommandSignature$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$4.ID3D12CommandSignature$lpVtbl$VH();
        }
        public static  @C("struct ID3D12CommandSignatureVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12CommandSignature") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignature$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12CommandSignatureVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12CommandSignature") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandSignature$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12CommandSignature") MemorySegment seg, @C("struct ID3D12CommandSignatureVtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignature$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12CommandSignature") MemorySegment seg, long index, @C("struct ID3D12CommandSignatureVtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandSignature$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12CommandSignature") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12CommandSignature") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12CommandSignature[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12CommandSignature[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12CommandSignature*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12CommandSignature*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12CommandList$SEGMENT() {
        return d3d12_h$constants$4.IID_ID3D12CommandList$SEGMENT();
    }
    public static class ID3D12CommandListVtbl {

        private ID3D12CommandListVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandList*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandList*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12CommandList*)") MemoryAddress AddRef$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12CommandList*)") MemoryAddress AddRef$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12CommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12CommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12CommandList*)") MemoryAddress Release$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12CommandList*)") MemoryAddress Release$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12CommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12CommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandList*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandList*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandList*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandList*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandList*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandList*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandList*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandList*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandList*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandList*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandList*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetType$VH() {
            return d3d12_h$constants$4.ID3D12CommandListVtbl$GetType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12CommandList*)") MemoryAddress GetType$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$GetType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12CommandList*)") MemoryAddress GetType$get(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandListVtbl$GetType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetType$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12CommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$GetType$VH().set(seg, x);
        }
        public static void GetType$set(@C("struct ID3D12CommandListVtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12CommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandListVtbl$GetType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12CommandListVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12CommandListVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12CommandListVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12CommandListVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12CommandListVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12CommandListVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12CommandList {

        private ID3D12CommandList() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12CommandList$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$4.ID3D12CommandList$lpVtbl$VH();
        }
        public static  @C("struct ID3D12CommandListVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12CommandList") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandList$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12CommandListVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12CommandList") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12CommandList$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12CommandList") MemorySegment seg, @C("struct ID3D12CommandListVtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandList$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12CommandList") MemorySegment seg, long index, @C("struct ID3D12CommandListVtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12CommandList$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12CommandList") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12CommandList") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12CommandList[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12CommandList[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12CommandList*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12CommandList*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12GraphicsCommandList$SEGMENT() {
        return d3d12_h$constants$4.IID_ID3D12GraphicsCommandList$SEGMENT();
    }
    public static class ID3D12GraphicsCommandListVtbl {

        private ID3D12GraphicsCommandListVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetType$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetType$VH().set(seg, x);
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$GetType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Close$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Close$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Close$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Close$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Close$VH().set(seg, x);
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Close$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearState$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearState$VH().set(seg, x);
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawInstanced$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawInstanced$VH().set(seg, x);
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawIndexedInstanced$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawIndexedInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawIndexedInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawIndexedInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawIndexedInstanced$VH().set(seg, x);
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DrawIndexedInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Dispatch$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Dispatch$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Dispatch$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Dispatch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Dispatch$VH().set(seg, x);
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$Dispatch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyBufferRegion$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyBufferRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyBufferRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyBufferRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyBufferRegion$VH().set(seg, x);
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyBufferRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTextureRegion$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTextureRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTextureRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTextureRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTextureRegion$VH().set(seg, x);
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTextureRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyResource$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyResource$VH().set(seg, x);
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTiles$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTiles$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTiles$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTiles$VH().set(seg, x);
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$CopyTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresource$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveSubresource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveSubresource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveSubresource$VH().set(seg, x);
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetPrimitiveTopology$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetPrimitiveTopology$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetPrimitiveTopology$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetPrimitiveTopology$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetPrimitiveTopology$VH().set(seg, x);
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetPrimitiveTopology$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetViewports$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetViewports$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetViewports$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetViewports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetViewports$VH().set(seg, x);
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetViewports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetScissorRects$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetScissorRects$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetScissorRects$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetScissorRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetScissorRects$VH().set(seg, x);
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$RSSetScissorRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetBlendFactor$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetBlendFactor$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetBlendFactor$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetBlendFactor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetBlendFactor$VH().set(seg, x);
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetBlendFactor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetStencilRef$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetStencilRef$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetStencilRef$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetStencilRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetStencilRef$VH().set(seg, x);
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetStencilRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPipelineState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPipelineState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPipelineState$VH().set(seg, x);
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceBarrier$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResourceBarrier$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResourceBarrier$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResourceBarrier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResourceBarrier$VH().set(seg, x);
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResourceBarrier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteBundle$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteBundle$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteBundle$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteBundle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteBundle$VH().set(seg, x);
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteBundle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDescriptorHeaps$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetDescriptorHeaps$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetDescriptorHeaps$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetDescriptorHeaps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetDescriptorHeaps$VH().set(seg, x);
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetDescriptorHeaps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootSignature$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootSignature$VH().set(seg, x);
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootSignature$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootSignature$VH().set(seg, x);
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootDescriptorTable$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootDescriptorTable$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstant$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstant$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstants$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstants$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootConstantBufferView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootConstantBufferView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootShaderResourceView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootShaderResourceView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootUnorderedAccessView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetComputeRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootUnorderedAccessView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetIndexBuffer$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetIndexBuffer$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetIndexBuffer$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetIndexBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetIndexBuffer$VH().set(seg, x);
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetIndexBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetVertexBuffers$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetVertexBuffers$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetVertexBuffers$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetVertexBuffers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetVertexBuffers$VH().set(seg, x);
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$IASetVertexBuffers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SOSetTargets$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SOSetTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SOSetTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SOSetTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SOSetTargets$VH().set(seg, x);
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SOSetTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetRenderTargets$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetRenderTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetRenderTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetRenderTargets$VH().set(seg, x);
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$OMSetRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearDepthStencilView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearDepthStencilView$VH().set(seg, x);
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearRenderTargetView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearRenderTargetView$VH().set(seg, x);
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewUint$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewUint$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewUint$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewUint$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewUint$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewUint$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewFloat$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewFloat$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewFloat$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewFloat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewFloat$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ClearUnorderedAccessViewFloat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DiscardResource$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DiscardResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DiscardResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DiscardResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DiscardResource$VH().set(seg, x);
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$DiscardResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginQuery$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginQuery$VH().set(seg, x);
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndQuery$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndQuery$VH().set(seg, x);
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveQueryData$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveQueryData$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveQueryData$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveQueryData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveQueryData$VH().set(seg, x);
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ResolveQueryData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPredication$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPredication$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPredication$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPredication$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPredication$VH().set(seg, x);
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetPredication$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMarker$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetMarker$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetMarker$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetMarker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetMarker$VH().set(seg, x);
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$SetMarker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginEvent$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginEvent$VH().set(seg, x);
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$BeginEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndEvent$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndEvent$VH().set(seg, x);
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$EndEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteIndirect$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteIndirect$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteIndirect$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteIndirect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteIndirect$VH().set(seg, x);
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandListVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandListVtbl$ExecuteIndirect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandListVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandListVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandListVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandListVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandListVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandListVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12GraphicsCommandList {

        private ID3D12GraphicsCommandList() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList$lpVtbl$VH();
        }
        public static  @C("struct ID3D12GraphicsCommandListVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12GraphicsCommandListVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList") MemorySegment seg, @C("struct ID3D12GraphicsCommandListVtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList") MemorySegment seg, long index, @C("struct ID3D12GraphicsCommandListVtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12GraphicsCommandList1$SEGMENT() {
        return d3d12_h$constants$4.IID_ID3D12GraphicsCommandList1$SEGMENT();
    }
    public static class ID3D12GraphicsCommandList1Vtbl {

        private ID3D12GraphicsCommandList1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList1*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList1*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList1*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList1*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetType$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList1*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList1*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetType$VH().set(seg, x);
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$GetType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Close$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Close$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Close$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Close$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Close$VH().set(seg, x);
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Close$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList1*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList1*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearState$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearState$VH().set(seg, x);
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawInstanced$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawInstanced$VH().set(seg, x);
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawIndexedInstanced$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawIndexedInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawIndexedInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawIndexedInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawIndexedInstanced$VH().set(seg, x);
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DrawIndexedInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Dispatch$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Dispatch$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Dispatch$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Dispatch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Dispatch$VH().set(seg, x);
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$Dispatch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyBufferRegion$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyBufferRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyBufferRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyBufferRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyBufferRegion$VH().set(seg, x);
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyBufferRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTextureRegion$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTextureRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTextureRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTextureRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTextureRegion$VH().set(seg, x);
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTextureRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyResource$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyResource$VH().set(seg, x);
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTiles$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTiles$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTiles$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTiles$VH().set(seg, x);
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$CopyTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresource$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresource$VH().set(seg, x);
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetPrimitiveTopology$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetPrimitiveTopology$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetPrimitiveTopology$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetPrimitiveTopology$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetPrimitiveTopology$VH().set(seg, x);
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetPrimitiveTopology$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetViewports$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetViewports$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetViewports$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetViewports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetViewports$VH().set(seg, x);
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetViewports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetScissorRects$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetScissorRects$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetScissorRects$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetScissorRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetScissorRects$VH().set(seg, x);
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$RSSetScissorRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetBlendFactor$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetBlendFactor$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetBlendFactor$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetBlendFactor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetBlendFactor$VH().set(seg, x);
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetBlendFactor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetStencilRef$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetStencilRef$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetStencilRef$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetStencilRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetStencilRef$VH().set(seg, x);
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetStencilRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPipelineState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPipelineState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPipelineState$VH().set(seg, x);
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceBarrier$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResourceBarrier$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResourceBarrier$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResourceBarrier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResourceBarrier$VH().set(seg, x);
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResourceBarrier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteBundle$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteBundle$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteBundle$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteBundle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteBundle$VH().set(seg, x);
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteBundle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDescriptorHeaps$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetDescriptorHeaps$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetDescriptorHeaps$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetDescriptorHeaps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetDescriptorHeaps$VH().set(seg, x);
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetDescriptorHeaps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootSignature$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootSignature$VH().set(seg, x);
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootSignature$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootSignature$VH().set(seg, x);
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootDescriptorTable$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootDescriptorTable$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstant$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstant$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstants$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstants$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootConstantBufferView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootConstantBufferView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootShaderResourceView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootShaderResourceView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootUnorderedAccessView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootUnorderedAccessView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetIndexBuffer$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetIndexBuffer$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetIndexBuffer$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetIndexBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetIndexBuffer$VH().set(seg, x);
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetIndexBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetVertexBuffers$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetVertexBuffers$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetVertexBuffers$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetVertexBuffers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetVertexBuffers$VH().set(seg, x);
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$IASetVertexBuffers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SOSetTargets$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SOSetTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SOSetTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SOSetTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SOSetTargets$VH().set(seg, x);
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SOSetTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetRenderTargets$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetRenderTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetRenderTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetRenderTargets$VH().set(seg, x);
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearDepthStencilView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearDepthStencilView$VH().set(seg, x);
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearRenderTargetView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearRenderTargetView$VH().set(seg, x);
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewUint$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewUint$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewUint$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewUint$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewUint$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewUint$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewFloat$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewFloat$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DiscardResource$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DiscardResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DiscardResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DiscardResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DiscardResource$VH().set(seg, x);
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$DiscardResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginQuery$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginQuery$VH().set(seg, x);
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndQuery$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndQuery$VH().set(seg, x);
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveQueryData$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveQueryData$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveQueryData$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveQueryData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveQueryData$VH().set(seg, x);
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveQueryData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPredication$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPredication$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPredication$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPredication$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPredication$VH().set(seg, x);
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetPredication$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMarker$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetMarker$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetMarker$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetMarker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetMarker$VH().set(seg, x);
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetMarker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginEvent$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginEvent$VH().set(seg, x);
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$BeginEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndEvent$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndEvent$VH().set(seg, x);
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$EndEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteIndirect$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteIndirect$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteIndirect$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteIndirect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteIndirect$VH().set(seg, x);
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ExecuteIndirect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT64$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT64$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT64$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT64$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT64$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$AtomicCopyBufferUINT64$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetDepthBounds$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetDepthBounds$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetDepthBounds$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetDepthBounds$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetDepthBounds$VH().set(seg, x);
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$OMSetDepthBounds$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetSamplePositions$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetSamplePositions$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetSamplePositions$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetSamplePositions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetSamplePositions$VH().set(seg, x);
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetSamplePositions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresourceRegion$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresourceRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresourceRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresourceRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresourceRegion$VH().set(seg, x);
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$ResolveSubresourceRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetViewInstanceMask$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetViewInstanceMask$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetViewInstanceMask$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList1*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetViewInstanceMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList1*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetViewInstanceMask$VH().set(seg, x);
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList1*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1Vtbl$SetViewInstanceMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12GraphicsCommandList1 {

        private ID3D12GraphicsCommandList1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12GraphicsCommandList1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12GraphicsCommandList1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList1") MemorySegment seg, @C("struct ID3D12GraphicsCommandList1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList1") MemorySegment seg, long index, @C("struct ID3D12GraphicsCommandList1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_WRITEBUFFERIMMEDIATE_PARAMETER {

        private D3D12_WRITEBUFFERIMMEDIATE_PARAMETER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$struct$LAYOUT();
        }
        public static VarHandle Dest$VH() {
            return d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Dest$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long Dest$get(@C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment seg) {
            return (long)d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Dest$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long Dest$get(@C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Dest$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dest$set(@C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Dest$VH().set(seg, x);
        }
        public static void Dest$set(@C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Dest$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Value$VH() {
            return d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Value$VH();
        }
        public static  @C("UINT32") int Value$get(@C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment seg) {
            return (int)d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Value$VH().get(seg);
        }
        public static  @C("UINT32") int Value$get(@C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Value$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Value$set(@C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment seg, @C("UINT32") int x) {
            d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Value$VH().set(seg, x);
        }
        public static void Value$set(@C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment seg, long index, @C("UINT32") int x) {
            d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER$Value$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT() {
        return d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT();
    }
    public static @C("int") int D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN() {
        return d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN();
    }
    public static @C("int") int D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT() {
        return d3d12_h$constants$4.D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$VH().get(d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$VH().set(d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$VH().get(d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$VH().set(d3d12_h$constants$4.__MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12GraphicsCommandList2$SEGMENT() {
        return d3d12_h$constants$4.IID_ID3D12GraphicsCommandList2$SEGMENT();
    }
    public static class ID3D12GraphicsCommandList2Vtbl {

        private ID3D12GraphicsCommandList2Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList2*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList2*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList2*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList2*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetType$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList2*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList2*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetType$VH().set(seg, x);
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$GetType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Close$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Close$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Close$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Close$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Close$VH().set(seg, x);
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Close$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList2*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList2*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearState$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ClearState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ClearState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ClearState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ClearState$VH().set(seg, x);
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ClearState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawInstanced$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawInstanced$VH().set(seg, x);
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawIndexedInstanced$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawIndexedInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawIndexedInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawIndexedInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawIndexedInstanced$VH().set(seg, x);
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$DrawIndexedInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Dispatch$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Dispatch$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Dispatch$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Dispatch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Dispatch$VH().set(seg, x);
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$Dispatch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyBufferRegion$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyBufferRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyBufferRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyBufferRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyBufferRegion$VH().set(seg, x);
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyBufferRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTextureRegion$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTextureRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTextureRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTextureRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTextureRegion$VH().set(seg, x);
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTextureRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyResource$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyResource$VH().set(seg, x);
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTiles$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTiles$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTiles$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTiles$VH().set(seg, x);
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$CopyTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresource$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResolveSubresource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResolveSubresource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResolveSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResolveSubresource$VH().set(seg, x);
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResolveSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetPrimitiveTopology$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$IASetPrimitiveTopology$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$IASetPrimitiveTopology$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$IASetPrimitiveTopology$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$IASetPrimitiveTopology$VH().set(seg, x);
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$IASetPrimitiveTopology$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetViewports$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetViewports$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetViewports$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetViewports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetViewports$VH().set(seg, x);
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetViewports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetScissorRects$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetScissorRects$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetScissorRects$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetScissorRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetScissorRects$VH().set(seg, x);
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$RSSetScissorRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetBlendFactor$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetBlendFactor$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetBlendFactor$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetBlendFactor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetBlendFactor$VH().set(seg, x);
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetBlendFactor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetStencilRef$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetStencilRef$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetStencilRef$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetStencilRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetStencilRef$VH().set(seg, x);
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$OMSetStencilRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPipelineState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPipelineState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPipelineState$VH().set(seg, x);
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceBarrier$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResourceBarrier$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResourceBarrier$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResourceBarrier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResourceBarrier$VH().set(seg, x);
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ResourceBarrier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteBundle$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ExecuteBundle$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ExecuteBundle$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ExecuteBundle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ExecuteBundle$VH().set(seg, x);
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$ExecuteBundle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDescriptorHeaps$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetDescriptorHeaps$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetDescriptorHeaps$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetDescriptorHeaps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetDescriptorHeaps$VH().set(seg, x);
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetDescriptorHeaps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootSignature$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootSignature$VH().set(seg, x);
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootSignature$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootSignature$VH().set(seg, x);
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootDescriptorTable$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootDescriptorTable$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstant$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstant$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstants$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstants$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootConstantBufferView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetComputeRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootConstantBufferView$VH() {
            return d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$4.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootShaderResourceView$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootShaderResourceView$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootUnorderedAccessView$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootUnorderedAccessView$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetIndexBuffer$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetIndexBuffer$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetIndexBuffer$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetIndexBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetIndexBuffer$VH().set(seg, x);
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetIndexBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetVertexBuffers$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetVertexBuffers$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetVertexBuffers$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetVertexBuffers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetVertexBuffers$VH().set(seg, x);
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$IASetVertexBuffers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SOSetTargets$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SOSetTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SOSetTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SOSetTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SOSetTargets$VH().set(seg, x);
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SOSetTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetRenderTargets$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetRenderTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetRenderTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetRenderTargets$VH().set(seg, x);
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearDepthStencilView$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearDepthStencilView$VH().set(seg, x);
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearRenderTargetView$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearRenderTargetView$VH().set(seg, x);
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewUint$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewUint$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewUint$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewUint$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewUint$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewUint$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewFloat$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewFloat$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DiscardResource$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$DiscardResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$DiscardResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$DiscardResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$DiscardResource$VH().set(seg, x);
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$DiscardResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginQuery$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginQuery$VH().set(seg, x);
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndQuery$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndQuery$VH().set(seg, x);
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveQueryData$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveQueryData$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveQueryData$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveQueryData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveQueryData$VH().set(seg, x);
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveQueryData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPredication$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetPredication$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetPredication$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetPredication$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetPredication$VH().set(seg, x);
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetPredication$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMarker$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetMarker$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetMarker$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetMarker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetMarker$VH().set(seg, x);
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetMarker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginEvent$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginEvent$VH().set(seg, x);
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$BeginEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndEvent$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndEvent$VH().set(seg, x);
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$EndEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteIndirect$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ExecuteIndirect$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ExecuteIndirect$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ExecuteIndirect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ExecuteIndirect$VH().set(seg, x);
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ExecuteIndirect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT64$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT64$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT64$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT64$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT64$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$AtomicCopyBufferUINT64$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetDepthBounds$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetDepthBounds$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetDepthBounds$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetDepthBounds$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetDepthBounds$VH().set(seg, x);
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$OMSetDepthBounds$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetSamplePositions$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetSamplePositions$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetSamplePositions$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetSamplePositions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetSamplePositions$VH().set(seg, x);
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetSamplePositions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresourceRegion$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveSubresourceRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveSubresourceRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveSubresourceRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveSubresourceRegion$VH().set(seg, x);
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$ResolveSubresourceRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetViewInstanceMask$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetViewInstanceMask$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetViewInstanceMask$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetViewInstanceMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetViewInstanceMask$VH().set(seg, x);
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$SetViewInstanceMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteBufferImmediate$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$WriteBufferImmediate$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$WriteBufferImmediate$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$WriteBufferImmediate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$WriteBufferImmediate$VH().set(seg, x);
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList2*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2Vtbl$WriteBufferImmediate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList2Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList2Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList2Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList2Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList2Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12GraphicsCommandList2 {

        private ID3D12GraphicsCommandList2() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$5.ID3D12GraphicsCommandList2$lpVtbl$VH();
        }
        public static  @C("struct ID3D12GraphicsCommandList2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList2") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12GraphicsCommandList2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList2") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12GraphicsCommandList2$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList2") MemorySegment seg, @C("struct ID3D12GraphicsCommandList2Vtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList2") MemorySegment seg, long index, @C("struct ID3D12GraphicsCommandList2Vtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12GraphicsCommandList2$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12CommandQueue$SEGMENT() {
        return d3d12_h$constants$5.IID_ID3D12CommandQueue$SEGMENT();
    }
    public static class ID3D12CommandQueueVtbl {

        private ID3D12CommandQueueVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12CommandQueue*)") MemoryAddress AddRef$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12CommandQueue*)") MemoryAddress AddRef$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12CommandQueue*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12CommandQueue*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12CommandQueue*)") MemoryAddress Release$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12CommandQueue*)") MemoryAddress Release$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12CommandQueue*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12CommandQueue*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle UpdateTileMappings$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$UpdateTileMappings$VH();
        }
        public static  @C("void(*)(ID3D12CommandQueue*,ID3D12Resource*,UINT,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Heap*,UINT,const D3D12_TILE_RANGE_FLAGS*,const UINT*,const UINT*,D3D12_TILE_MAPPING_FLAGS)") MemoryAddress UpdateTileMappings$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$UpdateTileMappings$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12CommandQueue*,ID3D12Resource*,UINT,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Heap*,UINT,const D3D12_TILE_RANGE_FLAGS*,const UINT*,const UINT*,D3D12_TILE_MAPPING_FLAGS)") MemoryAddress UpdateTileMappings$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$UpdateTileMappings$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UpdateTileMappings$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("void(*)(ID3D12CommandQueue*,ID3D12Resource*,UINT,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Heap*,UINT,const D3D12_TILE_RANGE_FLAGS*,const UINT*,const UINT*,D3D12_TILE_MAPPING_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$UpdateTileMappings$VH().set(seg, x);
        }
        public static void UpdateTileMappings$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12CommandQueue*,ID3D12Resource*,UINT,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Heap*,UINT,const D3D12_TILE_RANGE_FLAGS*,const UINT*,const UINT*,D3D12_TILE_MAPPING_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$UpdateTileMappings$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTileMappings$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$CopyTileMappings$VH();
        }
        public static  @C("void(*)(ID3D12CommandQueue*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,D3D12_TILE_MAPPING_FLAGS)") MemoryAddress CopyTileMappings$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$CopyTileMappings$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12CommandQueue*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,D3D12_TILE_MAPPING_FLAGS)") MemoryAddress CopyTileMappings$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$CopyTileMappings$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTileMappings$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("void(*)(ID3D12CommandQueue*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,D3D12_TILE_MAPPING_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$CopyTileMappings$VH().set(seg, x);
        }
        public static void CopyTileMappings$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12CommandQueue*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,D3D12_TILE_MAPPING_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$CopyTileMappings$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteCommandLists$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$ExecuteCommandLists$VH();
        }
        public static  @C("void(*)(ID3D12CommandQueue*,UINT,ID3D12CommandList**)") MemoryAddress ExecuteCommandLists$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$ExecuteCommandLists$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12CommandQueue*,UINT,ID3D12CommandList**)") MemoryAddress ExecuteCommandLists$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$ExecuteCommandLists$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteCommandLists$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("void(*)(ID3D12CommandQueue*,UINT,ID3D12CommandList**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$ExecuteCommandLists$VH().set(seg, x);
        }
        public static void ExecuteCommandLists$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12CommandQueue*,UINT,ID3D12CommandList**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$ExecuteCommandLists$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMarker$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetMarker$VH();
        }
        public static  @C("void(*)(ID3D12CommandQueue*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetMarker$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12CommandQueue*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetMarker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMarker$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("void(*)(ID3D12CommandQueue*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetMarker$VH().set(seg, x);
        }
        public static void SetMarker$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12CommandQueue*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$SetMarker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginEvent$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$BeginEvent$VH();
        }
        public static  @C("void(*)(ID3D12CommandQueue*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$BeginEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12CommandQueue*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$BeginEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginEvent$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("void(*)(ID3D12CommandQueue*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$BeginEvent$VH().set(seg, x);
        }
        public static void BeginEvent$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12CommandQueue*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$BeginEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndEvent$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$EndEvent$VH();
        }
        public static  @C("void(*)(ID3D12CommandQueue*)") MemoryAddress EndEvent$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$EndEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12CommandQueue*)") MemoryAddress EndEvent$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$EndEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndEvent$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("void(*)(ID3D12CommandQueue*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$EndEvent$VH().set(seg, x);
        }
        public static void EndEvent$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12CommandQueue*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$EndEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Signal$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$Signal$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,ID3D12Fence*,UINT64)") MemoryAddress Signal$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$Signal$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,ID3D12Fence*,UINT64)") MemoryAddress Signal$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$Signal$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Signal$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$Signal$VH().set(seg, x);
        }
        public static void Signal$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$Signal$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Wait$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$Wait$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,ID3D12Fence*,UINT64)") MemoryAddress Wait$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$Wait$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,ID3D12Fence*,UINT64)") MemoryAddress Wait$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$Wait$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Wait$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$Wait$VH().set(seg, x);
        }
        public static void Wait$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$Wait$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetTimestampFrequency$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetTimestampFrequency$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,UINT64*)") MemoryAddress GetTimestampFrequency$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetTimestampFrequency$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,UINT64*)") MemoryAddress GetTimestampFrequency$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetTimestampFrequency$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetTimestampFrequency$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetTimestampFrequency$VH().set(seg, x);
        }
        public static void GetTimestampFrequency$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetTimestampFrequency$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetClockCalibration$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetClockCalibration$VH();
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,UINT64*,UINT64*)") MemoryAddress GetClockCalibration$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetClockCalibration$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12CommandQueue*,UINT64*,UINT64*)") MemoryAddress GetClockCalibration$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetClockCalibration$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetClockCalibration$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12CommandQueue*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetClockCalibration$VH().set(seg, x);
        }
        public static void GetClockCalibration$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12CommandQueue*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetClockCalibration$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDesc$VH();
        }
        public static  @C("D3D12_COMMAND_QUEUE_DESC(*)(ID3D12CommandQueue*)") MemoryAddress GetDesc$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_QUEUE_DESC(*)(ID3D12CommandQueue*)") MemoryAddress GetDesc$get(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, @C("D3D12_COMMAND_QUEUE_DESC(*)(ID3D12CommandQueue*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12CommandQueueVtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_QUEUE_DESC(*)(ID3D12CommandQueue*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueueVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12CommandQueueVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12CommandQueueVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12CommandQueueVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12CommandQueueVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12CommandQueueVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12CommandQueueVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12CommandQueue {

        private ID3D12CommandQueue() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12CommandQueue$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$5.ID3D12CommandQueue$lpVtbl$VH();
        }
        public static  @C("struct ID3D12CommandQueueVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12CommandQueue") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueue$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12CommandQueueVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12CommandQueue") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12CommandQueue$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12CommandQueue") MemorySegment seg, @C("struct ID3D12CommandQueueVtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueue$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12CommandQueue") MemorySegment seg, long index, @C("struct ID3D12CommandQueueVtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12CommandQueue$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12CommandQueue") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12CommandQueue") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12CommandQueue[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12CommandQueue[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12CommandQueue*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12CommandQueue*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$VH().get(d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$VH().set(d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$VH().get(d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$VH().set(d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12Device$SEGMENT() {
        return d3d12_h$constants$5.IID_ID3D12Device$SEGMENT();
    }
    public static class ID3D12DeviceVtbl {

        private ID3D12DeviceVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device*)") MemoryAddress Release$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device*)") MemoryAddress Release$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("void(*)(ID3D12Device*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$5.ID3D12DeviceVtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12DeviceVtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12DeviceVtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12DeviceVtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device {

        private ID3D12Device() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12Device$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$5.ID3D12Device$lpVtbl$VH();
        }
        public static  @C("struct ID3D12DeviceVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12DeviceVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device") MemorySegment seg, @C("struct ID3D12DeviceVtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device") MemorySegment seg, long index, @C("struct ID3D12DeviceVtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12PipelineLibrary$SEGMENT() {
        return d3d12_h$constants$5.IID_ID3D12PipelineLibrary$SEGMENT();
    }
    public static class ID3D12PipelineLibraryVtbl {

        private ID3D12PipelineLibraryVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12PipelineLibrary*)") MemoryAddress AddRef$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12PipelineLibrary*)") MemoryAddress AddRef$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12PipelineLibrary*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12PipelineLibrary*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12PipelineLibrary*)") MemoryAddress Release$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12PipelineLibrary*)") MemoryAddress Release$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12PipelineLibrary*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12PipelineLibrary*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StorePipeline$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$StorePipeline$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,ID3D12PipelineState*)") MemoryAddress StorePipeline$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$StorePipeline$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,ID3D12PipelineState*)") MemoryAddress StorePipeline$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$StorePipeline$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StorePipeline$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$StorePipeline$VH().set(seg, x);
        }
        public static void StorePipeline$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$StorePipeline$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LoadGraphicsPipeline$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadGraphicsPipeline$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress LoadGraphicsPipeline$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadGraphicsPipeline$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress LoadGraphicsPipeline$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadGraphicsPipeline$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LoadGraphicsPipeline$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadGraphicsPipeline$VH().set(seg, x);
        }
        public static void LoadGraphicsPipeline$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadGraphicsPipeline$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LoadComputePipeline$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadComputePipeline$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress LoadComputePipeline$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadComputePipeline$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress LoadComputePipeline$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadComputePipeline$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LoadComputePipeline$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadComputePipeline$VH().set(seg, x);
        }
        public static void LoadComputePipeline$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,LPCWSTR,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$LoadComputePipeline$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSerializedSize$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetSerializedSize$VH();
        }
        public static  @C("SIZE_T(*)(ID3D12PipelineLibrary*)") MemoryAddress GetSerializedSize$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetSerializedSize$VH().get(seg);
        }
        public static  @C("SIZE_T(*)(ID3D12PipelineLibrary*)") MemoryAddress GetSerializedSize$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetSerializedSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSerializedSize$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("SIZE_T(*)(ID3D12PipelineLibrary*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetSerializedSize$VH().set(seg, x);
        }
        public static void GetSerializedSize$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("SIZE_T(*)(ID3D12PipelineLibrary*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$GetSerializedSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Serialize$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Serialize$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,void*,SIZE_T)") MemoryAddress Serialize$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Serialize$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary*,void*,SIZE_T)") MemoryAddress Serialize$get(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Serialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Serialize$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Serialize$VH().set(seg, x);
        }
        public static void Serialize$set(@C("struct ID3D12PipelineLibraryVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibraryVtbl$Serialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12PipelineLibraryVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12PipelineLibraryVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12PipelineLibraryVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12PipelineLibraryVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12PipelineLibraryVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12PipelineLibraryVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12PipelineLibrary {

        private ID3D12PipelineLibrary() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary$lpVtbl$VH();
        }
        public static  @C("struct ID3D12PipelineLibraryVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12PipelineLibrary") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12PipelineLibraryVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12PipelineLibrary") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12PipelineLibrary") MemorySegment seg, @C("struct ID3D12PipelineLibraryVtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12PipelineLibrary") MemorySegment seg, long index, @C("struct ID3D12PipelineLibraryVtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12PipelineLibrary") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12PipelineLibrary") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12PipelineLibrary[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12PipelineLibrary[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12PipelineLibrary*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12PipelineLibrary*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12PipelineLibrary1$SEGMENT() {
        return d3d12_h$constants$5.IID_ID3D12PipelineLibrary1$SEGMENT();
    }
    public static class ID3D12PipelineLibrary1Vtbl {

        private ID3D12PipelineLibrary1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12PipelineLibrary1*)") MemoryAddress AddRef$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12PipelineLibrary1*)") MemoryAddress AddRef$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12PipelineLibrary1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12PipelineLibrary1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12PipelineLibrary1*)") MemoryAddress Release$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12PipelineLibrary1*)") MemoryAddress Release$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12PipelineLibrary1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12PipelineLibrary1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StorePipeline$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$StorePipeline$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,ID3D12PipelineState*)") MemoryAddress StorePipeline$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$StorePipeline$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,ID3D12PipelineState*)") MemoryAddress StorePipeline$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$StorePipeline$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StorePipeline$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$StorePipeline$VH().set(seg, x);
        }
        public static void StorePipeline$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$StorePipeline$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LoadGraphicsPipeline$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadGraphicsPipeline$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress LoadGraphicsPipeline$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadGraphicsPipeline$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress LoadGraphicsPipeline$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadGraphicsPipeline$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LoadGraphicsPipeline$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadGraphicsPipeline$VH().set(seg, x);
        }
        public static void LoadGraphicsPipeline$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadGraphicsPipeline$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LoadComputePipeline$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadComputePipeline$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress LoadComputePipeline$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadComputePipeline$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress LoadComputePipeline$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadComputePipeline$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LoadComputePipeline$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadComputePipeline$VH().set(seg, x);
        }
        public static void LoadComputePipeline$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadComputePipeline$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSerializedSize$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetSerializedSize$VH();
        }
        public static  @C("SIZE_T(*)(ID3D12PipelineLibrary1*)") MemoryAddress GetSerializedSize$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetSerializedSize$VH().get(seg);
        }
        public static  @C("SIZE_T(*)(ID3D12PipelineLibrary1*)") MemoryAddress GetSerializedSize$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetSerializedSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSerializedSize$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("SIZE_T(*)(ID3D12PipelineLibrary1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetSerializedSize$VH().set(seg, x);
        }
        public static void GetSerializedSize$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("SIZE_T(*)(ID3D12PipelineLibrary1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$GetSerializedSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Serialize$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Serialize$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,void*,SIZE_T)") MemoryAddress Serialize$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Serialize$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,void*,SIZE_T)") MemoryAddress Serialize$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Serialize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Serialize$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Serialize$VH().set(seg, x);
        }
        public static void Serialize$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$Serialize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LoadPipeline$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadPipeline$VH();
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress LoadPipeline$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadPipeline$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress LoadPipeline$get(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadPipeline$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LoadPipeline$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadPipeline$VH().set(seg, x);
        }
        public static void LoadPipeline$set(@C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12PipelineLibrary1*,LPCWSTR,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1Vtbl$LoadPipeline$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12PipelineLibrary1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12PipelineLibrary1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12PipelineLibrary1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12PipelineLibrary1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12PipelineLibrary1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12PipelineLibrary1 {

        private ID3D12PipelineLibrary1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$5.ID3D12PipelineLibrary1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12PipelineLibrary1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12PipelineLibrary1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12PipelineLibrary1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12PipelineLibrary1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12PipelineLibrary1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12PipelineLibrary1") MemorySegment seg, @C("struct ID3D12PipelineLibrary1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12PipelineLibrary1") MemorySegment seg, long index, @C("struct ID3D12PipelineLibrary1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12PipelineLibrary1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12PipelineLibrary1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12PipelineLibrary1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12PipelineLibrary1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12PipelineLibrary1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12PipelineLibrary1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12PipelineLibrary1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE() {
        return d3d12_h$constants$5.D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE();
    }
    public static @C("int") int D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY() {
        return d3d12_h$constants$5.D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY();
    }
    public static @C("int") int D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL() {
        return d3d12_h$constants$5.D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL();
    }
    public static @C("int") int D3D12_RESIDENCY_PRIORITY_MINIMUM() {
        return d3d12_h$constants$5.D3D12_RESIDENCY_PRIORITY_MINIMUM();
    }
    public static @C("int") int D3D12_RESIDENCY_PRIORITY_LOW() {
        return d3d12_h$constants$5.D3D12_RESIDENCY_PRIORITY_LOW();
    }
    public static @C("int") int D3D12_RESIDENCY_PRIORITY_NORMAL() {
        return d3d12_h$constants$5.D3D12_RESIDENCY_PRIORITY_NORMAL();
    }
    public static @C("int") int D3D12_RESIDENCY_PRIORITY_HIGH() {
        return d3d12_h$constants$5.D3D12_RESIDENCY_PRIORITY_HIGH();
    }
    public static @C("int") int D3D12_RESIDENCY_PRIORITY_MAXIMUM() {
        return d3d12_h$constants$5.D3D12_RESIDENCY_PRIORITY_MAXIMUM();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$VH().get(d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$VH().set(d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$VH().get(d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$VH().set(d3d12_h$constants$5.__MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12Device1$SEGMENT() {
        return d3d12_h$constants$5.IID_ID3D12Device1$SEGMENT();
    }
    public static class ID3D12Device1Vtbl {

        private ID3D12Device1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device1*)") MemoryAddress AddRef$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device1*)") MemoryAddress AddRef$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device1*)") MemoryAddress Release$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device1*)") MemoryAddress Release$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device1*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device1*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device1*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device1*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device1*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device1*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device1*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device1*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device1*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device1*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device1*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device1*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device1*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device1*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device1*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device1*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device1*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device1*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device1*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device1*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineLibrary$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePipelineLibrary$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePipelineLibrary$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePipelineLibrary$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePipelineLibrary$VH().set(seg, x);
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$CreatePipelineLibrary$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnMultipleFenceCompletion$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$SetEventOnMultipleFenceCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg, x);
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetResidencyPriority$VH() {
            return d3d12_h$constants$5.ID3D12Device1Vtbl$SetResidencyPriority$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetResidencyPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1Vtbl$SetResidencyPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetResidencyPriority$VH().set(seg, x);
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device1*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1Vtbl$SetResidencyPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device1 {

        private ID3D12Device1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12Device1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$5.ID3D12Device1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Device1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Device1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device1") MemorySegment seg, @C("struct ID3D12Device1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device1") MemorySegment seg, long index, @C("struct ID3D12Device1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Device2$SEGMENT() {
        return d3d12_h$constants$5.IID_ID3D12Device2$SEGMENT();
    }
    public static class ID3D12Device2Vtbl {

        private ID3D12Device2Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device2*)") MemoryAddress AddRef$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device2*)") MemoryAddress AddRef$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device2*)") MemoryAddress Release$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device2*)") MemoryAddress Release$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device2*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device2*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device2*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device2*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device2*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device2*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$5.ID3D12Device2Vtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$5.ID3D12Device2Vtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$5.ID3D12Device2Vtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device2*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device2*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device2*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device2*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device2*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device2*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device2*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device2*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device2*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device2*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device2*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device2*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device2*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device2*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineLibrary$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineLibrary$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineLibrary$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineLibrary$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineLibrary$VH().set(seg, x);
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineLibrary$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnMultipleFenceCompletion$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$SetEventOnMultipleFenceCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg, x);
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetResidencyPriority$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$SetResidencyPriority$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$SetResidencyPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$SetResidencyPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$SetResidencyPriority$VH().set(seg, x);
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$SetResidencyPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineState$VH() {
            return d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device2*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device2*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineState$VH().set(seg, x);
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device2*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2Vtbl$CreatePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device2Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device2Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device2Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device2Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device2Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device2Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device2 {

        private ID3D12Device2() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12Device2$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$6.ID3D12Device2$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Device2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device2") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Device2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device2") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device2$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device2") MemorySegment seg, @C("struct ID3D12Device2Vtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device2") MemorySegment seg, long index, @C("struct ID3D12Device2Vtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device2$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RESIDENCY_FLAG_NONE() {
        return d3d12_h$constants$6.D3D12_RESIDENCY_FLAG_NONE();
    }
    public static @C("int") int D3D12_RESIDENCY_FLAG_DENY_OVERBUDGET() {
        return d3d12_h$constants$6.D3D12_RESIDENCY_FLAG_DENY_OVERBUDGET();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$VH().get(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$VH().set(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$VH().get(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$VH().set(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12Device3$SEGMENT() {
        return d3d12_h$constants$6.IID_ID3D12Device3$SEGMENT();
    }
    public static class ID3D12Device3Vtbl {

        private ID3D12Device3Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device3*)") MemoryAddress AddRef$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device3*)") MemoryAddress AddRef$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device3*)") MemoryAddress Release$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device3*)") MemoryAddress Release$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device3*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device3*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device3*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device3*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device3*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device3*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device3*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device3*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device3*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device3*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device3*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device3*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device3*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device3*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device3*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device3*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device3*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device3*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device3*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device3*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineLibrary$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineLibrary$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineLibrary$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineLibrary$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineLibrary$VH().set(seg, x);
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineLibrary$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnMultipleFenceCompletion$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$SetEventOnMultipleFenceCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg, x);
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetResidencyPriority$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$SetResidencyPriority$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetResidencyPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$SetResidencyPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetResidencyPriority$VH().set(seg, x);
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$SetResidencyPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineState$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineState$VH().set(seg, x);
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$CreatePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromAddress$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromAddress$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromAddress$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromAddress$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromFileMapping$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromFileMapping$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnqueueMakeResident$VH() {
            return d3d12_h$constants$6.ID3D12Device3Vtbl$EnqueueMakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$EnqueueMakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device3*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3Vtbl$EnqueueMakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device3*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$EnqueueMakeResident$VH().set(seg, x);
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device3*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3Vtbl$EnqueueMakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device3Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device3Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device3Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device3Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device3Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device3Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device3 {

        private ID3D12Device3() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12Device3$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$6.ID3D12Device3$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Device3Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device3") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Device3Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device3") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device3$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device3") MemorySegment seg, @C("struct ID3D12Device3Vtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device3") MemorySegment seg, long index, @C("struct ID3D12Device3Vtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device3$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device3") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device3") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device3[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device3[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device3*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device3*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_COMMAND_LIST_FLAG_NONE() {
        return d3d12_h$constants$6.D3D12_COMMAND_LIST_FLAG_NONE();
    }
    public static @C("int") int D3D12_COMMAND_POOL_FLAG_NONE() {
        return d3d12_h$constants$6.D3D12_COMMAND_POOL_FLAG_NONE();
    }
    public static @C("int") int D3D12_COMMAND_RECORDER_FLAG_NONE() {
        return d3d12_h$constants$6.D3D12_COMMAND_RECORDER_FLAG_NONE();
    }
    public static @C("int") int D3D12_PROTECTED_SESSION_STATUS_OK() {
        return d3d12_h$constants$6.D3D12_PROTECTED_SESSION_STATUS_OK();
    }
    public static @C("int") int D3D12_PROTECTED_SESSION_STATUS_INVALID() {
        return d3d12_h$constants$6.D3D12_PROTECTED_SESSION_STATUS_INVALID();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$VH().get(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$VH().set(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$VH().get(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$VH().set(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12ProtectedSession$SEGMENT() {
        return d3d12_h$constants$6.IID_ID3D12ProtectedSession$SEGMENT();
    }
    public static class ID3D12ProtectedSessionVtbl {

        private ID3D12ProtectedSessionVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12ProtectedSession*)") MemoryAddress AddRef$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12ProtectedSession*)") MemoryAddress AddRef$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12ProtectedSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12ProtectedSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12ProtectedSession*)") MemoryAddress Release$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12ProtectedSession*)") MemoryAddress Release$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12ProtectedSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12ProtectedSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedSession*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedSession*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedSession*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetStatusFence$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetStatusFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress GetStatusFence$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetStatusFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress GetStatusFence$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetStatusFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetStatusFence$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetStatusFence$VH().set(seg, x);
        }
        public static void GetStatusFence$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetStatusFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSessionStatus$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetSessionStatus$VH();
        }
        public static  @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedSession*)") MemoryAddress GetSessionStatus$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetSessionStatus$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedSession*)") MemoryAddress GetSessionStatus$get(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetSessionStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSessionStatus$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetSessionStatus$VH().set(seg, x);
        }
        public static void GetSessionStatus$set(@C("struct ID3D12ProtectedSessionVtbl") MemorySegment seg, long index, @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSessionVtbl$GetSessionStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ProtectedSessionVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ProtectedSessionVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ProtectedSessionVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ProtectedSessionVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ProtectedSessionVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ProtectedSessionVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12ProtectedSession {

        private ID3D12ProtectedSession() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12ProtectedSession$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedSession$lpVtbl$VH();
        }
        public static  @C("struct ID3D12ProtectedSessionVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12ProtectedSession") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSession$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12ProtectedSessionVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12ProtectedSession") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedSession$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12ProtectedSession") MemorySegment seg, @C("struct ID3D12ProtectedSessionVtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSession$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12ProtectedSession") MemorySegment seg, long index, @C("struct ID3D12ProtectedSessionVtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedSession$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ProtectedSession") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ProtectedSession") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ProtectedSession[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ProtectedSession[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ProtectedSession*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ProtectedSession*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_NONE() {
        return d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_NONE();
    }
    public static @C("int") int D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED() {
        return d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED();
    }
    public static class D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT {

        private D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$struct$LAYOUT();
        }
        public static VarHandle NodeIndex$VH() {
            return d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$NodeIndex$VH();
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment seg) {
            return (int)d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$NodeIndex$VH().get(seg);
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$NodeIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$NodeIndex$VH().set(seg, x);
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$NodeIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Support$VH() {
            return d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$Support$VH();
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS") int Support$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment seg) {
            return (int)d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$Support$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS") int Support$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$Support$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Support$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment seg, @C("D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS") int x) {
            d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$Support$VH().set(seg, x);
        }
        public static void Support$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment seg, long index, @C("D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS") int x) {
            d3d12_h$constants$6.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT$Support$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE() {
        return d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE();
    }
    public static class D3D12_PROTECTED_RESOURCE_SESSION_DESC {

        private D3D12_PROTECTED_RESOURCE_SESSION_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$struct$LAYOUT();
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$Flags$VH();
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_FLAGS") int Flags$get(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_FLAGS") int Flags$get(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment seg, @C("D3D12_PROTECTED_RESOURCE_SESSION_FLAGS") int x) {
            d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment seg, long index, @C("D3D12_PROTECTED_RESOURCE_SESSION_FLAGS") int x) {
            d3d12_h$constants$6.D3D12_PROTECTED_RESOURCE_SESSION_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$VH().get(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$VH().set(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$VH().get(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$VH().set(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12ProtectedResourceSession$SEGMENT() {
        return d3d12_h$constants$6.IID_ID3D12ProtectedResourceSession$SEGMENT();
    }
    public static class ID3D12ProtectedResourceSessionVtbl {

        private ID3D12ProtectedResourceSessionVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12ProtectedResourceSession*)") MemoryAddress AddRef$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12ProtectedResourceSession*)") MemoryAddress AddRef$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12ProtectedResourceSession*)") MemoryAddress Release$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12ProtectedResourceSession*)") MemoryAddress Release$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetStatusFence$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetStatusFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress GetStatusFence$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetStatusFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress GetStatusFence$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetStatusFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetStatusFence$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetStatusFence$VH().set(seg, x);
        }
        public static void GetStatusFence$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetStatusFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSessionStatus$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetSessionStatus$VH();
        }
        public static  @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedResourceSession*)") MemoryAddress GetSessionStatus$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetSessionStatus$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedResourceSession*)") MemoryAddress GetSessionStatus$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetSessionStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSessionStatus$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetSessionStatus$VH().set(seg, x);
        }
        public static void GetSessionStatus$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetSessionStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDesc$VH();
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC(*)(ID3D12ProtectedResourceSession*)") MemoryAddress GetDesc$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC(*)(ID3D12ProtectedResourceSession*)") MemoryAddress GetDesc$get(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC(*)(ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment seg, long index, @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC(*)(ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSessionVtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ProtectedResourceSessionVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ProtectedResourceSessionVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ProtectedResourceSessionVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ProtectedResourceSessionVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ProtectedResourceSessionVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12ProtectedResourceSession {

        private ID3D12ProtectedResourceSession() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSession$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$6.ID3D12ProtectedResourceSession$lpVtbl$VH();
        }
        public static  @C("struct ID3D12ProtectedResourceSessionVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12ProtectedResourceSession") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSession$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12ProtectedResourceSessionVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12ProtectedResourceSession") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12ProtectedResourceSession$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12ProtectedResourceSession") MemorySegment seg, @C("struct ID3D12ProtectedResourceSessionVtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSession$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12ProtectedResourceSession") MemorySegment seg, long index, @C("struct ID3D12ProtectedResourceSessionVtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12ProtectedResourceSession$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ProtectedResourceSession") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ProtectedResourceSession") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ProtectedResourceSession[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ProtectedResourceSession[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ProtectedResourceSession*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ProtectedResourceSession*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Device4$SEGMENT() {
        return d3d12_h$constants$6.IID_ID3D12Device4$SEGMENT();
    }
    public static class ID3D12Device4Vtbl {

        private ID3D12Device4Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device4*)") MemoryAddress AddRef$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device4*)") MemoryAddress AddRef$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device4*)") MemoryAddress Release$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device4*)") MemoryAddress Release$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device4*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device4*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device4*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device4*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device4*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device4*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device4*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device4*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device4*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device4*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device4*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device4*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device4*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device4*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device4*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device4*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device4*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device4*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device4*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device4*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineLibrary$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineLibrary$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineLibrary$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineLibrary$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineLibrary$VH().set(seg, x);
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineLibrary$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnMultipleFenceCompletion$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$SetEventOnMultipleFenceCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg, x);
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetResidencyPriority$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$SetResidencyPriority$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetResidencyPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$SetResidencyPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetResidencyPriority$VH().set(seg, x);
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$SetResidencyPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineState$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineState$VH().set(seg, x);
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreatePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromAddress$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromAddress$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromAddress$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromAddress$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromFileMapping$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromFileMapping$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnqueueMakeResident$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$EnqueueMakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$EnqueueMakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$EnqueueMakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$EnqueueMakeResident$VH().set(seg, x);
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$EnqueueMakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList1$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList1$VH().set(seg, x);
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommandList1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateProtectedResourceSession$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateProtectedResourceSession$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateProtectedResourceSession$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateProtectedResourceSession$VH().set(seg, x);
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource1$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource1$VH().set(seg, x);
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateCommittedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap1$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap1$VH().set(seg, x);
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateHeap1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource1$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource1$VH().set(seg, x);
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device4*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$CreateReservedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo1$VH() {
            return d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo1$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device4*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo1$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device4*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device4*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo1$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device4Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device4*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4Vtbl$GetResourceAllocationInfo1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device4Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device4Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device4Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device4Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device4Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device4Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device4 {

        private ID3D12Device4() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12Device4$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$6.ID3D12Device4$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Device4Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device4") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Device4Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device4") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12Device4$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device4") MemorySegment seg, @C("struct ID3D12Device4Vtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device4") MemorySegment seg, long index, @C("struct ID3D12Device4Vtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12Device4$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device4") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device4") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device4[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device4[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device4*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device4*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_LIFETIME_STATE_IN_USE() {
        return d3d12_h$constants$6.D3D12_LIFETIME_STATE_IN_USE();
    }
    public static @C("int") int D3D12_LIFETIME_STATE_NOT_IN_USE() {
        return d3d12_h$constants$6.D3D12_LIFETIME_STATE_NOT_IN_USE();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$VH().get(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$VH().set(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$VH().get(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$VH().set(d3d12_h$constants$6.__MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12LifetimeOwner$SEGMENT() {
        return d3d12_h$constants$6.IID_ID3D12LifetimeOwner$SEGMENT();
    }
    public static class ID3D12LifetimeOwnerVtbl {

        private ID3D12LifetimeOwnerVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12LifetimeOwner*)") MemoryAddress AddRef$get(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12LifetimeOwner*)") MemoryAddress AddRef$get(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12LifetimeOwner*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12LifetimeOwner*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12LifetimeOwner*)") MemoryAddress Release$get(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12LifetimeOwner*)") MemoryAddress Release$get(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12LifetimeOwner*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12LifetimeOwner*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LifetimeStateUpdated$VH() {
            return d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$LifetimeStateUpdated$VH();
        }
        public static  @C("void(*)(ID3D12LifetimeOwner*,D3D12_LIFETIME_STATE)") MemoryAddress LifetimeStateUpdated$get(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$LifetimeStateUpdated$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12LifetimeOwner*,D3D12_LIFETIME_STATE)") MemoryAddress LifetimeStateUpdated$get(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$LifetimeStateUpdated$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LifetimeStateUpdated$set(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, @C("void(*)(ID3D12LifetimeOwner*,D3D12_LIFETIME_STATE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$LifetimeStateUpdated$VH().set(seg, x);
        }
        public static void LifetimeStateUpdated$set(@C("struct ID3D12LifetimeOwnerVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12LifetimeOwner*,D3D12_LIFETIME_STATE)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwnerVtbl$LifetimeStateUpdated$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12LifetimeOwnerVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12LifetimeOwnerVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12LifetimeOwnerVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12LifetimeOwnerVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12LifetimeOwnerVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12LifetimeOwnerVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12LifetimeOwner {

        private ID3D12LifetimeOwner() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12LifetimeOwner$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$6.ID3D12LifetimeOwner$lpVtbl$VH();
        }
        public static  @C("struct ID3D12LifetimeOwnerVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12LifetimeOwner") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwner$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12LifetimeOwnerVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12LifetimeOwner") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeOwner$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12LifetimeOwner") MemorySegment seg, @C("struct ID3D12LifetimeOwnerVtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwner$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12LifetimeOwner") MemorySegment seg, long index, @C("struct ID3D12LifetimeOwnerVtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeOwner$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12LifetimeOwner") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12LifetimeOwner") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12LifetimeOwner[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12LifetimeOwner[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12LifetimeOwner*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12LifetimeOwner*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12SwapChainAssistant$SEGMENT() {
        return d3d12_h$constants$6.IID_ID3D12SwapChainAssistant$SEGMENT();
    }
    public static class ID3D12SwapChainAssistantVtbl {

        private ID3D12SwapChainAssistantVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12SwapChainAssistant*)") MemoryAddress AddRef$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12SwapChainAssistant*)") MemoryAddress AddRef$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12SwapChainAssistant*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12SwapChainAssistant*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12SwapChainAssistant*)") MemoryAddress Release$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12SwapChainAssistant*)") MemoryAddress Release$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12SwapChainAssistant*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12SwapChainAssistant*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetLUID$VH() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetLUID$VH();
        }
        public static  @C("LUID(*)(ID3D12SwapChainAssistant*)") MemoryAddress GetLUID$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetLUID$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12SwapChainAssistant*)") MemoryAddress GetLUID$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetLUID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetLUID$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, @C("LUID(*)(ID3D12SwapChainAssistant*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetLUID$VH().set(seg, x);
        }
        public static void GetLUID$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12SwapChainAssistant*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetLUID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSwapChainObject$VH() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetSwapChainObject$VH();
        }
        public static  @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**)") MemoryAddress GetSwapChainObject$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetSwapChainObject$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**)") MemoryAddress GetSwapChainObject$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetSwapChainObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSwapChainObject$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetSwapChainObject$VH().set(seg, x);
        }
        public static void GetSwapChainObject$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetSwapChainObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCurrentResourceAndCommandQueue$VH() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetCurrentResourceAndCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**,const IID*,void**)") MemoryAddress GetCurrentResourceAndCommandQueue$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetCurrentResourceAndCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**,const IID*,void**)") MemoryAddress GetCurrentResourceAndCommandQueue$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetCurrentResourceAndCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCurrentResourceAndCommandQueue$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetCurrentResourceAndCommandQueue$VH().set(seg, x);
        }
        public static void GetCurrentResourceAndCommandQueue$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12SwapChainAssistant*,const IID*,void**,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$GetCurrentResourceAndCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InsertImplicitSync$VH() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$InsertImplicitSync$VH();
        }
        public static  @C("HRESULT(*)(ID3D12SwapChainAssistant*)") MemoryAddress InsertImplicitSync$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$InsertImplicitSync$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12SwapChainAssistant*)") MemoryAddress InsertImplicitSync$get(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$InsertImplicitSync$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InsertImplicitSync$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12SwapChainAssistant*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$InsertImplicitSync$VH().set(seg, x);
        }
        public static void InsertImplicitSync$set(@C("struct ID3D12SwapChainAssistantVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12SwapChainAssistant*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistantVtbl$InsertImplicitSync$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12SwapChainAssistantVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12SwapChainAssistantVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12SwapChainAssistantVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12SwapChainAssistantVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12SwapChainAssistantVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12SwapChainAssistantVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12SwapChainAssistant {

        private ID3D12SwapChainAssistant() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistant$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$6.ID3D12SwapChainAssistant$lpVtbl$VH();
        }
        public static  @C("struct ID3D12SwapChainAssistantVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12SwapChainAssistant") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistant$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12SwapChainAssistantVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12SwapChainAssistant") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12SwapChainAssistant$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12SwapChainAssistant") MemorySegment seg, @C("struct ID3D12SwapChainAssistantVtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistant$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12SwapChainAssistant") MemorySegment seg, long index, @C("struct ID3D12SwapChainAssistantVtbl*") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12SwapChainAssistant$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12SwapChainAssistant") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12SwapChainAssistant") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12SwapChainAssistant[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12SwapChainAssistant[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12SwapChainAssistant*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12SwapChainAssistant*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12LifetimeTracker$SEGMENT() {
        return d3d12_h$constants$6.IID_ID3D12LifetimeTracker$SEGMENT();
    }
    public static class ID3D12LifetimeTrackerVtbl {

        private ID3D12LifetimeTrackerVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12LifetimeTracker*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12LifetimeTracker*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12LifetimeTracker*)") MemoryAddress AddRef$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12LifetimeTracker*)") MemoryAddress AddRef$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12LifetimeTracker*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12LifetimeTracker*)") MemoryAddress x) {
            d3d12_h$constants$6.ID3D12LifetimeTrackerVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12LifetimeTracker*)") MemoryAddress Release$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12LifetimeTracker*)") MemoryAddress Release$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12LifetimeTracker*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12LifetimeTracker*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12LifetimeTracker*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12LifetimeTracker*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12LifetimeTracker*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12LifetimeTracker*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12LifetimeTracker*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DestroyOwnedObject$VH() {
            return d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$VH();
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,ID3D12DeviceChild*)") MemoryAddress DestroyOwnedObject$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12LifetimeTracker*,ID3D12DeviceChild*)") MemoryAddress DestroyOwnedObject$get(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DestroyOwnedObject$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12LifetimeTracker*,ID3D12DeviceChild*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$VH().set(seg, x);
        }
        public static void DestroyOwnedObject$set(@C("struct ID3D12LifetimeTrackerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12LifetimeTracker*,ID3D12DeviceChild*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTrackerVtbl$DestroyOwnedObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12LifetimeTrackerVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12LifetimeTrackerVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12LifetimeTrackerVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12LifetimeTrackerVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12LifetimeTrackerVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12LifetimeTrackerVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12LifetimeTracker {

        private ID3D12LifetimeTracker() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.ID3D12LifetimeTracker$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$7.ID3D12LifetimeTracker$lpVtbl$VH();
        }
        public static  @C("struct ID3D12LifetimeTrackerVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12LifetimeTracker") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTracker$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12LifetimeTrackerVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12LifetimeTracker") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12LifetimeTracker$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12LifetimeTracker") MemorySegment seg, @C("struct ID3D12LifetimeTrackerVtbl*") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTracker$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12LifetimeTracker") MemorySegment seg, long index, @C("struct ID3D12LifetimeTrackerVtbl*") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12LifetimeTracker$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12LifetimeTracker") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12LifetimeTracker") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12LifetimeTracker[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12LifetimeTracker[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12LifetimeTracker*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12LifetimeTracker*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_TYPE_UINT64() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_TYPE_UINT64();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_FLAG_INPUT() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_FLAG_INPUT();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_STAGE_CREATION() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_STAGE_CREATION();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION();
    }
    public static @C("int") int D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION() {
        return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION();
    }
    public static class D3D12_META_COMMAND_PARAMETER_DESC {

        private D3D12_META_COMMAND_PARAMETER_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$struct$LAYOUT();
        }
        public static VarHandle Name$VH() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Name$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress Name$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Name$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress Name$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Name$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Name$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Name$VH().set(seg, x);
        }
        public static void Name$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Name$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Type$VH();
        }
        public static  @C("D3D12_META_COMMAND_PARAMETER_TYPE") int Type$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Type$VH().get(seg);
        }
        public static  @C("D3D12_META_COMMAND_PARAMETER_TYPE") int Type$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, @C("D3D12_META_COMMAND_PARAMETER_TYPE") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index, @C("D3D12_META_COMMAND_PARAMETER_TYPE") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Flags$VH();
        }
        public static  @C("D3D12_META_COMMAND_PARAMETER_FLAGS") int Flags$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_META_COMMAND_PARAMETER_FLAGS") int Flags$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, @C("D3D12_META_COMMAND_PARAMETER_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index, @C("D3D12_META_COMMAND_PARAMETER_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RequiredResourceState$VH() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$VH();
        }
        public static  @C("D3D12_RESOURCE_STATES") int RequiredResourceState$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_STATES") int RequiredResourceState$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RequiredResourceState$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, @C("D3D12_RESOURCE_STATES") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$VH().set(seg, x);
        }
        public static void RequiredResourceState$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index, @C("D3D12_RESOURCE_STATES") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$RequiredResourceState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StructureOffset$VH() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$VH();
        }
        public static  @C("UINT") int StructureOffset$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$VH().get(seg);
        }
        public static  @C("UINT") int StructureOffset$get(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StructureOffset$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$VH().set(seg, x);
        }
        public static void StructureOffset$set(@C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_PARAMETER_DESC$StructureOffset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_META_COMMAND_PARAMETER_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_META_COMMAND_PARAMETER_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_META_COMMAND_PARAMETER_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_META_COMMAND_PARAMETER_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_META_COMMAND_PARAMETER_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_GRAPHICS_STATE_NONE() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_NONE();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_RS_VIEWPORTS() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_RS_VIEWPORTS();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_PREDICATION() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_PREDICATION();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_OM_STENCIL_REF() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_OM_STENCIL_REF();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_PIPELINE_STATE() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_PIPELINE_STATE();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_SO_TARGETS() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_SO_TARGETS();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS();
    }
    public static @C("int") int D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK() {
        return d3d12_h$constants$7.D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK();
    }
    public static class D3D12_META_COMMAND_DESC {

        private D3D12_META_COMMAND_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_DESC$struct$LAYOUT();
        }
        public static MemorySegment Id$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static VarHandle Name$VH() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_DESC$Name$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress Name$get(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_META_COMMAND_DESC$Name$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress Name$get(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_META_COMMAND_DESC$Name$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Name$set(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_DESC$Name$VH().set(seg, x);
        }
        public static void Name$set(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_DESC$Name$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InitializationDirtyState$VH() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_DESC$InitializationDirtyState$VH();
        }
        public static  @C("D3D12_GRAPHICS_STATES") int InitializationDirtyState$get(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_DESC$InitializationDirtyState$VH().get(seg);
        }
        public static  @C("D3D12_GRAPHICS_STATES") int InitializationDirtyState$get(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_DESC$InitializationDirtyState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InitializationDirtyState$set(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, @C("D3D12_GRAPHICS_STATES") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_DESC$InitializationDirtyState$VH().set(seg, x);
        }
        public static void InitializationDirtyState$set(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, long index, @C("D3D12_GRAPHICS_STATES") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_DESC$InitializationDirtyState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecutionDirtyState$VH() {
            return d3d12_h$constants$7.D3D12_META_COMMAND_DESC$ExecutionDirtyState$VH();
        }
        public static  @C("D3D12_GRAPHICS_STATES") int ExecutionDirtyState$get(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_DESC$ExecutionDirtyState$VH().get(seg);
        }
        public static  @C("D3D12_GRAPHICS_STATES") int ExecutionDirtyState$get(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_META_COMMAND_DESC$ExecutionDirtyState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecutionDirtyState$set(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, @C("D3D12_GRAPHICS_STATES") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_DESC$ExecutionDirtyState$VH().set(seg, x);
        }
        public static void ExecutionDirtyState$set(@C("struct D3D12_META_COMMAND_DESC") MemorySegment seg, long index, @C("D3D12_GRAPHICS_STATES") int x) {
            d3d12_h$constants$7.D3D12_META_COMMAND_DESC$ExecutionDirtyState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_META_COMMAND_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_META_COMMAND_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_META_COMMAND_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_META_COMMAND_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_META_COMMAND_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_META_COMMAND_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$VH().get(d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$VH().set(d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$VH().get(d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$VH().set(d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12StateObject$SEGMENT() {
        return d3d12_h$constants$7.IID_ID3D12StateObject$SEGMENT();
    }
    public static class ID3D12StateObjectVtbl {

        private ID3D12StateObjectVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12StateObject*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12StateObject*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12StateObject*)") MemoryAddress AddRef$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12StateObject*)") MemoryAddress AddRef$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12StateObject*)") MemoryAddress Release$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12StateObject*)") MemoryAddress Release$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12StateObject*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12StateObject*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12StateObject*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12StateObject*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12StateObject*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12StateObject*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12StateObject*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12StateObject*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12StateObject*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12StateObject*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12StateObjectVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12StateObject*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12StateObjectVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12StateObjectVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12StateObjectVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12StateObjectVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12StateObjectVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12StateObjectVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12StateObject {

        private ID3D12StateObject() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.ID3D12StateObject$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$7.ID3D12StateObject$lpVtbl$VH();
        }
        public static  @C("struct ID3D12StateObjectVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12StateObject") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObject$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12StateObjectVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12StateObject") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObject$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12StateObject") MemorySegment seg, @C("struct ID3D12StateObjectVtbl*") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObject$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12StateObject") MemorySegment seg, long index, @C("struct ID3D12StateObjectVtbl*") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObject$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12StateObject") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12StateObject") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12StateObject[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12StateObject[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12StateObject*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12StateObject*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12StateObjectProperties$SEGMENT() {
        return d3d12_h$constants$7.IID_ID3D12StateObjectProperties$SEGMENT();
    }
    public static class ID3D12StateObjectPropertiesVtbl {

        private ID3D12StateObjectPropertiesVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12StateObjectProperties*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12StateObjectProperties*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12StateObjectProperties*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12StateObjectProperties*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12StateObjectProperties*)") MemoryAddress AddRef$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12StateObjectProperties*)") MemoryAddress AddRef$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12StateObjectProperties*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12StateObjectProperties*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12StateObjectProperties*)") MemoryAddress Release$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12StateObjectProperties*)") MemoryAddress Release$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12StateObjectProperties*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12StateObjectProperties*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetShaderIdentifier$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$VH();
        }
        public static  @C("void*(*)(ID3D12StateObjectProperties*,LPCWSTR)") MemoryAddress GetShaderIdentifier$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$VH().get(seg);
        }
        public static  @C("void*(*)(ID3D12StateObjectProperties*,LPCWSTR)") MemoryAddress GetShaderIdentifier$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetShaderIdentifier$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, @C("void*(*)(ID3D12StateObjectProperties*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$VH().set(seg, x);
        }
        public static void GetShaderIdentifier$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index, @C("void*(*)(ID3D12StateObjectProperties*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderIdentifier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetShaderStackSize$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$VH();
        }
        public static  @C("UINT64(*)(ID3D12StateObjectProperties*,LPCWSTR)") MemoryAddress GetShaderStackSize$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$VH().get(seg);
        }
        public static  @C("UINT64(*)(ID3D12StateObjectProperties*,LPCWSTR)") MemoryAddress GetShaderStackSize$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetShaderStackSize$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, @C("UINT64(*)(ID3D12StateObjectProperties*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$VH().set(seg, x);
        }
        public static void GetShaderStackSize$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index, @C("UINT64(*)(ID3D12StateObjectProperties*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetShaderStackSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPipelineStackSize$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$VH();
        }
        public static  @C("UINT64(*)(ID3D12StateObjectProperties*)") MemoryAddress GetPipelineStackSize$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$VH().get(seg);
        }
        public static  @C("UINT64(*)(ID3D12StateObjectProperties*)") MemoryAddress GetPipelineStackSize$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPipelineStackSize$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, @C("UINT64(*)(ID3D12StateObjectProperties*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$VH().set(seg, x);
        }
        public static void GetPipelineStackSize$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index, @C("UINT64(*)(ID3D12StateObjectProperties*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$GetPipelineStackSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineStackSize$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$VH();
        }
        public static  @C("void(*)(ID3D12StateObjectProperties*,UINT64)") MemoryAddress SetPipelineStackSize$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12StateObjectProperties*,UINT64)") MemoryAddress SetPipelineStackSize$get(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineStackSize$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, @C("void(*)(ID3D12StateObjectProperties*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$VH().set(seg, x);
        }
        public static void SetPipelineStackSize$set(@C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12StateObjectProperties*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectPropertiesVtbl$SetPipelineStackSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12StateObjectPropertiesVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12StateObjectPropertiesVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12StateObjectPropertiesVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12StateObjectPropertiesVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12StateObjectPropertiesVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12StateObjectProperties {

        private ID3D12StateObjectProperties() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.ID3D12StateObjectProperties$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$7.ID3D12StateObjectProperties$lpVtbl$VH();
        }
        public static  @C("struct ID3D12StateObjectPropertiesVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12StateObjectProperties") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectProperties$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12StateObjectPropertiesVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12StateObjectProperties") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12StateObjectProperties$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12StateObjectProperties") MemorySegment seg, @C("struct ID3D12StateObjectPropertiesVtbl*") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectProperties$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12StateObjectProperties") MemorySegment seg, long index, @C("struct ID3D12StateObjectPropertiesVtbl*") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12StateObjectProperties$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12StateObjectProperties") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12StateObjectProperties") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12StateObjectProperties[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12StateObjectProperties[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12StateObjectProperties*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12StateObjectProperties*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1();
    }
    public static @C("int") int D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID() {
        return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID();
    }
    public static class D3D12_STATE_SUBOBJECT {

        private D3D12_STATE_SUBOBJECT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$Type$VH();
        }
        public static  @C("D3D12_STATE_SUBOBJECT_TYPE") int Type$get(@C("struct D3D12_STATE_SUBOBJECT") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$Type$VH().get(seg);
        }
        public static  @C("D3D12_STATE_SUBOBJECT_TYPE") int Type$get(@C("struct D3D12_STATE_SUBOBJECT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_STATE_SUBOBJECT") MemorySegment seg, @C("D3D12_STATE_SUBOBJECT_TYPE") int x) {
            d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_STATE_SUBOBJECT") MemorySegment seg, long index, @C("D3D12_STATE_SUBOBJECT_TYPE") int x) {
            d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pDesc$VH() {
            return d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$pDesc$VH();
        }
        public static  @C("void*") MemoryAddress pDesc$get(@C("struct D3D12_STATE_SUBOBJECT") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$pDesc$VH().get(seg);
        }
        public static  @C("void*") MemoryAddress pDesc$get(@C("struct D3D12_STATE_SUBOBJECT") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$pDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pDesc$set(@C("struct D3D12_STATE_SUBOBJECT") MemorySegment seg, @C("void*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$pDesc$VH().set(seg, x);
        }
        public static void pDesc$set(@C("struct D3D12_STATE_SUBOBJECT") MemorySegment seg, long index, @C("void*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_STATE_SUBOBJECT$pDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_STATE_SUBOBJECT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_STATE_SUBOBJECT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_STATE_SUBOBJECT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_STATE_SUBOBJECT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_STATE_SUBOBJECT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_STATE_SUBOBJECT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_STATE_OBJECT_FLAG_NONE() {
        return d3d12_h$constants$7.D3D12_STATE_OBJECT_FLAG_NONE();
    }
    public static @C("int") int D3D12_STATE_OBJECT_FLAG_ALLOW_LOCAL_DEPENDENCIES_ON_EXTERNAL_DEFINITIONS() {
        return d3d12_h$constants$7.D3D12_STATE_OBJECT_FLAG_ALLOW_LOCAL_DEPENDENCIES_ON_EXTERNAL_DEFINITIONS();
    }
    public static @C("int") int D3D12_STATE_OBJECT_FLAG_ALLOW_EXTERNAL_DEPENDENCIES_ON_LOCAL_DEFINITIONS() {
        return d3d12_h$constants$7.D3D12_STATE_OBJECT_FLAG_ALLOW_EXTERNAL_DEPENDENCIES_ON_LOCAL_DEFINITIONS();
    }
    public static @C("int") int D3D12_STATE_OBJECT_FLAG_ALLOW_STATE_OBJECT_ADDITIONS() {
        return d3d12_h$constants$7.D3D12_STATE_OBJECT_FLAG_ALLOW_STATE_OBJECT_ADDITIONS();
    }
    public static class D3D12_STATE_OBJECT_CONFIG {

        private D3D12_STATE_OBJECT_CONFIG() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_STATE_OBJECT_CONFIG$struct$LAYOUT();
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$7.D3D12_STATE_OBJECT_CONFIG$Flags$VH();
        }
        public static  @C("D3D12_STATE_OBJECT_FLAGS") int Flags$get(@C("struct D3D12_STATE_OBJECT_CONFIG") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_STATE_OBJECT_CONFIG$Flags$VH().get(seg);
        }
        public static  @C("D3D12_STATE_OBJECT_FLAGS") int Flags$get(@C("struct D3D12_STATE_OBJECT_CONFIG") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_STATE_OBJECT_CONFIG$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_STATE_OBJECT_CONFIG") MemorySegment seg, @C("D3D12_STATE_OBJECT_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_STATE_OBJECT_CONFIG$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_STATE_OBJECT_CONFIG") MemorySegment seg, long index, @C("D3D12_STATE_OBJECT_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_STATE_OBJECT_CONFIG$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_STATE_OBJECT_CONFIG") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_STATE_OBJECT_CONFIG") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_STATE_OBJECT_CONFIG[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_STATE_OBJECT_CONFIG[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_STATE_OBJECT_CONFIG*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_STATE_OBJECT_CONFIG*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_GLOBAL_ROOT_SIGNATURE {

        private D3D12_GLOBAL_ROOT_SIGNATURE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_GLOBAL_ROOT_SIGNATURE$struct$LAYOUT();
        }
        public static VarHandle pGlobalRootSignature$VH() {
            return d3d12_h$constants$7.D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$VH();
        }
        public static  @C("ID3D12RootSignature*") MemoryAddress pGlobalRootSignature$get(@C("struct D3D12_GLOBAL_ROOT_SIGNATURE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$VH().get(seg);
        }
        public static  @C("ID3D12RootSignature*") MemoryAddress pGlobalRootSignature$get(@C("struct D3D12_GLOBAL_ROOT_SIGNATURE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pGlobalRootSignature$set(@C("struct D3D12_GLOBAL_ROOT_SIGNATURE") MemorySegment seg, @C("ID3D12RootSignature*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$VH().set(seg, x);
        }
        public static void pGlobalRootSignature$set(@C("struct D3D12_GLOBAL_ROOT_SIGNATURE") MemorySegment seg, long index, @C("ID3D12RootSignature*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_GLOBAL_ROOT_SIGNATURE$pGlobalRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_GLOBAL_ROOT_SIGNATURE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_GLOBAL_ROOT_SIGNATURE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_GLOBAL_ROOT_SIGNATURE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_GLOBAL_ROOT_SIGNATURE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_GLOBAL_ROOT_SIGNATURE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_GLOBAL_ROOT_SIGNATURE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_LOCAL_ROOT_SIGNATURE {

        private D3D12_LOCAL_ROOT_SIGNATURE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_LOCAL_ROOT_SIGNATURE$struct$LAYOUT();
        }
        public static VarHandle pLocalRootSignature$VH() {
            return d3d12_h$constants$7.D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$VH();
        }
        public static  @C("ID3D12RootSignature*") MemoryAddress pLocalRootSignature$get(@C("struct D3D12_LOCAL_ROOT_SIGNATURE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$VH().get(seg);
        }
        public static  @C("ID3D12RootSignature*") MemoryAddress pLocalRootSignature$get(@C("struct D3D12_LOCAL_ROOT_SIGNATURE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pLocalRootSignature$set(@C("struct D3D12_LOCAL_ROOT_SIGNATURE") MemorySegment seg, @C("ID3D12RootSignature*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$VH().set(seg, x);
        }
        public static void pLocalRootSignature$set(@C("struct D3D12_LOCAL_ROOT_SIGNATURE") MemorySegment seg, long index, @C("ID3D12RootSignature*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_LOCAL_ROOT_SIGNATURE$pLocalRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_LOCAL_ROOT_SIGNATURE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_LOCAL_ROOT_SIGNATURE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_LOCAL_ROOT_SIGNATURE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_LOCAL_ROOT_SIGNATURE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_LOCAL_ROOT_SIGNATURE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_LOCAL_ROOT_SIGNATURE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_NODE_MASK {

        private D3D12_NODE_MASK() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_NODE_MASK$struct$LAYOUT();
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$7.D3D12_NODE_MASK$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_NODE_MASK") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_NODE_MASK$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_NODE_MASK") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_NODE_MASK$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_NODE_MASK") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_NODE_MASK$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_NODE_MASK") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_NODE_MASK$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_NODE_MASK") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_NODE_MASK") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_NODE_MASK[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_NODE_MASK[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_NODE_MASK*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_NODE_MASK*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_EXPORT_FLAG_NONE() {
        return d3d12_h$constants$7.D3D12_EXPORT_FLAG_NONE();
    }
    public static class D3D12_EXPORT_DESC {

        private D3D12_EXPORT_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_EXPORT_DESC$struct$LAYOUT();
        }
        public static VarHandle Name$VH() {
            return d3d12_h$constants$7.D3D12_EXPORT_DESC$Name$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress Name$get(@C("struct D3D12_EXPORT_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_EXPORT_DESC$Name$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress Name$get(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_EXPORT_DESC$Name$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Name$set(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_EXPORT_DESC$Name$VH().set(seg, x);
        }
        public static void Name$set(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_EXPORT_DESC$Name$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExportToRename$VH() {
            return d3d12_h$constants$7.D3D12_EXPORT_DESC$ExportToRename$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress ExportToRename$get(@C("struct D3D12_EXPORT_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_EXPORT_DESC$ExportToRename$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress ExportToRename$get(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_EXPORT_DESC$ExportToRename$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExportToRename$set(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_EXPORT_DESC$ExportToRename$VH().set(seg, x);
        }
        public static void ExportToRename$set(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_EXPORT_DESC$ExportToRename$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$7.D3D12_EXPORT_DESC$Flags$VH();
        }
        public static  @C("D3D12_EXPORT_FLAGS") int Flags$get(@C("struct D3D12_EXPORT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_EXPORT_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_EXPORT_FLAGS") int Flags$get(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_EXPORT_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, @C("D3D12_EXPORT_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_EXPORT_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_EXPORT_DESC") MemorySegment seg, long index, @C("D3D12_EXPORT_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_EXPORT_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_EXPORT_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_EXPORT_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_EXPORT_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_EXPORT_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_EXPORT_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_EXPORT_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DXIL_LIBRARY_DESC {

        private D3D12_DXIL_LIBRARY_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$struct$LAYOUT();
        }
        public static MemorySegment DXILLibrary$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static VarHandle NumExports$VH() {
            return d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$NumExports$VH();
        }
        public static  @C("UINT") int NumExports$get(@C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$NumExports$VH().get(seg);
        }
        public static  @C("UINT") int NumExports$get(@C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$NumExports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumExports$set(@C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$NumExports$VH().set(seg, x);
        }
        public static void NumExports$set(@C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$NumExports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pExports$VH() {
            return d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$pExports$VH();
        }
        public static  @C("D3D12_EXPORT_DESC*") MemoryAddress pExports$get(@C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$pExports$VH().get(seg);
        }
        public static  @C("D3D12_EXPORT_DESC*") MemoryAddress pExports$get(@C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$pExports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pExports$set(@C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment seg, @C("D3D12_EXPORT_DESC*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$pExports$VH().set(seg, x);
        }
        public static void pExports$set(@C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment seg, long index, @C("D3D12_EXPORT_DESC*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_DXIL_LIBRARY_DESC$pExports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DXIL_LIBRARY_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DXIL_LIBRARY_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DXIL_LIBRARY_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DXIL_LIBRARY_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DXIL_LIBRARY_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_EXISTING_COLLECTION_DESC {

        private D3D12_EXISTING_COLLECTION_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$struct$LAYOUT();
        }
        public static VarHandle pExistingCollection$VH() {
            return d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$VH();
        }
        public static  @C("ID3D12StateObject*") MemoryAddress pExistingCollection$get(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$VH().get(seg);
        }
        public static  @C("ID3D12StateObject*") MemoryAddress pExistingCollection$get(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pExistingCollection$set(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, @C("ID3D12StateObject*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$VH().set(seg, x);
        }
        public static void pExistingCollection$set(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, long index, @C("ID3D12StateObject*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExistingCollection$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumExports$VH() {
            return d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$NumExports$VH();
        }
        public static  @C("UINT") int NumExports$get(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$NumExports$VH().get(seg);
        }
        public static  @C("UINT") int NumExports$get(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$NumExports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumExports$set(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$NumExports$VH().set(seg, x);
        }
        public static void NumExports$set(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$NumExports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pExports$VH() {
            return d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExports$VH();
        }
        public static  @C("D3D12_EXPORT_DESC*") MemoryAddress pExports$get(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExports$VH().get(seg);
        }
        public static  @C("D3D12_EXPORT_DESC*") MemoryAddress pExports$get(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pExports$set(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, @C("D3D12_EXPORT_DESC*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExports$VH().set(seg, x);
        }
        public static void pExports$set(@C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment seg, long index, @C("D3D12_EXPORT_DESC*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_EXISTING_COLLECTION_DESC$pExports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_EXISTING_COLLECTION_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_EXISTING_COLLECTION_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_EXISTING_COLLECTION_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_EXISTING_COLLECTION_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_EXISTING_COLLECTION_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION {

        private D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT();
        }
        public static VarHandle pSubobjectToAssociate$VH() {
            return d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$VH();
        }
        public static  @C("const D3D12_STATE_SUBOBJECT*") MemoryAddress pSubobjectToAssociate$get(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$VH().get(seg);
        }
        public static  @C("const D3D12_STATE_SUBOBJECT*") MemoryAddress pSubobjectToAssociate$get(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pSubobjectToAssociate$set(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, @C("const D3D12_STATE_SUBOBJECT*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$VH().set(seg, x);
        }
        public static void pSubobjectToAssociate$set(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index, @C("const D3D12_STATE_SUBOBJECT*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pSubobjectToAssociate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumExports$VH() {
            return d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH();
        }
        public static  @C("UINT") int NumExports$get(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH().get(seg);
        }
        public static  @C("UINT") int NumExports$get(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumExports$set(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH().set(seg, x);
        }
        public static void NumExports$set(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pExports$VH() {
            return d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH();
        }
        public static  @C("LPCWSTR*") MemoryAddress pExports$get(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH().get(seg);
        }
        public static  @C("LPCWSTR*") MemoryAddress pExports$get(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pExports$set(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, @C("LPCWSTR*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH().set(seg, x);
        }
        public static void pExports$set(@C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index, @C("LPCWSTR*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION {

        private D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$struct$LAYOUT();
        }
        public static VarHandle SubobjectToAssociate$VH() {
            return d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress SubobjectToAssociate$get(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress SubobjectToAssociate$get(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SubobjectToAssociate$set(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$VH().set(seg, x);
        }
        public static void SubobjectToAssociate$set(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$SubobjectToAssociate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumExports$VH() {
            return d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH();
        }
        public static  @C("UINT") int NumExports$get(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH().get(seg);
        }
        public static  @C("UINT") int NumExports$get(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumExports$set(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH().set(seg, x);
        }
        public static void NumExports$set(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$NumExports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pExports$VH() {
            return d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH();
        }
        public static  @C("LPCWSTR*") MemoryAddress pExports$get(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH().get(seg);
        }
        public static  @C("LPCWSTR*") MemoryAddress pExports$get(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pExports$set(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, @C("LPCWSTR*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH().set(seg, x);
        }
        public static void pExports$set(@C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment seg, long index, @C("LPCWSTR*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION$pExports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_HIT_GROUP_TYPE_TRIANGLES() {
        return d3d12_h$constants$7.D3D12_HIT_GROUP_TYPE_TRIANGLES();
    }
    public static @C("int") int D3D12_HIT_GROUP_TYPE_PROCEDURAL_PRIMITIVE() {
        return d3d12_h$constants$7.D3D12_HIT_GROUP_TYPE_PROCEDURAL_PRIMITIVE();
    }
    public static class D3D12_HIT_GROUP_DESC {

        private D3D12_HIT_GROUP_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$struct$LAYOUT();
        }
        public static VarHandle HitGroupExport$VH() {
            return d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$HitGroupExport$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress HitGroupExport$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$HitGroupExport$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress HitGroupExport$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$HitGroupExport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HitGroupExport$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$HitGroupExport$VH().set(seg, x);
        }
        public static void HitGroupExport$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$HitGroupExport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$Type$VH();
        }
        public static  @C("D3D12_HIT_GROUP_TYPE") int Type$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$Type$VH().get(seg);
        }
        public static  @C("D3D12_HIT_GROUP_TYPE") int Type$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, @C("D3D12_HIT_GROUP_TYPE") int x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index, @C("D3D12_HIT_GROUP_TYPE") int x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AnyHitShaderImport$VH() {
            return d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$AnyHitShaderImport$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress AnyHitShaderImport$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$AnyHitShaderImport$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress AnyHitShaderImport$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$AnyHitShaderImport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AnyHitShaderImport$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$AnyHitShaderImport$VH().set(seg, x);
        }
        public static void AnyHitShaderImport$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$AnyHitShaderImport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClosestHitShaderImport$VH() {
            return d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress ClosestHitShaderImport$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress ClosestHitShaderImport$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClosestHitShaderImport$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$VH().set(seg, x);
        }
        public static void ClosestHitShaderImport$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$ClosestHitShaderImport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IntersectionShaderImport$VH() {
            return d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$IntersectionShaderImport$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress IntersectionShaderImport$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$IntersectionShaderImport$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress IntersectionShaderImport$get(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$IntersectionShaderImport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IntersectionShaderImport$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$IntersectionShaderImport$VH().set(seg, x);
        }
        public static void IntersectionShaderImport$set(@C("struct D3D12_HIT_GROUP_DESC") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_HIT_GROUP_DESC$IntersectionShaderImport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_HIT_GROUP_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_HIT_GROUP_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_HIT_GROUP_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_HIT_GROUP_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_HIT_GROUP_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_HIT_GROUP_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_SHADER_CONFIG {

        private D3D12_RAYTRACING_SHADER_CONFIG() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$struct$LAYOUT();
        }
        public static VarHandle MaxPayloadSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$VH();
        }
        public static  @C("UINT") int MaxPayloadSizeInBytes$get(@C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT") int MaxPayloadSizeInBytes$get(@C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxPayloadSizeInBytes$set(@C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$VH().set(seg, x);
        }
        public static void MaxPayloadSizeInBytes$set(@C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxPayloadSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxAttributeSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$VH();
        }
        public static  @C("UINT") int MaxAttributeSizeInBytes$get(@C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT") int MaxAttributeSizeInBytes$get(@C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxAttributeSizeInBytes$set(@C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$VH().set(seg, x);
        }
        public static void MaxAttributeSizeInBytes$set(@C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_SHADER_CONFIG$MaxAttributeSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_SHADER_CONFIG") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_SHADER_CONFIG[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_SHADER_CONFIG[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_SHADER_CONFIG*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_SHADER_CONFIG*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_PIPELINE_CONFIG {

        private D3D12_RAYTRACING_PIPELINE_CONFIG() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG$struct$LAYOUT();
        }
        public static VarHandle MaxTraceRecursionDepth$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$VH();
        }
        public static  @C("UINT") int MaxTraceRecursionDepth$get(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$VH().get(seg);
        }
        public static  @C("UINT") int MaxTraceRecursionDepth$get(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxTraceRecursionDepth$set(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$VH().set(seg, x);
        }
        public static void MaxTraceRecursionDepth$set(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG$MaxTraceRecursionDepth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RAYTRACING_PIPELINE_FLAG_NONE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_FLAG_NONE();
    }
    public static @C("int") int D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_TRIANGLES() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_TRIANGLES();
    }
    public static @C("int") int D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_PROCEDURAL_PRIMITIVES() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_PROCEDURAL_PRIMITIVES();
    }
    public static class D3D12_RAYTRACING_PIPELINE_CONFIG1 {

        private D3D12_RAYTRACING_PIPELINE_CONFIG1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$struct$LAYOUT();
        }
        public static VarHandle MaxTraceRecursionDepth$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$VH();
        }
        public static  @C("UINT") int MaxTraceRecursionDepth$get(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$VH().get(seg);
        }
        public static  @C("UINT") int MaxTraceRecursionDepth$get(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxTraceRecursionDepth$set(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$VH().set(seg, x);
        }
        public static void MaxTraceRecursionDepth$set(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$MaxTraceRecursionDepth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$VH();
        }
        public static  @C("D3D12_RAYTRACING_PIPELINE_FLAGS") int Flags$get(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$VH().get(seg);
        }
        public static  @C("D3D12_RAYTRACING_PIPELINE_FLAGS") int Flags$get(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment seg, @C("D3D12_RAYTRACING_PIPELINE_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment seg, long index, @C("D3D12_RAYTRACING_PIPELINE_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_PIPELINE_CONFIG1$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_PIPELINE_CONFIG1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_STATE_OBJECT_TYPE_COLLECTION() {
        return d3d12_h$constants$7.D3D12_STATE_OBJECT_TYPE_COLLECTION();
    }
    public static @C("int") int D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE() {
        return d3d12_h$constants$7.D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE();
    }
    public static class D3D12_STATE_OBJECT_DESC {

        private D3D12_STATE_OBJECT_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$Type$VH();
        }
        public static  @C("D3D12_STATE_OBJECT_TYPE") int Type$get(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$Type$VH().get(seg);
        }
        public static  @C("D3D12_STATE_OBJECT_TYPE") int Type$get(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, @C("D3D12_STATE_OBJECT_TYPE") int x) {
            d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, long index, @C("D3D12_STATE_OBJECT_TYPE") int x) {
            d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumSubobjects$VH() {
            return d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$NumSubobjects$VH();
        }
        public static  @C("UINT") int NumSubobjects$get(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$NumSubobjects$VH().get(seg);
        }
        public static  @C("UINT") int NumSubobjects$get(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$NumSubobjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumSubobjects$set(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$NumSubobjects$VH().set(seg, x);
        }
        public static void NumSubobjects$set(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$NumSubobjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pSubobjects$VH() {
            return d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$pSubobjects$VH();
        }
        public static  @C("const D3D12_STATE_SUBOBJECT*") MemoryAddress pSubobjects$get(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$pSubobjects$VH().get(seg);
        }
        public static  @C("const D3D12_STATE_SUBOBJECT*") MemoryAddress pSubobjects$get(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$pSubobjects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pSubobjects$set(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, @C("const D3D12_STATE_SUBOBJECT*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$pSubobjects$VH().set(seg, x);
        }
        public static void pSubobjects$set(@C("struct D3D12_STATE_OBJECT_DESC") MemorySegment seg, long index, @C("const D3D12_STATE_SUBOBJECT*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_STATE_OBJECT_DESC$pSubobjects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_STATE_OBJECT_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_STATE_OBJECT_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_STATE_OBJECT_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_STATE_OBJECT_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_STATE_OBJECT_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_STATE_OBJECT_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RAYTRACING_GEOMETRY_FLAG_NONE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_FLAG_NONE();
    }
    public static @C("int") int D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE();
    }
    public static @C("int") int D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION();
    }
    public static @C("int") int D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES();
    }
    public static @C("int") int D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS();
    }
    public static @C("int") int D3D12_RAYTRACING_INSTANCE_FLAG_NONE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_FLAG_NONE();
    }
    public static @C("int") int D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE();
    }
    public static @C("int") int D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE();
    }
    public static @C("int") int D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE();
    }
    public static @C("int") int D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE();
    }
    public static class D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE {

        private D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$struct$LAYOUT();
        }
        public static VarHandle StartAddress$VH() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long StartAddress$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long StartAddress$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartAddress$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$VH().set(seg, x);
        }
        public static void StartAddress$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StartAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StrideInBytes$VH() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$VH();
        }
        public static  @C("UINT64") long StrideInBytes$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long StrideInBytes$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StrideInBytes$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$VH().set(seg, x);
        }
        public static void StrideInBytes$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE$StrideInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_GPU_VIRTUAL_ADDRESS_RANGE {

        private D3D12_GPU_VIRTUAL_ADDRESS_RANGE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$struct$LAYOUT();
        }
        public static VarHandle StartAddress$VH() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long StartAddress$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long StartAddress$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartAddress$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$VH().set(seg, x);
        }
        public static void StartAddress$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$StartAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$VH();
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE {

        private D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$struct$LAYOUT();
        }
        public static VarHandle StartAddress$VH() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long StartAddress$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long StartAddress$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartAddress$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$VH().set(seg, x);
        }
        public static void StartAddress$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StartAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$VH();
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long SizeInBytes$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SizeInBytes$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$VH().set(seg, x);
        }
        public static void SizeInBytes$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$SizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StrideInBytes$VH() {
            return d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$VH();
        }
        public static  @C("UINT64") long StrideInBytes$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long StrideInBytes$get(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StrideInBytes$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$VH().set(seg, x);
        }
        public static void StrideInBytes$set(@C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE$StrideInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC {

        private D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$struct$LAYOUT();
        }
        public static VarHandle Transform3x4$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long Transform3x4$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long Transform3x4$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Transform3x4$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$VH().set(seg, x);
        }
        public static void Transform3x4$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$Transform3x4$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IndexFormat$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$VH();
        }
        public static  @C("DXGI_FORMAT") int IndexFormat$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int IndexFormat$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IndexFormat$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$VH().set(seg, x);
        }
        public static void IndexFormat$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle VertexFormat$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$VH();
        }
        public static  @C("DXGI_FORMAT") int VertexFormat$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int VertexFormat$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VertexFormat$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$VH().set(seg, x);
        }
        public static void VertexFormat$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IndexCount$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$VH();
        }
        public static  @C("UINT") int IndexCount$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$VH().get(seg);
        }
        public static  @C("UINT") int IndexCount$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IndexCount$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$VH().set(seg, x);
        }
        public static void IndexCount$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle VertexCount$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$VH();
        }
        public static  @C("UINT") int VertexCount$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$VH().get(seg);
        }
        public static  @C("UINT") int VertexCount$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void VertexCount$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$VH().set(seg, x);
        }
        public static void VertexCount$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$VertexCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IndexBuffer$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long IndexBuffer$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long IndexBuffer$get(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IndexBuffer$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$VH().set(seg, x);
        }
        public static void IndexBuffer$set(@C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC$IndexBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment VertexBuffer$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 16));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_AABB {

        private D3D12_RAYTRACING_AABB() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_AABB$struct$LAYOUT();
        }
        public static VarHandle MinX$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinX$VH();
        }
        public static  @C("FLOAT") float MinX$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinX$VH().get(seg);
        }
        public static  @C("FLOAT") float MinX$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MinX$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinX$VH().set(seg, x);
        }
        public static void MinX$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MinY$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinY$VH();
        }
        public static  @C("FLOAT") float MinY$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinY$VH().get(seg);
        }
        public static  @C("FLOAT") float MinY$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MinY$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinY$VH().set(seg, x);
        }
        public static void MinY$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MinZ$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinZ$VH();
        }
        public static  @C("FLOAT") float MinZ$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinZ$VH().get(seg);
        }
        public static  @C("FLOAT") float MinZ$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MinZ$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinZ$VH().set(seg, x);
        }
        public static void MinZ$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MinZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxX$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxX$VH();
        }
        public static  @C("FLOAT") float MaxX$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxX$VH().get(seg);
        }
        public static  @C("FLOAT") float MaxX$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxX$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxX$VH().set(seg, x);
        }
        public static void MaxX$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxY$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxY$VH();
        }
        public static  @C("FLOAT") float MaxY$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxY$VH().get(seg);
        }
        public static  @C("FLOAT") float MaxY$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxY$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxY$VH().set(seg, x);
        }
        public static void MaxY$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MaxZ$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxZ$VH();
        }
        public static  @C("FLOAT") float MaxZ$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxZ$VH().get(seg);
        }
        public static  @C("FLOAT") float MaxZ$get(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index) {
            return (float)d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MaxZ$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxZ$VH().set(seg, x);
        }
        public static void MaxZ$set(@C("struct D3D12_RAYTRACING_AABB") MemorySegment seg, long index, @C("FLOAT") float x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_AABB$MaxZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_AABB") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_AABB") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_AABB[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_AABB[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_AABB*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_AABB*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_GEOMETRY_AABBS_DESC {

        private D3D12_RAYTRACING_GEOMETRY_AABBS_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$struct$LAYOUT();
        }
        public static VarHandle AABBCount$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$VH();
        }
        public static  @C("UINT64") long AABBCount$get(@C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$VH().get(seg);
        }
        public static  @C("UINT64") long AABBCount$get(@C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AABBCount$set(@C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$VH().set(seg, x);
        }
        public static void AABBCount$set(@C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC$AABBCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment AABBs$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL();
    }
    public static @C("int") int D3D12_ELEMENTS_LAYOUT_ARRAY() {
        return d3d12_h$constants$7.D3D12_ELEMENTS_LAYOUT_ARRAY();
    }
    public static @C("int") int D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS() {
        return d3d12_h$constants$7.D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE() {
        return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE();
    }
    public static class D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC {

        private D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$struct$LAYOUT();
        }
        public static VarHandle DestBuffer$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long DestBuffer$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long DestBuffer$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DestBuffer$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$VH().set(seg, x);
        }
        public static void DestBuffer$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$DestBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InfoType$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$VH();
        }
        public static  @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE") int InfoType$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$VH().get(seg);
        }
        public static  @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE") int InfoType$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InfoType$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment seg, @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$VH().set(seg, x);
        }
        public static void InfoType$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment seg, long index, @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC$InfoType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC {

        private D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$struct$LAYOUT();
        }
        public static VarHandle CompactedSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$VH();
        }
        public static  @C("UINT64") long CompactedSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long CompactedSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CompactedSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$VH().set(seg, x);
        }
        public static void CompactedSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC$CompactedSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC {

        private D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$struct$LAYOUT();
        }
        public static VarHandle DecodedSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$VH();
        }
        public static  @C("UINT64") long DecodedSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long DecodedSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DecodedSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$VH().set(seg, x);
        }
        public static void DecodedSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC$DecodedSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER {

        private D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$VH();
        }
        public static  @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE") int Type$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$VH().get(seg);
        }
        public static  @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE") int Type$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment seg, @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment seg, long index, @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumDescs$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$VH();
        }
        public static  @C("UINT") int NumDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$VH().get(seg);
        }
        public static  @C("UINT") int NumDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$VH().set(seg, x);
        }
        public static void NumDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER$NumDescs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC {

        private D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$struct$LAYOUT();
        }
        public static VarHandle SerializedSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$VH();
        }
        public static  @C("UINT64") long SerializedSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long SerializedSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SerializedSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$VH().set(seg, x);
        }
        public static void SerializedSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$SerializedSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumBottomLevelAccelerationStructurePointers$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$VH();
        }
        public static  @C("UINT64") long NumBottomLevelAccelerationStructurePointers$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$VH().get(seg);
        }
        public static  @C("UINT64") long NumBottomLevelAccelerationStructurePointers$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumBottomLevelAccelerationStructurePointers$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$VH().set(seg, x);
        }
        public static void NumBottomLevelAccelerationStructurePointers$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC$NumBottomLevelAccelerationStructurePointers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER {

        private D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER$struct$LAYOUT();
        }
        public static MemorySegment DriverOpaqueGUID$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static MemorySegment DriverOpaqueVersioningData$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 16));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE() {
        return d3d12_h$constants$7.D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE();
    }
    public static @C("int") int D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE() {
        return d3d12_h$constants$7.D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE();
    }
    public static @C("int") int D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE() {
        return d3d12_h$constants$7.D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE();
    }
    public static @C("int") int D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED() {
        return d3d12_h$constants$7.D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED();
    }
    public static @C("int") int D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION() {
        return d3d12_h$constants$7.D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION();
    }
    public static @C("int") int D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE() {
        return d3d12_h$constants$7.D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE();
    }
    public static class D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER {

        private D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$struct$LAYOUT();
        }
        public static MemorySegment DriverMatchingIdentifier$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 32));
        }
        public static VarHandle SerializedSizeInBytesIncludingHeader$VH() {
            return d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$VH();
        }
        public static  @C("UINT64") long SerializedSizeInBytesIncludingHeader$get(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$VH().get(seg);
        }
        public static  @C("UINT64") long SerializedSizeInBytesIncludingHeader$get(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SerializedSizeInBytesIncludingHeader$set(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$VH().set(seg, x);
        }
        public static void SerializedSizeInBytesIncludingHeader$set(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$SerializedSizeInBytesIncludingHeader$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DeserializedSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$VH();
        }
        public static  @C("UINT64") long DeserializedSizeInBytes$get(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long DeserializedSizeInBytes$get(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DeserializedSizeInBytes$set(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$VH().set(seg, x);
        }
        public static void DeserializedSizeInBytes$set(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$DeserializedSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumBottomLevelAccelerationStructurePointersAfterHeader$VH() {
            return d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$VH();
        }
        public static  @C("UINT64") long NumBottomLevelAccelerationStructurePointersAfterHeader$get(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$VH().get(seg);
        }
        public static  @C("UINT64") long NumBottomLevelAccelerationStructurePointersAfterHeader$get(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumBottomLevelAccelerationStructurePointersAfterHeader$set(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$VH().set(seg, x);
        }
        public static void NumBottomLevelAccelerationStructurePointersAfterHeader$set(@C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER$NumBottomLevelAccelerationStructurePointersAfterHeader$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC {

        private D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$struct$LAYOUT();
        }
        public static VarHandle CurrentSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$VH();
        }
        public static  @C("UINT64") long CurrentSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long CurrentSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CurrentSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$VH().set(seg, x);
        }
        public static void CurrentSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC$CurrentSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_INSTANCE_DESC {

        private D3D12_RAYTRACING_INSTANCE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_DESC$struct$LAYOUT();
        }
        public static MemorySegment Transform$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 48));
        }
        public static VarHandle AccelerationStructure$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long AccelerationStructure$get(@C("struct D3D12_RAYTRACING_INSTANCE_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long AccelerationStructure$get(@C("struct D3D12_RAYTRACING_INSTANCE_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AccelerationStructure$set(@C("struct D3D12_RAYTRACING_INSTANCE_DESC") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$VH().set(seg, x);
        }
        public static void AccelerationStructure$set(@C("struct D3D12_RAYTRACING_INSTANCE_DESC") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_INSTANCE_DESC$AccelerationStructure$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_INSTANCE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_INSTANCE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_INSTANCE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_INSTANCE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_INSTANCE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_INSTANCE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_GEOMETRY_DESC {

        private D3D12_RAYTRACING_GEOMETRY_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Type$VH();
        }
        public static  @C("D3D12_RAYTRACING_GEOMETRY_TYPE") int Type$get(@C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Type$VH().get(seg);
        }
        public static  @C("D3D12_RAYTRACING_GEOMETRY_TYPE") int Type$get(@C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment seg, @C("D3D12_RAYTRACING_GEOMETRY_TYPE") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment seg, long index, @C("D3D12_RAYTRACING_GEOMETRY_TYPE") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Flags$VH();
        }
        public static  @C("D3D12_RAYTRACING_GEOMETRY_FLAGS") int Flags$get(@C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Flags$VH().get(seg);
        }
        public static  @C("D3D12_RAYTRACING_GEOMETRY_FLAGS") int Flags$get(@C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment seg, @C("D3D12_RAYTRACING_GEOMETRY_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment seg, long index, @C("D3D12_RAYTRACING_GEOMETRY_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_GEOMETRY_DESC$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Triangles$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 48));
        }
        public static MemorySegment AABBs$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(56, 24));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_GEOMETRY_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_GEOMETRY_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS {

        private D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$VH();
        }
        public static  @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE") int Type$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$VH().get(seg);
        }
        public static  @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE") int Type$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index, @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$VH();
        }
        public static  @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS") int Flags$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$VH().get(seg);
        }
        public static  @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS") int Flags$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index, @C("D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumDescs$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$VH();
        }
        public static  @C("UINT") int NumDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$VH().get(seg);
        }
        public static  @C("UINT") int NumDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$VH().set(seg, x);
        }
        public static void NumDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$NumDescs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DescsLayout$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$VH();
        }
        public static  @C("D3D12_ELEMENTS_LAYOUT") int DescsLayout$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$VH().get(seg);
        }
        public static  @C("D3D12_ELEMENTS_LAYOUT") int DescsLayout$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DescsLayout$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, @C("D3D12_ELEMENTS_LAYOUT") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$VH().set(seg, x);
        }
        public static void DescsLayout$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index, @C("D3D12_ELEMENTS_LAYOUT") int x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$DescsLayout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InstanceDescs$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long InstanceDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long InstanceDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InstanceDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$VH().set(seg, x);
        }
        public static void InstanceDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$InstanceDescs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pGeometryDescs$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$VH();
        }
        public static  @C("const D3D12_RAYTRACING_GEOMETRY_DESC*") MemoryAddress pGeometryDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$VH().get(seg);
        }
        public static  @C("const D3D12_RAYTRACING_GEOMETRY_DESC*") MemoryAddress pGeometryDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pGeometryDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, @C("const D3D12_RAYTRACING_GEOMETRY_DESC*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$VH().set(seg, x);
        }
        public static void pGeometryDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index, @C("const D3D12_RAYTRACING_GEOMETRY_DESC*") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$pGeometryDescs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ppGeometryDescs$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$VH();
        }
        public static  @C("const D3D12_RAYTRACING_GEOMETRY_DESC**") MemoryAddress ppGeometryDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$VH().get(seg);
        }
        public static  @C("const D3D12_RAYTRACING_GEOMETRY_DESC**") MemoryAddress ppGeometryDescs$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ppGeometryDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, @C("const D3D12_RAYTRACING_GEOMETRY_DESC**") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$VH().set(seg, x);
        }
        public static void ppGeometryDescs$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment seg, long index, @C("const D3D12_RAYTRACING_GEOMETRY_DESC**") MemoryAddress x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS$ppGeometryDescs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC {

        private D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$struct$LAYOUT();
        }
        public static VarHandle DestAccelerationStructureData$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long DestAccelerationStructureData$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long DestAccelerationStructureData$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DestAccelerationStructureData$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$VH().set(seg, x);
        }
        public static void DestAccelerationStructureData$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$DestAccelerationStructureData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Inputs$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 40));
        }
        public static VarHandle SourceAccelerationStructureData$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long SourceAccelerationStructureData$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long SourceAccelerationStructureData$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SourceAccelerationStructureData$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$VH().set(seg, x);
        }
        public static void SourceAccelerationStructureData$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$SourceAccelerationStructureData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ScratchAccelerationStructureData$VH() {
            return d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long ScratchAccelerationStructureData$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long ScratchAccelerationStructureData$get(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ScratchAccelerationStructureData$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$VH().set(seg, x);
        }
        public static void ScratchAccelerationStructureData$set(@C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$7.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC$ScratchAccelerationStructureData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO {

        private D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$struct$LAYOUT();
        }
        public static VarHandle ResultDataMaxSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$VH();
        }
        public static  @C("UINT64") long ResultDataMaxSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long ResultDataMaxSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResultDataMaxSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$VH().set(seg, x);
        }
        public static void ResultDataMaxSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ResultDataMaxSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ScratchDataSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$VH();
        }
        public static  @C("UINT64") long ScratchDataSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long ScratchDataSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ScratchDataSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$VH().set(seg, x);
        }
        public static void ScratchDataSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$ScratchDataSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle UpdateScratchDataSizeInBytes$VH() {
            return d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$VH();
        }
        public static  @C("UINT64") long UpdateScratchDataSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$VH().get(seg);
        }
        public static  @C("UINT64") long UpdateScratchDataSizeInBytes$get(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UpdateScratchDataSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$VH().set(seg, x);
        }
        public static void UpdateScratchDataSizeInBytes$set(@C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment seg, long index, @C("UINT64") long x) {
            d3d12_h$constants$7.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO$UpdateScratchDataSizeInBytes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RAY_FLAG_NONE() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_NONE();
    }
    public static @C("int") int D3D12_RAY_FLAG_FORCE_OPAQUE() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_FORCE_OPAQUE();
    }
    public static @C("int") int D3D12_RAY_FLAG_FORCE_NON_OPAQUE() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_FORCE_NON_OPAQUE();
    }
    public static @C("int") int D3D12_RAY_FLAG_ACCEPT_FIRST_HIT_AND_END_SEARCH() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_ACCEPT_FIRST_HIT_AND_END_SEARCH();
    }
    public static @C("int") int D3D12_RAY_FLAG_SKIP_CLOSEST_HIT_SHADER() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_SKIP_CLOSEST_HIT_SHADER();
    }
    public static @C("int") int D3D12_RAY_FLAG_CULL_BACK_FACING_TRIANGLES() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_CULL_BACK_FACING_TRIANGLES();
    }
    public static @C("int") int D3D12_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES();
    }
    public static @C("int") int D3D12_RAY_FLAG_CULL_OPAQUE() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_CULL_OPAQUE();
    }
    public static @C("int") int D3D12_RAY_FLAG_CULL_NON_OPAQUE() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_CULL_NON_OPAQUE();
    }
    public static @C("int") int D3D12_RAY_FLAG_SKIP_TRIANGLES() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_SKIP_TRIANGLES();
    }
    public static @C("int") int D3D12_RAY_FLAG_SKIP_PROCEDURAL_PRIMITIVES() {
        return d3d12_h$constants$7.D3D12_RAY_FLAG_SKIP_PROCEDURAL_PRIMITIVES();
    }
    public static @C("int") int D3D12_HIT_KIND_TRIANGLE_FRONT_FACE() {
        return d3d12_h$constants$7.D3D12_HIT_KIND_TRIANGLE_FRONT_FACE();
    }
    public static @C("int") int D3D12_HIT_KIND_TRIANGLE_BACK_FACE() {
        return d3d12_h$constants$7.D3D12_HIT_KIND_TRIANGLE_BACK_FACE();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$VH().get(d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$VH().set(d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$VH().get(d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$VH().set(d3d12_h$constants$7.__MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12Device5$SEGMENT() {
        return d3d12_h$constants$7.IID_ID3D12Device5$SEGMENT();
    }
    public static class ID3D12Device5Vtbl {

        private ID3D12Device5Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device5*)") MemoryAddress AddRef$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device5*)") MemoryAddress AddRef$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device5*)") MemoryAddress Release$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device5*)") MemoryAddress Release$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device5*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device5*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device5*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device5*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device5*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device5*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device5*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device5*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device5*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device5*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device5*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device5*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device5*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device5*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device5*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device5*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineLibrary$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineLibrary$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineLibrary$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineLibrary$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineLibrary$VH().set(seg, x);
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineLibrary$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnMultipleFenceCompletion$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg, x);
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetResidencyPriority$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$SetResidencyPriority$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetResidencyPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$SetResidencyPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetResidencyPriority$VH().set(seg, x);
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$SetResidencyPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineState$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineState$VH().set(seg, x);
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$CreatePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromAddress$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromAddress$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromAddress$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromAddress$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromFileMapping$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnqueueMakeResident$VH() {
            return d3d12_h$constants$7.ID3D12Device5Vtbl$EnqueueMakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$EnqueueMakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$7.ID3D12Device5Vtbl$EnqueueMakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$EnqueueMakeResident$VH().set(seg, x);
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$7.ID3D12Device5Vtbl$EnqueueMakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList1$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommandList1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommandList1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommandList1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommandList1$VH().set(seg, x);
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommandList1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateProtectedResourceSession$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CreateProtectedResourceSession$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateProtectedResourceSession$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateProtectedResourceSession$VH().set(seg, x);
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource1$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommittedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommittedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommittedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommittedResource1$VH().set(seg, x);
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateCommittedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap1$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CreateHeap1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateHeap1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateHeap1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateHeap1$VH().set(seg, x);
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateHeap1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource1$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CreateReservedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateReservedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateReservedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateReservedResource1$VH().set(seg, x);
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateReservedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo1$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$GetResourceAllocationInfo1$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device5*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$GetResourceAllocationInfo1$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device5*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$GetResourceAllocationInfo1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device5*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$GetResourceAllocationInfo1$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device5*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$GetResourceAllocationInfo1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateLifetimeTracker$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CreateLifetimeTracker$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress CreateLifetimeTracker$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateLifetimeTracker$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress CreateLifetimeTracker$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateLifetimeTracker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateLifetimeTracker$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateLifetimeTracker$VH().set(seg, x);
        }
        public static void CreateLifetimeTracker$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateLifetimeTracker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveDevice$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$RemoveDevice$VH();
        }
        public static  @C("void(*)(ID3D12Device5*)") MemoryAddress RemoveDevice$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$RemoveDevice$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*)") MemoryAddress RemoveDevice$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$RemoveDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveDevice$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$RemoveDevice$VH().set(seg, x);
        }
        public static void RemoveDevice$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$RemoveDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateMetaCommands$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommands$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress EnumerateMetaCommands$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommands$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress EnumerateMetaCommands$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommands$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateMetaCommands$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommands$VH().set(seg, x);
        }
        public static void EnumerateMetaCommands$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommands$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateMetaCommandParameters$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommandParameters$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress EnumerateMetaCommandParameters$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommandParameters$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress EnumerateMetaCommandParameters$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommandParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateMetaCommandParameters$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommandParameters$VH().set(seg, x);
        }
        public static void EnumerateMetaCommandParameters$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$EnumerateMetaCommandParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateMetaCommand$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CreateMetaCommand$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateMetaCommand$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateMetaCommand$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateMetaCommand$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateMetaCommand$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateMetaCommand$VH().set(seg, x);
        }
        public static void CreateMetaCommand$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateStateObject$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CreateStateObject$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress CreateStateObject$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateStateObject$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device5*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress CreateStateObject$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CreateStateObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateStateObject$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device5*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateStateObject$VH().set(seg, x);
        }
        public static void CreateStateObject$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device5*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CreateStateObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRaytracingAccelerationStructurePrebuildInfo$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH();
        }
        public static  @C("void(*)(ID3D12Device5*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress GetRaytracingAccelerationStructurePrebuildInfo$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device5*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress GetRaytracingAccelerationStructurePrebuildInfo$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRaytracingAccelerationStructurePrebuildInfo$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device5*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().set(seg, x);
        }
        public static void GetRaytracingAccelerationStructurePrebuildInfo$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device5*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckDriverMatchingIdentifier$VH() {
            return d3d12_h$constants$8.ID3D12Device5Vtbl$CheckDriverMatchingIdentifier$VH();
        }
        public static  @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device5*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress CheckDriverMatchingIdentifier$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CheckDriverMatchingIdentifier$VH().get(seg);
        }
        public static  @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device5*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress CheckDriverMatchingIdentifier$get(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5Vtbl$CheckDriverMatchingIdentifier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckDriverMatchingIdentifier$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device5*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CheckDriverMatchingIdentifier$VH().set(seg, x);
        }
        public static void CheckDriverMatchingIdentifier$set(@C("struct ID3D12Device5Vtbl") MemorySegment seg, long index, @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device5*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5Vtbl$CheckDriverMatchingIdentifier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device5Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device5Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device5Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device5Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device5Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device5Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device5 {

        private ID3D12Device5() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12Device5$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$8.ID3D12Device5$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Device5Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device5") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Device5Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device5") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device5$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device5") MemorySegment seg, @C("struct ID3D12Device5Vtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device5") MemorySegment seg, long index, @C("struct ID3D12Device5Vtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device5$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device5") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device5") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device5[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device5[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device5*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device5*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_SETMARKER() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_SETMARKER();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_BEGINEVENT() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_BEGINEVENT();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_ENDEVENT() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_ENDEVENT();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_DRAWINSTANCED() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_DRAWINSTANCED();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_DRAWINDEXEDINSTANCED() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_DRAWINDEXEDINSTANCED();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_EXECUTEINDIRECT() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_EXECUTEINDIRECT();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_DISPATCH() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_DISPATCH();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_COPYBUFFERREGION() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_COPYBUFFERREGION();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_COPYTEXTUREREGION() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_COPYTEXTUREREGION();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_COPYRESOURCE() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_COPYRESOURCE();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_COPYTILES() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_COPYTILES();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCE() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCE();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_CLEARRENDERTARGETVIEW() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_CLEARRENDERTARGETVIEW();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_CLEARUNORDEREDACCESSVIEW() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_CLEARUNORDEREDACCESSVIEW();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_CLEARDEPTHSTENCILVIEW() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_CLEARDEPTHSTENCILVIEW();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_RESOURCEBARRIER() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_RESOURCEBARRIER();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_EXECUTEBUNDLE() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_EXECUTEBUNDLE();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_PRESENT() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_PRESENT();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_RESOLVEQUERYDATA() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_RESOLVEQUERYDATA();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_BEGINSUBMISSION() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_BEGINSUBMISSION();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_ENDSUBMISSION() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_ENDSUBMISSION();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT64() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT64();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCEREGION() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCEREGION();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_WRITEBUFFERIMMEDIATE() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_WRITEBUFFERIMMEDIATE();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME1() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME1();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_SETPROTECTEDRESOURCESESSION() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_SETPROTECTEDRESOURCESESSION();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME2() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME2();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES1() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES1();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_BUILDRAYTRACINGACCELERATIONSTRUCTURE() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_BUILDRAYTRACINGACCELERATIONSTRUCTURE();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_EMITRAYTRACINGACCELERATIONSTRUCTUREPOSTBUILDINFO() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_EMITRAYTRACINGACCELERATIONSTRUCTUREPOSTBUILDINFO();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_COPYRAYTRACINGACCELERATIONSTRUCTURE() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_COPYRAYTRACINGACCELERATIONSTRUCTURE();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_DISPATCHRAYS() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_DISPATCHRAYS();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_INITIALIZEMETACOMMAND() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_INITIALIZEMETACOMMAND();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_EXECUTEMETACOMMAND() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_EXECUTEMETACOMMAND();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_ESTIMATEMOTION() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_ESTIMATEMOTION();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_RESOLVEMOTIONVECTORHEAP() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_RESOLVEMOTIONVECTORHEAP();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_SETPIPELINESTATE1() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_SETPIPELINESTATE1();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_INITIALIZEEXTENSIONCOMMAND() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_INITIALIZEEXTENSIONCOMMAND();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_EXECUTEEXTENSIONCOMMAND() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_EXECUTEEXTENSIONCOMMAND();
    }
    public static @C("int") int D3D12_AUTO_BREADCRUMB_OP_DISPATCHMESH() {
        return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_OP_DISPATCHMESH();
    }
    public static class D3D12_AUTO_BREADCRUMB_NODE {

        private D3D12_AUTO_BREADCRUMB_NODE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$struct$LAYOUT();
        }
        public static VarHandle pCommandListDebugNameA$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameA$VH();
        }
        public static  @C("char*") MemoryAddress pCommandListDebugNameA$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameA$VH().get(seg);
        }
        public static  @C("char*") MemoryAddress pCommandListDebugNameA$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandListDebugNameA$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameA$VH().set(seg, x);
        }
        public static void pCommandListDebugNameA$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandListDebugNameW$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameW$VH();
        }
        public static  @C("const wchar_t*") MemoryAddress pCommandListDebugNameW$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameW$VH().get(seg);
        }
        public static  @C("const wchar_t*") MemoryAddress pCommandListDebugNameW$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameW$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandListDebugNameW$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameW$VH().set(seg, x);
        }
        public static void pCommandListDebugNameW$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandListDebugNameW$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandQueueDebugNameA$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameA$VH();
        }
        public static  @C("char*") MemoryAddress pCommandQueueDebugNameA$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameA$VH().get(seg);
        }
        public static  @C("char*") MemoryAddress pCommandQueueDebugNameA$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandQueueDebugNameA$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameA$VH().set(seg, x);
        }
        public static void pCommandQueueDebugNameA$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandQueueDebugNameW$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameW$VH();
        }
        public static  @C("const wchar_t*") MemoryAddress pCommandQueueDebugNameW$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameW$VH().get(seg);
        }
        public static  @C("const wchar_t*") MemoryAddress pCommandQueueDebugNameW$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameW$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandQueueDebugNameW$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameW$VH().set(seg, x);
        }
        public static void pCommandQueueDebugNameW$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueueDebugNameW$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandList$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandList$VH();
        }
        public static  @C("ID3D12GraphicsCommandList*") MemoryAddress pCommandList$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandList$VH().get(seg);
        }
        public static  @C("ID3D12GraphicsCommandList*") MemoryAddress pCommandList$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandList$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("ID3D12GraphicsCommandList*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandList$VH().set(seg, x);
        }
        public static void pCommandList$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("ID3D12GraphicsCommandList*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandQueue$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueue$VH();
        }
        public static  @C("ID3D12CommandQueue*") MemoryAddress pCommandQueue$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueue$VH().get(seg);
        }
        public static  @C("ID3D12CommandQueue*") MemoryAddress pCommandQueue$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandQueue$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("ID3D12CommandQueue*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueue$VH().set(seg, x);
        }
        public static void pCommandQueue$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("ID3D12CommandQueue*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BreadcrumbCount$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$BreadcrumbCount$VH();
        }
        public static  @C("UINT32") int BreadcrumbCount$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$BreadcrumbCount$VH().get(seg);
        }
        public static  @C("UINT32") int BreadcrumbCount$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$BreadcrumbCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BreadcrumbCount$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("UINT32") int x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$BreadcrumbCount$VH().set(seg, x);
        }
        public static void BreadcrumbCount$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("UINT32") int x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$BreadcrumbCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pLastBreadcrumbValue$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pLastBreadcrumbValue$VH();
        }
        public static  @C("const UINT32*") MemoryAddress pLastBreadcrumbValue$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pLastBreadcrumbValue$VH().get(seg);
        }
        public static  @C("const UINT32*") MemoryAddress pLastBreadcrumbValue$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pLastBreadcrumbValue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pLastBreadcrumbValue$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("const UINT32*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pLastBreadcrumbValue$VH().set(seg, x);
        }
        public static void pLastBreadcrumbValue$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("const UINT32*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pLastBreadcrumbValue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandHistory$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandHistory$VH();
        }
        public static  @C("const D3D12_AUTO_BREADCRUMB_OP*") MemoryAddress pCommandHistory$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandHistory$VH().get(seg);
        }
        public static  @C("const D3D12_AUTO_BREADCRUMB_OP*") MemoryAddress pCommandHistory$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandHistory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandHistory$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("const D3D12_AUTO_BREADCRUMB_OP*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandHistory$VH().set(seg, x);
        }
        public static void pCommandHistory$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("const D3D12_AUTO_BREADCRUMB_OP*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pCommandHistory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pNext$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pNext$VH();
        }
        public static  @C("struct D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress pNext$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pNext$VH().get(seg);
        }
        public static  @C("struct D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress pNext$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pNext$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pNext$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, @C("struct D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pNext$VH().set(seg, x);
        }
        public static void pNext$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment seg, long index, @C("struct D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE$pNext$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DRED_BREADCRUMB_CONTEXT {

        private D3D12_DRED_BREADCRUMB_CONTEXT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$struct$LAYOUT();
        }
        public static VarHandle BreadcrumbIndex$VH() {
            return d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$BreadcrumbIndex$VH();
        }
        public static  @C("UINT") int BreadcrumbIndex$get(@C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$BreadcrumbIndex$VH().get(seg);
        }
        public static  @C("UINT") int BreadcrumbIndex$get(@C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$BreadcrumbIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BreadcrumbIndex$set(@C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$BreadcrumbIndex$VH().set(seg, x);
        }
        public static void BreadcrumbIndex$set(@C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$BreadcrumbIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pContextString$VH() {
            return d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$pContextString$VH();
        }
        public static  @C("const wchar_t*") MemoryAddress pContextString$get(@C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$pContextString$VH().get(seg);
        }
        public static  @C("const wchar_t*") MemoryAddress pContextString$get(@C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$pContextString$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pContextString$set(@C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment seg, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$pContextString$VH().set(seg, x);
        }
        public static void pContextString$set(@C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment seg, long index, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_BREADCRUMB_CONTEXT$pContextString$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRED_BREADCRUMB_CONTEXT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRED_BREADCRUMB_CONTEXT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRED_BREADCRUMB_CONTEXT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRED_BREADCRUMB_CONTEXT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRED_BREADCRUMB_CONTEXT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_AUTO_BREADCRUMB_NODE1 {

        private D3D12_AUTO_BREADCRUMB_NODE1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$struct$LAYOUT();
        }
        public static VarHandle pCommandListDebugNameA$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameA$VH();
        }
        public static  @C("char*") MemoryAddress pCommandListDebugNameA$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameA$VH().get(seg);
        }
        public static  @C("char*") MemoryAddress pCommandListDebugNameA$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandListDebugNameA$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameA$VH().set(seg, x);
        }
        public static void pCommandListDebugNameA$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandListDebugNameW$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameW$VH();
        }
        public static  @C("const wchar_t*") MemoryAddress pCommandListDebugNameW$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameW$VH().get(seg);
        }
        public static  @C("const wchar_t*") MemoryAddress pCommandListDebugNameW$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameW$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandListDebugNameW$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameW$VH().set(seg, x);
        }
        public static void pCommandListDebugNameW$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandListDebugNameW$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandQueueDebugNameA$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameA$VH();
        }
        public static  @C("char*") MemoryAddress pCommandQueueDebugNameA$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameA$VH().get(seg);
        }
        public static  @C("char*") MemoryAddress pCommandQueueDebugNameA$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandQueueDebugNameA$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameA$VH().set(seg, x);
        }
        public static void pCommandQueueDebugNameA$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandQueueDebugNameW$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameW$VH();
        }
        public static  @C("const wchar_t*") MemoryAddress pCommandQueueDebugNameW$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameW$VH().get(seg);
        }
        public static  @C("const wchar_t*") MemoryAddress pCommandQueueDebugNameW$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameW$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandQueueDebugNameW$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameW$VH().set(seg, x);
        }
        public static void pCommandQueueDebugNameW$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueueDebugNameW$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandList$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandList$VH();
        }
        public static  @C("ID3D12GraphicsCommandList*") MemoryAddress pCommandList$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandList$VH().get(seg);
        }
        public static  @C("ID3D12GraphicsCommandList*") MemoryAddress pCommandList$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandList$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("ID3D12GraphicsCommandList*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandList$VH().set(seg, x);
        }
        public static void pCommandList$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("ID3D12GraphicsCommandList*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandQueue$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueue$VH();
        }
        public static  @C("ID3D12CommandQueue*") MemoryAddress pCommandQueue$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueue$VH().get(seg);
        }
        public static  @C("ID3D12CommandQueue*") MemoryAddress pCommandQueue$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandQueue$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("ID3D12CommandQueue*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueue$VH().set(seg, x);
        }
        public static void pCommandQueue$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("ID3D12CommandQueue*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BreadcrumbCount$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbCount$VH();
        }
        public static  @C("UINT") int BreadcrumbCount$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbCount$VH().get(seg);
        }
        public static  @C("UINT") int BreadcrumbCount$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BreadcrumbCount$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbCount$VH().set(seg, x);
        }
        public static void BreadcrumbCount$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pLastBreadcrumbValue$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pLastBreadcrumbValue$VH();
        }
        public static  @C("const UINT*") MemoryAddress pLastBreadcrumbValue$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pLastBreadcrumbValue$VH().get(seg);
        }
        public static  @C("const UINT*") MemoryAddress pLastBreadcrumbValue$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pLastBreadcrumbValue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pLastBreadcrumbValue$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("const UINT*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pLastBreadcrumbValue$VH().set(seg, x);
        }
        public static void pLastBreadcrumbValue$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("const UINT*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pLastBreadcrumbValue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pCommandHistory$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandHistory$VH();
        }
        public static  @C("const D3D12_AUTO_BREADCRUMB_OP*") MemoryAddress pCommandHistory$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandHistory$VH().get(seg);
        }
        public static  @C("const D3D12_AUTO_BREADCRUMB_OP*") MemoryAddress pCommandHistory$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandHistory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pCommandHistory$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("const D3D12_AUTO_BREADCRUMB_OP*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandHistory$VH().set(seg, x);
        }
        public static void pCommandHistory$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("const D3D12_AUTO_BREADCRUMB_OP*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pCommandHistory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pNext$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pNext$VH();
        }
        public static  @C("struct D3D12_AUTO_BREADCRUMB_NODE1*") MemoryAddress pNext$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pNext$VH().get(seg);
        }
        public static  @C("struct D3D12_AUTO_BREADCRUMB_NODE1*") MemoryAddress pNext$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pNext$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pNext$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("struct D3D12_AUTO_BREADCRUMB_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pNext$VH().set(seg, x);
        }
        public static void pNext$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("struct D3D12_AUTO_BREADCRUMB_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pNext$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BreadcrumbContextsCount$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbContextsCount$VH();
        }
        public static  @C("UINT") int BreadcrumbContextsCount$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbContextsCount$VH().get(seg);
        }
        public static  @C("UINT") int BreadcrumbContextsCount$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbContextsCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BreadcrumbContextsCount$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbContextsCount$VH().set(seg, x);
        }
        public static void BreadcrumbContextsCount$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$BreadcrumbContextsCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pBreadcrumbContexts$VH() {
            return d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pBreadcrumbContexts$VH();
        }
        public static  @C("D3D12_DRED_BREADCRUMB_CONTEXT*") MemoryAddress pBreadcrumbContexts$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pBreadcrumbContexts$VH().get(seg);
        }
        public static  @C("D3D12_DRED_BREADCRUMB_CONTEXT*") MemoryAddress pBreadcrumbContexts$get(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pBreadcrumbContexts$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pBreadcrumbContexts$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, @C("D3D12_DRED_BREADCRUMB_CONTEXT*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pBreadcrumbContexts$VH().set(seg, x);
        }
        public static void pBreadcrumbContexts$set(@C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment seg, long index, @C("D3D12_DRED_BREADCRUMB_CONTEXT*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_AUTO_BREADCRUMB_NODE1$pBreadcrumbContexts$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_AUTO_BREADCRUMB_NODE1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_DRED_VERSION_1_0() {
        return d3d12_h$constants$8.D3D12_DRED_VERSION_1_0();
    }
    public static @C("int") int D3D12_DRED_VERSION_1_1() {
        return d3d12_h$constants$8.D3D12_DRED_VERSION_1_1();
    }
    public static @C("int") int D3D12_DRED_VERSION_1_2() {
        return d3d12_h$constants$8.D3D12_DRED_VERSION_1_2();
    }
    public static @C("int") int D3D12_DRED_FLAG_NONE() {
        return d3d12_h$constants$8.D3D12_DRED_FLAG_NONE();
    }
    public static @C("int") int D3D12_DRED_FLAG_FORCE_ENABLE() {
        return d3d12_h$constants$8.D3D12_DRED_FLAG_FORCE_ENABLE();
    }
    public static @C("int") int D3D12_DRED_FLAG_DISABLE_AUTOBREADCRUMBS() {
        return d3d12_h$constants$8.D3D12_DRED_FLAG_DISABLE_AUTOBREADCRUMBS();
    }
    public static @C("int") int D3D12_DRED_ENABLEMENT_SYSTEM_CONTROLLED() {
        return d3d12_h$constants$8.D3D12_DRED_ENABLEMENT_SYSTEM_CONTROLLED();
    }
    public static @C("int") int D3D12_DRED_ENABLEMENT_FORCED_OFF() {
        return d3d12_h$constants$8.D3D12_DRED_ENABLEMENT_FORCED_OFF();
    }
    public static @C("int") int D3D12_DRED_ENABLEMENT_FORCED_ON() {
        return d3d12_h$constants$8.D3D12_DRED_ENABLEMENT_FORCED_ON();
    }
    public static class D3D12_DEVICE_REMOVED_EXTENDED_DATA {

        private D3D12_DEVICE_REMOVED_EXTENDED_DATA() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$struct$LAYOUT();
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$Flags$VH();
        }
        public static  @C("D3D12_DRED_FLAGS") int Flags$get(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$Flags$VH().get(seg);
        }
        public static  @C("D3D12_DRED_FLAGS") int Flags$get(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, @C("D3D12_DRED_FLAGS") int x) {
            d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, long index, @C("D3D12_DRED_FLAGS") int x) {
            d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pHeadAutoBreadcrumbNode$VH() {
            return d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$pHeadAutoBreadcrumbNode$VH();
        }
        public static  @C("D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress pHeadAutoBreadcrumbNode$get(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$pHeadAutoBreadcrumbNode$VH().get(seg);
        }
        public static  @C("D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress pHeadAutoBreadcrumbNode$get(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$pHeadAutoBreadcrumbNode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pHeadAutoBreadcrumbNode$set(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, @C("D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$pHeadAutoBreadcrumbNode$VH().set(seg, x);
        }
        public static void pHeadAutoBreadcrumbNode$set(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, long index, @C("D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA$pHeadAutoBreadcrumbNode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_COMMAND_QUEUE() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_COMMAND_QUEUE();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_COMMAND_ALLOCATOR() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_COMMAND_ALLOCATOR();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_PIPELINE_STATE() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_PIPELINE_STATE();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_COMMAND_LIST() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_COMMAND_LIST();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_FENCE() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_FENCE();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_DESCRIPTOR_HEAP() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_DESCRIPTOR_HEAP();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_HEAP() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_HEAP();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_QUERY_HEAP() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_QUERY_HEAP();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_COMMAND_SIGNATURE() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_COMMAND_SIGNATURE();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_PIPELINE_LIBRARY() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_PIPELINE_LIBRARY();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_VIDEO_PROCESSOR() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_VIDEO_PROCESSOR();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_RESOURCE() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_RESOURCE();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_PASS() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_PASS();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSION() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSION();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSIONPOLICY() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSIONPOLICY();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_PROTECTEDRESOURCESESSION() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_PROTECTEDRESOURCESESSION();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER_HEAP() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER_HEAP();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_COMMAND_POOL() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_COMMAND_POOL();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_COMMAND_RECORDER() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_COMMAND_RECORDER();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_STATE_OBJECT() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_STATE_OBJECT();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_METACOMMAND() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_METACOMMAND();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_SCHEDULINGGROUP() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_SCHEDULINGGROUP();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_ESTIMATOR() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_ESTIMATOR();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_VECTOR_HEAP() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_VECTOR_HEAP();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_VIDEO_EXTENSION_COMMAND() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_VIDEO_EXTENSION_COMMAND();
    }
    public static @C("int") int D3D12_DRED_ALLOCATION_TYPE_INVALID() {
        return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_TYPE_INVALID();
    }
    public static class D3D12_DRED_ALLOCATION_NODE {

        private D3D12_DRED_ALLOCATION_NODE() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$struct$LAYOUT();
        }
        public static VarHandle ObjectNameA$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameA$VH();
        }
        public static  @C("char*") MemoryAddress ObjectNameA$get(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameA$VH().get(seg);
        }
        public static  @C("char*") MemoryAddress ObjectNameA$get(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ObjectNameA$set(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameA$VH().set(seg, x);
        }
        public static void ObjectNameA$set(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, long index, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ObjectNameW$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameW$VH();
        }
        public static  @C("const wchar_t*") MemoryAddress ObjectNameW$get(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameW$VH().get(seg);
        }
        public static  @C("const wchar_t*") MemoryAddress ObjectNameW$get(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameW$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ObjectNameW$set(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameW$VH().set(seg, x);
        }
        public static void ObjectNameW$set(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, long index, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$ObjectNameW$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AllocationType$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$AllocationType$VH();
        }
        public static  @C("D3D12_DRED_ALLOCATION_TYPE") int AllocationType$get(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$AllocationType$VH().get(seg);
        }
        public static  @C("D3D12_DRED_ALLOCATION_TYPE") int AllocationType$get(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$AllocationType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AllocationType$set(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, @C("D3D12_DRED_ALLOCATION_TYPE") int x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$AllocationType$VH().set(seg, x);
        }
        public static void AllocationType$set(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, long index, @C("D3D12_DRED_ALLOCATION_TYPE") int x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$AllocationType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pNext$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$pNext$VH();
        }
        public static  @C("struct D3D12_DRED_ALLOCATION_NODE*") MemoryAddress pNext$get(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$pNext$VH().get(seg);
        }
        public static  @C("struct D3D12_DRED_ALLOCATION_NODE*") MemoryAddress pNext$get(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$pNext$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pNext$set(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, @C("struct D3D12_DRED_ALLOCATION_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$pNext$VH().set(seg, x);
        }
        public static void pNext$set(@C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment seg, long index, @C("struct D3D12_DRED_ALLOCATION_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE$pNext$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRED_ALLOCATION_NODE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DRED_ALLOCATION_NODE1 {

        private D3D12_DRED_ALLOCATION_NODE1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$struct$LAYOUT();
        }
        public static VarHandle ObjectNameA$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameA$VH();
        }
        public static  @C("char*") MemoryAddress ObjectNameA$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameA$VH().get(seg);
        }
        public static  @C("char*") MemoryAddress ObjectNameA$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ObjectNameA$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameA$VH().set(seg, x);
        }
        public static void ObjectNameA$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index, @C("char*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ObjectNameW$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameW$VH();
        }
        public static  @C("const wchar_t*") MemoryAddress ObjectNameW$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameW$VH().get(seg);
        }
        public static  @C("const wchar_t*") MemoryAddress ObjectNameW$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameW$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ObjectNameW$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameW$VH().set(seg, x);
        }
        public static void ObjectNameW$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index, @C("const wchar_t*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$ObjectNameW$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AllocationType$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$AllocationType$VH();
        }
        public static  @C("D3D12_DRED_ALLOCATION_TYPE") int AllocationType$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$AllocationType$VH().get(seg);
        }
        public static  @C("D3D12_DRED_ALLOCATION_TYPE") int AllocationType$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$AllocationType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AllocationType$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, @C("D3D12_DRED_ALLOCATION_TYPE") int x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$AllocationType$VH().set(seg, x);
        }
        public static void AllocationType$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index, @C("D3D12_DRED_ALLOCATION_TYPE") int x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$AllocationType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pNext$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pNext$VH();
        }
        public static  @C("struct D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress pNext$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pNext$VH().get(seg);
        }
        public static  @C("struct D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress pNext$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pNext$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pNext$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, @C("struct D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pNext$VH().set(seg, x);
        }
        public static void pNext$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index, @C("struct D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pNext$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pObject$VH() {
            return d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pObject$VH();
        }
        public static  @C("const IUnknown*") MemoryAddress pObject$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pObject$VH().get(seg);
        }
        public static  @C("const IUnknown*") MemoryAddress pObject$get(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pObject$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, @C("const IUnknown*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pObject$VH().set(seg, x);
        }
        public static void pObject$set(@C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment seg, long index, @C("const IUnknown*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_ALLOCATION_NODE1$pObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRED_ALLOCATION_NODE1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRED_ALLOCATION_NODE1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT {

        private D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT$struct$LAYOUT();
        }
        public static VarHandle pHeadAutoBreadcrumbNode$VH() {
            return d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT$pHeadAutoBreadcrumbNode$VH();
        }
        public static  @C("const D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress pHeadAutoBreadcrumbNode$get(@C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT$pHeadAutoBreadcrumbNode$VH().get(seg);
        }
        public static  @C("const D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress pHeadAutoBreadcrumbNode$get(@C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT$pHeadAutoBreadcrumbNode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pHeadAutoBreadcrumbNode$set(@C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT") MemorySegment seg, @C("const D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT$pHeadAutoBreadcrumbNode$VH().set(seg, x);
        }
        public static void pHeadAutoBreadcrumbNode$set(@C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT") MemorySegment seg, long index, @C("const D3D12_AUTO_BREADCRUMB_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT$pHeadAutoBreadcrumbNode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 {

        private D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1$struct$LAYOUT();
        }
        public static VarHandle pHeadAutoBreadcrumbNode$VH() {
            return d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1$pHeadAutoBreadcrumbNode$VH();
        }
        public static  @C("const D3D12_AUTO_BREADCRUMB_NODE1*") MemoryAddress pHeadAutoBreadcrumbNode$get(@C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1$pHeadAutoBreadcrumbNode$VH().get(seg);
        }
        public static  @C("const D3D12_AUTO_BREADCRUMB_NODE1*") MemoryAddress pHeadAutoBreadcrumbNode$get(@C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1$pHeadAutoBreadcrumbNode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pHeadAutoBreadcrumbNode$set(@C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1") MemorySegment seg, @C("const D3D12_AUTO_BREADCRUMB_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1$pHeadAutoBreadcrumbNode$VH().set(seg, x);
        }
        public static void pHeadAutoBreadcrumbNode$set(@C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1") MemorySegment seg, long index, @C("const D3D12_AUTO_BREADCRUMB_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1$pHeadAutoBreadcrumbNode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DRED_PAGE_FAULT_OUTPUT {

        private D3D12_DRED_PAGE_FAULT_OUTPUT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$struct$LAYOUT();
        }
        public static VarHandle PageFaultVA$VH() {
            return d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$PageFaultVA$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long PageFaultVA$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg) {
            return (long)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$PageFaultVA$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long PageFaultVA$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$PageFaultVA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PageFaultVA$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$PageFaultVA$VH().set(seg, x);
        }
        public static void PageFaultVA$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$PageFaultVA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pHeadExistingAllocationNode$VH() {
            return d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadExistingAllocationNode$VH();
        }
        public static  @C("const D3D12_DRED_ALLOCATION_NODE*") MemoryAddress pHeadExistingAllocationNode$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadExistingAllocationNode$VH().get(seg);
        }
        public static  @C("const D3D12_DRED_ALLOCATION_NODE*") MemoryAddress pHeadExistingAllocationNode$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadExistingAllocationNode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pHeadExistingAllocationNode$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, @C("const D3D12_DRED_ALLOCATION_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadExistingAllocationNode$VH().set(seg, x);
        }
        public static void pHeadExistingAllocationNode$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, long index, @C("const D3D12_DRED_ALLOCATION_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadExistingAllocationNode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pHeadRecentFreedAllocationNode$VH() {
            return d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadRecentFreedAllocationNode$VH();
        }
        public static  @C("const D3D12_DRED_ALLOCATION_NODE*") MemoryAddress pHeadRecentFreedAllocationNode$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadRecentFreedAllocationNode$VH().get(seg);
        }
        public static  @C("const D3D12_DRED_ALLOCATION_NODE*") MemoryAddress pHeadRecentFreedAllocationNode$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadRecentFreedAllocationNode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pHeadRecentFreedAllocationNode$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, @C("const D3D12_DRED_ALLOCATION_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadRecentFreedAllocationNode$VH().set(seg, x);
        }
        public static void pHeadRecentFreedAllocationNode$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment seg, long index, @C("const D3D12_DRED_ALLOCATION_NODE*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT$pHeadRecentFreedAllocationNode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DRED_PAGE_FAULT_OUTPUT1 {

        private D3D12_DRED_PAGE_FAULT_OUTPUT1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$struct$LAYOUT();
        }
        public static VarHandle PageFaultVA$VH() {
            return d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$PageFaultVA$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long PageFaultVA$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg) {
            return (long)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$PageFaultVA$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS") long PageFaultVA$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$PageFaultVA$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PageFaultVA$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$PageFaultVA$VH().set(seg, x);
        }
        public static void PageFaultVA$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS") long x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$PageFaultVA$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pHeadExistingAllocationNode$VH() {
            return d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadExistingAllocationNode$VH();
        }
        public static  @C("const D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress pHeadExistingAllocationNode$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadExistingAllocationNode$VH().get(seg);
        }
        public static  @C("const D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress pHeadExistingAllocationNode$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadExistingAllocationNode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pHeadExistingAllocationNode$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, @C("const D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadExistingAllocationNode$VH().set(seg, x);
        }
        public static void pHeadExistingAllocationNode$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, long index, @C("const D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadExistingAllocationNode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pHeadRecentFreedAllocationNode$VH() {
            return d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadRecentFreedAllocationNode$VH();
        }
        public static  @C("const D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress pHeadRecentFreedAllocationNode$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadRecentFreedAllocationNode$VH().get(seg);
        }
        public static  @C("const D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress pHeadRecentFreedAllocationNode$get(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadRecentFreedAllocationNode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pHeadRecentFreedAllocationNode$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, @C("const D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadRecentFreedAllocationNode$VH().set(seg, x);
        }
        public static void pHeadRecentFreedAllocationNode$set(@C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment seg, long index, @C("const D3D12_DRED_ALLOCATION_NODE1*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_DRED_PAGE_FAULT_OUTPUT1$pHeadRecentFreedAllocationNode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DRED_PAGE_FAULT_OUTPUT1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DEVICE_REMOVED_EXTENDED_DATA1 {

        private D3D12_DEVICE_REMOVED_EXTENDED_DATA1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA1$struct$LAYOUT();
        }
        public static VarHandle DeviceRemovedReason$VH() {
            return d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA1$DeviceRemovedReason$VH();
        }
        public static  @C("HRESULT") int DeviceRemovedReason$get(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA1$DeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT") int DeviceRemovedReason$get(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA1$DeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DeviceRemovedReason$set(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1") MemorySegment seg, @C("HRESULT") int x) {
            d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA1$DeviceRemovedReason$VH().set(seg, x);
        }
        public static void DeviceRemovedReason$set(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1") MemorySegment seg, long index, @C("HRESULT") int x) {
            d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA1$DeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment AutoBreadcrumbsOutput$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 8));
        }
        public static MemorySegment PageFaultOutput$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 24));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DEVICE_REMOVED_EXTENDED_DATA2 {

        private D3D12_DEVICE_REMOVED_EXTENDED_DATA2() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA2$struct$LAYOUT();
        }
        public static VarHandle DeviceRemovedReason$VH() {
            return d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA2$DeviceRemovedReason$VH();
        }
        public static  @C("HRESULT") int DeviceRemovedReason$get(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA2$DeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT") int DeviceRemovedReason$get(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA2$DeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DeviceRemovedReason$set(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2") MemorySegment seg, @C("HRESULT") int x) {
            d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA2$DeviceRemovedReason$VH().set(seg, x);
        }
        public static void DeviceRemovedReason$set(@C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2") MemorySegment seg, long index, @C("HRESULT") int x) {
            d3d12_h$constants$8.D3D12_DEVICE_REMOVED_EXTENDED_DATA2$DeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment AutoBreadcrumbsOutput$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 8));
        }
        public static MemorySegment PageFaultOutput$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 24));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA {

        private D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA$struct$LAYOUT();
        }
        public static VarHandle Version$VH() {
            return d3d12_h$constants$8.D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA$Version$VH();
        }
        public static  @C("D3D12_DRED_VERSION") int Version$get(@C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA$Version$VH().get(seg);
        }
        public static  @C("D3D12_DRED_VERSION") int Version$get(@C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA$Version$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Version$set(@C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, @C("D3D12_DRED_VERSION") int x) {
            d3d12_h$constants$8.D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA$Version$VH().set(seg, x);
        }
        public static void Version$set(@C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment seg, long index, @C("D3D12_DRED_VERSION") int x) {
            d3d12_h$constants$8.D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA$Version$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Dred_1_0$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static MemorySegment Dred_1_1$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(24, 40));
        }
        public static MemorySegment Dred_1_2$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 40));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$VH().get(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$VH().set(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$VH().get(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$VH().set(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12DeviceRemovedExtendedDataSettings$SEGMENT() {
        return d3d12_h$constants$8.IID_ID3D12DeviceRemovedExtendedDataSettings$SEGMENT();
    }
    public static class ID3D12DeviceRemovedExtendedDataSettingsVtbl {

        private ID3D12DeviceRemovedExtendedDataSettingsVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedDataSettings*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedDataSettings*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedDataSettings*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedDataSettings*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings*)") MemoryAddress Release$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings*)") MemoryAddress Release$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetAutoBreadcrumbsEnablement$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetAutoBreadcrumbsEnablement$VH();
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetAutoBreadcrumbsEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetAutoBreadcrumbsEnablement$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetAutoBreadcrumbsEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetAutoBreadcrumbsEnablement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetAutoBreadcrumbsEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetAutoBreadcrumbsEnablement$VH().set(seg, x);
        }
        public static void SetAutoBreadcrumbsEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetAutoBreadcrumbsEnablement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPageFaultEnablement$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetPageFaultEnablement$VH();
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetPageFaultEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetPageFaultEnablement$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetPageFaultEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetPageFaultEnablement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPageFaultEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetPageFaultEnablement$VH().set(seg, x);
        }
        public static void SetPageFaultEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetPageFaultEnablement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetWatsonDumpEnablement$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetWatsonDumpEnablement$VH();
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetWatsonDumpEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetWatsonDumpEnablement$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetWatsonDumpEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetWatsonDumpEnablement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetWatsonDumpEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetWatsonDumpEnablement$VH().set(seg, x);
        }
        public static void SetWatsonDumpEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettingsVtbl$SetWatsonDumpEnablement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12DeviceRemovedExtendedDataSettings {

        private ID3D12DeviceRemovedExtendedDataSettings() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings$lpVtbl$VH();
        }
        public static  @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings") MemorySegment seg, @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings") MemorySegment seg, long index, @C("struct ID3D12DeviceRemovedExtendedDataSettingsVtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12DeviceRemovedExtendedDataSettings1$SEGMENT() {
        return d3d12_h$constants$8.IID_ID3D12DeviceRemovedExtendedDataSettings1$SEGMENT();
    }
    public static class ID3D12DeviceRemovedExtendedDataSettings1Vtbl {

        private ID3D12DeviceRemovedExtendedDataSettings1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedDataSettings1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedDataSettings1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedDataSettings1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedDataSettings1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings1*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings1*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings1*)") MemoryAddress Release$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings1*)") MemoryAddress Release$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceRemovedExtendedDataSettings1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetAutoBreadcrumbsEnablement$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetAutoBreadcrumbsEnablement$VH();
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetAutoBreadcrumbsEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetAutoBreadcrumbsEnablement$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetAutoBreadcrumbsEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetAutoBreadcrumbsEnablement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetAutoBreadcrumbsEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetAutoBreadcrumbsEnablement$VH().set(seg, x);
        }
        public static void SetAutoBreadcrumbsEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetAutoBreadcrumbsEnablement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPageFaultEnablement$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetPageFaultEnablement$VH();
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetPageFaultEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetPageFaultEnablement$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetPageFaultEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetPageFaultEnablement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPageFaultEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetPageFaultEnablement$VH().set(seg, x);
        }
        public static void SetPageFaultEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetPageFaultEnablement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetWatsonDumpEnablement$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetWatsonDumpEnablement$VH();
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetWatsonDumpEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetWatsonDumpEnablement$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetWatsonDumpEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetWatsonDumpEnablement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetWatsonDumpEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetWatsonDumpEnablement$VH().set(seg, x);
        }
        public static void SetWatsonDumpEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetWatsonDumpEnablement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetBreadcrumbContextEnablement$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetBreadcrumbContextEnablement$VH();
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetBreadcrumbContextEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetBreadcrumbContextEnablement$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress SetBreadcrumbContextEnablement$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetBreadcrumbContextEnablement$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetBreadcrumbContextEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetBreadcrumbContextEnablement$VH().set(seg, x);
        }
        public static void SetBreadcrumbContextEnablement$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12DeviceRemovedExtendedDataSettings1*,D3D12_DRED_ENABLEMENT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1Vtbl$SetBreadcrumbContextEnablement$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12DeviceRemovedExtendedDataSettings1 {

        private ID3D12DeviceRemovedExtendedDataSettings1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceRemovedExtendedDataSettings1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1") MemorySegment seg, @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceRemovedExtendedDataSettings1") MemorySegment seg, long index, @C("struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataSettings1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataSettings1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12DeviceRemovedExtendedData$SEGMENT() {
        return d3d12_h$constants$8.IID_ID3D12DeviceRemovedExtendedData$SEGMENT();
    }
    public static class ID3D12DeviceRemovedExtendedDataVtbl {

        private ID3D12DeviceRemovedExtendedDataVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedData*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedData*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceRemovedExtendedData*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceRemovedExtendedData*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedData*)") MemoryAddress Release$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedData*)") MemoryAddress Release$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceRemovedExtendedData*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceRemovedExtendedData*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAutoBreadcrumbsOutput$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetAutoBreadcrumbsOutput$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*)") MemoryAddress GetAutoBreadcrumbsOutput$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetAutoBreadcrumbsOutput$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*)") MemoryAddress GetAutoBreadcrumbsOutput$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetAutoBreadcrumbsOutput$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAutoBreadcrumbsOutput$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetAutoBreadcrumbsOutput$VH().set(seg, x);
        }
        public static void GetAutoBreadcrumbsOutput$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetAutoBreadcrumbsOutput$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPageFaultAllocationOutput$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetPageFaultAllocationOutput$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,D3D12_DRED_PAGE_FAULT_OUTPUT*)") MemoryAddress GetPageFaultAllocationOutput$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetPageFaultAllocationOutput$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,D3D12_DRED_PAGE_FAULT_OUTPUT*)") MemoryAddress GetPageFaultAllocationOutput$get(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetPageFaultAllocationOutput$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPageFaultAllocationOutput$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,D3D12_DRED_PAGE_FAULT_OUTPUT*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetPageFaultAllocationOutput$VH().set(seg, x);
        }
        public static void GetPageFaultAllocationOutput$set(@C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData*,D3D12_DRED_PAGE_FAULT_OUTPUT*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedDataVtbl$GetPageFaultAllocationOutput$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedDataVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceRemovedExtendedDataVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceRemovedExtendedDataVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12DeviceRemovedExtendedData {

        private ID3D12DeviceRemovedExtendedData() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData$lpVtbl$VH();
        }
        public static  @C("struct ID3D12DeviceRemovedExtendedDataVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceRemovedExtendedData") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12DeviceRemovedExtendedDataVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceRemovedExtendedData") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceRemovedExtendedData") MemorySegment seg, @C("struct ID3D12DeviceRemovedExtendedDataVtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceRemovedExtendedData") MemorySegment seg, long index, @C("struct ID3D12DeviceRemovedExtendedDataVtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceRemovedExtendedData") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedData") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedData[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceRemovedExtendedData[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceRemovedExtendedData*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceRemovedExtendedData*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12DeviceRemovedExtendedData1$SEGMENT() {
        return d3d12_h$constants$8.IID_ID3D12DeviceRemovedExtendedData1$SEGMENT();
    }
    public static class ID3D12DeviceRemovedExtendedData1Vtbl {

        private ID3D12DeviceRemovedExtendedData1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedData1*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedData1*)") MemoryAddress AddRef$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceRemovedExtendedData1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceRemovedExtendedData1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedData1*)") MemoryAddress Release$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12DeviceRemovedExtendedData1*)") MemoryAddress Release$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12DeviceRemovedExtendedData1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12DeviceRemovedExtendedData1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAutoBreadcrumbsOutput$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*)") MemoryAddress GetAutoBreadcrumbsOutput$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*)") MemoryAddress GetAutoBreadcrumbsOutput$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAutoBreadcrumbsOutput$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput$VH().set(seg, x);
        }
        public static void GetAutoBreadcrumbsOutput$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPageFaultAllocationOutput$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_PAGE_FAULT_OUTPUT*)") MemoryAddress GetPageFaultAllocationOutput$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_PAGE_FAULT_OUTPUT*)") MemoryAddress GetPageFaultAllocationOutput$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPageFaultAllocationOutput$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_PAGE_FAULT_OUTPUT*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput$VH().set(seg, x);
        }
        public static void GetPageFaultAllocationOutput$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_PAGE_FAULT_OUTPUT*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAutoBreadcrumbsOutput1$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1*)") MemoryAddress GetAutoBreadcrumbsOutput1$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1*)") MemoryAddress GetAutoBreadcrumbsOutput1$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAutoBreadcrumbsOutput1$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput1$VH().set(seg, x);
        }
        public static void GetAutoBreadcrumbsOutput1$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetAutoBreadcrumbsOutput1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPageFaultAllocationOutput1$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_PAGE_FAULT_OUTPUT1*)") MemoryAddress GetPageFaultAllocationOutput1$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_PAGE_FAULT_OUTPUT1*)") MemoryAddress GetPageFaultAllocationOutput1$get(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPageFaultAllocationOutput1$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_PAGE_FAULT_OUTPUT1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput1$VH().set(seg, x);
        }
        public static void GetPageFaultAllocationOutput1$set(@C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12DeviceRemovedExtendedData1*,D3D12_DRED_PAGE_FAULT_OUTPUT1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1Vtbl$GetPageFaultAllocationOutput1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedData1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedData1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceRemovedExtendedData1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceRemovedExtendedData1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceRemovedExtendedData1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12DeviceRemovedExtendedData1 {

        private ID3D12DeviceRemovedExtendedData1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12DeviceRemovedExtendedData1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceRemovedExtendedData1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12DeviceRemovedExtendedData1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12DeviceRemovedExtendedData1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceRemovedExtendedData1") MemorySegment seg, @C("struct ID3D12DeviceRemovedExtendedData1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12DeviceRemovedExtendedData1") MemorySegment seg, long index, @C("struct ID3D12DeviceRemovedExtendedData1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12DeviceRemovedExtendedData1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12DeviceRemovedExtendedData1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedData1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12DeviceRemovedExtendedData1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12DeviceRemovedExtendedData1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12DeviceRemovedExtendedData1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12DeviceRemovedExtendedData1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED() {
        return d3d12_h$constants$8.D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED();
    }
    public static @C("int") int D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS() {
        return d3d12_h$constants$8.D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS();
    }
    public static @C("int") int D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK() {
        return d3d12_h$constants$8.D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK();
    }
    public static @C("int") int D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_PROFILING_BY_SYSTEM() {
        return d3d12_h$constants$8.D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_PROFILING_BY_SYSTEM();
    }
    public static @C("int") int D3D12_MEASUREMENTS_ACTION_KEEP_ALL() {
        return d3d12_h$constants$8.D3D12_MEASUREMENTS_ACTION_KEEP_ALL();
    }
    public static @C("int") int D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS() {
        return d3d12_h$constants$8.D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS();
    }
    public static @C("int") int D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY() {
        return d3d12_h$constants$8.D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY();
    }
    public static @C("int") int D3D12_MEASUREMENTS_ACTION_DISCARD_PREVIOUS() {
        return d3d12_h$constants$8.D3D12_MEASUREMENTS_ACTION_DISCARD_PREVIOUS();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$VH().get(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$VH().set(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$VH().get(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$VH().set(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0039_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12Device6$SEGMENT() {
        return d3d12_h$constants$8.IID_ID3D12Device6$SEGMENT();
    }
    public static class ID3D12Device6Vtbl {

        private ID3D12Device6Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device6*)") MemoryAddress AddRef$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device6*)") MemoryAddress AddRef$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device6*)") MemoryAddress Release$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device6*)") MemoryAddress Release$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device6*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device6*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device6*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device6*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device6*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device6*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device6*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device6*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device6*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device6*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device6*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device6*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device6*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device6*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device6*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device6*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineLibrary$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineLibrary$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineLibrary$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineLibrary$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineLibrary$VH().set(seg, x);
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineLibrary$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnMultipleFenceCompletion$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$SetEventOnMultipleFenceCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg, x);
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetResidencyPriority$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$SetResidencyPriority$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetResidencyPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetResidencyPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetResidencyPriority$VH().set(seg, x);
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetResidencyPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineState$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineState$VH().set(seg, x);
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreatePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromAddress$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromAddress$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromAddress$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromAddress$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromFileMapping$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromFileMapping$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnqueueMakeResident$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$EnqueueMakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$EnqueueMakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$EnqueueMakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$EnqueueMakeResident$VH().set(seg, x);
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$EnqueueMakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList1$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList1$VH().set(seg, x);
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommandList1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateProtectedResourceSession$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateProtectedResourceSession$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateProtectedResourceSession$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateProtectedResourceSession$VH().set(seg, x);
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource1$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource1$VH().set(seg, x);
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateCommittedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap1$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap1$VH().set(seg, x);
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateHeap1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource1$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource1$VH().set(seg, x);
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateReservedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo1$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo1$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device6*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo1$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device6*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device6*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo1$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device6*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetResourceAllocationInfo1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateLifetimeTracker$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateLifetimeTracker$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress CreateLifetimeTracker$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateLifetimeTracker$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress CreateLifetimeTracker$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateLifetimeTracker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateLifetimeTracker$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateLifetimeTracker$VH().set(seg, x);
        }
        public static void CreateLifetimeTracker$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateLifetimeTracker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveDevice$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$RemoveDevice$VH();
        }
        public static  @C("void(*)(ID3D12Device6*)") MemoryAddress RemoveDevice$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$RemoveDevice$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*)") MemoryAddress RemoveDevice$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$RemoveDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveDevice$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$RemoveDevice$VH().set(seg, x);
        }
        public static void RemoveDevice$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$RemoveDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateMetaCommands$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommands$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress EnumerateMetaCommands$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommands$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress EnumerateMetaCommands$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommands$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateMetaCommands$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommands$VH().set(seg, x);
        }
        public static void EnumerateMetaCommands$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommands$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateMetaCommandParameters$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommandParameters$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress EnumerateMetaCommandParameters$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommandParameters$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress EnumerateMetaCommandParameters$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommandParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateMetaCommandParameters$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommandParameters$VH().set(seg, x);
        }
        public static void EnumerateMetaCommandParameters$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$EnumerateMetaCommandParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateMetaCommand$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateMetaCommand$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateMetaCommand$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateMetaCommand$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateMetaCommand$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateMetaCommand$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateMetaCommand$VH().set(seg, x);
        }
        public static void CreateMetaCommand$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateStateObject$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CreateStateObject$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress CreateStateObject$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateStateObject$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress CreateStateObject$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CreateStateObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateStateObject$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateStateObject$VH().set(seg, x);
        }
        public static void CreateStateObject$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CreateStateObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRaytracingAccelerationStructurePrebuildInfo$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH();
        }
        public static  @C("void(*)(ID3D12Device6*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress GetRaytracingAccelerationStructurePrebuildInfo$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device6*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress GetRaytracingAccelerationStructurePrebuildInfo$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRaytracingAccelerationStructurePrebuildInfo$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device6*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().set(seg, x);
        }
        public static void GetRaytracingAccelerationStructurePrebuildInfo$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device6*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckDriverMatchingIdentifier$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$CheckDriverMatchingIdentifier$VH();
        }
        public static  @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device6*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress CheckDriverMatchingIdentifier$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CheckDriverMatchingIdentifier$VH().get(seg);
        }
        public static  @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device6*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress CheckDriverMatchingIdentifier$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$CheckDriverMatchingIdentifier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckDriverMatchingIdentifier$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device6*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CheckDriverMatchingIdentifier$VH().set(seg, x);
        }
        public static void CheckDriverMatchingIdentifier$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device6*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$CheckDriverMatchingIdentifier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetBackgroundProcessingMode$VH() {
            return d3d12_h$constants$8.ID3D12Device6Vtbl$SetBackgroundProcessingMode$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress SetBackgroundProcessingMode$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetBackgroundProcessingMode$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device6*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress SetBackgroundProcessingMode$get(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6Vtbl$SetBackgroundProcessingMode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetBackgroundProcessingMode$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device6*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetBackgroundProcessingMode$VH().set(seg, x);
        }
        public static void SetBackgroundProcessingMode$set(@C("struct ID3D12Device6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device6*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6Vtbl$SetBackgroundProcessingMode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device6Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device6Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device6Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device6Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device6Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device6Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device6 {

        private ID3D12Device6() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12Device6$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$8.ID3D12Device6$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Device6Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device6") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Device6Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device6") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12Device6$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device6") MemorySegment seg, @C("struct ID3D12Device6Vtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device6") MemorySegment seg, long index, @C("struct ID3D12Device6Vtbl*") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12Device6$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device6") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device6") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device6[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device6[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device6*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device6*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment D3D12_PROTECTED_RESOURCES_SESSION_HARDWARE_PROTECTED$SEGMENT() {
        return d3d12_h$constants$8.D3D12_PROTECTED_RESOURCES_SESSION_HARDWARE_PROTECTED$SEGMENT();
    }
    public static class D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT {

        private D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$struct$LAYOUT();
        }
        public static VarHandle NodeIndex$VH() {
            return d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$NodeIndex$VH();
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$NodeIndex$VH().get(seg);
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$NodeIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$NodeIndex$VH().set(seg, x);
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$NodeIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Count$VH() {
            return d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$Count$VH();
        }
        public static  @C("UINT") int Count$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$Count$VH().get(seg);
        }
        public static  @C("UINT") int Count$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$Count$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Count$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$Count$VH().set(seg, x);
        }
        public static void Count$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT$Count$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES {

        private D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$struct$LAYOUT();
        }
        public static VarHandle NodeIndex$VH() {
            return d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$NodeIndex$VH();
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$NodeIndex$VH().get(seg);
        }
        public static  @C("UINT") int NodeIndex$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$NodeIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$NodeIndex$VH().set(seg, x);
        }
        public static void NodeIndex$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$NodeIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Count$VH() {
            return d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$Count$VH();
        }
        public static  @C("UINT") int Count$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$Count$VH().get(seg);
        }
        public static  @C("UINT") int Count$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$Count$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Count$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$Count$VH().set(seg, x);
        }
        public static void Count$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$Count$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pTypes$VH() {
            return d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$pTypes$VH();
        }
        public static  @C("GUID*") MemoryAddress pTypes$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$pTypes$VH().get(seg);
        }
        public static  @C("GUID*") MemoryAddress pTypes$get(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$pTypes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pTypes$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, @C("GUID*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$pTypes$VH().set(seg, x);
        }
        public static void pTypes$set(@C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment seg, long index, @C("GUID*") MemoryAddress x) {
            d3d12_h$constants$8.D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES$pTypes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_PROTECTED_RESOURCE_SESSION_DESC1 {

        private D3D12_PROTECTED_RESOURCE_SESSION_DESC1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$struct$LAYOUT();
        }
        public static VarHandle NodeMask$VH() {
            return d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$NodeMask$VH();
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$NodeMask$VH().get(seg);
        }
        public static  @C("UINT") int NodeMask$get(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$NodeMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NodeMask$set(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$NodeMask$VH().set(seg, x);
        }
        public static void NodeMask$set(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$NodeMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flags$VH() {
            return d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$Flags$VH();
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_FLAGS") int Flags$get(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment seg) {
            return (int)d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$Flags$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_FLAGS") int Flags$get(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$Flags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Flags$set(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment seg, @C("D3D12_PROTECTED_RESOURCE_SESSION_FLAGS") int x) {
            d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$Flags$VH().set(seg, x);
        }
        public static void Flags$set(@C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment seg, long index, @C("D3D12_PROTECTED_RESOURCE_SESSION_FLAGS") int x) {
            d3d12_h$constants$8.D3D12_PROTECTED_RESOURCE_SESSION_DESC1$Flags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment ProtectionType$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 16));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$VH().get(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$VH().set(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$VH().get(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$VH().set(d3d12_h$constants$8.__MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12ProtectedResourceSession1$SEGMENT() {
        return d3d12_h$constants$8.IID_ID3D12ProtectedResourceSession1$SEGMENT();
    }
    public static class ID3D12ProtectedResourceSession1Vtbl {

        private ID3D12ProtectedResourceSession1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress AddRef$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress AddRef$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress Release$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress Release$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$8.ID3D12ProtectedResourceSession1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetStatusFence$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetStatusFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress GetStatusFence$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetStatusFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress GetStatusFence$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetStatusFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetStatusFence$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetStatusFence$VH().set(seg, x);
        }
        public static void GetStatusFence$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12ProtectedResourceSession1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetStatusFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSessionStatus$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetSessionStatus$VH();
        }
        public static  @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress GetSessionStatus$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetSessionStatus$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress GetSessionStatus$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetSessionStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSessionStatus$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetSessionStatus$VH().set(seg, x);
        }
        public static void GetSessionStatus$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("D3D12_PROTECTED_SESSION_STATUS(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetSessionStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc$VH();
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress GetDesc$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress GetDesc$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc1$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc1$VH();
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC1(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress GetDesc1$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc1$VH().get(seg);
        }
        public static  @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC1(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress GetDesc1$get(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc1$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC1(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc1$VH().set(seg, x);
        }
        public static void GetDesc1$set(@C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment seg, long index, @C("D3D12_PROTECTED_RESOURCE_SESSION_DESC1(*)(ID3D12ProtectedResourceSession1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1Vtbl$GetDesc1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ProtectedResourceSession1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ProtectedResourceSession1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ProtectedResourceSession1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ProtectedResourceSession1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ProtectedResourceSession1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12ProtectedResourceSession1 {

        private ID3D12ProtectedResourceSession1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$9.ID3D12ProtectedResourceSession1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12ProtectedResourceSession1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12ProtectedResourceSession1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12ProtectedResourceSession1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12ProtectedResourceSession1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12ProtectedResourceSession1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12ProtectedResourceSession1") MemorySegment seg, @C("struct ID3D12ProtectedResourceSession1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12ProtectedResourceSession1") MemorySegment seg, long index, @C("struct ID3D12ProtectedResourceSession1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12ProtectedResourceSession1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ProtectedResourceSession1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ProtectedResourceSession1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ProtectedResourceSession1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ProtectedResourceSession1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ProtectedResourceSession1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ProtectedResourceSession1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Device7$SEGMENT() {
        return d3d12_h$constants$9.IID_ID3D12Device7$SEGMENT();
    }
    public static class ID3D12Device7Vtbl {

        private ID3D12Device7Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device7*)") MemoryAddress AddRef$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device7*)") MemoryAddress AddRef$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device7*)") MemoryAddress Release$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device7*)") MemoryAddress Release$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device7*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device7*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device7*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device7*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device7*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device7*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device7*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device7*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device7*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device7*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device7*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device7*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device7*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device7*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device7*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device7*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineLibrary$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineLibrary$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineLibrary$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineLibrary$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineLibrary$VH().set(seg, x);
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineLibrary$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnMultipleFenceCompletion$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$SetEventOnMultipleFenceCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg, x);
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetResidencyPriority$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$SetResidencyPriority$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetResidencyPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetResidencyPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetResidencyPriority$VH().set(seg, x);
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetResidencyPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineState$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineState$VH().set(seg, x);
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreatePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromAddress$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromAddress$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromAddress$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromAddress$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromFileMapping$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromFileMapping$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnqueueMakeResident$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$EnqueueMakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$EnqueueMakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$EnqueueMakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$EnqueueMakeResident$VH().set(seg, x);
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$EnqueueMakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList1$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList1$VH().set(seg, x);
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommandList1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateProtectedResourceSession$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession$VH().set(seg, x);
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource1$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource1$VH().set(seg, x);
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateCommittedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap1$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap1$VH().set(seg, x);
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateHeap1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource1$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource1$VH().set(seg, x);
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateReservedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo1$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo1$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device7*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo1$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device7*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device7*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo1$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device7*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetResourceAllocationInfo1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateLifetimeTracker$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateLifetimeTracker$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress CreateLifetimeTracker$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateLifetimeTracker$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress CreateLifetimeTracker$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateLifetimeTracker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateLifetimeTracker$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateLifetimeTracker$VH().set(seg, x);
        }
        public static void CreateLifetimeTracker$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateLifetimeTracker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveDevice$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$RemoveDevice$VH();
        }
        public static  @C("void(*)(ID3D12Device7*)") MemoryAddress RemoveDevice$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$RemoveDevice$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*)") MemoryAddress RemoveDevice$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$RemoveDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveDevice$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$RemoveDevice$VH().set(seg, x);
        }
        public static void RemoveDevice$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$RemoveDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateMetaCommands$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommands$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress EnumerateMetaCommands$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommands$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress EnumerateMetaCommands$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommands$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateMetaCommands$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommands$VH().set(seg, x);
        }
        public static void EnumerateMetaCommands$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommands$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateMetaCommandParameters$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommandParameters$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress EnumerateMetaCommandParameters$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommandParameters$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress EnumerateMetaCommandParameters$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommandParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateMetaCommandParameters$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommandParameters$VH().set(seg, x);
        }
        public static void EnumerateMetaCommandParameters$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$EnumerateMetaCommandParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateMetaCommand$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateMetaCommand$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateMetaCommand$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateMetaCommand$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateMetaCommand$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateMetaCommand$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateMetaCommand$VH().set(seg, x);
        }
        public static void CreateMetaCommand$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateStateObject$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateStateObject$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress CreateStateObject$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateStateObject$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress CreateStateObject$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateStateObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateStateObject$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateStateObject$VH().set(seg, x);
        }
        public static void CreateStateObject$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateStateObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRaytracingAccelerationStructurePrebuildInfo$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH();
        }
        public static  @C("void(*)(ID3D12Device7*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress GetRaytracingAccelerationStructurePrebuildInfo$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device7*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress GetRaytracingAccelerationStructurePrebuildInfo$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRaytracingAccelerationStructurePrebuildInfo$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device7*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().set(seg, x);
        }
        public static void GetRaytracingAccelerationStructurePrebuildInfo$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device7*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckDriverMatchingIdentifier$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CheckDriverMatchingIdentifier$VH();
        }
        public static  @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device7*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress CheckDriverMatchingIdentifier$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CheckDriverMatchingIdentifier$VH().get(seg);
        }
        public static  @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device7*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress CheckDriverMatchingIdentifier$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CheckDriverMatchingIdentifier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckDriverMatchingIdentifier$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device7*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CheckDriverMatchingIdentifier$VH().set(seg, x);
        }
        public static void CheckDriverMatchingIdentifier$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device7*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CheckDriverMatchingIdentifier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetBackgroundProcessingMode$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$SetBackgroundProcessingMode$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress SetBackgroundProcessingMode$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetBackgroundProcessingMode$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress SetBackgroundProcessingMode$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$SetBackgroundProcessingMode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetBackgroundProcessingMode$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetBackgroundProcessingMode$VH().set(seg, x);
        }
        public static void SetBackgroundProcessingMode$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$SetBackgroundProcessingMode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddToStateObject$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$AddToStateObject$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_STATE_OBJECT_DESC*,ID3D12StateObject*,const IID*,void**)") MemoryAddress AddToStateObject$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$AddToStateObject$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_STATE_OBJECT_DESC*,ID3D12StateObject*,const IID*,void**)") MemoryAddress AddToStateObject$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$AddToStateObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddToStateObject$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_STATE_OBJECT_DESC*,ID3D12StateObject*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$AddToStateObject$VH().set(seg, x);
        }
        public static void AddToStateObject$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_STATE_OBJECT_DESC*,ID3D12StateObject*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$AddToStateObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateProtectedResourceSession1$VH() {
            return d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device7*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession1$get(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateProtectedResourceSession1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device7*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession1$VH().set(seg, x);
        }
        public static void CreateProtectedResourceSession1$set(@C("struct ID3D12Device7Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device7*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7Vtbl$CreateProtectedResourceSession1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device7Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device7Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device7Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device7Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device7Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device7Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device7 {

        private ID3D12Device7() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Device7$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$9.ID3D12Device7$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Device7Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device7") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Device7Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device7") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device7$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device7") MemorySegment seg, @C("struct ID3D12Device7Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device7") MemorySegment seg, long index, @C("struct ID3D12Device7Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device7$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device7") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device7") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device7[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device7[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device7*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device7*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Device8$SEGMENT() {
        return d3d12_h$constants$9.IID_ID3D12Device8$SEGMENT();
    }
    public static class ID3D12Device8Vtbl {

        private ID3D12Device8Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device8*)") MemoryAddress AddRef$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device8*)") MemoryAddress AddRef$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Device8*)") MemoryAddress Release$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Device8*)") MemoryAddress Release$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetNodeCount$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetNodeCount$VH();
        }
        public static  @C("UINT(*)(ID3D12Device8*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetNodeCount$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device8*)") MemoryAddress GetNodeCount$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetNodeCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetNodeCount$VH().set(seg, x);
        }
        public static void GetNodeCount$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetNodeCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandQueue$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandQueue$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandQueue$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress CreateCommandQueue$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandQueue$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandQueue$VH().set(seg, x);
        }
        public static void CreateCommandQueue$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMMAND_QUEUE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandQueue$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandAllocator$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandAllocator$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandAllocator$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress CreateCommandAllocator$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandAllocator$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandAllocator$VH().set(seg, x);
        }
        public static void CreateCommandAllocator$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,D3D12_COMMAND_LIST_TYPE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandAllocator$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateGraphicsPipelineState$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateGraphicsPipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateGraphicsPipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateGraphicsPipelineState$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateGraphicsPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateGraphicsPipelineState$VH().set(seg, x);
        }
        public static void CreateGraphicsPipelineState$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_GRAPHICS_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateGraphicsPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateComputePipelineState$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateComputePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateComputePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress CreateComputePipelineState$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateComputePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateComputePipelineState$VH().set(seg, x);
        }
        public static void CreateComputePipelineState$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMPUTE_PIPELINE_STATE_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateComputePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress CreateCommandList$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList$VH().set(seg, x);
        }
        public static void CreateCommandList$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,UINT,D3D12_COMMAND_LIST_TYPE,ID3D12CommandAllocator*,ID3D12PipelineState*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckFeatureSupport$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CheckFeatureSupport$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CheckFeatureSupport$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,D3D12_FEATURE,void*,UINT)") MemoryAddress CheckFeatureSupport$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CheckFeatureSupport$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CheckFeatureSupport$VH().set(seg, x);
        }
        public static void CheckFeatureSupport$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,D3D12_FEATURE,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CheckFeatureSupport$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDescriptorHeap$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDescriptorHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDescriptorHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateDescriptorHeap$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDescriptorHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDescriptorHeap$VH().set(seg, x);
        }
        public static void CreateDescriptorHeap$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_DESCRIPTOR_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDescriptorHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDescriptorHandleIncrementSize$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetDescriptorHandleIncrementSize$VH();
        }
        public static  @C("UINT(*)(ID3D12Device8*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg);
        }
        public static  @C("UINT(*)(ID3D12Device8*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress GetDescriptorHandleIncrementSize$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetDescriptorHandleIncrementSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("UINT(*)(ID3D12Device8*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg, x);
        }
        public static void GetDescriptorHandleIncrementSize$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("UINT(*)(ID3D12Device8*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetDescriptorHandleIncrementSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRootSignature$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRootSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRootSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateRootSignature$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRootSignature$VH().set(seg, x);
        }
        public static void CreateRootSignature$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateConstantBufferView$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateConstantBufferView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateConstantBufferView$VH().set(seg, x);
        }
        public static void CreateConstantBufferView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,const D3D12_CONSTANT_BUFFER_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateShaderResourceView$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateShaderResourceView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateShaderResourceView$VH().set(seg, x);
        }
        public static void CreateShaderResourceView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_SHADER_RESOURCE_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateUnorderedAccessView$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateUnorderedAccessView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateUnorderedAccessView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,ID3D12Resource*,ID3D12Resource*,const D3D12_UNORDERED_ACCESS_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateRenderTargetView$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateRenderTargetView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRenderTargetView$VH().set(seg, x);
        }
        public static void CreateRenderTargetView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_RENDER_TARGET_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateDepthStencilView$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateDepthStencilView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDepthStencilView$VH().set(seg, x);
        }
        public static void CreateDepthStencilView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,ID3D12Resource*,const D3D12_DEPTH_STENCIL_VIEW_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSampler$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSampler$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSampler$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSampler$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSampler$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSampler$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSampler$VH().set(seg, x);
        }
        public static void CreateSampler$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,const D3D12_SAMPLER_DESC*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSampler$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptors$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptors$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptors$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptors$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptors$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptors$VH().set(seg, x);
        }
        public static void CopyDescriptors$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,const UINT*,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptors$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyDescriptorsSimple$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptorsSimple$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptorsSimple$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress CopyDescriptorsSimple$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptorsSimple$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptorsSimple$VH().set(seg, x);
        }
        public static void CopyDescriptorsSimple$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,UINT,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_DESCRIPTOR_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CopyDescriptorsSimple$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress GetResourceAllocationInfo$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCustomHeapProperties$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetCustomHeapProperties$VH();
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device8*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetCustomHeapProperties$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device8*,UINT,D3D12_HEAP_TYPE)") MemoryAddress GetCustomHeapProperties$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetCustomHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device8*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetCustomHeapProperties$VH().set(seg, x);
        }
        public static void GetCustomHeapProperties$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_PROPERTIES(*)(ID3D12Device8*,UINT,D3D12_HEAP_TYPE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetCustomHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateCommittedResource$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource$VH().set(seg, x);
        }
        public static void CreateCommittedResource$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateHeap$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap$VH().set(seg, x);
        }
        public static void CreateHeap$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource$VH().set(seg, x);
        }
        public static void CreatePlacedResource$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreateReservedResource$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource$VH().set(seg, x);
        }
        public static void CreateReservedResource$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSharedHandle$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress CreateSharedHandle$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSharedHandle$VH().set(seg, x);
        }
        public static void CreateSharedHandle$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,ID3D12DeviceChild*,const SECURITY_ATTRIBUTES*,DWORD,LPCWSTR,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandle$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandle$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,HANDLE,const IID*,void**)") MemoryAddress OpenSharedHandle$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandle$VH().set(seg, x);
        }
        public static void OpenSharedHandle$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenSharedHandleByName$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandleByName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandleByName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress OpenSharedHandleByName$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandleByName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandleByName$VH().set(seg, x);
        }
        public static void OpenSharedHandleByName$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,LPCWSTR,DWORD,HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$OpenSharedHandleByName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle MakeResident$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$MakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$MakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**)") MemoryAddress MakeResident$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$MakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void MakeResident$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$MakeResident$VH().set(seg, x);
        }
        public static void MakeResident$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$MakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Evict$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$Evict$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$Evict$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**)") MemoryAddress Evict$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$Evict$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Evict$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$Evict$VH().set(seg, x);
        }
        public static void Evict$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$Evict$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateFence$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateFence$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateFence$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress CreateFence$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateFence$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateFence$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateFence$VH().set(seg, x);
        }
        public static void CreateFence$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,UINT64,D3D12_FENCE_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateFence$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDeviceRemovedReason$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetDeviceRemovedReason$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetDeviceRemovedReason$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*)") MemoryAddress GetDeviceRemovedReason$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetDeviceRemovedReason$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetDeviceRemovedReason$VH().set(seg, x);
        }
        public static void GetDeviceRemovedReason$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetDeviceRemovedReason$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints$VH().set(seg, x);
        }
        public static void GetCopyableFootprints$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateQueryHeap$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateQueryHeap$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateQueryHeap$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress CreateQueryHeap$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateQueryHeap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateQueryHeap$VH().set(seg, x);
        }
        public static void CreateQueryHeap$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_QUERY_HEAP_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateQueryHeap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetStablePowerState$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$SetStablePowerState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetStablePowerState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,BOOL)") MemoryAddress SetStablePowerState$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetStablePowerState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetStablePowerState$VH().set(seg, x);
        }
        public static void SetStablePowerState$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetStablePowerState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandSignature$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandSignature$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandSignature$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress CreateCommandSignature$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandSignature$VH().set(seg, x);
        }
        public static void CreateCommandSignature$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_COMMAND_SIGNATURE_DESC*,ID3D12RootSignature*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceTiling$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceTiling$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceTiling$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress GetResourceTiling$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceTiling$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceTiling$VH().set(seg, x);
        }
        public static void GetResourceTiling$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,ID3D12Resource*,UINT*,D3D12_PACKED_MIP_INFO*,D3D12_TILE_SHAPE*,UINT*,UINT,D3D12_SUBRESOURCE_TILING*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceTiling$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetAdapterLuid$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetAdapterLuid$VH();
        }
        public static  @C("LUID(*)(ID3D12Device8*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetAdapterLuid$VH().get(seg);
        }
        public static  @C("LUID(*)(ID3D12Device8*)") MemoryAddress GetAdapterLuid$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetAdapterLuid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("LUID(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetAdapterLuid$VH().set(seg, x);
        }
        public static void GetAdapterLuid$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("LUID(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetAdapterLuid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineLibrary$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineLibrary$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineLibrary$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,void*,SIZE_T,const IID*,void**)") MemoryAddress CreatePipelineLibrary$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineLibrary$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineLibrary$VH().set(seg, x);
        }
        public static void CreatePipelineLibrary$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineLibrary$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetEventOnMultipleFenceCompletion$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$SetEventOnMultipleFenceCompletion$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress SetEventOnMultipleFenceCompletion$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetEventOnMultipleFenceCompletion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg, x);
        }
        public static void SetEventOnMultipleFenceCompletion$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,ID3D12Fence**,const UINT64*,UINT,D3D12_MULTIPLE_FENCE_WAIT_FLAGS,HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetEventOnMultipleFenceCompletion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetResidencyPriority$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$SetResidencyPriority$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetResidencyPriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress SetResidencyPriority$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetResidencyPriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetResidencyPriority$VH().set(seg, x);
        }
        public static void SetResidencyPriority$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,UINT,ID3D12Pageable**,const D3D12_RESIDENCY_PRIORITY*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetResidencyPriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePipelineState$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineState$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress CreatePipelineState$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineState$VH().set(seg, x);
        }
        public static void CreatePipelineState$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_PIPELINE_STATE_STREAM_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromAddress$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromAddress$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromAddress$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,void*,const IID*,void**)") MemoryAddress OpenExistingHeapFromAddress$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromAddress$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromAddress$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,void*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OpenExistingHeapFromFileMapping$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromFileMapping$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,HANDLE,const IID*,void**)") MemoryAddress OpenExistingHeapFromFileMapping$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromFileMapping$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg, x);
        }
        public static void OpenExistingHeapFromFileMapping$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,HANDLE,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$OpenExistingHeapFromFileMapping$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnqueueMakeResident$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$EnqueueMakeResident$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$EnqueueMakeResident$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress EnqueueMakeResident$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$EnqueueMakeResident$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$EnqueueMakeResident$VH().set(seg, x);
        }
        public static void EnqueueMakeResident$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,D3D12_RESIDENCY_FLAGS,UINT,ID3D12Pageable**,ID3D12Fence*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$EnqueueMakeResident$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommandList1$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress CreateCommandList1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList1$VH().set(seg, x);
        }
        public static void CreateCommandList1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,UINT,D3D12_COMMAND_LIST_TYPE,D3D12_COMMAND_LIST_FLAGS,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommandList1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateProtectedResourceSession$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession$VH().set(seg, x);
        }
        public static void CreateProtectedResourceSession$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource1$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource1$VH().set(seg, x);
        }
        public static void CreateCommittedResource1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateHeap1$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateHeap1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap1$VH().set(seg, x);
        }
        public static void CreateHeap1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_DESC*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateHeap1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateReservedResource1$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateReservedResource1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource1$VH().set(seg, x);
        }
        public static void CreateReservedResource1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateReservedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo1$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo1$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo1$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo1$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateLifetimeTracker$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateLifetimeTracker$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress CreateLifetimeTracker$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateLifetimeTracker$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress CreateLifetimeTracker$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateLifetimeTracker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateLifetimeTracker$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateLifetimeTracker$VH().set(seg, x);
        }
        public static void CreateLifetimeTracker$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,ID3D12LifetimeOwner*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateLifetimeTracker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveDevice$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$RemoveDevice$VH();
        }
        public static  @C("void(*)(ID3D12Device8*)") MemoryAddress RemoveDevice$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$RemoveDevice$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*)") MemoryAddress RemoveDevice$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$RemoveDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveDevice$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$RemoveDevice$VH().set(seg, x);
        }
        public static void RemoveDevice$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$RemoveDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateMetaCommands$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommands$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress EnumerateMetaCommands$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommands$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress EnumerateMetaCommands$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommands$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateMetaCommands$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommands$VH().set(seg, x);
        }
        public static void EnumerateMetaCommands$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,UINT*,D3D12_META_COMMAND_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommands$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateMetaCommandParameters$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommandParameters$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress EnumerateMetaCommandParameters$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommandParameters$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress EnumerateMetaCommandParameters$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommandParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateMetaCommandParameters$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommandParameters$VH().set(seg, x);
        }
        public static void EnumerateMetaCommandParameters$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const GUID*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT*,UINT*,D3D12_META_COMMAND_PARAMETER_DESC*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$EnumerateMetaCommandParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateMetaCommand$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateMetaCommand$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateMetaCommand$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateMetaCommand$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress CreateMetaCommand$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateMetaCommand$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateMetaCommand$VH().set(seg, x);
        }
        public static void CreateMetaCommand$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const GUID*,UINT,void*,SIZE_T,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateStateObject$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateStateObject$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress CreateStateObject$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateStateObject$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress CreateStateObject$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateStateObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateStateObject$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateStateObject$VH().set(seg, x);
        }
        public static void CreateStateObject$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_STATE_OBJECT_DESC*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateStateObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRaytracingAccelerationStructurePrebuildInfo$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress GetRaytracingAccelerationStructurePrebuildInfo$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress GetRaytracingAccelerationStructurePrebuildInfo$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRaytracingAccelerationStructurePrebuildInfo$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().set(seg, x);
        }
        public static void GetRaytracingAccelerationStructurePrebuildInfo$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetRaytracingAccelerationStructurePrebuildInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CheckDriverMatchingIdentifier$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CheckDriverMatchingIdentifier$VH();
        }
        public static  @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device8*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress CheckDriverMatchingIdentifier$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CheckDriverMatchingIdentifier$VH().get(seg);
        }
        public static  @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device8*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress CheckDriverMatchingIdentifier$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CheckDriverMatchingIdentifier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CheckDriverMatchingIdentifier$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device8*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CheckDriverMatchingIdentifier$VH().set(seg, x);
        }
        public static void CheckDriverMatchingIdentifier$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS(*)(ID3D12Device8*,D3D12_SERIALIZED_DATA_TYPE,const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CheckDriverMatchingIdentifier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetBackgroundProcessingMode$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$SetBackgroundProcessingMode$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress SetBackgroundProcessingMode$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetBackgroundProcessingMode$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress SetBackgroundProcessingMode$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$SetBackgroundProcessingMode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetBackgroundProcessingMode$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetBackgroundProcessingMode$VH().set(seg, x);
        }
        public static void SetBackgroundProcessingMode$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,D3D12_BACKGROUND_PROCESSING_MODE,D3D12_MEASUREMENTS_ACTION,HANDLE,BOOL*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$SetBackgroundProcessingMode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddToStateObject$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$AddToStateObject$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_STATE_OBJECT_DESC*,ID3D12StateObject*,const IID*,void**)") MemoryAddress AddToStateObject$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$AddToStateObject$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_STATE_OBJECT_DESC*,ID3D12StateObject*,const IID*,void**)") MemoryAddress AddToStateObject$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$AddToStateObject$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddToStateObject$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_STATE_OBJECT_DESC*,ID3D12StateObject*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$AddToStateObject$VH().set(seg, x);
        }
        public static void AddToStateObject$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_STATE_OBJECT_DESC*,ID3D12StateObject*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$AddToStateObject$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateProtectedResourceSession1$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,const IID*,void**)") MemoryAddress CreateProtectedResourceSession1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateProtectedResourceSession1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession1$VH().set(seg, x);
        }
        public static void CreateProtectedResourceSession1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateProtectedResourceSession1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetResourceAllocationInfo2$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo2$VH();
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo2$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo2$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress GetResourceAllocationInfo2$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo2$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetResourceAllocationInfo2$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo2$VH().set(seg, x);
        }
        public static void GetResourceAllocationInfo2$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_ALLOCATION_INFO(*)(ID3D12Device8*,UINT,UINT,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_ALLOCATION_INFO1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetResourceAllocationInfo2$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCommittedResource2$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource2$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource2$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource2$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress CreateCommittedResource2$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource2$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCommittedResource2$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource2$VH().set(seg, x);
        }
        public static void CreateCommittedResource2$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,const D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,ID3D12ProtectedResourceSession*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateCommittedResource2$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreatePlacedResource1$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource1$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource1$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Device8*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress CreatePlacedResource1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreatePlacedResource1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Device8*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource1$VH().set(seg, x);
        }
        public static void CreatePlacedResource1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Device8*,ID3D12Heap*,UINT64,const D3D12_RESOURCE_DESC1*,D3D12_RESOURCE_STATES,const D3D12_CLEAR_VALUE*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreatePlacedResource1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateSamplerFeedbackUnorderedAccessView$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSamplerFeedbackUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,ID3D12Resource*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSamplerFeedbackUnorderedAccessView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSamplerFeedbackUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,ID3D12Resource*,ID3D12Resource*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress CreateSamplerFeedbackUnorderedAccessView$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSamplerFeedbackUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateSamplerFeedbackUnorderedAccessView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,ID3D12Resource*,ID3D12Resource*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSamplerFeedbackUnorderedAccessView$VH().set(seg, x);
        }
        public static void CreateSamplerFeedbackUnorderedAccessView$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,ID3D12Resource*,ID3D12Resource*,D3D12_CPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$CreateSamplerFeedbackUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCopyableFootprints1$VH() {
            return d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints1$VH();
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC1*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints1$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC1*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress GetCopyableFootprints1$get(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCopyableFootprints1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, @C("void(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC1*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints1$VH().set(seg, x);
        }
        public static void GetCopyableFootprints1$set(@C("struct ID3D12Device8Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Device8*,const D3D12_RESOURCE_DESC1*,UINT,UINT,UINT64,D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,UINT*,UINT64*,UINT64*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8Vtbl$GetCopyableFootprints1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device8Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device8Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device8Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device8Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device8Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device8Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Device8 {

        private ID3D12Device8() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Device8$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$9.ID3D12Device8$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Device8Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device8") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Device8Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Device8") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Device8$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Device8") MemorySegment seg, @C("struct ID3D12Device8Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Device8") MemorySegment seg, long index, @C("struct ID3D12Device8Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Device8$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Device8") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Device8") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Device8[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Device8[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Device8*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Device8*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Resource1$SEGMENT() {
        return d3d12_h$constants$9.IID_ID3D12Resource1$SEGMENT();
    }
    public static class ID3D12Resource1Vtbl {

        private ID3D12Resource1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Resource1*)") MemoryAddress AddRef$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Resource1*)") MemoryAddress AddRef$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Resource1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Resource1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Resource1*)") MemoryAddress Release$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Resource1*)") MemoryAddress Release$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Resource1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Resource1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Map$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$Map$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,UINT,const D3D12_RANGE*,void**)") MemoryAddress Map$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$Map$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,UINT,const D3D12_RANGE*,void**)") MemoryAddress Map$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$Map$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Map$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,UINT,const D3D12_RANGE*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$Map$VH().set(seg, x);
        }
        public static void Map$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,UINT,const D3D12_RANGE*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$Map$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Unmap$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$Unmap$VH();
        }
        public static  @C("void(*)(ID3D12Resource1*,UINT,const D3D12_RANGE*)") MemoryAddress Unmap$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$Unmap$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Resource1*,UINT,const D3D12_RANGE*)") MemoryAddress Unmap$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$Unmap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unmap$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("void(*)(ID3D12Resource1*,UINT,const D3D12_RANGE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$Unmap$VH().set(seg, x);
        }
        public static void Unmap$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Resource1*,UINT,const D3D12_RANGE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$Unmap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDesc$VH();
        }
        public static  @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource1*)") MemoryAddress GetDesc$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource1*)") MemoryAddress GetDesc$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetGPUVirtualAddress$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$GetGPUVirtualAddress$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource1*)") MemoryAddress GetGPUVirtualAddress$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetGPUVirtualAddress$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource1*)") MemoryAddress GetGPUVirtualAddress$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetGPUVirtualAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetGPUVirtualAddress$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetGPUVirtualAddress$VH().set(seg, x);
        }
        public static void GetGPUVirtualAddress$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetGPUVirtualAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteToSubresource$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$WriteToSubresource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress WriteToSubresource$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$WriteToSubresource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress WriteToSubresource$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$WriteToSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteToSubresource$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$WriteToSubresource$VH().set(seg, x);
        }
        public static void WriteToSubresource$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$WriteToSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReadFromSubresource$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$ReadFromSubresource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress ReadFromSubresource$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$ReadFromSubresource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress ReadFromSubresource$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$ReadFromSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReadFromSubresource$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$ReadFromSubresource$VH().set(seg, x);
        }
        public static void ReadFromSubresource$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$ReadFromSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetHeapProperties$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$GetHeapProperties$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress GetHeapProperties$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetHeapProperties$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress GetHeapProperties$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetHeapProperties$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetHeapProperties$VH().set(seg, x);
        }
        public static void GetHeapProperties$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetProtectedResourceSession$VH() {
            return d3d12_h$constants$9.ID3D12Resource1Vtbl$GetProtectedResourceSession$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress GetProtectedResourceSession$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetProtectedResourceSession$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress GetProtectedResourceSession$get(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1Vtbl$GetProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProtectedResourceSession$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetProtectedResourceSession$VH().set(seg, x);
        }
        public static void GetProtectedResourceSession$set(@C("struct ID3D12Resource1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1Vtbl$GetProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Resource1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Resource1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Resource1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Resource1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Resource1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Resource1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Resource1 {

        private ID3D12Resource1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Resource1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$9.ID3D12Resource1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Resource1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Resource1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Resource1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Resource1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Resource1") MemorySegment seg, @C("struct ID3D12Resource1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Resource1") MemorySegment seg, long index, @C("struct ID3D12Resource1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Resource1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Resource1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Resource1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Resource1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Resource1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Resource1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Resource2$SEGMENT() {
        return d3d12_h$constants$9.IID_ID3D12Resource2$SEGMENT();
    }
    public static class ID3D12Resource2Vtbl {

        private ID3D12Resource2Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Resource2*)") MemoryAddress AddRef$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Resource2*)") MemoryAddress AddRef$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Resource2*)") MemoryAddress Release$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Resource2*)") MemoryAddress Release$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Map$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$Map$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,UINT,const D3D12_RANGE*,void**)") MemoryAddress Map$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$Map$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,UINT,const D3D12_RANGE*,void**)") MemoryAddress Map$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$Map$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Map$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,UINT,const D3D12_RANGE*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$Map$VH().set(seg, x);
        }
        public static void Map$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,UINT,const D3D12_RANGE*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$Map$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Unmap$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$Unmap$VH();
        }
        public static  @C("void(*)(ID3D12Resource2*,UINT,const D3D12_RANGE*)") MemoryAddress Unmap$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$Unmap$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Resource2*,UINT,const D3D12_RANGE*)") MemoryAddress Unmap$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$Unmap$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Unmap$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("void(*)(ID3D12Resource2*,UINT,const D3D12_RANGE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$Unmap$VH().set(seg, x);
        }
        public static void Unmap$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Resource2*,UINT,const D3D12_RANGE*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$Unmap$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc$VH();
        }
        public static  @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource2*)") MemoryAddress GetDesc$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource2*)") MemoryAddress GetDesc$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_DESC(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetGPUVirtualAddress$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$GetGPUVirtualAddress$VH();
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource2*)") MemoryAddress GetGPUVirtualAddress$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetGPUVirtualAddress$VH().get(seg);
        }
        public static  @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource2*)") MemoryAddress GetGPUVirtualAddress$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetGPUVirtualAddress$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetGPUVirtualAddress$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetGPUVirtualAddress$VH().set(seg, x);
        }
        public static void GetGPUVirtualAddress$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("D3D12_GPU_VIRTUAL_ADDRESS(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetGPUVirtualAddress$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteToSubresource$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$WriteToSubresource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress WriteToSubresource$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$WriteToSubresource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress WriteToSubresource$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$WriteToSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteToSubresource$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$WriteToSubresource$VH().set(seg, x);
        }
        public static void WriteToSubresource$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,UINT,const D3D12_BOX*,void*,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$WriteToSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReadFromSubresource$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$ReadFromSubresource$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress ReadFromSubresource$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$ReadFromSubresource$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress ReadFromSubresource$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$ReadFromSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReadFromSubresource$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$ReadFromSubresource$VH().set(seg, x);
        }
        public static void ReadFromSubresource$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,void*,UINT,UINT,UINT,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$ReadFromSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetHeapProperties$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$GetHeapProperties$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress GetHeapProperties$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetHeapProperties$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress GetHeapProperties$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetHeapProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetHeapProperties$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetHeapProperties$VH().set(seg, x);
        }
        public static void GetHeapProperties$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,D3D12_HEAP_PROPERTIES*,D3D12_HEAP_FLAGS*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetHeapProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetProtectedResourceSession$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$GetProtectedResourceSession$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress GetProtectedResourceSession$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetProtectedResourceSession$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress GetProtectedResourceSession$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProtectedResourceSession$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetProtectedResourceSession$VH().set(seg, x);
        }
        public static void GetProtectedResourceSession$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Resource2*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc1$VH() {
            return d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc1$VH();
        }
        public static  @C("D3D12_RESOURCE_DESC1(*)(ID3D12Resource2*)") MemoryAddress GetDesc1$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc1$VH().get(seg);
        }
        public static  @C("D3D12_RESOURCE_DESC1(*)(ID3D12Resource2*)") MemoryAddress GetDesc1$get(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc1$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, @C("D3D12_RESOURCE_DESC1(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc1$VH().set(seg, x);
        }
        public static void GetDesc1$set(@C("struct ID3D12Resource2Vtbl") MemorySegment seg, long index, @C("D3D12_RESOURCE_DESC1(*)(ID3D12Resource2*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2Vtbl$GetDesc1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Resource2Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Resource2Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Resource2Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Resource2Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Resource2Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Resource2Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Resource2 {

        private ID3D12Resource2() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Resource2$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$9.ID3D12Resource2$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Resource2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Resource2") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Resource2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Resource2") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Resource2$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Resource2") MemorySegment seg, @C("struct ID3D12Resource2Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Resource2") MemorySegment seg, long index, @C("struct ID3D12Resource2Vtbl*") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Resource2$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Resource2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Resource2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Resource2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Resource2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Resource2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Resource2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Heap1$SEGMENT() {
        return d3d12_h$constants$9.IID_ID3D12Heap1$SEGMENT();
    }
    public static class ID3D12Heap1Vtbl {

        private ID3D12Heap1Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Heap1*)") MemoryAddress AddRef$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Heap1*)") MemoryAddress AddRef$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Heap1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Heap1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Heap1*)") MemoryAddress Release$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Heap1*)") MemoryAddress Release$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Heap1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Heap1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap1*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap1*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap1*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap1*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDesc$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDesc$VH();
        }
        public static  @C("D3D12_HEAP_DESC(*)(ID3D12Heap1*)") MemoryAddress GetDesc$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDesc$VH().get(seg);
        }
        public static  @C("D3D12_HEAP_DESC(*)(ID3D12Heap1*)") MemoryAddress GetDesc$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDesc$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDesc$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("D3D12_HEAP_DESC(*)(ID3D12Heap1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDesc$VH().set(seg, x);
        }
        public static void GetDesc$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("D3D12_HEAP_DESC(*)(ID3D12Heap1*)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$GetDesc$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetProtectedResourceSession$VH() {
            return d3d12_h$constants$9.ID3D12Heap1Vtbl$GetProtectedResourceSession$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress GetProtectedResourceSession$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$GetProtectedResourceSession$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress GetProtectedResourceSession$get(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$9.ID3D12Heap1Vtbl$GetProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetProtectedResourceSession$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$GetProtectedResourceSession$VH().set(seg, x);
        }
        public static void GetProtectedResourceSession$set(@C("struct ID3D12Heap1Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Heap1*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$9.ID3D12Heap1Vtbl$GetProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Heap1Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Heap1Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Heap1Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Heap1Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Heap1Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Heap1Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Heap1 {

        private ID3D12Heap1() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12Heap1$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$10.ID3D12Heap1$lpVtbl$VH();
        }
        public static  @C("struct ID3D12Heap1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Heap1") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12Heap1$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12Heap1Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Heap1") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12Heap1$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Heap1") MemorySegment seg, @C("struct ID3D12Heap1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12Heap1$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Heap1") MemorySegment seg, long index, @C("struct ID3D12Heap1Vtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12Heap1$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Heap1") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Heap1") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Heap1[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Heap1[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Heap1*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Heap1*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12GraphicsCommandList3$SEGMENT() {
        return d3d12_h$constants$10.IID_ID3D12GraphicsCommandList3$SEGMENT();
    }
    public static class ID3D12GraphicsCommandList3Vtbl {

        private ID3D12GraphicsCommandList3Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList3*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList3*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList3*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList3*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetType$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList3*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList3*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetType$VH().set(seg, x);
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$GetType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Close$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Close$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Close$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Close$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Close$VH().set(seg, x);
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Close$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList3*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList3*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearState$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearState$VH().set(seg, x);
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawInstanced$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawInstanced$VH().set(seg, x);
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawIndexedInstanced$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawIndexedInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawIndexedInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawIndexedInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawIndexedInstanced$VH().set(seg, x);
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DrawIndexedInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Dispatch$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Dispatch$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Dispatch$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Dispatch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Dispatch$VH().set(seg, x);
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$Dispatch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyBufferRegion$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyBufferRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyBufferRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyBufferRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyBufferRegion$VH().set(seg, x);
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyBufferRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTextureRegion$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTextureRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTextureRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTextureRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTextureRegion$VH().set(seg, x);
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTextureRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyResource$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyResource$VH().set(seg, x);
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTiles$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTiles$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTiles$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTiles$VH().set(seg, x);
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$CopyTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresource$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresource$VH().set(seg, x);
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetPrimitiveTopology$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetPrimitiveTopology$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetPrimitiveTopology$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetPrimitiveTopology$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetPrimitiveTopology$VH().set(seg, x);
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetPrimitiveTopology$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetViewports$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetViewports$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetViewports$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetViewports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetViewports$VH().set(seg, x);
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetViewports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetScissorRects$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetScissorRects$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetScissorRects$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetScissorRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetScissorRects$VH().set(seg, x);
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$RSSetScissorRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetBlendFactor$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetBlendFactor$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetBlendFactor$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetBlendFactor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetBlendFactor$VH().set(seg, x);
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetBlendFactor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetStencilRef$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetStencilRef$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetStencilRef$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetStencilRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetStencilRef$VH().set(seg, x);
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetStencilRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPipelineState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPipelineState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPipelineState$VH().set(seg, x);
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceBarrier$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResourceBarrier$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResourceBarrier$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResourceBarrier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResourceBarrier$VH().set(seg, x);
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResourceBarrier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteBundle$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteBundle$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteBundle$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteBundle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteBundle$VH().set(seg, x);
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteBundle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDescriptorHeaps$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetDescriptorHeaps$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetDescriptorHeaps$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetDescriptorHeaps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetDescriptorHeaps$VH().set(seg, x);
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetDescriptorHeaps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootSignature$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootSignature$VH().set(seg, x);
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootSignature$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootSignature$VH().set(seg, x);
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootDescriptorTable$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootDescriptorTable$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstant$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstant$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstants$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstants$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootConstantBufferView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootConstantBufferView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootShaderResourceView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootShaderResourceView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootUnorderedAccessView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootUnorderedAccessView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetIndexBuffer$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetIndexBuffer$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetIndexBuffer$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetIndexBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetIndexBuffer$VH().set(seg, x);
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetIndexBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetVertexBuffers$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetVertexBuffers$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetVertexBuffers$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetVertexBuffers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetVertexBuffers$VH().set(seg, x);
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$IASetVertexBuffers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SOSetTargets$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SOSetTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SOSetTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SOSetTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SOSetTargets$VH().set(seg, x);
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SOSetTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetRenderTargets$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetRenderTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetRenderTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetRenderTargets$VH().set(seg, x);
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearDepthStencilView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearDepthStencilView$VH().set(seg, x);
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearRenderTargetView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearRenderTargetView$VH().set(seg, x);
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewUint$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewUint$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewUint$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewUint$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewUint$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewUint$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewFloat$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewFloat$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DiscardResource$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DiscardResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DiscardResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DiscardResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DiscardResource$VH().set(seg, x);
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$DiscardResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginQuery$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginQuery$VH().set(seg, x);
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndQuery$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndQuery$VH().set(seg, x);
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveQueryData$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveQueryData$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveQueryData$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveQueryData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveQueryData$VH().set(seg, x);
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveQueryData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPredication$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPredication$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPredication$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPredication$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPredication$VH().set(seg, x);
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetPredication$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMarker$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetMarker$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetMarker$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetMarker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetMarker$VH().set(seg, x);
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetMarker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginEvent$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginEvent$VH().set(seg, x);
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$BeginEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndEvent$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndEvent$VH().set(seg, x);
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$EndEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteIndirect$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteIndirect$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteIndirect$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteIndirect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteIndirect$VH().set(seg, x);
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ExecuteIndirect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT64$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT64$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT64$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT64$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT64$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$AtomicCopyBufferUINT64$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetDepthBounds$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetDepthBounds$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetDepthBounds$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetDepthBounds$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetDepthBounds$VH().set(seg, x);
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$OMSetDepthBounds$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetSamplePositions$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetSamplePositions$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetSamplePositions$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetSamplePositions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetSamplePositions$VH().set(seg, x);
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetSamplePositions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresourceRegion$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresourceRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresourceRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresourceRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresourceRegion$VH().set(seg, x);
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$ResolveSubresourceRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetViewInstanceMask$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetViewInstanceMask$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetViewInstanceMask$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetViewInstanceMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetViewInstanceMask$VH().set(seg, x);
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetViewInstanceMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteBufferImmediate$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$WriteBufferImmediate$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$WriteBufferImmediate$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$WriteBufferImmediate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$WriteBufferImmediate$VH().set(seg, x);
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$WriteBufferImmediate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetProtectedResourceSession$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetProtectedResourceSession$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12ProtectedResourceSession*)") MemoryAddress SetProtectedResourceSession$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetProtectedResourceSession$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12ProtectedResourceSession*)") MemoryAddress SetProtectedResourceSession$get(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProtectedResourceSession$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetProtectedResourceSession$VH().set(seg, x);
        }
        public static void SetProtectedResourceSession$set(@C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList3*,ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3Vtbl$SetProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList3Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList3Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList3Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList3Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList3Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12GraphicsCommandList3 {

        private ID3D12GraphicsCommandList3() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList3$lpVtbl$VH();
        }
        public static  @C("struct ID3D12GraphicsCommandList3Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList3") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12GraphicsCommandList3Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList3") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList3$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList3") MemorySegment seg, @C("struct ID3D12GraphicsCommandList3Vtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList3") MemorySegment seg, long index, @C("struct ID3D12GraphicsCommandList3Vtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList3$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList3") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList3") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList3[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList3[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList3*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList3*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD();
    }
    public static @C("int") int D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE();
    }
    public static @C("int") int D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR();
    }
    public static @C("int") int D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS();
    }
    public static class D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS {

        private D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS$struct$LAYOUT();
        }
        public static MemorySegment ClearValue$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 28));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RENDER_PASS_BEGINNING_ACCESS {

        private D3D12_RENDER_PASS_BEGINNING_ACCESS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS$Type$VH();
        }
        public static  @C("D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE") int Type$get(@C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS$Type$VH().get(seg);
        }
        public static  @C("D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE") int Type$get(@C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS") MemorySegment seg, @C("D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS") MemorySegment seg, long index, @C("D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_BEGINNING_ACCESS$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Clear$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 28));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_PASS_BEGINNING_ACCESS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD();
    }
    public static @C("int") int D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE();
    }
    public static @C("int") int D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE();
    }
    public static @C("int") int D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS();
    }
    public static class D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS {

        private D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$struct$LAYOUT();
        }
        public static VarHandle SrcSubresource$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$SrcSubresource$VH();
        }
        public static  @C("UINT") int SrcSubresource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$SrcSubresource$VH().get(seg);
        }
        public static  @C("UINT") int SrcSubresource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$SrcSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SrcSubresource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$SrcSubresource$VH().set(seg, x);
        }
        public static void SrcSubresource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$SrcSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DstSubresource$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstSubresource$VH();
        }
        public static  @C("UINT") int DstSubresource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstSubresource$VH().get(seg);
        }
        public static  @C("UINT") int DstSubresource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DstSubresource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstSubresource$VH().set(seg, x);
        }
        public static void DstSubresource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DstX$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstX$VH();
        }
        public static  @C("UINT") int DstX$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstX$VH().get(seg);
        }
        public static  @C("UINT") int DstX$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DstX$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstX$VH().set(seg, x);
        }
        public static void DstX$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DstY$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstY$VH();
        }
        public static  @C("UINT") int DstY$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstY$VH().get(seg);
        }
        public static  @C("UINT") int DstY$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DstY$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstY$VH().set(seg, x);
        }
        public static void DstY$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS$DstY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment SrcRect$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 16));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS {

        private D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$struct$LAYOUT();
        }
        public static VarHandle pSrcResource$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSrcResource$VH();
        }
        public static  @C("ID3D12Resource*") MemoryAddress pSrcResource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSrcResource$VH().get(seg);
        }
        public static  @C("ID3D12Resource*") MemoryAddress pSrcResource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSrcResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pSrcResource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSrcResource$VH().set(seg, x);
        }
        public static void pSrcResource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSrcResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pDstResource$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pDstResource$VH();
        }
        public static  @C("ID3D12Resource*") MemoryAddress pDstResource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pDstResource$VH().get(seg);
        }
        public static  @C("ID3D12Resource*") MemoryAddress pDstResource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pDstResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pDstResource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pDstResource$VH().set(seg, x);
        }
        public static void pDstResource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index, @C("ID3D12Resource*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pDstResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SubresourceCount$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$SubresourceCount$VH();
        }
        public static  @C("UINT") int SubresourceCount$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$SubresourceCount$VH().get(seg);
        }
        public static  @C("UINT") int SubresourceCount$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$SubresourceCount$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SubresourceCount$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$SubresourceCount$VH().set(seg, x);
        }
        public static void SubresourceCount$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$SubresourceCount$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pSubresourceParameters$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSubresourceParameters$VH();
        }
        public static  @C("const D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS*") MemoryAddress pSubresourceParameters$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSubresourceParameters$VH().get(seg);
        }
        public static  @C("const D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS*") MemoryAddress pSubresourceParameters$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSubresourceParameters$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pSubresourceParameters$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, @C("const D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSubresourceParameters$VH().set(seg, x);
        }
        public static void pSubresourceParameters$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index, @C("const D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$pSubresourceParameters$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Format$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$Format$VH();
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$Format$VH().get(seg);
        }
        public static  @C("DXGI_FORMAT") int Format$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$Format$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Format$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$Format$VH().set(seg, x);
        }
        public static void Format$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index, @C("DXGI_FORMAT") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$Format$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveMode$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$ResolveMode$VH();
        }
        public static  @C("D3D12_RESOLVE_MODE") int ResolveMode$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$ResolveMode$VH().get(seg);
        }
        public static  @C("D3D12_RESOLVE_MODE") int ResolveMode$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$ResolveMode$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveMode$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, @C("D3D12_RESOLVE_MODE") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$ResolveMode$VH().set(seg, x);
        }
        public static void ResolveMode$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index, @C("D3D12_RESOLVE_MODE") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$ResolveMode$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PreserveResolveSource$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$PreserveResolveSource$VH();
        }
        public static  @C("BOOL") int PreserveResolveSource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$PreserveResolveSource$VH().get(seg);
        }
        public static  @C("BOOL") int PreserveResolveSource$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$PreserveResolveSource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PreserveResolveSource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, @C("BOOL") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$PreserveResolveSource$VH().set(seg, x);
        }
        public static void PreserveResolveSource$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment seg, long index, @C("BOOL") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS$PreserveResolveSource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RENDER_PASS_ENDING_ACCESS {

        private D3D12_RENDER_PASS_ENDING_ACCESS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS$struct$LAYOUT();
        }
        public static VarHandle Type$VH() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS$Type$VH();
        }
        public static  @C("D3D12_RENDER_PASS_ENDING_ACCESS_TYPE") int Type$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS$Type$VH().get(seg);
        }
        public static  @C("D3D12_RENDER_PASS_ENDING_ACCESS_TYPE") int Type$get(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS$Type$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Type$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS") MemorySegment seg, @C("D3D12_RENDER_PASS_ENDING_ACCESS_TYPE") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS$Type$VH().set(seg, x);
        }
        public static void Type$set(@C("struct D3D12_RENDER_PASS_ENDING_ACCESS") MemorySegment seg, long index, @C("D3D12_RENDER_PASS_ENDING_ACCESS_TYPE") int x) {
            d3d12_h$constants$10.D3D12_RENDER_PASS_ENDING_ACCESS$Type$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment Resolve$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 48));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_PASS_ENDING_ACCESS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RENDER_PASS_RENDER_TARGET_DESC {

        private D3D12_RENDER_PASS_RENDER_TARGET_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_RENDER_TARGET_DESC$struct$LAYOUT();
        }
        public static MemorySegment cpuDescriptor$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 8));
        }
        public static MemorySegment BeginningAccess$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 32));
        }
        public static MemorySegment EndingAccess$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 56));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_PASS_RENDER_TARGET_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_RENDER_TARGET_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_RENDER_TARGET_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_PASS_RENDER_TARGET_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_PASS_RENDER_TARGET_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_PASS_RENDER_TARGET_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_RENDER_PASS_DEPTH_STENCIL_DESC {

        private D3D12_RENDER_PASS_DEPTH_STENCIL_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC$struct$LAYOUT();
        }
        public static MemorySegment cpuDescriptor$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 8));
        }
        public static MemorySegment DepthBeginningAccess$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(8, 32));
        }
        public static MemorySegment StencilBeginningAccess$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 32));
        }
        public static MemorySegment DepthEndingAccess$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(72, 56));
        }
        public static MemorySegment StencilEndingAccess$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(128, 56));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static @C("int") int D3D12_RENDER_PASS_FLAG_NONE() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_FLAG_NONE();
    }
    public static @C("int") int D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES();
    }
    public static @C("int") int D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS();
    }
    public static @C("int") int D3D12_RENDER_PASS_FLAG_RESUMING_PASS() {
        return d3d12_h$constants$10.D3D12_RENDER_PASS_FLAG_RESUMING_PASS();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$VH().get(d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$VH().set(d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$VH().get(d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$VH().set(d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0047_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12MetaCommand$SEGMENT() {
        return d3d12_h$constants$10.IID_ID3D12MetaCommand$SEGMENT();
    }
    public static class ID3D12MetaCommandVtbl {

        private ID3D12MetaCommandVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12MetaCommand*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12MetaCommand*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12MetaCommand*)") MemoryAddress AddRef$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12MetaCommand*)") MemoryAddress AddRef$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12MetaCommand*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12MetaCommand*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12MetaCommand*)") MemoryAddress Release$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12MetaCommand*)") MemoryAddress Release$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12MetaCommand*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12MetaCommand*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12MetaCommand*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12MetaCommand*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12MetaCommand*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12MetaCommand*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12MetaCommand*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12MetaCommand*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRequiredParameterResourceSize$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetRequiredParameterResourceSize$VH();
        }
        public static  @C("UINT64(*)(ID3D12MetaCommand*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT)") MemoryAddress GetRequiredParameterResourceSize$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetRequiredParameterResourceSize$VH().get(seg);
        }
        public static  @C("UINT64(*)(ID3D12MetaCommand*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT)") MemoryAddress GetRequiredParameterResourceSize$get(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetRequiredParameterResourceSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRequiredParameterResourceSize$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, @C("UINT64(*)(ID3D12MetaCommand*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetRequiredParameterResourceSize$VH().set(seg, x);
        }
        public static void GetRequiredParameterResourceSize$set(@C("struct ID3D12MetaCommandVtbl") MemorySegment seg, long index, @C("UINT64(*)(ID3D12MetaCommand*,D3D12_META_COMMAND_PARAMETER_STAGE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommandVtbl$GetRequiredParameterResourceSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12MetaCommandVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12MetaCommandVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12MetaCommandVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12MetaCommandVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12MetaCommandVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12MetaCommandVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12MetaCommand {

        private ID3D12MetaCommand() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12MetaCommand$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$10.ID3D12MetaCommand$lpVtbl$VH();
        }
        public static  @C("struct ID3D12MetaCommandVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12MetaCommand") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommand$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12MetaCommandVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12MetaCommand") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12MetaCommand$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12MetaCommand") MemorySegment seg, @C("struct ID3D12MetaCommandVtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommand$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12MetaCommand") MemorySegment seg, long index, @C("struct ID3D12MetaCommandVtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12MetaCommand$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12MetaCommand") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12MetaCommand") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12MetaCommand[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12MetaCommand[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12MetaCommand*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12MetaCommand*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DISPATCH_RAYS_DESC {

        private D3D12_DISPATCH_RAYS_DESC() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$struct$LAYOUT();
        }
        public static MemorySegment RayGenerationShaderRecord$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 16));
        }
        public static MemorySegment MissShaderTable$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(16, 24));
        }
        public static MemorySegment HitGroupTable$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 24));
        }
        public static MemorySegment CallableShaderTable$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 24));
        }
        public static VarHandle Width$VH() {
            return d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Width$VH();
        }
        public static  @C("UINT") int Width$get(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Width$VH().get(seg);
        }
        public static  @C("UINT") int Width$get(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Width$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Width$set(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Width$VH().set(seg, x);
        }
        public static void Width$set(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Width$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Height$VH() {
            return d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Height$VH();
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Height$VH().get(seg);
        }
        public static  @C("UINT") int Height$get(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Height$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Height$set(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Height$VH().set(seg, x);
        }
        public static void Height$set(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Height$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Depth$VH() {
            return d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Depth$VH();
        }
        public static  @C("UINT") int Depth$get(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg) {
            return (int)d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Depth$VH().get(seg);
        }
        public static  @C("UINT") int Depth$get(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Depth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Depth$set(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Depth$VH().set(seg, x);
        }
        public static void Depth$set(@C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$10.D3D12_DISPATCH_RAYS_DESC$Depth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DISPATCH_RAYS_DESC") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DISPATCH_RAYS_DESC[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DISPATCH_RAYS_DESC[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DISPATCH_RAYS_DESC*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DISPATCH_RAYS_DESC*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$VH().get(d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$VH().set(d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$VH().get(d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$VH().set(d3d12_h$constants$10.__MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12GraphicsCommandList4$SEGMENT() {
        return d3d12_h$constants$10.IID_ID3D12GraphicsCommandList4$SEGMENT();
    }
    public static class ID3D12GraphicsCommandList4Vtbl {

        private ID3D12GraphicsCommandList4Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList4*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList4*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList4*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList4*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetType$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList4*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList4*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetType$VH().set(seg, x);
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$GetType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Close$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Close$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Close$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Close$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Close$VH().set(seg, x);
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Close$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList4*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList4*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearState$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearState$VH().set(seg, x);
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawInstanced$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawInstanced$VH().set(seg, x);
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawIndexedInstanced$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawIndexedInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawIndexedInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawIndexedInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawIndexedInstanced$VH().set(seg, x);
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DrawIndexedInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Dispatch$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Dispatch$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Dispatch$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Dispatch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Dispatch$VH().set(seg, x);
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$Dispatch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyBufferRegion$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyBufferRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyBufferRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyBufferRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyBufferRegion$VH().set(seg, x);
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyBufferRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTextureRegion$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTextureRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTextureRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTextureRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTextureRegion$VH().set(seg, x);
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTextureRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyResource$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyResource$VH().set(seg, x);
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTiles$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTiles$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTiles$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTiles$VH().set(seg, x);
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresource$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresource$VH().set(seg, x);
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetPrimitiveTopology$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetPrimitiveTopology$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetPrimitiveTopology$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetPrimitiveTopology$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetPrimitiveTopology$VH().set(seg, x);
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetPrimitiveTopology$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetViewports$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetViewports$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetViewports$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetViewports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetViewports$VH().set(seg, x);
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetViewports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetScissorRects$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetScissorRects$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetScissorRects$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetScissorRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetScissorRects$VH().set(seg, x);
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$RSSetScissorRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetBlendFactor$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetBlendFactor$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetBlendFactor$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetBlendFactor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetBlendFactor$VH().set(seg, x);
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetBlendFactor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetStencilRef$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetStencilRef$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetStencilRef$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetStencilRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetStencilRef$VH().set(seg, x);
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetStencilRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState$VH().set(seg, x);
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceBarrier$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResourceBarrier$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResourceBarrier$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResourceBarrier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResourceBarrier$VH().set(seg, x);
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResourceBarrier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteBundle$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteBundle$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteBundle$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteBundle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteBundle$VH().set(seg, x);
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteBundle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDescriptorHeaps$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetDescriptorHeaps$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetDescriptorHeaps$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetDescriptorHeaps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetDescriptorHeaps$VH().set(seg, x);
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetDescriptorHeaps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootSignature$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootSignature$VH().set(seg, x);
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootSignature$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootSignature$VH().set(seg, x);
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootDescriptorTable$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootDescriptorTable$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstant$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstant$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstants$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstants$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootConstantBufferView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootConstantBufferView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootShaderResourceView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootShaderResourceView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootUnorderedAccessView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootUnorderedAccessView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetIndexBuffer$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetIndexBuffer$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetIndexBuffer$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetIndexBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetIndexBuffer$VH().set(seg, x);
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetIndexBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetVertexBuffers$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetVertexBuffers$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetVertexBuffers$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetVertexBuffers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetVertexBuffers$VH().set(seg, x);
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$IASetVertexBuffers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SOSetTargets$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SOSetTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SOSetTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SOSetTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SOSetTargets$VH().set(seg, x);
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SOSetTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetRenderTargets$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetRenderTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetRenderTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetRenderTargets$VH().set(seg, x);
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearDepthStencilView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearDepthStencilView$VH().set(seg, x);
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearRenderTargetView$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearRenderTargetView$VH().set(seg, x);
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewUint$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewUint$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewUint$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewUint$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewUint$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewUint$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewFloat$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewFloat$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DiscardResource$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DiscardResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DiscardResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DiscardResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DiscardResource$VH().set(seg, x);
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DiscardResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginQuery$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginQuery$VH().set(seg, x);
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndQuery$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndQuery$VH().set(seg, x);
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveQueryData$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveQueryData$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveQueryData$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveQueryData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveQueryData$VH().set(seg, x);
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveQueryData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPredication$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPredication$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPredication$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPredication$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPredication$VH().set(seg, x);
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPredication$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMarker$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetMarker$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetMarker$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetMarker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetMarker$VH().set(seg, x);
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetMarker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginEvent$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginEvent$VH().set(seg, x);
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndEvent$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndEvent$VH().set(seg, x);
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteIndirect$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteIndirect$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteIndirect$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteIndirect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteIndirect$VH().set(seg, x);
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteIndirect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT64$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT64$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT64$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT64$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT64$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$AtomicCopyBufferUINT64$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetDepthBounds$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetDepthBounds$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetDepthBounds$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetDepthBounds$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetDepthBounds$VH().set(seg, x);
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$OMSetDepthBounds$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetSamplePositions$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetSamplePositions$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetSamplePositions$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetSamplePositions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetSamplePositions$VH().set(seg, x);
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetSamplePositions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresourceRegion$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresourceRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresourceRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresourceRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresourceRegion$VH().set(seg, x);
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ResolveSubresourceRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetViewInstanceMask$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetViewInstanceMask$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetViewInstanceMask$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetViewInstanceMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetViewInstanceMask$VH().set(seg, x);
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetViewInstanceMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteBufferImmediate$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$WriteBufferImmediate$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$WriteBufferImmediate$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$WriteBufferImmediate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$WriteBufferImmediate$VH().set(seg, x);
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$WriteBufferImmediate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetProtectedResourceSession$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetProtectedResourceSession$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12ProtectedResourceSession*)") MemoryAddress SetProtectedResourceSession$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetProtectedResourceSession$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12ProtectedResourceSession*)") MemoryAddress SetProtectedResourceSession$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProtectedResourceSession$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetProtectedResourceSession$VH().set(seg, x);
        }
        public static void SetProtectedResourceSession$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginRenderPass$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginRenderPass$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress BeginRenderPass$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginRenderPass$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress BeginRenderPass$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginRenderPass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginRenderPass$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginRenderPass$VH().set(seg, x);
        }
        public static void BeginRenderPass$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BeginRenderPass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndRenderPass$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndRenderPass$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*)") MemoryAddress EndRenderPass$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndRenderPass$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*)") MemoryAddress EndRenderPass$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndRenderPass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndRenderPass$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndRenderPass$VH().set(seg, x);
        }
        public static void EndRenderPass$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EndRenderPass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InitializeMetaCommand$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$InitializeMetaCommand$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress InitializeMetaCommand$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$InitializeMetaCommand$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress InitializeMetaCommand$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$InitializeMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InitializeMetaCommand$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$InitializeMetaCommand$VH().set(seg, x);
        }
        public static void InitializeMetaCommand$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$InitializeMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteMetaCommand$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteMetaCommand$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress ExecuteMetaCommand$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteMetaCommand$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress ExecuteMetaCommand$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteMetaCommand$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteMetaCommand$VH().set(seg, x);
        }
        public static void ExecuteMetaCommand$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$ExecuteMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BuildRaytracingAccelerationStructure$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BuildRaytracingAccelerationStructure$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress BuildRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BuildRaytracingAccelerationStructure$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress BuildRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BuildRaytracingAccelerationStructure$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BuildRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BuildRaytracingAccelerationStructure$VH().set(seg, x);
        }
        public static void BuildRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$BuildRaytracingAccelerationStructure$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EmitRaytracingAccelerationStructurePostbuildInfo$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress EmitRaytracingAccelerationStructurePostbuildInfo$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress EmitRaytracingAccelerationStructurePostbuildInfo$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EmitRaytracingAccelerationStructurePostbuildInfo$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().set(seg, x);
        }
        public static void EmitRaytracingAccelerationStructurePostbuildInfo$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyRaytracingAccelerationStructure$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyRaytracingAccelerationStructure$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress CopyRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyRaytracingAccelerationStructure$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress CopyRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyRaytracingAccelerationStructure$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyRaytracingAccelerationStructure$VH().set(seg, x);
        }
        public static void CopyRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$CopyRaytracingAccelerationStructure$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState1$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState1$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12StateObject*)") MemoryAddress SetPipelineState1$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState1$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12StateObject*)") MemoryAddress SetPipelineState1$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState1$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState1$VH().set(seg, x);
        }
        public static void SetPipelineState1$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$SetPipelineState1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DispatchRays$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DispatchRays$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress DispatchRays$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DispatchRays$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress DispatchRays$get(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DispatchRays$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DispatchRays$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DispatchRays$VH().set(seg, x);
        }
        public static void DispatchRays$set(@C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList4*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4Vtbl$DispatchRays$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList4Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList4Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList4Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList4Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList4Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12GraphicsCommandList4 {

        private ID3D12GraphicsCommandList4() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$10.ID3D12GraphicsCommandList4$lpVtbl$VH();
        }
        public static  @C("struct ID3D12GraphicsCommandList4Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList4") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12GraphicsCommandList4Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList4") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12GraphicsCommandList4$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList4") MemorySegment seg, @C("struct ID3D12GraphicsCommandList4Vtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList4") MemorySegment seg, long index, @C("struct ID3D12GraphicsCommandList4Vtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12GraphicsCommandList4$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList4") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList4") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList4[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList4[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList4*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList4*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemorySegment IID_ID3D12Tools$SEGMENT() {
        return d3d12_h$constants$10.IID_ID3D12Tools$SEGMENT();
    }
    public static class ID3D12ToolsVtbl {

        private ID3D12ToolsVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12ToolsVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$10.ID3D12ToolsVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12Tools*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12Tools*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12Tools*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12Tools*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$10.ID3D12ToolsVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12Tools*)") MemoryAddress AddRef$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Tools*)") MemoryAddress AddRef$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Tools*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Tools*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$10.ID3D12ToolsVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12Tools*)") MemoryAddress Release$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12Tools*)") MemoryAddress Release$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, @C("ULONG(*)(ID3D12Tools*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12Tools*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnableShaderInstrumentation$VH() {
            return d3d12_h$constants$10.ID3D12ToolsVtbl$EnableShaderInstrumentation$VH();
        }
        public static  @C("void(*)(ID3D12Tools*,BOOL)") MemoryAddress EnableShaderInstrumentation$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$EnableShaderInstrumentation$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12Tools*,BOOL)") MemoryAddress EnableShaderInstrumentation$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$EnableShaderInstrumentation$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnableShaderInstrumentation$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, @C("void(*)(ID3D12Tools*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$EnableShaderInstrumentation$VH().set(seg, x);
        }
        public static void EnableShaderInstrumentation$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index, @C("void(*)(ID3D12Tools*,BOOL)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$EnableShaderInstrumentation$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ShaderInstrumentationEnabled$VH() {
            return d3d12_h$constants$10.ID3D12ToolsVtbl$ShaderInstrumentationEnabled$VH();
        }
        public static  @C("BOOL(*)(ID3D12Tools*)") MemoryAddress ShaderInstrumentationEnabled$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$ShaderInstrumentationEnabled$VH().get(seg);
        }
        public static  @C("BOOL(*)(ID3D12Tools*)") MemoryAddress ShaderInstrumentationEnabled$get(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12ToolsVtbl$ShaderInstrumentationEnabled$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShaderInstrumentationEnabled$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, @C("BOOL(*)(ID3D12Tools*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$ShaderInstrumentationEnabled$VH().set(seg, x);
        }
        public static void ShaderInstrumentationEnabled$set(@C("struct ID3D12ToolsVtbl") MemorySegment seg, long index, @C("BOOL(*)(ID3D12Tools*)") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12ToolsVtbl$ShaderInstrumentationEnabled$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12ToolsVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12ToolsVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12ToolsVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12ToolsVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12ToolsVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12ToolsVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12Tools {

        private ID3D12Tools() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.ID3D12Tools$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$10.ID3D12Tools$lpVtbl$VH();
        }
        public static  @C("struct ID3D12ToolsVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Tools") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12Tools$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12ToolsVtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12Tools") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.ID3D12Tools$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12Tools") MemorySegment seg, @C("struct ID3D12ToolsVtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12Tools$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12Tools") MemorySegment seg, long index, @C("struct ID3D12ToolsVtbl*") MemoryAddress x) {
            d3d12_h$constants$10.ID3D12Tools$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12Tools") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12Tools") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12Tools[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12Tools[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12Tools*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12Tools*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_SUBRESOURCE_DATA {

        private D3D12_SUBRESOURCE_DATA() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$struct$LAYOUT();
        }
        public static VarHandle pData$VH() {
            return d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$pData$VH();
        }
        public static  @C("void*") MemoryAddress pData$get(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$pData$VH().get(seg);
        }
        public static  @C("void*") MemoryAddress pData$get(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$pData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pData$set(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, @C("void*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$pData$VH().set(seg, x);
        }
        public static void pData$set(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, long index, @C("void*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$pData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RowPitch$VH() {
            return d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$RowPitch$VH();
        }
        public static  @C("LONG_PTR") long RowPitch$get(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg) {
            return (long)d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$RowPitch$VH().get(seg);
        }
        public static  @C("LONG_PTR") long RowPitch$get(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$RowPitch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RowPitch$set(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, @C("LONG_PTR") long x) {
            d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$RowPitch$VH().set(seg, x);
        }
        public static void RowPitch$set(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, long index, @C("LONG_PTR") long x) {
            d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$RowPitch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SlicePitch$VH() {
            return d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$SlicePitch$VH();
        }
        public static  @C("LONG_PTR") long SlicePitch$get(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg) {
            return (long)d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$SlicePitch$VH().get(seg);
        }
        public static  @C("LONG_PTR") long SlicePitch$get(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$SlicePitch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SlicePitch$set(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, @C("LONG_PTR") long x) {
            d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$SlicePitch$VH().set(seg, x);
        }
        public static void SlicePitch$set(@C("struct D3D12_SUBRESOURCE_DATA") MemorySegment seg, long index, @C("LONG_PTR") long x) {
            d3d12_h$constants$10.D3D12_SUBRESOURCE_DATA$SlicePitch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_SUBRESOURCE_DATA") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_DATA") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_SUBRESOURCE_DATA[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_SUBRESOURCE_DATA[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_SUBRESOURCE_DATA*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_SUBRESOURCE_DATA*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_MEMCPY_DEST {

        private D3D12_MEMCPY_DEST() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$10.D3D12_MEMCPY_DEST$struct$LAYOUT();
        }
        public static VarHandle pData$VH() {
            return d3d12_h$constants$10.D3D12_MEMCPY_DEST$pData$VH();
        }
        public static  @C("void*") MemoryAddress pData$get(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_MEMCPY_DEST$pData$VH().get(seg);
        }
        public static  @C("void*") MemoryAddress pData$get(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$10.D3D12_MEMCPY_DEST$pData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pData$set(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, @C("void*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_MEMCPY_DEST$pData$VH().set(seg, x);
        }
        public static void pData$set(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, long index, @C("void*") MemoryAddress x) {
            d3d12_h$constants$10.D3D12_MEMCPY_DEST$pData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RowPitch$VH() {
            return d3d12_h$constants$10.D3D12_MEMCPY_DEST$RowPitch$VH();
        }
        public static  @C("SIZE_T") long RowPitch$get(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg) {
            return (long)d3d12_h$constants$10.D3D12_MEMCPY_DEST$RowPitch$VH().get(seg);
        }
        public static  @C("SIZE_T") long RowPitch$get(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$10.D3D12_MEMCPY_DEST$RowPitch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RowPitch$set(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$10.D3D12_MEMCPY_DEST$RowPitch$VH().set(seg, x);
        }
        public static void RowPitch$set(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$10.D3D12_MEMCPY_DEST$RowPitch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SlicePitch$VH() {
            return d3d12_h$constants$10.D3D12_MEMCPY_DEST$SlicePitch$VH();
        }
        public static  @C("SIZE_T") long SlicePitch$get(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg) {
            return (long)d3d12_h$constants$10.D3D12_MEMCPY_DEST$SlicePitch$VH().get(seg);
        }
        public static  @C("SIZE_T") long SlicePitch$get(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, long index) {
            return (long)d3d12_h$constants$10.D3D12_MEMCPY_DEST$SlicePitch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SlicePitch$set(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, @C("SIZE_T") long x) {
            d3d12_h$constants$10.D3D12_MEMCPY_DEST$SlicePitch$VH().set(seg, x);
        }
        public static void SlicePitch$set(@C("struct D3D12_MEMCPY_DEST") MemorySegment seg, long index, @C("SIZE_T") long x) {
            d3d12_h$constants$10.D3D12_MEMCPY_DEST$SlicePitch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_MEMCPY_DEST") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_MEMCPY_DEST") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_MEMCPY_DEST[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_MEMCPY_DEST[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_MEMCPY_DEST*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_MEMCPY_DEST*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MethodHandle D3D12CreateDevice$MH() {
        return d3d12_h$constants$10.D3D12CreateDevice$MH();
    }
    public static @C("HRESULT") int D3D12CreateDevice (@C("IUnknown*") Addressable pAdapter, @C("D3D_FEATURE_LEVEL") int MinimumFeatureLevel, @C("const IID*") Addressable riid, @C("void**") Addressable ppDevice) {
        try {
            return (int)d3d12_h$constants$10.D3D12CreateDevice$MH().invokeExact(pAdapter.address(), MinimumFeatureLevel, riid.address(), ppDevice.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle D3D12GetDebugInterface$MH() {
        return d3d12_h$constants$10.D3D12GetDebugInterface$MH();
    }
    public static @C("HRESULT") int D3D12GetDebugInterface (@C("const IID*") Addressable riid, @C("void**") Addressable ppvDebug) {
        try {
            return (int)d3d12_h$constants$10.D3D12GetDebugInterface$MH().invokeExact(riid.address(), ppvDebug.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle D3D12EnableExperimentalFeatures$MH() {
        return d3d12_h$constants$11.D3D12EnableExperimentalFeatures$MH();
    }
    public static @C("HRESULT") int D3D12EnableExperimentalFeatures (@C("UINT") int NumFeatures, @C("const IID*") Addressable pIIDs, @C("void*") Addressable pConfigurationStructs, @C("UINT*") Addressable pConfigurationStructSizes) {
        try {
            return (int)d3d12_h$constants$11.D3D12EnableExperimentalFeatures$MH().invokeExact(NumFeatures, pIIDs.address(), pConfigurationStructs.address(), pConfigurationStructSizes.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MemorySegment D3D12ExperimentalShaderModels$SEGMENT() {
        return d3d12_h$constants$11.D3D12ExperimentalShaderModels$SEGMENT();
    }
    public static  MemorySegment D3D12TiledResourceTier4$SEGMENT() {
        return d3d12_h$constants$11.D3D12TiledResourceTier4$SEGMENT();
    }
    public static  MemorySegment D3D12MetaCommand$SEGMENT() {
        return d3d12_h$constants$11.D3D12MetaCommand$SEGMENT();
    }
    public static @C("int") int D3D12_AXIS_SHADING_RATE_1X() {
        return d3d12_h$constants$11.D3D12_AXIS_SHADING_RATE_1X();
    }
    public static @C("int") int D3D12_AXIS_SHADING_RATE_2X() {
        return d3d12_h$constants$11.D3D12_AXIS_SHADING_RATE_2X();
    }
    public static @C("int") int D3D12_AXIS_SHADING_RATE_4X() {
        return d3d12_h$constants$11.D3D12_AXIS_SHADING_RATE_4X();
    }
    public static @C("int") int D3D12_SHADING_RATE_1X1() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_1X1();
    }
    public static @C("int") int D3D12_SHADING_RATE_1X2() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_1X2();
    }
    public static @C("int") int D3D12_SHADING_RATE_2X1() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_2X1();
    }
    public static @C("int") int D3D12_SHADING_RATE_2X2() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_2X2();
    }
    public static @C("int") int D3D12_SHADING_RATE_2X4() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_2X4();
    }
    public static @C("int") int D3D12_SHADING_RATE_4X2() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_4X2();
    }
    public static @C("int") int D3D12_SHADING_RATE_4X4() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_4X4();
    }
    public static @C("int") int D3D12_SHADING_RATE_COMBINER_PASSTHROUGH() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_COMBINER_PASSTHROUGH();
    }
    public static @C("int") int D3D12_SHADING_RATE_COMBINER_OVERRIDE() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_COMBINER_OVERRIDE();
    }
    public static @C("int") int D3D12_SHADING_RATE_COMBINER_MIN() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_COMBINER_MIN();
    }
    public static @C("int") int D3D12_SHADING_RATE_COMBINER_MAX() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_COMBINER_MAX();
    }
    public static @C("int") int D3D12_SHADING_RATE_COMBINER_SUM() {
        return d3d12_h$constants$11.D3D12_SHADING_RATE_COMBINER_SUM();
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$VH().get(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$VH().set(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$VH().get(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$VH().set(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12GraphicsCommandList5$SEGMENT() {
        return d3d12_h$constants$11.IID_ID3D12GraphicsCommandList5$SEGMENT();
    }
    public static class ID3D12GraphicsCommandList5Vtbl {

        private ID3D12GraphicsCommandList5Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList5*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList5*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList5*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList5*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetType$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList5*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList5*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetType$VH().set(seg, x);
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$GetType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Close$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Close$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Close$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Close$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Close$VH().set(seg, x);
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Close$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList5*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList5*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearState$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearState$VH().set(seg, x);
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawInstanced$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawInstanced$VH().set(seg, x);
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawIndexedInstanced$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawIndexedInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawIndexedInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawIndexedInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawIndexedInstanced$VH().set(seg, x);
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DrawIndexedInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Dispatch$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Dispatch$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Dispatch$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Dispatch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Dispatch$VH().set(seg, x);
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$Dispatch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyBufferRegion$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyBufferRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyBufferRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyBufferRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyBufferRegion$VH().set(seg, x);
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyBufferRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTextureRegion$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTextureRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTextureRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTextureRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTextureRegion$VH().set(seg, x);
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTextureRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyResource$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyResource$VH().set(seg, x);
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTiles$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTiles$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTiles$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTiles$VH().set(seg, x);
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresource$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresource$VH().set(seg, x);
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetPrimitiveTopology$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetPrimitiveTopology$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetPrimitiveTopology$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetPrimitiveTopology$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetPrimitiveTopology$VH().set(seg, x);
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetPrimitiveTopology$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetViewports$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetViewports$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetViewports$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetViewports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetViewports$VH().set(seg, x);
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetViewports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetScissorRects$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetScissorRects$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetScissorRects$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetScissorRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetScissorRects$VH().set(seg, x);
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetScissorRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetBlendFactor$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetBlendFactor$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetBlendFactor$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetBlendFactor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetBlendFactor$VH().set(seg, x);
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetBlendFactor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetStencilRef$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetStencilRef$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetStencilRef$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetStencilRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetStencilRef$VH().set(seg, x);
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetStencilRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState$VH().set(seg, x);
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceBarrier$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResourceBarrier$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResourceBarrier$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResourceBarrier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResourceBarrier$VH().set(seg, x);
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResourceBarrier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteBundle$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteBundle$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteBundle$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteBundle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteBundle$VH().set(seg, x);
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteBundle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDescriptorHeaps$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetDescriptorHeaps$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetDescriptorHeaps$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetDescriptorHeaps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetDescriptorHeaps$VH().set(seg, x);
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetDescriptorHeaps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootSignature$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootSignature$VH().set(seg, x);
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootSignature$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootSignature$VH().set(seg, x);
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootDescriptorTable$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootDescriptorTable$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstant$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstant$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstants$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstants$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootConstantBufferView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootConstantBufferView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootShaderResourceView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootShaderResourceView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootUnorderedAccessView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootUnorderedAccessView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetIndexBuffer$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetIndexBuffer$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetIndexBuffer$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetIndexBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetIndexBuffer$VH().set(seg, x);
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetIndexBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetVertexBuffers$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetVertexBuffers$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetVertexBuffers$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetVertexBuffers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetVertexBuffers$VH().set(seg, x);
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$IASetVertexBuffers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SOSetTargets$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SOSetTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SOSetTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SOSetTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SOSetTargets$VH().set(seg, x);
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SOSetTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetRenderTargets$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetRenderTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetRenderTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetRenderTargets$VH().set(seg, x);
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearDepthStencilView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearDepthStencilView$VH().set(seg, x);
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearRenderTargetView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearRenderTargetView$VH().set(seg, x);
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewUint$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewUint$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewUint$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewUint$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewUint$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewUint$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewFloat$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewFloat$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DiscardResource$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DiscardResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DiscardResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DiscardResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DiscardResource$VH().set(seg, x);
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DiscardResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginQuery$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginQuery$VH().set(seg, x);
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndQuery$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndQuery$VH().set(seg, x);
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveQueryData$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveQueryData$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveQueryData$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveQueryData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveQueryData$VH().set(seg, x);
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveQueryData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPredication$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPredication$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPredication$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPredication$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPredication$VH().set(seg, x);
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPredication$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMarker$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetMarker$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetMarker$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetMarker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetMarker$VH().set(seg, x);
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetMarker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginEvent$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginEvent$VH().set(seg, x);
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndEvent$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndEvent$VH().set(seg, x);
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteIndirect$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteIndirect$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteIndirect$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteIndirect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteIndirect$VH().set(seg, x);
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteIndirect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT64$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT64$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT64$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT64$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT64$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$AtomicCopyBufferUINT64$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetDepthBounds$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetDepthBounds$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetDepthBounds$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetDepthBounds$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetDepthBounds$VH().set(seg, x);
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$OMSetDepthBounds$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetSamplePositions$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetSamplePositions$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetSamplePositions$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetSamplePositions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetSamplePositions$VH().set(seg, x);
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetSamplePositions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresourceRegion$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresourceRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresourceRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresourceRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresourceRegion$VH().set(seg, x);
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ResolveSubresourceRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetViewInstanceMask$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetViewInstanceMask$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetViewInstanceMask$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetViewInstanceMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetViewInstanceMask$VH().set(seg, x);
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetViewInstanceMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteBufferImmediate$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$WriteBufferImmediate$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$WriteBufferImmediate$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$WriteBufferImmediate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$WriteBufferImmediate$VH().set(seg, x);
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$WriteBufferImmediate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetProtectedResourceSession$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetProtectedResourceSession$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12ProtectedResourceSession*)") MemoryAddress SetProtectedResourceSession$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetProtectedResourceSession$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12ProtectedResourceSession*)") MemoryAddress SetProtectedResourceSession$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProtectedResourceSession$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetProtectedResourceSession$VH().set(seg, x);
        }
        public static void SetProtectedResourceSession$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginRenderPass$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginRenderPass$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress BeginRenderPass$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginRenderPass$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress BeginRenderPass$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginRenderPass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginRenderPass$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginRenderPass$VH().set(seg, x);
        }
        public static void BeginRenderPass$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BeginRenderPass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndRenderPass$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndRenderPass$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*)") MemoryAddress EndRenderPass$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndRenderPass$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*)") MemoryAddress EndRenderPass$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndRenderPass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndRenderPass$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndRenderPass$VH().set(seg, x);
        }
        public static void EndRenderPass$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EndRenderPass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InitializeMetaCommand$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$InitializeMetaCommand$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress InitializeMetaCommand$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$InitializeMetaCommand$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress InitializeMetaCommand$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$InitializeMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InitializeMetaCommand$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$InitializeMetaCommand$VH().set(seg, x);
        }
        public static void InitializeMetaCommand$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$InitializeMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteMetaCommand$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteMetaCommand$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress ExecuteMetaCommand$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteMetaCommand$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress ExecuteMetaCommand$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteMetaCommand$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteMetaCommand$VH().set(seg, x);
        }
        public static void ExecuteMetaCommand$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$ExecuteMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BuildRaytracingAccelerationStructure$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BuildRaytracingAccelerationStructure$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress BuildRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BuildRaytracingAccelerationStructure$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress BuildRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BuildRaytracingAccelerationStructure$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BuildRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BuildRaytracingAccelerationStructure$VH().set(seg, x);
        }
        public static void BuildRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$BuildRaytracingAccelerationStructure$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EmitRaytracingAccelerationStructurePostbuildInfo$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress EmitRaytracingAccelerationStructurePostbuildInfo$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress EmitRaytracingAccelerationStructurePostbuildInfo$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EmitRaytracingAccelerationStructurePostbuildInfo$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().set(seg, x);
        }
        public static void EmitRaytracingAccelerationStructurePostbuildInfo$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyRaytracingAccelerationStructure$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyRaytracingAccelerationStructure$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress CopyRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyRaytracingAccelerationStructure$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress CopyRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyRaytracingAccelerationStructure$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyRaytracingAccelerationStructure$VH().set(seg, x);
        }
        public static void CopyRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$CopyRaytracingAccelerationStructure$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState1$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState1$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12StateObject*)") MemoryAddress SetPipelineState1$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState1$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12StateObject*)") MemoryAddress SetPipelineState1$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState1$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState1$VH().set(seg, x);
        }
        public static void SetPipelineState1$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$SetPipelineState1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DispatchRays$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DispatchRays$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress DispatchRays$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DispatchRays$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress DispatchRays$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DispatchRays$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DispatchRays$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DispatchRays$VH().set(seg, x);
        }
        public static void DispatchRays$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$DispatchRays$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetShadingRate$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRate$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_SHADING_RATE,const D3D12_SHADING_RATE_COMBINER*)") MemoryAddress RSSetShadingRate$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRate$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_SHADING_RATE,const D3D12_SHADING_RATE_COMBINER*)") MemoryAddress RSSetShadingRate$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetShadingRate$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_SHADING_RATE,const D3D12_SHADING_RATE_COMBINER*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRate$VH().set(seg, x);
        }
        public static void RSSetShadingRate$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,D3D12_SHADING_RATE,const D3D12_SHADING_RATE_COMBINER*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetShadingRateImage$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRateImage$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*)") MemoryAddress RSSetShadingRateImage$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRateImage$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*)") MemoryAddress RSSetShadingRateImage$get(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRateImage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetShadingRateImage$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRateImage$VH().set(seg, x);
        }
        public static void RSSetShadingRateImage$set(@C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList5*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5Vtbl$RSSetShadingRateImage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList5Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList5Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList5Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList5Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList5Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12GraphicsCommandList5 {

        private ID3D12GraphicsCommandList5() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList5$lpVtbl$VH();
        }
        public static  @C("struct ID3D12GraphicsCommandList5Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList5") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12GraphicsCommandList5Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList5") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList5$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList5") MemorySegment seg, @C("struct ID3D12GraphicsCommandList5Vtbl*") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList5") MemorySegment seg, long index, @C("struct ID3D12GraphicsCommandList5Vtbl*") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList5$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList5") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList5") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList5[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList5[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList5*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList5*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class D3D12_DISPATCH_MESH_ARGUMENTS {

        private D3D12_DISPATCH_MESH_ARGUMENTS() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$struct$LAYOUT();
        }
        public static VarHandle ThreadGroupCountX$VH() {
            return d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountX$VH();
        }
        public static  @C("UINT") int ThreadGroupCountX$get(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountX$VH().get(seg);
        }
        public static  @C("UINT") int ThreadGroupCountX$get(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountX$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadGroupCountX$set(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountX$VH().set(seg, x);
        }
        public static void ThreadGroupCountX$set(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountX$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ThreadGroupCountY$VH() {
            return d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountY$VH();
        }
        public static  @C("UINT") int ThreadGroupCountY$get(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountY$VH().get(seg);
        }
        public static  @C("UINT") int ThreadGroupCountY$get(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountY$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadGroupCountY$set(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountY$VH().set(seg, x);
        }
        public static void ThreadGroupCountY$set(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountY$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ThreadGroupCountZ$VH() {
            return d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountZ$VH();
        }
        public static  @C("UINT") int ThreadGroupCountZ$get(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg) {
            return (int)d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountZ$VH().get(seg);
        }
        public static  @C("UINT") int ThreadGroupCountZ$get(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, long index) {
            return (int)d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountZ$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadGroupCountZ$set(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, @C("UINT") int x) {
            d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountZ$VH().set(seg, x);
        }
        public static void ThreadGroupCountZ$set(@C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment seg, long index, @C("UINT") int x) {
            d3d12_h$constants$11.D3D12_DISPATCH_MESH_ARGUMENTS$ThreadGroupCountZ$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct D3D12_DISPATCH_MESH_ARGUMENTS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct D3D12_DISPATCH_MESH_ARGUMENTS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct D3D12_DISPATCH_MESH_ARGUMENTS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct D3D12_DISPATCH_MESH_ARGUMENTS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct D3D12_DISPATCH_MESH_ARGUMENTS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$VH().get(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$VH().set(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$VH().get(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$VH().set(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ID3D12GraphicsCommandList6$SEGMENT() {
        return d3d12_h$constants$11.IID_ID3D12GraphicsCommandList6$SEGMENT();
    }
    public static class ID3D12GraphicsCommandList6Vtbl {

        private ID3D12GraphicsCommandList6Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList6*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList6*)") MemoryAddress AddRef$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList6*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ID3D12GraphicsCommandList6*)") MemoryAddress Release$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("ULONG(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPrivateData$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,UINT*,void*)") MemoryAddress GetPrivateData$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetPrivateData$VH().set(seg, x);
        }
        public static void GetPrivateData$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,UINT*,void*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateData$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateData$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateData$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,UINT,void*)") MemoryAddress SetPrivateData$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateData$VH().set(seg, x);
        }
        public static void SetPrivateData$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,UINT,void*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPrivateDataInterface$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateDataInterface$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateDataInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,const IUnknown*)") MemoryAddress SetPrivateDataInterface$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateDataInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateDataInterface$VH().set(seg, x);
        }
        public static void SetPrivateDataInterface$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const GUID*,const IUnknown*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPrivateDataInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetName$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetName$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,LPCWSTR)") MemoryAddress SetName$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetName$VH().set(seg, x);
        }
        public static void SetName$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,LPCWSTR)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDevice$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetDevice$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetDevice$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const IID*,void**)") MemoryAddress GetDevice$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetDevice$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetDevice$VH().set(seg, x);
        }
        public static void GetDevice$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,const IID*,void**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetDevice$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetType$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetType$VH();
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList6*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetType$VH().get(seg);
        }
        public static  @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList6*)") MemoryAddress GetType$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetType$VH().set(seg, x);
        }
        public static void GetType$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("D3D12_COMMAND_LIST_TYPE(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$GetType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Close$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Close$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Close$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*)") MemoryAddress Close$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Close$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Close$VH().set(seg, x);
        }
        public static void Close$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Close$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ID3D12GraphicsCommandList6*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress Reset$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ID3D12GraphicsCommandList6*,ID3D12CommandAllocator*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearState$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12PipelineState*)") MemoryAddress ClearState$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearState$VH().set(seg, x);
        }
        public static void ClearState$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawInstanced$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT,UINT)") MemoryAddress DrawInstanced$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawInstanced$VH().set(seg, x);
        }
        public static void DrawInstanced$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DrawIndexedInstanced$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawIndexedInstanced$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawIndexedInstanced$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT,INT,UINT)") MemoryAddress DrawIndexedInstanced$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawIndexedInstanced$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawIndexedInstanced$VH().set(seg, x);
        }
        public static void DrawIndexedInstanced$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT,INT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DrawIndexedInstanced$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Dispatch$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Dispatch$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Dispatch$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress Dispatch$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Dispatch$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Dispatch$VH().set(seg, x);
        }
        public static void Dispatch$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$Dispatch$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyBufferRegion$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyBufferRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyBufferRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress CopyBufferRegion$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyBufferRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyBufferRegion$VH().set(seg, x);
        }
        public static void CopyBufferRegion$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyBufferRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTextureRegion$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTextureRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTextureRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress CopyTextureRegion$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTextureRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTextureRegion$VH().set(seg, x);
        }
        public static void CopyTextureRegion$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_TEXTURE_COPY_LOCATION*,UINT,UINT,UINT,const D3D12_TEXTURE_COPY_LOCATION*,const D3D12_BOX*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTextureRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyResource$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress CopyResource$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyResource$VH().set(seg, x);
        }
        public static void CopyResource$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyTiles$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTiles$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTiles$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress CopyTiles$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTiles$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTiles$VH().set(seg, x);
        }
        public static void CopyTiles$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,const D3D12_TILED_RESOURCE_COORDINATE*,const D3D12_TILE_REGION_SIZE*,ID3D12Resource*,UINT64,D3D12_TILE_COPY_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyTiles$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresource$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress ResolveSubresource$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresource$VH().set(seg, x);
        }
        public static void ResolveSubresource$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT,ID3D12Resource*,UINT,DXGI_FORMAT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetPrimitiveTopology$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetPrimitiveTopology$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetPrimitiveTopology$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress IASetPrimitiveTopology$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetPrimitiveTopology$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetPrimitiveTopology$VH().set(seg, x);
        }
        public static void IASetPrimitiveTopology$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_PRIMITIVE_TOPOLOGY)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetPrimitiveTopology$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetViewports$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetViewports$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetViewports$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_VIEWPORT*)") MemoryAddress RSSetViewports$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetViewports$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetViewports$VH().set(seg, x);
        }
        public static void RSSetViewports$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_VIEWPORT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetViewports$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetScissorRects$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetScissorRects$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetScissorRects$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RECT*)") MemoryAddress RSSetScissorRects$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetScissorRects$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetScissorRects$VH().set(seg, x);
        }
        public static void RSSetScissorRects$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetScissorRects$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetBlendFactor$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetBlendFactor$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetBlendFactor$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const FLOAT*)") MemoryAddress OMSetBlendFactor$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetBlendFactor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetBlendFactor$VH().set(seg, x);
        }
        public static void OMSetBlendFactor$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,const FLOAT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetBlendFactor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetStencilRef$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetStencilRef$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetStencilRef$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT)") MemoryAddress OMSetStencilRef$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetStencilRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetStencilRef$VH().set(seg, x);
        }
        public static void OMSetStencilRef$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetStencilRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12PipelineState*)") MemoryAddress SetPipelineState$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState$VH().set(seg, x);
        }
        public static void SetPipelineState$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12PipelineState*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResourceBarrier$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResourceBarrier$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResourceBarrier$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress ResourceBarrier$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResourceBarrier$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResourceBarrier$VH().set(seg, x);
        }
        public static void ResourceBarrier$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RESOURCE_BARRIER*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResourceBarrier$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteBundle$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteBundle$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteBundle$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12GraphicsCommandList*)") MemoryAddress ExecuteBundle$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteBundle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteBundle$VH().set(seg, x);
        }
        public static void ExecuteBundle$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12GraphicsCommandList*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteBundle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDescriptorHeaps$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetDescriptorHeaps$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetDescriptorHeaps$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,ID3D12DescriptorHeap**)") MemoryAddress SetDescriptorHeaps$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetDescriptorHeaps$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetDescriptorHeaps$VH().set(seg, x);
        }
        public static void SetDescriptorHeaps$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,ID3D12DescriptorHeap**)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetDescriptorHeaps$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootSignature$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12RootSignature*)") MemoryAddress SetComputeRootSignature$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootSignature$VH().set(seg, x);
        }
        public static void SetComputeRootSignature$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootSignature$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootSignature$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootSignature$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12RootSignature*)") MemoryAddress SetGraphicsRootSignature$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootSignature$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootSignature$VH().set(seg, x);
        }
        public static void SetGraphicsRootSignature$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12RootSignature*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootSignature$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootDescriptorTable$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetComputeRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetComputeRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootDescriptorTable$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootDescriptorTable$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress SetGraphicsRootDescriptorTable$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootDescriptorTable$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg, x);
        }
        public static void SetGraphicsRootDescriptorTable$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_DESCRIPTOR_HANDLE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootDescriptorTable$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstant$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress SetComputeRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstant$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstant$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress SetGraphicsRoot32BitConstant$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstant$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstant$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstant$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRoot32BitConstants$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,void*,UINT)") MemoryAddress SetComputeRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetComputeRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRoot32BitConstants$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstants$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,void*,UINT)") MemoryAddress SetGraphicsRoot32BitConstants$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstants$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg, x);
        }
        public static void SetGraphicsRoot32BitConstants$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRoot32BitConstants$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootConstantBufferView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetComputeRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootConstantBufferView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootConstantBufferView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootConstantBufferView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootConstantBufferView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg, x);
        }
        public static void SetGraphicsRootConstantBufferView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootConstantBufferView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootShaderResourceView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetComputeRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootShaderResourceView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootShaderResourceView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootShaderResourceView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootShaderResourceView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg, x);
        }
        public static void SetGraphicsRootShaderResourceView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootShaderResourceView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetComputeRootUnorderedAccessView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetComputeRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetComputeRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetComputeRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetGraphicsRootUnorderedAccessView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootUnorderedAccessView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress SetGraphicsRootUnorderedAccessView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootUnorderedAccessView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg, x);
        }
        public static void SetGraphicsRootUnorderedAccessView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,D3D12_GPU_VIRTUAL_ADDRESS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetGraphicsRootUnorderedAccessView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetIndexBuffer$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetIndexBuffer$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetIndexBuffer$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress IASetIndexBuffer$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetIndexBuffer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetIndexBuffer$VH().set(seg, x);
        }
        public static void IASetIndexBuffer$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_INDEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetIndexBuffer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IASetVertexBuffers$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetVertexBuffers$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetVertexBuffers$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress IASetVertexBuffers$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetVertexBuffers$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetVertexBuffers$VH().set(seg, x);
        }
        public static void IASetVertexBuffers$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,const D3D12_VERTEX_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$IASetVertexBuffers$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SOSetTargets$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SOSetTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SOSetTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress SOSetTargets$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SOSetTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SOSetTargets$VH().set(seg, x);
        }
        public static void SOSetTargets$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,const D3D12_STREAM_OUTPUT_BUFFER_VIEW*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SOSetTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetRenderTargets$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetRenderTargets$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetRenderTargets$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress OMSetRenderTargets$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetRenderTargets$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetRenderTargets$VH().set(seg, x);
        }
        public static void OMSetRenderTargets$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_CPU_DESCRIPTOR_HANDLE*,BOOL,const D3D12_CPU_DESCRIPTOR_HANDLE*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetRenderTargets$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearDepthStencilView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearDepthStencilView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearDepthStencilView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress ClearDepthStencilView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearDepthStencilView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearDepthStencilView$VH().set(seg, x);
        }
        public static void ClearDepthStencilView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_CPU_DESCRIPTOR_HANDLE,D3D12_CLEAR_FLAGS,FLOAT,UINT8,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearDepthStencilView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearRenderTargetView$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearRenderTargetView$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearRenderTargetView$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearRenderTargetView$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearRenderTargetView$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearRenderTargetView$VH().set(seg, x);
        }
        public static void ClearRenderTargetView$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_CPU_DESCRIPTOR_HANDLE,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearRenderTargetView$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewUint$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewUint$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewUint$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewUint$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewUint$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewUint$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewUint$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const UINT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewUint$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ClearUnorderedAccessViewFloat$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewFloat$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress ClearUnorderedAccessViewFloat$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewFloat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg, x);
        }
        public static void ClearUnorderedAccessViewFloat$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_DESCRIPTOR_HANDLE,D3D12_CPU_DESCRIPTOR_HANDLE,ID3D12Resource*,const FLOAT*,UINT,const D3D12_RECT*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ClearUnorderedAccessViewFloat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DiscardResource$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DiscardResource$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DiscardResource$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress DiscardResource$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DiscardResource$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DiscardResource$VH().set(seg, x);
        }
        public static void DiscardResource$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,const D3D12_DISCARD_REGION*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DiscardResource$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginQuery$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress BeginQuery$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginQuery$VH().set(seg, x);
        }
        public static void BeginQuery$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndQuery$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndQuery$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndQuery$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress EndQuery$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndQuery$VH().set(seg, x);
        }
        public static void EndQuery$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveQueryData$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveQueryData$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveQueryData$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress ResolveQueryData$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveQueryData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveQueryData$VH().set(seg, x);
        }
        public static void ResolveQueryData$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12QueryHeap*,D3D12_QUERY_TYPE,UINT,UINT,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveQueryData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPredication$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPredication$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPredication$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress SetPredication$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPredication$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPredication$VH().set(seg, x);
        }
        public static void SetPredication$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,D3D12_PREDICATION_OP)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPredication$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetMarker$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetMarker$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetMarker$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,void*,UINT)") MemoryAddress SetMarker$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetMarker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetMarker$VH().set(seg, x);
        }
        public static void SetMarker$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetMarker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginEvent$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,void*,UINT)") MemoryAddress BeginEvent$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginEvent$VH().set(seg, x);
        }
        public static void BeginEvent$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,void*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndEvent$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndEvent$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndEvent$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*)") MemoryAddress EndEvent$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndEvent$VH().set(seg, x);
        }
        public static void EndEvent$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteIndirect$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteIndirect$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteIndirect$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress ExecuteIndirect$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteIndirect$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteIndirect$VH().set(seg, x);
        }
        public static void ExecuteIndirect$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12CommandSignature*,UINT,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteIndirect$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AtomicCopyBufferUINT64$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT64$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT64$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress AtomicCopyBufferUINT64$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT64$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT64$VH().set(seg, x);
        }
        public static void AtomicCopyBufferUINT64$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT64,ID3D12Resource*,UINT64,UINT,ID3D12Resource**,const D3D12_SUBRESOURCE_RANGE_UINT64*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$AtomicCopyBufferUINT64$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OMSetDepthBounds$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetDepthBounds$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetDepthBounds$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,FLOAT,FLOAT)") MemoryAddress OMSetDepthBounds$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetDepthBounds$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetDepthBounds$VH().set(seg, x);
        }
        public static void OMSetDepthBounds$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,FLOAT,FLOAT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$OMSetDepthBounds$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetSamplePositions$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetSamplePositions$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetSamplePositions$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress SetSamplePositions$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetSamplePositions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetSamplePositions$VH().set(seg, x);
        }
        public static void SetSamplePositions$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,D3D12_SAMPLE_POSITION*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetSamplePositions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ResolveSubresourceRegion$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresourceRegion$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresourceRegion$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress ResolveSubresourceRegion$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresourceRegion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresourceRegion$VH().set(seg, x);
        }
        public static void ResolveSubresourceRegion$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*,UINT,UINT,UINT,ID3D12Resource*,UINT,D3D12_RECT*,DXGI_FORMAT,D3D12_RESOLVE_MODE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ResolveSubresourceRegion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetViewInstanceMask$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetViewInstanceMask$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetViewInstanceMask$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT)") MemoryAddress SetViewInstanceMask$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetViewInstanceMask$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetViewInstanceMask$VH().set(seg, x);
        }
        public static void SetViewInstanceMask$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetViewInstanceMask$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteBufferImmediate$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$WriteBufferImmediate$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$WriteBufferImmediate$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress WriteBufferImmediate$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$WriteBufferImmediate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$WriteBufferImmediate$VH().set(seg, x);
        }
        public static void WriteBufferImmediate$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,const D3D12_WRITEBUFFERIMMEDIATE_MODE*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$WriteBufferImmediate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetProtectedResourceSession$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetProtectedResourceSession$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12ProtectedResourceSession*)") MemoryAddress SetProtectedResourceSession$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetProtectedResourceSession$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12ProtectedResourceSession*)") MemoryAddress SetProtectedResourceSession$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetProtectedResourceSession$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProtectedResourceSession$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetProtectedResourceSession$VH().set(seg, x);
        }
        public static void SetProtectedResourceSession$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12ProtectedResourceSession*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetProtectedResourceSession$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BeginRenderPass$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginRenderPass$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress BeginRenderPass$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginRenderPass$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress BeginRenderPass$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginRenderPass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BeginRenderPass$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginRenderPass$VH().set(seg, x);
        }
        public static void BeginRenderPass$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,const D3D12_RENDER_PASS_RENDER_TARGET_DESC*,const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC*,D3D12_RENDER_PASS_FLAGS)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BeginRenderPass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EndRenderPass$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndRenderPass$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*)") MemoryAddress EndRenderPass$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndRenderPass$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*)") MemoryAddress EndRenderPass$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndRenderPass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EndRenderPass$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndRenderPass$VH().set(seg, x);
        }
        public static void EndRenderPass$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EndRenderPass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle InitializeMetaCommand$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$InitializeMetaCommand$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress InitializeMetaCommand$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$InitializeMetaCommand$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress InitializeMetaCommand$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$InitializeMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void InitializeMetaCommand$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$InitializeMetaCommand$VH().set(seg, x);
        }
        public static void InitializeMetaCommand$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$InitializeMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ExecuteMetaCommand$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteMetaCommand$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress ExecuteMetaCommand$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteMetaCommand$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress ExecuteMetaCommand$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteMetaCommand$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ExecuteMetaCommand$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteMetaCommand$VH().set(seg, x);
        }
        public static void ExecuteMetaCommand$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12MetaCommand*,void*,SIZE_T)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$ExecuteMetaCommand$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BuildRaytracingAccelerationStructure$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BuildRaytracingAccelerationStructure$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress BuildRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BuildRaytracingAccelerationStructure$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress BuildRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BuildRaytracingAccelerationStructure$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BuildRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BuildRaytracingAccelerationStructure$VH().set(seg, x);
        }
        public static void BuildRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,UINT,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$BuildRaytracingAccelerationStructure$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EmitRaytracingAccelerationStructurePostbuildInfo$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress EmitRaytracingAccelerationStructurePostbuildInfo$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress EmitRaytracingAccelerationStructurePostbuildInfo$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EmitRaytracingAccelerationStructurePostbuildInfo$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().set(seg, x);
        }
        public static void EmitRaytracingAccelerationStructurePostbuildInfo$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,UINT,const D3D12_GPU_VIRTUAL_ADDRESS*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$EmitRaytracingAccelerationStructurePostbuildInfo$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CopyRaytracingAccelerationStructure$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyRaytracingAccelerationStructure$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress CopyRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyRaytracingAccelerationStructure$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress CopyRaytracingAccelerationStructure$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyRaytracingAccelerationStructure$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CopyRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyRaytracingAccelerationStructure$VH().set(seg, x);
        }
        public static void CopyRaytracingAccelerationStructure$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_GPU_VIRTUAL_ADDRESS,D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$CopyRaytracingAccelerationStructure$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetPipelineState1$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState1$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12StateObject*)") MemoryAddress SetPipelineState1$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState1$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12StateObject*)") MemoryAddress SetPipelineState1$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState1$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetPipelineState1$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState1$VH().set(seg, x);
        }
        public static void SetPipelineState1$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12StateObject*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$SetPipelineState1$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DispatchRays$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchRays$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress DispatchRays$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchRays$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress DispatchRays$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchRays$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DispatchRays$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchRays$VH().set(seg, x);
        }
        public static void DispatchRays$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,const D3D12_DISPATCH_RAYS_DESC*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchRays$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetShadingRate$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRate$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_SHADING_RATE,const D3D12_SHADING_RATE_COMBINER*)") MemoryAddress RSSetShadingRate$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRate$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_SHADING_RATE,const D3D12_SHADING_RATE_COMBINER*)") MemoryAddress RSSetShadingRate$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRate$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetShadingRate$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_SHADING_RATE,const D3D12_SHADING_RATE_COMBINER*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRate$VH().set(seg, x);
        }
        public static void RSSetShadingRate$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,D3D12_SHADING_RATE,const D3D12_SHADING_RATE_COMBINER*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRate$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RSSetShadingRateImage$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRateImage$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*)") MemoryAddress RSSetShadingRateImage$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRateImage$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*)") MemoryAddress RSSetShadingRateImage$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRateImage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RSSetShadingRateImage$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRateImage$VH().set(seg, x);
        }
        public static void RSSetShadingRateImage$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,ID3D12Resource*)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$RSSetShadingRateImage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DispatchMesh$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchMesh$VH();
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress DispatchMesh$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchMesh$VH().get(seg);
        }
        public static  @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress DispatchMesh$get(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchMesh$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DispatchMesh$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchMesh$VH().set(seg, x);
        }
        public static void DispatchMesh$set(@C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment seg, long index, @C("void(*)(ID3D12GraphicsCommandList6*,UINT,UINT,UINT)") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6Vtbl$DispatchMesh$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList6Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList6Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList6Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList6Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList6Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static class ID3D12GraphicsCommandList6 {

        private ID3D12GraphicsCommandList6() {}
        public static MemoryLayout $LAYOUT() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return d3d12_h$constants$11.ID3D12GraphicsCommandList6$lpVtbl$VH();
        }
        public static  @C("struct ID3D12GraphicsCommandList6Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList6") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ID3D12GraphicsCommandList6Vtbl*") MemoryAddress lpVtbl$get(@C("struct ID3D12GraphicsCommandList6") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.ID3D12GraphicsCommandList6$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList6") MemorySegment seg, @C("struct ID3D12GraphicsCommandList6Vtbl*") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ID3D12GraphicsCommandList6") MemorySegment seg, long index, @C("struct ID3D12GraphicsCommandList6Vtbl*") MemoryAddress x) {
            d3d12_h$constants$11.ID3D12GraphicsCommandList6$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ID3D12GraphicsCommandList6") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList6") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ID3D12GraphicsCommandList6[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ID3D12GraphicsCommandList6[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ID3D12GraphicsCommandList6*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ID3D12GraphicsCommandList6*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }

    public static  MemoryLayout __MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$LAYOUT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$VH() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$SEGMENT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$VH().get(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$VH().set(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$LAYOUT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$VH() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$SEGMENT() {
        return d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$VH().get(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$VH().set(d3d12_h$constants$11.__MIDL_itf_d3d12_0000_0052_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static @C("int") int D3D12_16BIT_INDEX_STRIP_CUT_VALUE() {
        return d3d12_h$constants$11.D3D12_16BIT_INDEX_STRIP_CUT_VALUE();
    }
    public static @C("unsigned int") int D3D12_32BIT_INDEX_STRIP_CUT_VALUE() {
        return d3d12_h$constants$11.D3D12_32BIT_INDEX_STRIP_CUT_VALUE();
    }
    public static @C("int") int D3D12_8BIT_INDEX_STRIP_CUT_VALUE() {
        return d3d12_h$constants$11.D3D12_8BIT_INDEX_STRIP_CUT_VALUE();
    }
    public static @C("unsigned int") int D3D12_APPEND_ALIGNED_ELEMENT() {
        return d3d12_h$constants$11.D3D12_APPEND_ALIGNED_ELEMENT();
    }
    public static @C("int") int D3D12_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT() {
        return d3d12_h$constants$11.D3D12_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT();
    }
    public static @C("int") int D3D12_CLIP_OR_CULL_DISTANCE_COUNT() {
        return d3d12_h$constants$11.D3D12_CLIP_OR_CULL_DISTANCE_COUNT();
    }
    public static @C("int") int D3D12_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT() {
        return d3d12_h$constants$11.D3D12_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT();
    }
    public static @C("int") int D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_SAMPLER_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_SAMPLER_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_SAMPLER_SLOT_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_SAMPLER_SLOT_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_SUBROUTINE_NESTING_LIMIT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_SUBROUTINE_NESTING_LIMIT();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEMP_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEMP_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEMP_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEMP_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEMP_REGISTER_READ_PORTS() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEMP_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE();
    }
    public static @C("int") int D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE() {
        return d3d12_h$constants$11.D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE();
    }
    public static @C("int") int D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT() {
        return d3d12_h$constants$11.D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD();
    }
    public static @C("int") int D3D12_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION() {
        return d3d12_h$constants$11.D3D12_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION();
    }
    public static @C("int") int D3D12_CS_4_X_RAW_UAV_BYTE_ALIGNMENT() {
        return d3d12_h$constants$11.D3D12_CS_4_X_RAW_UAV_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_4_X_THREAD_GROUP_MAX_X() {
        return d3d12_h$constants$11.D3D12_CS_4_X_THREAD_GROUP_MAX_X();
    }
    public static @C("int") int D3D12_CS_4_X_THREAD_GROUP_MAX_Y() {
        return d3d12_h$constants$11.D3D12_CS_4_X_THREAD_GROUP_MAX_Y();
    }
    public static @C("int") int D3D12_CS_4_X_UAV_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_CS_4_X_UAV_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION() {
        return d3d12_h$constants$11.D3D12_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION();
    }
    public static @C("int") int D3D12_CS_TGSM_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_CS_TGSM_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_CS_TGSM_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$11.D3D12_CS_TGSM_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_CS_TGSM_RESOURCE_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_CS_TGSM_RESOURCE_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_CS_TGSM_RESOURCE_REGISTER_READ_PORTS() {
        return d3d12_h$constants$11.D3D12_CS_TGSM_RESOURCE_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_CS_THREADGROUPID_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_CS_THREADGROUPID_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_CS_THREADGROUPID_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_CS_THREADGROUPID_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_CS_THREADIDINGROUP_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_CS_THREADIDINGROUP_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_CS_THREADIDINGROUP_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_CS_THREADIDINGROUP_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_CS_THREADID_REGISTER_COMPONENTS() {
        return d3d12_h$constants$11.D3D12_CS_THREADID_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_CS_THREADID_REGISTER_COUNT() {
        return d3d12_h$constants$11.D3D12_CS_THREADID_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP() {
        return d3d12_h$constants$11.D3D12_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP();
    }
    public static @C("int") int D3D12_CS_THREAD_GROUP_MAX_X() {
        return d3d12_h$constants$11.D3D12_CS_THREAD_GROUP_MAX_X();
    }
    public static @C("int") int D3D12_CS_THREAD_GROUP_MAX_Y() {
        return d3d12_h$constants$11.D3D12_CS_THREAD_GROUP_MAX_Y();
    }
    public static @C("int") int D3D12_CS_THREAD_GROUP_MAX_Z() {
        return d3d12_h$constants$11.D3D12_CS_THREAD_GROUP_MAX_Z();
    }
    public static @C("int") int D3D12_CS_THREAD_GROUP_MIN_X() {
        return d3d12_h$constants$11.D3D12_CS_THREAD_GROUP_MIN_X();
    }
    public static @C("int") int D3D12_CS_THREAD_GROUP_MIN_Y() {
        return d3d12_h$constants$11.D3D12_CS_THREAD_GROUP_MIN_Y();
    }
    public static @C("int") int D3D12_CS_THREAD_GROUP_MIN_Z() {
        return d3d12_h$constants$11.D3D12_CS_THREAD_GROUP_MIN_Z();
    }
    public static @C("int") int D3D12_CS_THREAD_LOCAL_TEMP_REGISTER_POOL() {
        return d3d12_h$constants$11.D3D12_CS_THREAD_LOCAL_TEMP_REGISTER_POOL();
    }
    public static @C("float") float D3D12_DEFAULT_BLEND_FACTOR_ALPHA() {
        return d3d12_h$constants$11.D3D12_DEFAULT_BLEND_FACTOR_ALPHA();
    }
    public static @C("float") float D3D12_DEFAULT_BLEND_FACTOR_BLUE() {
        return d3d12_h$constants$11.D3D12_DEFAULT_BLEND_FACTOR_BLUE();
    }
    public static @C("float") float D3D12_DEFAULT_BLEND_FACTOR_GREEN() {
        return d3d12_h$constants$11.D3D12_DEFAULT_BLEND_FACTOR_GREEN();
    }
    public static @C("float") float D3D12_DEFAULT_BLEND_FACTOR_RED() {
        return d3d12_h$constants$11.D3D12_DEFAULT_BLEND_FACTOR_RED();
    }
    public static @C("float") float D3D12_DEFAULT_BORDER_COLOR_COMPONENT() {
        return d3d12_h$constants$11.D3D12_DEFAULT_BORDER_COLOR_COMPONENT();
    }
    public static @C("int") int D3D12_DEFAULT_DEPTH_BIAS() {
        return d3d12_h$constants$11.D3D12_DEFAULT_DEPTH_BIAS();
    }
    public static @C("float") float D3D12_DEFAULT_DEPTH_BIAS_CLAMP() {
        return d3d12_h$constants$11.D3D12_DEFAULT_DEPTH_BIAS_CLAMP();
    }
    public static @C("int") int D3D12_DEFAULT_MAX_ANISOTROPY() {
        return d3d12_h$constants$11.D3D12_DEFAULT_MAX_ANISOTROPY();
    }
    public static @C("float") float D3D12_DEFAULT_MIP_LOD_BIAS() {
        return d3d12_h$constants$11.D3D12_DEFAULT_MIP_LOD_BIAS();
    }
    public static @C("int") int D3D12_DEFAULT_MSAA_RESOURCE_PLACEMENT_ALIGNMENT() {
        return d3d12_h$constants$11.D3D12_DEFAULT_MSAA_RESOURCE_PLACEMENT_ALIGNMENT();
    }
    public static @C("int") int D3D12_DEFAULT_RENDER_TARGET_ARRAY_INDEX() {
        return d3d12_h$constants$12.D3D12_DEFAULT_RENDER_TARGET_ARRAY_INDEX();
    }
    public static @C("int") int D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT();
    }
    public static @C("unsigned int") int D3D12_DEFAULT_SAMPLE_MASK() {
        return d3d12_h$constants$12.D3D12_DEFAULT_SAMPLE_MASK();
    }
    public static @C("int") int D3D12_DEFAULT_SCISSOR_ENDX() {
        return d3d12_h$constants$12.D3D12_DEFAULT_SCISSOR_ENDX();
    }
    public static @C("int") int D3D12_DEFAULT_SCISSOR_ENDY() {
        return d3d12_h$constants$12.D3D12_DEFAULT_SCISSOR_ENDY();
    }
    public static @C("int") int D3D12_DEFAULT_SCISSOR_STARTX() {
        return d3d12_h$constants$12.D3D12_DEFAULT_SCISSOR_STARTX();
    }
    public static @C("int") int D3D12_DEFAULT_SCISSOR_STARTY() {
        return d3d12_h$constants$12.D3D12_DEFAULT_SCISSOR_STARTY();
    }
    public static @C("float") float D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS() {
        return d3d12_h$constants$12.D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS();
    }
    public static @C("int") int D3D12_DEFAULT_STENCIL_READ_MASK() {
        return d3d12_h$constants$12.D3D12_DEFAULT_STENCIL_READ_MASK();
    }
    public static @C("int") int D3D12_DEFAULT_STENCIL_REFERENCE() {
        return d3d12_h$constants$12.D3D12_DEFAULT_STENCIL_REFERENCE();
    }
    public static @C("int") int D3D12_DEFAULT_STENCIL_WRITE_MASK() {
        return d3d12_h$constants$12.D3D12_DEFAULT_STENCIL_WRITE_MASK();
    }
    public static @C("int") int D3D12_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX() {
        return d3d12_h$constants$12.D3D12_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX();
    }
    public static @C("int") int D3D12_DEFAULT_VIEWPORT_HEIGHT() {
        return d3d12_h$constants$12.D3D12_DEFAULT_VIEWPORT_HEIGHT();
    }
    public static @C("float") float D3D12_DEFAULT_VIEWPORT_MAX_DEPTH() {
        return d3d12_h$constants$12.D3D12_DEFAULT_VIEWPORT_MAX_DEPTH();
    }
    public static @C("float") float D3D12_DEFAULT_VIEWPORT_MIN_DEPTH() {
        return d3d12_h$constants$12.D3D12_DEFAULT_VIEWPORT_MIN_DEPTH();
    }
    public static @C("int") int D3D12_DEFAULT_VIEWPORT_TOPLEFTX() {
        return d3d12_h$constants$12.D3D12_DEFAULT_VIEWPORT_TOPLEFTX();
    }
    public static @C("int") int D3D12_DEFAULT_VIEWPORT_TOPLEFTY() {
        return d3d12_h$constants$12.D3D12_DEFAULT_VIEWPORT_TOPLEFTY();
    }
    public static @C("int") int D3D12_DEFAULT_VIEWPORT_WIDTH() {
        return d3d12_h$constants$12.D3D12_DEFAULT_VIEWPORT_WIDTH();
    }
    public static @C("unsigned int") int D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND() {
        return d3d12_h$constants$12.D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND();
    }
    public static @C("unsigned int") int D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_END() {
        return d3d12_h$constants$12.D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_END();
    }
    public static @C("unsigned int") int D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_START() {
        return d3d12_h$constants$12.D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_START();
    }
    public static @C("int") int D3D12_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS();
    }
    public static @C("int") int D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_DS_OUTPUT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_DS_OUTPUT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_DS_OUTPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_DS_OUTPUT_REGISTER_COUNT();
    }
    public static @C("double") double D3D12_FLOAT16_FUSED_TOLERANCE_IN_ULP() {
        return d3d12_h$constants$12.D3D12_FLOAT16_FUSED_TOLERANCE_IN_ULP();
    }
    public static @C("float") float D3D12_FLOAT32_MAX() {
        return d3d12_h$constants$12.D3D12_FLOAT32_MAX();
    }
    public static @C("float") float D3D12_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP() {
        return d3d12_h$constants$12.D3D12_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP();
    }
    public static @C("float") float D3D12_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR() {
        return d3d12_h$constants$12.D3D12_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR();
    }
    public static @C("float") float D3D12_FLOAT_TO_SRGB_EXPONENT_NUMERATOR() {
        return d3d12_h$constants$12.D3D12_FLOAT_TO_SRGB_EXPONENT_NUMERATOR();
    }
    public static @C("float") float D3D12_FLOAT_TO_SRGB_OFFSET() {
        return d3d12_h$constants$12.D3D12_FLOAT_TO_SRGB_OFFSET();
    }
    public static @C("float") float D3D12_FLOAT_TO_SRGB_SCALE_1() {
        return d3d12_h$constants$12.D3D12_FLOAT_TO_SRGB_SCALE_1();
    }
    public static @C("float") float D3D12_FLOAT_TO_SRGB_SCALE_2() {
        return d3d12_h$constants$12.D3D12_FLOAT_TO_SRGB_SCALE_2();
    }
    public static @C("float") float D3D12_FLOAT_TO_SRGB_THRESHOLD() {
        return d3d12_h$constants$12.D3D12_FLOAT_TO_SRGB_THRESHOLD();
    }
    public static @C("float") float D3D12_FTOI_INSTRUCTION_MAX_INPUT() {
        return d3d12_h$constants$12.D3D12_FTOI_INSTRUCTION_MAX_INPUT();
    }
    public static @C("float") float D3D12_FTOI_INSTRUCTION_MIN_INPUT() {
        return d3d12_h$constants$12.D3D12_FTOI_INSTRUCTION_MIN_INPUT();
    }
    public static @C("float") float D3D12_FTOU_INSTRUCTION_MAX_INPUT() {
        return d3d12_h$constants$12.D3D12_FTOU_INSTRUCTION_MAX_INPUT();
    }
    public static @C("float") float D3D12_FTOU_INSTRUCTION_MIN_INPUT() {
        return d3d12_h$constants$12.D3D12_FTOU_INSTRUCTION_MIN_INPUT();
    }
    public static @C("int") int D3D12_GS_INPUT_INSTANCE_ID_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_INSTANCE_ID_READS_PER_INST();
    }
    public static @C("int") int D3D12_GS_INPUT_INSTANCE_ID_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_INSTANCE_ID_READ_PORTS();
    }
    public static @C("int") int D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_GS_INPUT_PRIM_CONST_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_PRIM_CONST_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_GS_INPUT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_GS_INPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_GS_INPUT_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_GS_INPUT_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_GS_INPUT_REGISTER_VERTICES() {
        return d3d12_h$constants$12.D3D12_GS_INPUT_REGISTER_VERTICES();
    }
    public static @C("int") int D3D12_GS_MAX_INSTANCE_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_MAX_INSTANCE_COUNT();
    }
    public static @C("int") int D3D12_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES() {
        return d3d12_h$constants$12.D3D12_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES();
    }
    public static @C("int") int D3D12_GS_OUTPUT_ELEMENTS() {
        return d3d12_h$constants$12.D3D12_GS_OUTPUT_ELEMENTS();
    }
    public static @C("int") int D3D12_GS_OUTPUT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_GS_OUTPUT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_GS_OUTPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_GS_OUTPUT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_HS_CONTROL_POINT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_HS_CONTROL_POINT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_HS_CONTROL_POINT_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_HS_CONTROL_POINT_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_HS_CONTROL_POINT_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_HS_CONTROL_POINT_REGISTER_READ_PORTS();
    }
    public static @C("unsigned int") int D3D12_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND() {
        return d3d12_h$constants$12.D3D12_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND();
    }
    public static @C("int") int D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS();
    }
    public static @C("unsigned int") int D3D12_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND() {
        return d3d12_h$constants$12.D3D12_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND();
    }
    public static @C("float") float D3D12_HS_MAXTESSFACTOR_LOWER_BOUND() {
        return d3d12_h$constants$12.D3D12_HS_MAXTESSFACTOR_LOWER_BOUND();
    }
    public static @C("float") float D3D12_HS_MAXTESSFACTOR_UPPER_BOUND() {
        return d3d12_h$constants$12.D3D12_HS_MAXTESSFACTOR_UPPER_BOUND();
    }
    public static @C("int") int D3D12_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS();
    }
    public static @C("int") int D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS();
    }
    public static @C("int") int D3D12_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES() {
        return d3d12_h$constants$12.D3D12_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES();
    }
    public static @C("int") int D3D12_IA_DEFAULT_PRIMITIVE_TOPOLOGY() {
        return d3d12_h$constants$12.D3D12_IA_DEFAULT_PRIMITIVE_TOPOLOGY();
    }
    public static @C("int") int D3D12_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES() {
        return d3d12_h$constants$12.D3D12_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES();
    }
    public static @C("int") int D3D12_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT() {
        return d3d12_h$constants$12.D3D12_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT();
    }
    public static @C("int") int D3D12_IA_INSTANCE_ID_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_IA_INSTANCE_ID_BIT_COUNT();
    }
    public static @C("int") int D3D12_IA_INTEGER_ARITHMETIC_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_IA_INTEGER_ARITHMETIC_BIT_COUNT();
    }
    public static @C("int") int D3D12_IA_PATCH_MAX_CONTROL_POINT_COUNT() {
        return d3d12_h$constants$12.D3D12_IA_PATCH_MAX_CONTROL_POINT_COUNT();
    }
    public static @C("int") int D3D12_IA_PRIMITIVE_ID_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_IA_PRIMITIVE_ID_BIT_COUNT();
    }
    public static @C("int") int D3D12_IA_VERTEX_ID_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_IA_VERTEX_ID_BIT_COUNT();
    }
    public static @C("int") int D3D12_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT() {
        return d3d12_h$constants$12.D3D12_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT();
    }
    public static @C("int") int D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS();
    }
    public static @C("int") int D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT() {
        return d3d12_h$constants$12.D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT();
    }
    public static @C("unsigned int") int D3D12_INTEGER_DIVIDE_BY_ZERO_QUOTIENT() {
        return d3d12_h$constants$12.D3D12_INTEGER_DIVIDE_BY_ZERO_QUOTIENT();
    }
    public static @C("unsigned int") int D3D12_INTEGER_DIVIDE_BY_ZERO_REMAINDER() {
        return d3d12_h$constants$12.D3D12_INTEGER_DIVIDE_BY_ZERO_REMAINDER();
    }
    public static @C("unsigned int") int D3D12_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL() {
        return d3d12_h$constants$12.D3D12_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL();
    }
    public static @C("unsigned int") int D3D12_KEEP_UNORDERED_ACCESS_VIEWS() {
        return d3d12_h$constants$12.D3D12_KEEP_UNORDERED_ACCESS_VIEWS();
    }
    public static @C("float") float D3D12_LINEAR_GAMMA() {
        return d3d12_h$constants$12.D3D12_LINEAR_GAMMA();
    }
    public static @C("int") int D3D12_MAJOR_VERSION() {
        return d3d12_h$constants$12.D3D12_MAJOR_VERSION();
    }
    public static @C("float") float D3D12_MAX_BORDER_COLOR_COMPONENT() {
        return d3d12_h$constants$12.D3D12_MAX_BORDER_COLOR_COMPONENT();
    }
    public static @C("float") float D3D12_MAX_DEPTH() {
        return d3d12_h$constants$12.D3D12_MAX_DEPTH();
    }
    public static @C("int") int D3D12_MAX_LIVE_STATIC_SAMPLERS() {
        return d3d12_h$constants$12.D3D12_MAX_LIVE_STATIC_SAMPLERS();
    }
    public static @C("int") int D3D12_MAX_MAXANISOTROPY() {
        return d3d12_h$constants$12.D3D12_MAX_MAXANISOTROPY();
    }
    public static @C("int") int D3D12_MAX_MULTISAMPLE_SAMPLE_COUNT() {
        return d3d12_h$constants$12.D3D12_MAX_MULTISAMPLE_SAMPLE_COUNT();
    }
    public static @C("float") float D3D12_MAX_POSITION_VALUE() {
        return d3d12_h$constants$12.D3D12_MAX_POSITION_VALUE();
    }
    public static @C("int") int D3D12_MAX_ROOT_COST() {
        return d3d12_h$constants$12.D3D12_MAX_ROOT_COST();
    }
    public static @C("int") int D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1() {
        return d3d12_h$constants$12.D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1();
    }
    public static @C("int") int D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_2() {
        return d3d12_h$constants$12.D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_2();
    }
    public static @C("int") int D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE() {
        return d3d12_h$constants$12.D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE();
    }
    public static @C("int") int D3D12_MAX_TEXTURE_DIMENSION_2_TO_EXP() {
        return d3d12_h$constants$12.D3D12_MAX_TEXTURE_DIMENSION_2_TO_EXP();
    }
    public static @C("int") int D3D12_MAX_VIEW_INSTANCE_COUNT() {
        return d3d12_h$constants$12.D3D12_MAX_VIEW_INSTANCE_COUNT();
    }
    public static @C("int") int D3D12_MINOR_VERSION() {
        return d3d12_h$constants$12.D3D12_MINOR_VERSION();
    }
    public static @C("float") float D3D12_MIN_BORDER_COLOR_COMPONENT() {
        return d3d12_h$constants$12.D3D12_MIN_BORDER_COLOR_COMPONENT();
    }
    public static @C("float") float D3D12_MIN_DEPTH() {
        return d3d12_h$constants$12.D3D12_MIN_DEPTH();
    }
    public static @C("int") int D3D12_MIN_MAXANISOTROPY() {
        return d3d12_h$constants$12.D3D12_MIN_MAXANISOTROPY();
    }
    public static @C("float") float D3D12_MIP_LOD_BIAS_MAX() {
        return d3d12_h$constants$12.D3D12_MIP_LOD_BIAS_MAX();
    }
    public static @C("float") float D3D12_MIP_LOD_BIAS_MIN() {
        return d3d12_h$constants$12.D3D12_MIP_LOD_BIAS_MIN();
    }
    public static @C("int") int D3D12_MIP_LOD_FRACTIONAL_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_MIP_LOD_FRACTIONAL_BIT_COUNT();
    }
    public static @C("int") int D3D12_MIP_LOD_RANGE_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_MIP_LOD_RANGE_BIT_COUNT();
    }
    public static @C("float") float D3D12_MULTISAMPLE_ANTIALIAS_LINE_WIDTH() {
        return d3d12_h$constants$12.D3D12_MULTISAMPLE_ANTIALIAS_LINE_WIDTH();
    }
    public static @C("int") int D3D12_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT() {
        return d3d12_h$constants$12.D3D12_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT();
    }
    public static @C("unsigned int") int D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_END() {
        return d3d12_h$constants$12.D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_END();
    }
    public static @C("unsigned int") int D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_START() {
        return d3d12_h$constants$12.D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_START();
    }
    public static @C("unsigned int") int D3D12_PACKED_TILE() {
        return d3d12_h$constants$12.D3D12_PACKED_TILE();
    }
    public static @C("int") int D3D12_PIXEL_ADDRESS_RANGE_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_PIXEL_ADDRESS_RANGE_BIT_COUNT();
    }
    public static @C("int") int D3D12_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT();
    }
    public static @C("int") int D3D12_PS_CS_UAV_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_PS_CS_UAV_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_PS_CS_UAV_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_CS_UAV_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_PS_CS_UAV_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_PS_CS_UAV_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_PS_CS_UAV_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_PS_CS_UAV_REGISTER_READ_PORTS();
    }
    public static @C("unsigned int") int D3D12_PS_FRONTFACING_DEFAULT_VALUE() {
        return d3d12_h$constants$12.D3D12_PS_FRONTFACING_DEFAULT_VALUE();
    }
    public static @C("int") int D3D12_PS_FRONTFACING_FALSE_VALUE() {
        return d3d12_h$constants$12.D3D12_PS_FRONTFACING_FALSE_VALUE();
    }
    public static @C("unsigned int") int D3D12_PS_FRONTFACING_TRUE_VALUE() {
        return d3d12_h$constants$12.D3D12_PS_FRONTFACING_TRUE_VALUE();
    }
    public static @C("int") int D3D12_PS_INPUT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_PS_INPUT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_PS_INPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_INPUT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_PS_INPUT_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_PS_INPUT_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_PS_INPUT_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_PS_INPUT_REGISTER_READ_PORTS();
    }
    public static @C("float") float D3D12_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT() {
        return d3d12_h$constants$12.D3D12_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT();
    }
    public static @C("int") int D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_PS_OUTPUT_DEPTH_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_DEPTH_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_PS_OUTPUT_MASK_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_MASK_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_PS_OUTPUT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_PS_OUTPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_PS_OUTPUT_REGISTER_COUNT();
    }
    public static @C("float") float D3D12_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT() {
        return d3d12_h$constants$12.D3D12_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT();
    }
    public static @C("int") int D3D12_RAW_UAV_SRV_BYTE_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_RAW_UAV_SRV_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_RAYTRACING_AABB_BYTE_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_AABB_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_RAYTRACING_INSTANCE_DESCS_BYTE_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_INSTANCE_DESCS_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_RAYTRACING_MAX_ATTRIBUTE_SIZE_IN_BYTES() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_MAX_ATTRIBUTE_SIZE_IN_BYTES();
    }
    public static @C("int") int D3D12_RAYTRACING_MAX_DECLARABLE_TRACE_RECURSION_DEPTH() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_MAX_DECLARABLE_TRACE_RECURSION_DEPTH();
    }
    public static @C("int") int D3D12_RAYTRACING_MAX_GEOMETRIES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_MAX_GEOMETRIES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE();
    }
    public static @C("int") int D3D12_RAYTRACING_MAX_INSTANCES_PER_TOP_LEVEL_ACCELERATION_STRUCTURE() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_MAX_INSTANCES_PER_TOP_LEVEL_ACCELERATION_STRUCTURE();
    }
    public static @C("int") int D3D12_RAYTRACING_MAX_PRIMITIVES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_MAX_PRIMITIVES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE();
    }
    public static @C("int") int D3D12_RAYTRACING_MAX_RAY_GENERATION_SHADER_THREADS() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_MAX_RAY_GENERATION_SHADER_THREADS();
    }
    public static @C("int") int D3D12_RAYTRACING_MAX_SHADER_RECORD_STRIDE() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_MAX_SHADER_RECORD_STRIDE();
    }
    public static @C("int") int D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_RAYTRACING_TRANSFORM3X4_BYTE_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_RAYTRACING_TRANSFORM3X4_BYTE_ALIGNMENT();
    }
    public static @C("int") int D3D12_REQ_BLEND_OBJECT_COUNT_PER_DEVICE() {
        return d3d12_h$constants$12.D3D12_REQ_BLEND_OBJECT_COUNT_PER_DEVICE();
    }
    public static @C("int") int D3D12_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP() {
        return d3d12_h$constants$12.D3D12_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP();
    }
    public static @C("int") int D3D12_REQ_CONSTANT_BUFFER_ELEMENT_COUNT() {
        return d3d12_h$constants$12.D3D12_REQ_CONSTANT_BUFFER_ELEMENT_COUNT();
    }
    public static @C("int") int D3D12_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE() {
        return d3d12_h$constants$12.D3D12_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE();
    }
    public static @C("int") int D3D12_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP() {
        return d3d12_h$constants$12.D3D12_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP();
    }
    public static @C("int") int D3D12_REQ_DRAW_VERTEX_COUNT_2_TO_EXP() {
        return d3d12_h$constants$12.D3D12_REQ_DRAW_VERTEX_COUNT_2_TO_EXP();
    }
    public static @C("int") int D3D12_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION() {
        return d3d12_h$constants$12.D3D12_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION();
    }
    public static @C("int") int D3D12_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT() {
        return d3d12_h$constants$12.D3D12_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT();
    }
    public static @C("int") int D3D12_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT() {
        return d3d12_h$constants$12.D3D12_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT();
    }
    public static @C("int") int D3D12_REQ_MAXANISOTROPY() {
        return d3d12_h$constants$12.D3D12_REQ_MAXANISOTROPY();
    }
    public static @C("int") int D3D12_REQ_MIP_LEVELS() {
        return d3d12_h$constants$12.D3D12_REQ_MIP_LEVELS();
    }
    public static @C("int") int D3D12_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES() {
        return d3d12_h$constants$12.D3D12_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES();
    }
    public static @C("int") int D3D12_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE() {
        return d3d12_h$constants$12.D3D12_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE();
    }
    public static @C("int") int D3D12_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH() {
        return d3d12_h$constants$12.D3D12_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH();
    }
    public static @C("int") int D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM() {
        return d3d12_h$constants$12.D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM();
    }
    public static @C("float") float D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM() {
        return d3d12_h$constants$12.D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM();
    }
    public static @C("int") int D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM() {
        return d3d12_h$constants$12.D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM();
    }
    public static @C("int") int D3D12_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP() {
        return d3d12_h$constants$12.D3D12_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP();
    }
    public static @C("int") int D3D12_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE() {
        return d3d12_h$constants$12.D3D12_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE();
    }
    public static @C("int") int D3D12_REQ_SUBRESOURCES() {
        return d3d12_h$constants$12.D3D12_REQ_SUBRESOURCES();
    }
    public static @C("int") int D3D12_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION() {
        return d3d12_h$constants$12.D3D12_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION();
    }
    public static @C("int") int D3D12_REQ_TEXTURE1D_U_DIMENSION() {
        return d3d12_h$constants$12.D3D12_REQ_TEXTURE1D_U_DIMENSION();
    }
    public static @C("int") int D3D12_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION() {
        return d3d12_h$constants$12.D3D12_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION();
    }
    public static @C("int") int D3D12_REQ_TEXTURE2D_U_OR_V_DIMENSION() {
        return d3d12_h$constants$12.D3D12_REQ_TEXTURE2D_U_OR_V_DIMENSION();
    }
    public static @C("int") int D3D12_REQ_TEXTURE3D_U_V_OR_W_DIMENSION() {
        return d3d12_h$constants$12.D3D12_REQ_TEXTURE3D_U_V_OR_W_DIMENSION();
    }
    public static @C("int") int D3D12_REQ_TEXTURECUBE_DIMENSION() {
        return d3d12_h$constants$12.D3D12_REQ_TEXTURECUBE_DIMENSION();
    }
    public static @C("int") int D3D12_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL() {
        return d3d12_h$constants$12.D3D12_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL();
    }
    public static @C("unsigned int") int D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES() {
        return d3d12_h$constants$12.D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES();
    }
    public static @C("int") int D3D12_RS_SET_SHADING_RATE_COMBINER_COUNT() {
        return d3d12_h$constants$12.D3D12_RS_SET_SHADING_RATE_COMBINER_COUNT();
    }
    public static @C("int") int D3D12_SHADER_IDENTIFIER_SIZE_IN_BYTES() {
        return d3d12_h$constants$12.D3D12_SHADER_IDENTIFIER_SIZE_IN_BYTES();
    }
    public static @C("int") int D3D12_SHADER_MAJOR_VERSION() {
        return d3d12_h$constants$12.D3D12_SHADER_MAJOR_VERSION();
    }
    public static @C("int") int D3D12_SHADER_MAX_INSTANCES() {
        return d3d12_h$constants$12.D3D12_SHADER_MAX_INSTANCES();
    }
    public static @C("int") int D3D12_SHADER_MAX_INTERFACES() {
        return d3d12_h$constants$12.D3D12_SHADER_MAX_INTERFACES();
    }
    public static @C("int") int D3D12_SHADER_MAX_INTERFACE_CALL_SITES() {
        return d3d12_h$constants$12.D3D12_SHADER_MAX_INTERFACE_CALL_SITES();
    }
    public static @C("int") int D3D12_SHADER_MAX_TYPES() {
        return d3d12_h$constants$12.D3D12_SHADER_MAX_TYPES();
    }
    public static @C("int") int D3D12_SHADER_MINOR_VERSION() {
        return d3d12_h$constants$12.D3D12_SHADER_MINOR_VERSION();
    }
    public static @C("int") int D3D12_SHIFT_INSTRUCTION_PAD_VALUE() {
        return d3d12_h$constants$12.D3D12_SHIFT_INSTRUCTION_PAD_VALUE();
    }
    public static @C("int") int D3D12_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT();
    }
    public static @C("int") int D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT() {
        return d3d12_h$constants$12.D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT();
    }
    public static @C("int") int D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT();
    }
    public static @C("int") int D3D12_SMALL_RESOURCE_PLACEMENT_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_SMALL_RESOURCE_PLACEMENT_ALIGNMENT();
    }
    public static @C("int") int D3D12_SO_BUFFER_MAX_STRIDE_IN_BYTES() {
        return d3d12_h$constants$12.D3D12_SO_BUFFER_MAX_STRIDE_IN_BYTES();
    }
    public static @C("int") int D3D12_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES() {
        return d3d12_h$constants$12.D3D12_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES();
    }
    public static @C("int") int D3D12_SO_BUFFER_SLOT_COUNT() {
        return d3d12_h$constants$12.D3D12_SO_BUFFER_SLOT_COUNT();
    }
    public static @C("unsigned int") int D3D12_SO_DDI_REGISTER_INDEX_DENOTING_GAP() {
        return d3d12_h$constants$12.D3D12_SO_DDI_REGISTER_INDEX_DENOTING_GAP();
    }
    public static @C("unsigned int") int D3D12_SO_NO_RASTERIZED_STREAM() {
        return d3d12_h$constants$12.D3D12_SO_NO_RASTERIZED_STREAM();
    }
    public static @C("int") int D3D12_SO_OUTPUT_COMPONENT_COUNT() {
        return d3d12_h$constants$12.D3D12_SO_OUTPUT_COMPONENT_COUNT();
    }
    public static @C("int") int D3D12_SO_STREAM_COUNT() {
        return d3d12_h$constants$12.D3D12_SO_STREAM_COUNT();
    }
    public static @C("int") int D3D12_SPEC_DATE_DAY() {
        return d3d12_h$constants$12.D3D12_SPEC_DATE_DAY();
    }
    public static @C("int") int D3D12_SPEC_DATE_MONTH() {
        return d3d12_h$constants$12.D3D12_SPEC_DATE_MONTH();
    }
    public static @C("int") int D3D12_SPEC_DATE_YEAR() {
        return d3d12_h$constants$12.D3D12_SPEC_DATE_YEAR();
    }
    public static @C("double") double D3D12_SPEC_VERSION() {
        return d3d12_h$constants$12.D3D12_SPEC_VERSION();
    }
    public static @C("float") float D3D12_SRGB_GAMMA() {
        return d3d12_h$constants$12.D3D12_SRGB_GAMMA();
    }
    public static @C("float") float D3D12_SRGB_TO_FLOAT_DENOMINATOR_1() {
        return d3d12_h$constants$12.D3D12_SRGB_TO_FLOAT_DENOMINATOR_1();
    }
    public static @C("float") float D3D12_SRGB_TO_FLOAT_DENOMINATOR_2() {
        return d3d12_h$constants$12.D3D12_SRGB_TO_FLOAT_DENOMINATOR_2();
    }
    public static @C("float") float D3D12_SRGB_TO_FLOAT_EXPONENT() {
        return d3d12_h$constants$12.D3D12_SRGB_TO_FLOAT_EXPONENT();
    }
    public static @C("float") float D3D12_SRGB_TO_FLOAT_OFFSET() {
        return d3d12_h$constants$12.D3D12_SRGB_TO_FLOAT_OFFSET();
    }
    public static @C("float") float D3D12_SRGB_TO_FLOAT_THRESHOLD() {
        return d3d12_h$constants$12.D3D12_SRGB_TO_FLOAT_THRESHOLD();
    }
    public static @C("float") float D3D12_SRGB_TO_FLOAT_TOLERANCE_IN_ULP() {
        return d3d12_h$constants$12.D3D12_SRGB_TO_FLOAT_TOLERANCE_IN_ULP();
    }
    public static @C("int") int D3D12_STANDARD_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_STANDARD_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_STANDARD_COMPONENT_BIT_COUNT_DOUBLED() {
        return d3d12_h$constants$12.D3D12_STANDARD_COMPONENT_BIT_COUNT_DOUBLED();
    }
    public static @C("int") int D3D12_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE() {
        return d3d12_h$constants$12.D3D12_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE();
    }
    public static @C("int") int D3D12_STANDARD_PIXEL_COMPONENT_COUNT() {
        return d3d12_h$constants$12.D3D12_STANDARD_PIXEL_COMPONENT_COUNT();
    }
    public static @C("int") int D3D12_STANDARD_PIXEL_ELEMENT_COUNT() {
        return d3d12_h$constants$12.D3D12_STANDARD_PIXEL_ELEMENT_COUNT();
    }
    public static @C("int") int D3D12_STANDARD_VECTOR_SIZE() {
        return d3d12_h$constants$12.D3D12_STANDARD_VECTOR_SIZE();
    }
    public static @C("int") int D3D12_STANDARD_VERTEX_ELEMENT_COUNT() {
        return d3d12_h$constants$12.D3D12_STANDARD_VERTEX_ELEMENT_COUNT();
    }
    public static @C("int") int D3D12_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT() {
        return d3d12_h$constants$12.D3D12_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT();
    }
    public static @C("int") int D3D12_SUBPIXEL_FRACTIONAL_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_SUBPIXEL_FRACTIONAL_BIT_COUNT();
    }
    public static @C("int") int D3D12_SUBTEXEL_FRACTIONAL_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_SUBTEXEL_FRACTIONAL_BIT_COUNT();
    }
    public static @C("unsigned int") int D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_END() {
        return d3d12_h$constants$12.D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_END();
    }
    public static @C("unsigned int") int D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_START() {
        return d3d12_h$constants$12.D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_START();
    }
    public static @C("int") int D3D12_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR() {
        return d3d12_h$constants$12.D3D12_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR();
    }
    public static @C("int") int D3D12_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR() {
        return d3d12_h$constants$12.D3D12_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR();
    }
    public static @C("int") int D3D12_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR() {
        return d3d12_h$constants$12.D3D12_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR();
    }
    public static @C("int") int D3D12_TESSELLATOR_MAX_TESSELLATION_FACTOR() {
        return d3d12_h$constants$12.D3D12_TESSELLATOR_MAX_TESSELLATION_FACTOR();
    }
    public static @C("int") int D3D12_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR() {
        return d3d12_h$constants$12.D3D12_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR();
    }
    public static @C("int") int D3D12_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR() {
        return d3d12_h$constants$12.D3D12_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR();
    }
    public static @C("int") int D3D12_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR() {
        return d3d12_h$constants$12.D3D12_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR();
    }
    public static @C("int") int D3D12_TEXEL_ADDRESS_RANGE_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_TEXEL_ADDRESS_RANGE_BIT_COUNT();
    }
    public static @C("int") int D3D12_TEXTURE_DATA_PITCH_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_TEXTURE_DATA_PITCH_ALIGNMENT();
    }
    public static @C("int") int D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT();
    }
    public static @C("int") int D3D12_TILED_RESOURCE_TILE_SIZE_IN_BYTES() {
        return d3d12_h$constants$12.D3D12_TILED_RESOURCE_TILE_SIZE_IN_BYTES();
    }
    public static @C("int") int D3D12_TRACKED_WORKLOAD_MAX_INSTANCES() {
        return d3d12_h$constants$12.D3D12_TRACKED_WORKLOAD_MAX_INSTANCES();
    }
    public static @C("int") int D3D12_UAV_COUNTER_PLACEMENT_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_UAV_COUNTER_PLACEMENT_ALIGNMENT();
    }
    public static @C("int") int D3D12_UAV_SLOT_COUNT() {
        return d3d12_h$constants$12.D3D12_UAV_SLOT_COUNT();
    }
    public static @C("int") int D3D12_UNBOUND_MEMORY_ACCESS_RESULT() {
        return d3d12_h$constants$12.D3D12_UNBOUND_MEMORY_ACCESS_RESULT();
    }
    public static @C("int") int D3D12_VIDEO_DECODE_MAX_ARGUMENTS() {
        return d3d12_h$constants$12.D3D12_VIDEO_DECODE_MAX_ARGUMENTS();
    }
    public static @C("int") int D3D12_VIDEO_DECODE_MAX_HISTOGRAM_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_VIDEO_DECODE_MAX_HISTOGRAM_COMPONENTS();
    }
    public static @C("int") int D3D12_VIDEO_DECODE_MIN_BITSTREAM_OFFSET_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_VIDEO_DECODE_MIN_BITSTREAM_OFFSET_ALIGNMENT();
    }
    public static @C("int") int D3D12_VIDEO_DECODE_MIN_HISTOGRAM_OFFSET_ALIGNMENT() {
        return d3d12_h$constants$12.D3D12_VIDEO_DECODE_MIN_HISTOGRAM_OFFSET_ALIGNMENT();
    }
    public static @C("unsigned int") int D3D12_VIDEO_DECODE_STATUS_MACROBLOCKS_AFFECTED_UNKNOWN() {
        return d3d12_h$constants$12.D3D12_VIDEO_DECODE_STATUS_MACROBLOCKS_AFFECTED_UNKNOWN();
    }
    public static @C("int") int D3D12_VIDEO_PROCESS_MAX_FILTERS() {
        return d3d12_h$constants$12.D3D12_VIDEO_PROCESS_MAX_FILTERS();
    }
    public static @C("int") int D3D12_VIDEO_PROCESS_STEREO_VIEWS() {
        return d3d12_h$constants$12.D3D12_VIDEO_PROCESS_STEREO_VIEWS();
    }
    public static @C("int") int D3D12_VIEWPORT_AND_SCISSORRECT_MAX_INDEX() {
        return d3d12_h$constants$12.D3D12_VIEWPORT_AND_SCISSORRECT_MAX_INDEX();
    }
    public static @C("int") int D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE() {
        return d3d12_h$constants$12.D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE();
    }
    public static @C("int") int D3D12_VIEWPORT_BOUNDS_MAX() {
        return d3d12_h$constants$12.D3D12_VIEWPORT_BOUNDS_MAX();
    }
    public static @C("int") int D3D12_VIEWPORT_BOUNDS_MIN() {
        return d3d12_h$constants$12.D3D12_VIEWPORT_BOUNDS_MIN();
    }
    public static @C("int") int D3D12_VS_INPUT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_VS_INPUT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_VS_INPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_VS_INPUT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_VS_INPUT_REGISTER_READS_PER_INST() {
        return d3d12_h$constants$12.D3D12_VS_INPUT_REGISTER_READS_PER_INST();
    }
    public static @C("int") int D3D12_VS_INPUT_REGISTER_READ_PORTS() {
        return d3d12_h$constants$12.D3D12_VS_INPUT_REGISTER_READ_PORTS();
    }
    public static @C("int") int D3D12_VS_OUTPUT_REGISTER_COMPONENTS() {
        return d3d12_h$constants$12.D3D12_VS_OUTPUT_REGISTER_COMPONENTS();
    }
    public static @C("int") int D3D12_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT() {
        return d3d12_h$constants$12.D3D12_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT();
    }
    public static @C("int") int D3D12_VS_OUTPUT_REGISTER_COUNT() {
        return d3d12_h$constants$12.D3D12_VS_OUTPUT_REGISTER_COUNT();
    }
    public static @C("int") int D3D12_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT() {
        return d3d12_h$constants$12.D3D12_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT();
    }
    public static @C("int") int D3D12_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP() {
        return d3d12_h$constants$12.D3D12_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP();
    }
    public static @C("int") int D3D12_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP() {
        return d3d12_h$constants$12.D3D12_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP();
    }
    public static @C("int") int D3D12_SHADER_COMPONENT_MAPPING_ALWAYS_SET_BIT_AVOIDING_ZEROMEM_MISTAKES() {
        return d3d12_h$constants$12.D3D12_SHADER_COMPONENT_MAPPING_ALWAYS_SET_BIT_AVOIDING_ZEROMEM_MISTAKES();
    }
    public static @C("int") int D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING() {
        return d3d12_h$constants$12.D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING();
    }
    public static @C("int") int D3D12_FILTER_REDUCTION_TYPE_MASK() {
        return d3d12_h$constants$12.D3D12_FILTER_REDUCTION_TYPE_MASK();
    }
    public static @C("int") int D3D12_FILTER_REDUCTION_TYPE_SHIFT() {
        return d3d12_h$constants$12.D3D12_FILTER_REDUCTION_TYPE_SHIFT();
    }
    public static @C("int") int D3D12_FILTER_TYPE_MASK() {
        return d3d12_h$constants$12.D3D12_FILTER_TYPE_MASK();
    }
    public static @C("int") int D3D12_MIN_FILTER_SHIFT() {
        return d3d12_h$constants$12.D3D12_MIN_FILTER_SHIFT();
    }
    public static @C("int") int D3D12_MAG_FILTER_SHIFT() {
        return d3d12_h$constants$12.D3D12_MAG_FILTER_SHIFT();
    }
    public static @C("int") int D3D12_MIP_FILTER_SHIFT() {
        return d3d12_h$constants$12.D3D12_MIP_FILTER_SHIFT();
    }
    public static @C("int") int D3D12_ANISOTROPIC_FILTERING_BIT() {
        return d3d12_h$constants$12.D3D12_ANISOTROPIC_FILTERING_BIT();
    }
    public static @C("struct tagRECT") class D3D12_RECT {
        private D3D12_RECT() {}
        public static @C("struct tagRECT*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct tagRECT*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
    }
}


