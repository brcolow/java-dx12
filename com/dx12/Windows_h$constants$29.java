// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class Windows_h$constants$29 extends Windows_h$constants$28 {
    Windows_h$constants$29() {}
    static final MemoryLayout tagEMRBITBLT$offBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRBITBLT$offBmiSrc$LAYOUT() { return tagEMRBITBLT$offBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRBITBLT$offBmiSrc$VH_ = tagEMRBITBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRBITBLT$offBmiSrc$VH() { return tagEMRBITBLT$offBmiSrc$VH_; }

    static final MemoryLayout tagEMRBITBLT$cbBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRBITBLT$cbBmiSrc$LAYOUT() { return tagEMRBITBLT$cbBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRBITBLT$cbBmiSrc$VH_ = tagEMRBITBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRBITBLT$cbBmiSrc$VH() { return tagEMRBITBLT$cbBmiSrc$VH_; }

    static final MemoryLayout tagEMRBITBLT$offBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRBITBLT$offBitsSrc$LAYOUT() { return tagEMRBITBLT$offBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRBITBLT$offBitsSrc$VH_ = tagEMRBITBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRBITBLT$offBitsSrc$VH() { return tagEMRBITBLT$offBitsSrc$VH_; }

    static final MemoryLayout tagEMRBITBLT$cbBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRBITBLT$cbBitsSrc$LAYOUT() { return tagEMRBITBLT$cbBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRBITBLT$cbBitsSrc$VH_ = tagEMRBITBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRBITBLT$cbBitsSrc$VH() { return tagEMRBITBLT$cbBitsSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        C_INT.withName("xDest"),
        C_INT.withName("yDest"),
        C_INT.withName("cxDest"),
        C_INT.withName("cyDest"),
        C_INT.withName("dwRop"),
        C_INT.withName("xSrc"),
        C_INT.withName("ySrc"),
        MemoryLayout.ofStruct(
            C_FLOAT.withName("eM11"),
            C_FLOAT.withName("eM12"),
            C_FLOAT.withName("eM21"),
            C_FLOAT.withName("eM22"),
            C_FLOAT.withName("eDx"),
            C_FLOAT.withName("eDy")
        ).withName("xformSrc"),
        C_INT.withName("crBkColorSrc"),
        C_INT.withName("iUsageSrc"),
        C_INT.withName("offBmiSrc"),
        C_INT.withName("cbBmiSrc"),
        C_INT.withName("offBitsSrc"),
        C_INT.withName("cbBitsSrc"),
        C_INT.withName("cxSrc"),
        C_INT.withName("cySrc")
    ).withName("tagEMRSTRETCHBLT");
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$struct$LAYOUT() { return tagEMRSTRETCHBLT$struct$LAYOUT_; }

    static final MemoryLayout tagEMRSTRETCHBLT$xDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$xDest$LAYOUT() { return tagEMRSTRETCHBLT$xDest$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$xDest$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xDest"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$xDest$VH() { return tagEMRSTRETCHBLT$xDest$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$yDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$yDest$LAYOUT() { return tagEMRSTRETCHBLT$yDest$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$yDest$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yDest"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$yDest$VH() { return tagEMRSTRETCHBLT$yDest$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$cxDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$cxDest$LAYOUT() { return tagEMRSTRETCHBLT$cxDest$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$cxDest$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxDest"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$cxDest$VH() { return tagEMRSTRETCHBLT$cxDest$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$cyDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$cyDest$LAYOUT() { return tagEMRSTRETCHBLT$cyDest$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$cyDest$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cyDest"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$cyDest$VH() { return tagEMRSTRETCHBLT$cyDest$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$dwRop$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$dwRop$LAYOUT() { return tagEMRSTRETCHBLT$dwRop$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$dwRop$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRop"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$dwRop$VH() { return tagEMRSTRETCHBLT$dwRop$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$xSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$xSrc$LAYOUT() { return tagEMRSTRETCHBLT$xSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$xSrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$xSrc$VH() { return tagEMRSTRETCHBLT$xSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$ySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$ySrc$LAYOUT() { return tagEMRSTRETCHBLT$ySrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$ySrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ySrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$ySrc$VH() { return tagEMRSTRETCHBLT$ySrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$crBkColorSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$crBkColorSrc$LAYOUT() { return tagEMRSTRETCHBLT$crBkColorSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$crBkColorSrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("crBkColorSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$crBkColorSrc$VH() { return tagEMRSTRETCHBLT$crBkColorSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$iUsageSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$iUsageSrc$LAYOUT() { return tagEMRSTRETCHBLT$iUsageSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$iUsageSrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$iUsageSrc$VH() { return tagEMRSTRETCHBLT$iUsageSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$offBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$offBmiSrc$LAYOUT() { return tagEMRSTRETCHBLT$offBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$offBmiSrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$offBmiSrc$VH() { return tagEMRSTRETCHBLT$offBmiSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$cbBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$cbBmiSrc$LAYOUT() { return tagEMRSTRETCHBLT$cbBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$cbBmiSrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$cbBmiSrc$VH() { return tagEMRSTRETCHBLT$cbBmiSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$offBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$offBitsSrc$LAYOUT() { return tagEMRSTRETCHBLT$offBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$offBitsSrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$offBitsSrc$VH() { return tagEMRSTRETCHBLT$offBitsSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$cbBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$cbBitsSrc$LAYOUT() { return tagEMRSTRETCHBLT$cbBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$cbBitsSrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$cbBitsSrc$VH() { return tagEMRSTRETCHBLT$cbBitsSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$cxSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$cxSrc$LAYOUT() { return tagEMRSTRETCHBLT$cxSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$cxSrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$cxSrc$VH() { return tagEMRSTRETCHBLT$cxSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHBLT$cySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHBLT$cySrc$LAYOUT() { return tagEMRSTRETCHBLT$cySrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHBLT$cySrc$VH_ = tagEMRSTRETCHBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cySrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHBLT$cySrc$VH() { return tagEMRSTRETCHBLT$cySrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        C_INT.withName("xDest"),
        C_INT.withName("yDest"),
        C_INT.withName("cxDest"),
        C_INT.withName("cyDest"),
        C_INT.withName("dwRop"),
        C_INT.withName("xSrc"),
        C_INT.withName("ySrc"),
        MemoryLayout.ofStruct(
            C_FLOAT.withName("eM11"),
            C_FLOAT.withName("eM12"),
            C_FLOAT.withName("eM21"),
            C_FLOAT.withName("eM22"),
            C_FLOAT.withName("eDx"),
            C_FLOAT.withName("eDy")
        ).withName("xformSrc"),
        C_INT.withName("crBkColorSrc"),
        C_INT.withName("iUsageSrc"),
        C_INT.withName("offBmiSrc"),
        C_INT.withName("cbBmiSrc"),
        C_INT.withName("offBitsSrc"),
        C_INT.withName("cbBitsSrc"),
        C_INT.withName("xMask"),
        C_INT.withName("yMask"),
        C_INT.withName("iUsageMask"),
        C_INT.withName("offBmiMask"),
        C_INT.withName("cbBmiMask"),
        C_INT.withName("offBitsMask"),
        C_INT.withName("cbBitsMask")
    ).withName("tagEMRMASKBLT");
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$struct$LAYOUT() { return tagEMRMASKBLT$struct$LAYOUT_; }

    static final MemoryLayout tagEMRMASKBLT$xDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$xDest$LAYOUT() { return tagEMRMASKBLT$xDest$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$xDest$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xDest"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$xDest$VH() { return tagEMRMASKBLT$xDest$VH_; }

    static final MemoryLayout tagEMRMASKBLT$yDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$yDest$LAYOUT() { return tagEMRMASKBLT$yDest$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$yDest$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yDest"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$yDest$VH() { return tagEMRMASKBLT$yDest$VH_; }

    static final MemoryLayout tagEMRMASKBLT$cxDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$cxDest$LAYOUT() { return tagEMRMASKBLT$cxDest$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$cxDest$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxDest"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$cxDest$VH() { return tagEMRMASKBLT$cxDest$VH_; }

    static final MemoryLayout tagEMRMASKBLT$cyDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$cyDest$LAYOUT() { return tagEMRMASKBLT$cyDest$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$cyDest$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cyDest"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$cyDest$VH() { return tagEMRMASKBLT$cyDest$VH_; }

    static final MemoryLayout tagEMRMASKBLT$dwRop$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$dwRop$LAYOUT() { return tagEMRMASKBLT$dwRop$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$dwRop$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRop"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$dwRop$VH() { return tagEMRMASKBLT$dwRop$VH_; }

    static final MemoryLayout tagEMRMASKBLT$xSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$xSrc$LAYOUT() { return tagEMRMASKBLT$xSrc$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$xSrc$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xSrc"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$xSrc$VH() { return tagEMRMASKBLT$xSrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$ySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$ySrc$LAYOUT() { return tagEMRMASKBLT$ySrc$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$ySrc$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ySrc"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$ySrc$VH() { return tagEMRMASKBLT$ySrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$crBkColorSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$crBkColorSrc$LAYOUT() { return tagEMRMASKBLT$crBkColorSrc$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$crBkColorSrc$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("crBkColorSrc"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$crBkColorSrc$VH() { return tagEMRMASKBLT$crBkColorSrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$iUsageSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$iUsageSrc$LAYOUT() { return tagEMRMASKBLT$iUsageSrc$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$iUsageSrc$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageSrc"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$iUsageSrc$VH() { return tagEMRMASKBLT$iUsageSrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$offBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$offBmiSrc$LAYOUT() { return tagEMRMASKBLT$offBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$offBmiSrc$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$offBmiSrc$VH() { return tagEMRMASKBLT$offBmiSrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$cbBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$cbBmiSrc$LAYOUT() { return tagEMRMASKBLT$cbBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$cbBmiSrc$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$cbBmiSrc$VH() { return tagEMRMASKBLT$cbBmiSrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$offBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$offBitsSrc$LAYOUT() { return tagEMRMASKBLT$offBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$offBitsSrc$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$offBitsSrc$VH() { return tagEMRMASKBLT$offBitsSrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$cbBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$cbBitsSrc$LAYOUT() { return tagEMRMASKBLT$cbBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$cbBitsSrc$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$cbBitsSrc$VH() { return tagEMRMASKBLT$cbBitsSrc$VH_; }

    static final MemoryLayout tagEMRMASKBLT$xMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$xMask$LAYOUT() { return tagEMRMASKBLT$xMask$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$xMask$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xMask"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$xMask$VH() { return tagEMRMASKBLT$xMask$VH_; }

    static final MemoryLayout tagEMRMASKBLT$yMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$yMask$LAYOUT() { return tagEMRMASKBLT$yMask$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$yMask$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yMask"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$yMask$VH() { return tagEMRMASKBLT$yMask$VH_; }

    static final MemoryLayout tagEMRMASKBLT$iUsageMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$iUsageMask$LAYOUT() { return tagEMRMASKBLT$iUsageMask$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$iUsageMask$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageMask"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$iUsageMask$VH() { return tagEMRMASKBLT$iUsageMask$VH_; }

    static final MemoryLayout tagEMRMASKBLT$offBmiMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$offBmiMask$LAYOUT() { return tagEMRMASKBLT$offBmiMask$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$offBmiMask$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiMask"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$offBmiMask$VH() { return tagEMRMASKBLT$offBmiMask$VH_; }

    static final MemoryLayout tagEMRMASKBLT$cbBmiMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$cbBmiMask$LAYOUT() { return tagEMRMASKBLT$cbBmiMask$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$cbBmiMask$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiMask"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$cbBmiMask$VH() { return tagEMRMASKBLT$cbBmiMask$VH_; }

    static final MemoryLayout tagEMRMASKBLT$offBitsMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$offBitsMask$LAYOUT() { return tagEMRMASKBLT$offBitsMask$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$offBitsMask$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsMask"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$offBitsMask$VH() { return tagEMRMASKBLT$offBitsMask$VH_; }

    static final MemoryLayout tagEMRMASKBLT$cbBitsMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRMASKBLT$cbBitsMask$LAYOUT() { return tagEMRMASKBLT$cbBitsMask$LAYOUT_; }

    static final VarHandle tagEMRMASKBLT$cbBitsMask$VH_ = tagEMRMASKBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsMask"));
    public static java.lang.invoke.VarHandle tagEMRMASKBLT$cbBitsMask$VH() { return tagEMRMASKBLT$cbBitsMask$VH_; }

    static final MemoryLayout tagEMRPLGBLT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("_POINTL")).withName("aptlDest"),
        C_INT.withName("xSrc"),
        C_INT.withName("ySrc"),
        C_INT.withName("cxSrc"),
        C_INT.withName("cySrc"),
        MemoryLayout.ofStruct(
            C_FLOAT.withName("eM11"),
            C_FLOAT.withName("eM12"),
            C_FLOAT.withName("eM21"),
            C_FLOAT.withName("eM22"),
            C_FLOAT.withName("eDx"),
            C_FLOAT.withName("eDy")
        ).withName("xformSrc"),
        C_INT.withName("crBkColorSrc"),
        C_INT.withName("iUsageSrc"),
        C_INT.withName("offBmiSrc"),
        C_INT.withName("cbBmiSrc"),
        C_INT.withName("offBitsSrc"),
        C_INT.withName("cbBitsSrc"),
        C_INT.withName("xMask"),
        C_INT.withName("yMask"),
        C_INT.withName("iUsageMask"),
        C_INT.withName("offBmiMask"),
        C_INT.withName("cbBmiMask"),
        C_INT.withName("offBitsMask"),
        C_INT.withName("cbBitsMask")
    ).withName("tagEMRPLGBLT");
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$struct$LAYOUT() { return tagEMRPLGBLT$struct$LAYOUT_; }

    static final MemoryLayout tagEMRPLGBLT$xSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$xSrc$LAYOUT() { return tagEMRPLGBLT$xSrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$xSrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xSrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$xSrc$VH() { return tagEMRPLGBLT$xSrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$ySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$ySrc$LAYOUT() { return tagEMRPLGBLT$ySrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$ySrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ySrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$ySrc$VH() { return tagEMRPLGBLT$ySrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$cxSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$cxSrc$LAYOUT() { return tagEMRPLGBLT$cxSrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$cxSrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxSrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$cxSrc$VH() { return tagEMRPLGBLT$cxSrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$cySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$cySrc$LAYOUT() { return tagEMRPLGBLT$cySrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$cySrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cySrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$cySrc$VH() { return tagEMRPLGBLT$cySrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$crBkColorSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$crBkColorSrc$LAYOUT() { return tagEMRPLGBLT$crBkColorSrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$crBkColorSrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("crBkColorSrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$crBkColorSrc$VH() { return tagEMRPLGBLT$crBkColorSrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$iUsageSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$iUsageSrc$LAYOUT() { return tagEMRPLGBLT$iUsageSrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$iUsageSrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageSrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$iUsageSrc$VH() { return tagEMRPLGBLT$iUsageSrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$offBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$offBmiSrc$LAYOUT() { return tagEMRPLGBLT$offBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$offBmiSrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$offBmiSrc$VH() { return tagEMRPLGBLT$offBmiSrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$cbBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$cbBmiSrc$LAYOUT() { return tagEMRPLGBLT$cbBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$cbBmiSrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$cbBmiSrc$VH() { return tagEMRPLGBLT$cbBmiSrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$offBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$offBitsSrc$LAYOUT() { return tagEMRPLGBLT$offBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$offBitsSrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$offBitsSrc$VH() { return tagEMRPLGBLT$offBitsSrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$cbBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$cbBitsSrc$LAYOUT() { return tagEMRPLGBLT$cbBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$cbBitsSrc$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$cbBitsSrc$VH() { return tagEMRPLGBLT$cbBitsSrc$VH_; }

    static final MemoryLayout tagEMRPLGBLT$xMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$xMask$LAYOUT() { return tagEMRPLGBLT$xMask$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$xMask$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xMask"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$xMask$VH() { return tagEMRPLGBLT$xMask$VH_; }

    static final MemoryLayout tagEMRPLGBLT$yMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$yMask$LAYOUT() { return tagEMRPLGBLT$yMask$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$yMask$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yMask"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$yMask$VH() { return tagEMRPLGBLT$yMask$VH_; }

    static final MemoryLayout tagEMRPLGBLT$iUsageMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$iUsageMask$LAYOUT() { return tagEMRPLGBLT$iUsageMask$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$iUsageMask$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageMask"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$iUsageMask$VH() { return tagEMRPLGBLT$iUsageMask$VH_; }

    static final MemoryLayout tagEMRPLGBLT$offBmiMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$offBmiMask$LAYOUT() { return tagEMRPLGBLT$offBmiMask$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$offBmiMask$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiMask"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$offBmiMask$VH() { return tagEMRPLGBLT$offBmiMask$VH_; }

    static final MemoryLayout tagEMRPLGBLT$cbBmiMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$cbBmiMask$LAYOUT() { return tagEMRPLGBLT$cbBmiMask$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$cbBmiMask$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiMask"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$cbBmiMask$VH() { return tagEMRPLGBLT$cbBmiMask$VH_; }

    static final MemoryLayout tagEMRPLGBLT$offBitsMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$offBitsMask$LAYOUT() { return tagEMRPLGBLT$offBitsMask$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$offBitsMask$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsMask"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$offBitsMask$VH() { return tagEMRPLGBLT$offBitsMask$VH_; }

    static final MemoryLayout tagEMRPLGBLT$cbBitsMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRPLGBLT$cbBitsMask$LAYOUT() { return tagEMRPLGBLT$cbBitsMask$LAYOUT_; }

    static final VarHandle tagEMRPLGBLT$cbBitsMask$VH_ = tagEMRPLGBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsMask"));
    public static java.lang.invoke.VarHandle tagEMRPLGBLT$cbBitsMask$VH() { return tagEMRPLGBLT$cbBitsMask$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        C_INT.withName("xDest"),
        C_INT.withName("yDest"),
        C_INT.withName("xSrc"),
        C_INT.withName("ySrc"),
        C_INT.withName("cxSrc"),
        C_INT.withName("cySrc"),
        C_INT.withName("offBmiSrc"),
        C_INT.withName("cbBmiSrc"),
        C_INT.withName("offBitsSrc"),
        C_INT.withName("cbBitsSrc"),
        C_INT.withName("iUsageSrc"),
        C_INT.withName("iStartScan"),
        C_INT.withName("cScans")
    ).withName("tagEMRSETDIBITSTODEVICE");
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$struct$LAYOUT() { return tagEMRSETDIBITSTODEVICE$struct$LAYOUT_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$xDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$xDest$LAYOUT() { return tagEMRSETDIBITSTODEVICE$xDest$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$xDest$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xDest"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$xDest$VH() { return tagEMRSETDIBITSTODEVICE$xDest$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$yDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$yDest$LAYOUT() { return tagEMRSETDIBITSTODEVICE$yDest$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$yDest$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yDest"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$yDest$VH() { return tagEMRSETDIBITSTODEVICE$yDest$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$xSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$xSrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$xSrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$xSrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xSrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$xSrc$VH() { return tagEMRSETDIBITSTODEVICE$xSrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$ySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$ySrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$ySrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$ySrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ySrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$ySrc$VH() { return tagEMRSETDIBITSTODEVICE$ySrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$cxSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$cxSrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$cxSrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$cxSrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxSrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$cxSrc$VH() { return tagEMRSETDIBITSTODEVICE$cxSrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$cySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$cySrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$cySrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$cySrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cySrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$cySrc$VH() { return tagEMRSETDIBITSTODEVICE$cySrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$offBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$offBmiSrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$offBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$offBmiSrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$offBmiSrc$VH() { return tagEMRSETDIBITSTODEVICE$offBmiSrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$cbBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$cbBmiSrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$cbBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$cbBmiSrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$cbBmiSrc$VH() { return tagEMRSETDIBITSTODEVICE$cbBmiSrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$offBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$offBitsSrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$offBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$offBitsSrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$offBitsSrc$VH() { return tagEMRSETDIBITSTODEVICE$offBitsSrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$cbBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$cbBitsSrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$cbBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$cbBitsSrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$cbBitsSrc$VH() { return tagEMRSETDIBITSTODEVICE$cbBitsSrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$iUsageSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$iUsageSrc$LAYOUT() { return tagEMRSETDIBITSTODEVICE$iUsageSrc$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$iUsageSrc$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageSrc"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$iUsageSrc$VH() { return tagEMRSETDIBITSTODEVICE$iUsageSrc$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$iStartScan$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$iStartScan$LAYOUT() { return tagEMRSETDIBITSTODEVICE$iStartScan$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$iStartScan$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iStartScan"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$iStartScan$VH() { return tagEMRSETDIBITSTODEVICE$iStartScan$VH_; }

    static final MemoryLayout tagEMRSETDIBITSTODEVICE$cScans$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETDIBITSTODEVICE$cScans$LAYOUT() { return tagEMRSETDIBITSTODEVICE$cScans$LAYOUT_; }

    static final VarHandle tagEMRSETDIBITSTODEVICE$cScans$VH_ = tagEMRSETDIBITSTODEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cScans"));
    public static java.lang.invoke.VarHandle tagEMRSETDIBITSTODEVICE$cScans$VH() { return tagEMRSETDIBITSTODEVICE$cScans$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        C_INT.withName("xDest"),
        C_INT.withName("yDest"),
        C_INT.withName("xSrc"),
        C_INT.withName("ySrc"),
        C_INT.withName("cxSrc"),
        C_INT.withName("cySrc"),
        C_INT.withName("offBmiSrc"),
        C_INT.withName("cbBmiSrc"),
        C_INT.withName("offBitsSrc"),
        C_INT.withName("cbBitsSrc"),
        C_INT.withName("iUsageSrc"),
        C_INT.withName("dwRop"),
        C_INT.withName("cxDest"),
        C_INT.withName("cyDest")
    ).withName("tagEMRSTRETCHDIBITS");
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$struct$LAYOUT() { return tagEMRSTRETCHDIBITS$struct$LAYOUT_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$xDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$xDest$LAYOUT() { return tagEMRSTRETCHDIBITS$xDest$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$xDest$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xDest"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$xDest$VH() { return tagEMRSTRETCHDIBITS$xDest$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$yDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$yDest$LAYOUT() { return tagEMRSTRETCHDIBITS$yDest$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$yDest$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yDest"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$yDest$VH() { return tagEMRSTRETCHDIBITS$yDest$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$xSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$xSrc$LAYOUT() { return tagEMRSTRETCHDIBITS$xSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$xSrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$xSrc$VH() { return tagEMRSTRETCHDIBITS$xSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$ySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$ySrc$LAYOUT() { return tagEMRSTRETCHDIBITS$ySrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$ySrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ySrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$ySrc$VH() { return tagEMRSTRETCHDIBITS$ySrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$cxSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$cxSrc$LAYOUT() { return tagEMRSTRETCHDIBITS$cxSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$cxSrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$cxSrc$VH() { return tagEMRSTRETCHDIBITS$cxSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$cySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$cySrc$LAYOUT() { return tagEMRSTRETCHDIBITS$cySrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$cySrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cySrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$cySrc$VH() { return tagEMRSTRETCHDIBITS$cySrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$offBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$offBmiSrc$LAYOUT() { return tagEMRSTRETCHDIBITS$offBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$offBmiSrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$offBmiSrc$VH() { return tagEMRSTRETCHDIBITS$offBmiSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$cbBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$cbBmiSrc$LAYOUT() { return tagEMRSTRETCHDIBITS$cbBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$cbBmiSrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$cbBmiSrc$VH() { return tagEMRSTRETCHDIBITS$cbBmiSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$offBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$offBitsSrc$LAYOUT() { return tagEMRSTRETCHDIBITS$offBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$offBitsSrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$offBitsSrc$VH() { return tagEMRSTRETCHDIBITS$offBitsSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$cbBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$cbBitsSrc$LAYOUT() { return tagEMRSTRETCHDIBITS$cbBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$cbBitsSrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$cbBitsSrc$VH() { return tagEMRSTRETCHDIBITS$cbBitsSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$iUsageSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$iUsageSrc$LAYOUT() { return tagEMRSTRETCHDIBITS$iUsageSrc$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$iUsageSrc$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageSrc"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$iUsageSrc$VH() { return tagEMRSTRETCHDIBITS$iUsageSrc$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$dwRop$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$dwRop$LAYOUT() { return tagEMRSTRETCHDIBITS$dwRop$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$dwRop$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRop"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$dwRop$VH() { return tagEMRSTRETCHDIBITS$dwRop$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$cxDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$cxDest$LAYOUT() { return tagEMRSTRETCHDIBITS$cxDest$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$cxDest$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxDest"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$cxDest$VH() { return tagEMRSTRETCHDIBITS$cxDest$VH_; }

    static final MemoryLayout tagEMRSTRETCHDIBITS$cyDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSTRETCHDIBITS$cyDest$LAYOUT() { return tagEMRSTRETCHDIBITS$cyDest$LAYOUT_; }

    static final VarHandle tagEMRSTRETCHDIBITS$cyDest$VH_ = tagEMRSTRETCHDIBITS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cyDest"));
    public static java.lang.invoke.VarHandle tagEMRSTRETCHDIBITS$cyDest$VH() { return tagEMRSTRETCHDIBITS$cyDest$VH_; }

    static final MemoryLayout tagEMREXTCREATEFONTINDIRECTW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihFont"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_INT.withName("lfHeight"),
                C_INT.withName("lfWidth"),
                C_INT.withName("lfEscapement"),
                C_INT.withName("lfOrientation"),
                C_INT.withName("lfWeight"),
                C_BOOL.withName("lfItalic"),
                C_BOOL.withName("lfUnderline"),
                C_BOOL.withName("lfStrikeOut"),
                C_BOOL.withName("lfCharSet"),
                C_BOOL.withName("lfOutPrecision"),
                C_BOOL.withName("lfClipPrecision"),
                C_BOOL.withName("lfQuality"),
                C_BOOL.withName("lfPitchAndFamily"),
                MemoryLayout.ofSequence(32, C_SHORT).withName("lfFaceName")
            ).withName("elfLogFont"),
            MemoryLayout.ofSequence(64, C_SHORT).withName("elfFullName"),
            MemoryLayout.ofSequence(32, C_SHORT).withName("elfStyle"),
            C_INT.withName("elfVersion"),
            C_INT.withName("elfStyleSize"),
            C_INT.withName("elfMatch"),
            C_INT.withName("elfReserved"),
            MemoryLayout.ofSequence(4, C_BOOL).withName("elfVendorId"),
            C_INT.withName("elfCulture"),
            MemoryLayout.ofStruct(
                C_BOOL.withName("bFamilyType"),
                C_BOOL.withName("bSerifStyle"),
                C_BOOL.withName("bWeight"),
                C_BOOL.withName("bProportion"),
                C_BOOL.withName("bContrast"),
                C_BOOL.withName("bStrokeVariation"),
                C_BOOL.withName("bArmStyle"),
                C_BOOL.withName("bLetterform"),
                C_BOOL.withName("bMidline"),
                C_BOOL.withName("bXHeight")
            ).withName("elfPanose"),
            MemoryLayout.ofPaddingBits(16)
        ).withName("elfw")
    ).withName("tagEMREXTCREATEFONTINDIRECTW");
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTCREATEFONTINDIRECTW$struct$LAYOUT() { return tagEMREXTCREATEFONTINDIRECTW$struct$LAYOUT_; }

    static final MemoryLayout tagEMREXTCREATEFONTINDIRECTW$ihFont$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTCREATEFONTINDIRECTW$ihFont$LAYOUT() { return tagEMREXTCREATEFONTINDIRECTW$ihFont$LAYOUT_; }

    static final VarHandle tagEMREXTCREATEFONTINDIRECTW$ihFont$VH_ = tagEMREXTCREATEFONTINDIRECTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihFont"));
    public static java.lang.invoke.VarHandle tagEMREXTCREATEFONTINDIRECTW$ihFont$VH() { return tagEMREXTCREATEFONTINDIRECTW$ihFont$VH_; }

    static final MemoryLayout tagEMRCREATEPALETTE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihPal"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("palVersion"),
            C_SHORT.withName("palNumEntries"),
            MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
                C_BOOL.withName("peRed"),
                C_BOOL.withName("peGreen"),
                C_BOOL.withName("peBlue"),
                C_BOOL.withName("peFlags")
            ).withName("tagPALETTEENTRY")).withName("palPalEntry")
        ).withName("lgpl")
    ).withName("tagEMRCREATEPALETTE");
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEPALETTE$struct$LAYOUT() { return tagEMRCREATEPALETTE$struct$LAYOUT_; }

    static final MemoryLayout tagEMRCREATEPALETTE$ihPal$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEPALETTE$ihPal$LAYOUT() { return tagEMRCREATEPALETTE$ihPal$LAYOUT_; }

    static final VarHandle tagEMRCREATEPALETTE$ihPal$VH_ = tagEMRCREATEPALETTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihPal"));
    public static java.lang.invoke.VarHandle tagEMRCREATEPALETTE$ihPal$VH() { return tagEMRCREATEPALETTE$ihPal$VH_; }

    static final MemoryLayout tagEMRCREATEPEN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihPen"),
        MemoryLayout.ofStruct(
            C_INT.withName("lopnStyle"),
            MemoryLayout.ofStruct(
                C_INT.withName("x"),
                C_INT.withName("y")
            ).withName("lopnWidth"),
            C_INT.withName("lopnColor")
        ).withName("lopn")
    ).withName("tagEMRCREATEPEN");
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEPEN$struct$LAYOUT() { return tagEMRCREATEPEN$struct$LAYOUT_; }

    static final MemoryLayout tagEMRCREATEPEN$ihPen$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEPEN$ihPen$LAYOUT() { return tagEMRCREATEPEN$ihPen$LAYOUT_; }

    static final VarHandle tagEMRCREATEPEN$ihPen$VH_ = tagEMRCREATEPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihPen"));
    public static java.lang.invoke.VarHandle tagEMRCREATEPEN$ihPen$VH() { return tagEMRCREATEPEN$ihPen$VH_; }

    static final MemoryLayout tagEMREXTCREATEPEN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihPen"),
        C_INT.withName("offBmi"),
        C_INT.withName("cbBmi"),
        C_INT.withName("offBits"),
        C_INT.withName("cbBits"),
        MemoryLayout.ofStruct(
            C_INT.withName("elpPenStyle"),
            C_INT.withName("elpWidth"),
            C_INT.withName("elpBrushStyle"),
            C_INT.withName("elpColor"),
            C_INT.withName("elpHatch"),
            C_INT.withName("elpNumEntries"),
            MemoryLayout.ofSequence(1, C_INT).withName("elpStyleEntry")
        ).withName("elp")
    ).withName("tagEMREXTCREATEPEN");
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTCREATEPEN$struct$LAYOUT() { return tagEMREXTCREATEPEN$struct$LAYOUT_; }

    static final MemoryLayout tagEMREXTCREATEPEN$ihPen$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTCREATEPEN$ihPen$LAYOUT() { return tagEMREXTCREATEPEN$ihPen$LAYOUT_; }

    static final VarHandle tagEMREXTCREATEPEN$ihPen$VH_ = tagEMREXTCREATEPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihPen"));
    public static java.lang.invoke.VarHandle tagEMREXTCREATEPEN$ihPen$VH() { return tagEMREXTCREATEPEN$ihPen$VH_; }

    static final MemoryLayout tagEMREXTCREATEPEN$offBmi$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTCREATEPEN$offBmi$LAYOUT() { return tagEMREXTCREATEPEN$offBmi$LAYOUT_; }

    static final VarHandle tagEMREXTCREATEPEN$offBmi$VH_ = tagEMREXTCREATEPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmi"));
    public static java.lang.invoke.VarHandle tagEMREXTCREATEPEN$offBmi$VH() { return tagEMREXTCREATEPEN$offBmi$VH_; }

    static final MemoryLayout tagEMREXTCREATEPEN$cbBmi$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTCREATEPEN$cbBmi$LAYOUT() { return tagEMREXTCREATEPEN$cbBmi$LAYOUT_; }

    static final VarHandle tagEMREXTCREATEPEN$cbBmi$VH_ = tagEMREXTCREATEPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmi"));
    public static java.lang.invoke.VarHandle tagEMREXTCREATEPEN$cbBmi$VH() { return tagEMREXTCREATEPEN$cbBmi$VH_; }

    static final MemoryLayout tagEMREXTCREATEPEN$offBits$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTCREATEPEN$offBits$LAYOUT() { return tagEMREXTCREATEPEN$offBits$LAYOUT_; }

    static final VarHandle tagEMREXTCREATEPEN$offBits$VH_ = tagEMREXTCREATEPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBits"));
    public static java.lang.invoke.VarHandle tagEMREXTCREATEPEN$offBits$VH() { return tagEMREXTCREATEPEN$offBits$VH_; }

    static final MemoryLayout tagEMREXTCREATEPEN$cbBits$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTCREATEPEN$cbBits$LAYOUT() { return tagEMREXTCREATEPEN$cbBits$LAYOUT_; }

    static final VarHandle tagEMREXTCREATEPEN$cbBits$VH_ = tagEMREXTCREATEPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBits"));
    public static java.lang.invoke.VarHandle tagEMREXTCREATEPEN$cbBits$VH() { return tagEMREXTCREATEPEN$cbBits$VH_; }

    static final MemoryLayout tagEMRCREATEBRUSHINDIRECT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihBrush"),
        MemoryLayout.ofStruct(
            C_INT.withName("lbStyle"),
            C_INT.withName("lbColor"),
            C_INT.withName("lbHatch")
        ).withName("lb")
    ).withName("tagEMRCREATEBRUSHINDIRECT");
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEBRUSHINDIRECT$struct$LAYOUT() { return tagEMRCREATEBRUSHINDIRECT$struct$LAYOUT_; }

    static final MemoryLayout tagEMRCREATEBRUSHINDIRECT$ihBrush$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEBRUSHINDIRECT$ihBrush$LAYOUT() { return tagEMRCREATEBRUSHINDIRECT$ihBrush$LAYOUT_; }

    static final VarHandle tagEMRCREATEBRUSHINDIRECT$ihBrush$VH_ = tagEMRCREATEBRUSHINDIRECT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihBrush"));
    public static java.lang.invoke.VarHandle tagEMRCREATEBRUSHINDIRECT$ihBrush$VH() { return tagEMRCREATEBRUSHINDIRECT$ihBrush$VH_; }

    static final MemoryLayout tagEMRCREATEMONOBRUSH$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihBrush"),
        C_INT.withName("iUsage"),
        C_INT.withName("offBmi"),
        C_INT.withName("cbBmi"),
        C_INT.withName("offBits"),
        C_INT.withName("cbBits")
    ).withName("tagEMRCREATEMONOBRUSH");
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEMONOBRUSH$struct$LAYOUT() { return tagEMRCREATEMONOBRUSH$struct$LAYOUT_; }

    static final MemoryLayout tagEMRCREATEMONOBRUSH$ihBrush$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEMONOBRUSH$ihBrush$LAYOUT() { return tagEMRCREATEMONOBRUSH$ihBrush$LAYOUT_; }

    static final VarHandle tagEMRCREATEMONOBRUSH$ihBrush$VH_ = tagEMRCREATEMONOBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihBrush"));
    public static java.lang.invoke.VarHandle tagEMRCREATEMONOBRUSH$ihBrush$VH() { return tagEMRCREATEMONOBRUSH$ihBrush$VH_; }

    static final MemoryLayout tagEMRCREATEMONOBRUSH$iUsage$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEMONOBRUSH$iUsage$LAYOUT() { return tagEMRCREATEMONOBRUSH$iUsage$LAYOUT_; }

    static final VarHandle tagEMRCREATEMONOBRUSH$iUsage$VH_ = tagEMRCREATEMONOBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsage"));
    public static java.lang.invoke.VarHandle tagEMRCREATEMONOBRUSH$iUsage$VH() { return tagEMRCREATEMONOBRUSH$iUsage$VH_; }

    static final MemoryLayout tagEMRCREATEMONOBRUSH$offBmi$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEMONOBRUSH$offBmi$LAYOUT() { return tagEMRCREATEMONOBRUSH$offBmi$LAYOUT_; }

    static final VarHandle tagEMRCREATEMONOBRUSH$offBmi$VH_ = tagEMRCREATEMONOBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmi"));
    public static java.lang.invoke.VarHandle tagEMRCREATEMONOBRUSH$offBmi$VH() { return tagEMRCREATEMONOBRUSH$offBmi$VH_; }

    static final MemoryLayout tagEMRCREATEMONOBRUSH$cbBmi$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEMONOBRUSH$cbBmi$LAYOUT() { return tagEMRCREATEMONOBRUSH$cbBmi$LAYOUT_; }

    static final VarHandle tagEMRCREATEMONOBRUSH$cbBmi$VH_ = tagEMRCREATEMONOBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmi"));
    public static java.lang.invoke.VarHandle tagEMRCREATEMONOBRUSH$cbBmi$VH() { return tagEMRCREATEMONOBRUSH$cbBmi$VH_; }

    static final MemoryLayout tagEMRCREATEMONOBRUSH$offBits$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEMONOBRUSH$offBits$LAYOUT() { return tagEMRCREATEMONOBRUSH$offBits$LAYOUT_; }

    static final VarHandle tagEMRCREATEMONOBRUSH$offBits$VH_ = tagEMRCREATEMONOBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBits"));
    public static java.lang.invoke.VarHandle tagEMRCREATEMONOBRUSH$offBits$VH() { return tagEMRCREATEMONOBRUSH$offBits$VH_; }

    static final MemoryLayout tagEMRCREATEMONOBRUSH$cbBits$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEMONOBRUSH$cbBits$LAYOUT() { return tagEMRCREATEMONOBRUSH$cbBits$LAYOUT_; }

    static final VarHandle tagEMRCREATEMONOBRUSH$cbBits$VH_ = tagEMRCREATEMONOBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBits"));
    public static java.lang.invoke.VarHandle tagEMRCREATEMONOBRUSH$cbBits$VH() { return tagEMRCREATEMONOBRUSH$cbBits$VH_; }

    static final MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihBrush"),
        C_INT.withName("iUsage"),
        C_INT.withName("offBmi"),
        C_INT.withName("cbBmi"),
        C_INT.withName("offBits"),
        C_INT.withName("cbBits")
    ).withName("tagEMRCREATEDIBPATTERNBRUSHPT");
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT() { return tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT_; }

    static final MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$ihBrush$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$ihBrush$LAYOUT() { return tagEMRCREATEDIBPATTERNBRUSHPT$ihBrush$LAYOUT_; }

    static final VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$ihBrush$VH_ = tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihBrush"));
    public static java.lang.invoke.VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$ihBrush$VH() { return tagEMRCREATEDIBPATTERNBRUSHPT$ihBrush$VH_; }

    static final MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$iUsage$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$iUsage$LAYOUT() { return tagEMRCREATEDIBPATTERNBRUSHPT$iUsage$LAYOUT_; }

    static final VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$iUsage$VH_ = tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsage"));
    public static java.lang.invoke.VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$iUsage$VH() { return tagEMRCREATEDIBPATTERNBRUSHPT$iUsage$VH_; }

    static final MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$offBmi$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$offBmi$LAYOUT() { return tagEMRCREATEDIBPATTERNBRUSHPT$offBmi$LAYOUT_; }

    static final VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$offBmi$VH_ = tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmi"));
    public static java.lang.invoke.VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$offBmi$VH() { return tagEMRCREATEDIBPATTERNBRUSHPT$offBmi$VH_; }

    static final MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$cbBmi$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$cbBmi$LAYOUT() { return tagEMRCREATEDIBPATTERNBRUSHPT$cbBmi$LAYOUT_; }

    static final VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$cbBmi$VH_ = tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmi"));
    public static java.lang.invoke.VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$cbBmi$VH() { return tagEMRCREATEDIBPATTERNBRUSHPT$cbBmi$VH_; }

    static final MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$offBits$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$offBits$LAYOUT() { return tagEMRCREATEDIBPATTERNBRUSHPT$offBits$LAYOUT_; }

    static final VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$offBits$VH_ = tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBits"));
    public static java.lang.invoke.VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$offBits$VH() { return tagEMRCREATEDIBPATTERNBRUSHPT$offBits$VH_; }

    static final MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$cbBits$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATEDIBPATTERNBRUSHPT$cbBits$LAYOUT() { return tagEMRCREATEDIBPATTERNBRUSHPT$cbBits$LAYOUT_; }

    static final VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$cbBits$VH_ = tagEMRCREATEDIBPATTERNBRUSHPT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBits"));
    public static java.lang.invoke.VarHandle tagEMRCREATEDIBPATTERNBRUSHPT$cbBits$VH() { return tagEMRCREATEDIBPATTERNBRUSHPT$cbBits$VH_; }

    static final MemoryLayout tagEMRFORMAT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("dSignature"),
        C_INT.withName("nVersion"),
        C_INT.withName("cbData"),
        C_INT.withName("offData")
    ).withName("tagEMRFORMAT");
    public static jdk.incubator.foreign.MemoryLayout tagEMRFORMAT$struct$LAYOUT() { return tagEMRFORMAT$struct$LAYOUT_; }

    static final MemoryLayout tagEMRFORMAT$dSignature$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRFORMAT$dSignature$LAYOUT() { return tagEMRFORMAT$dSignature$LAYOUT_; }

    static final VarHandle tagEMRFORMAT$dSignature$VH_ = tagEMRFORMAT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dSignature"));
    public static java.lang.invoke.VarHandle tagEMRFORMAT$dSignature$VH() { return tagEMRFORMAT$dSignature$VH_; }

    static final MemoryLayout tagEMRFORMAT$nVersion$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRFORMAT$nVersion$LAYOUT() { return tagEMRFORMAT$nVersion$LAYOUT_; }

    static final VarHandle tagEMRFORMAT$nVersion$VH_ = tagEMRFORMAT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nVersion"));
    public static java.lang.invoke.VarHandle tagEMRFORMAT$nVersion$VH() { return tagEMRFORMAT$nVersion$VH_; }

    static final MemoryLayout tagEMRFORMAT$cbData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRFORMAT$cbData$LAYOUT() { return tagEMRFORMAT$cbData$LAYOUT_; }

    static final VarHandle tagEMRFORMAT$cbData$VH_ = tagEMRFORMAT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    public static java.lang.invoke.VarHandle tagEMRFORMAT$cbData$VH() { return tagEMRFORMAT$cbData$VH_; }

    static final MemoryLayout tagEMRFORMAT$offData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRFORMAT$offData$LAYOUT() { return tagEMRFORMAT$offData$LAYOUT_; }

    static final VarHandle tagEMRFORMAT$offData$VH_ = tagEMRFORMAT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offData"));
    public static java.lang.invoke.VarHandle tagEMRFORMAT$offData$VH() { return tagEMRFORMAT$offData$VH_; }

    static final MemoryLayout tagEMRGLSRECORD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("cbData"),
        MemoryLayout.ofSequence(1, C_BOOL).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagEMRGLSRECORD");
    public static jdk.incubator.foreign.MemoryLayout tagEMRGLSRECORD$struct$LAYOUT() { return tagEMRGLSRECORD$struct$LAYOUT_; }

    static final MemoryLayout tagEMRGLSRECORD$cbData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRGLSRECORD$cbData$LAYOUT() { return tagEMRGLSRECORD$cbData$LAYOUT_; }

    static final VarHandle tagEMRGLSRECORD$cbData$VH_ = tagEMRGLSRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    public static java.lang.invoke.VarHandle tagEMRGLSRECORD$cbData$VH() { return tagEMRGLSRECORD$cbData$VH_; }

    static final MemoryLayout tagEMRGLSBOUNDEDRECORD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        C_INT.withName("cbData"),
        MemoryLayout.ofSequence(1, C_BOOL).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagEMRGLSBOUNDEDRECORD");
    public static jdk.incubator.foreign.MemoryLayout tagEMRGLSBOUNDEDRECORD$struct$LAYOUT() { return tagEMRGLSBOUNDEDRECORD$struct$LAYOUT_; }

    static final MemoryLayout tagEMRGLSBOUNDEDRECORD$cbData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRGLSBOUNDEDRECORD$cbData$LAYOUT() { return tagEMRGLSBOUNDEDRECORD$cbData$LAYOUT_; }

    static final VarHandle tagEMRGLSBOUNDEDRECORD$cbData$VH_ = tagEMRGLSBOUNDEDRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    public static java.lang.invoke.VarHandle tagEMRGLSBOUNDEDRECORD$cbData$VH() { return tagEMRGLSBOUNDEDRECORD$cbData$VH_; }

    static final MemoryLayout tagEMRPIXELFORMAT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("nSize"),
            C_SHORT.withName("nVersion"),
            C_INT.withName("dwFlags"),
            C_BOOL.withName("iPixelType"),
            C_BOOL.withName("cColorBits"),
            C_BOOL.withName("cRedBits"),
            C_BOOL.withName("cRedShift"),
            C_BOOL.withName("cGreenBits"),
            C_BOOL.withName("cGreenShift"),
            C_BOOL.withName("cBlueBits"),
            C_BOOL.withName("cBlueShift"),
            C_BOOL.withName("cAlphaBits"),
            C_BOOL.withName("cAlphaShift"),
            C_BOOL.withName("cAccumBits"),
            C_BOOL.withName("cAccumRedBits"),
            C_BOOL.withName("cAccumGreenBits"),
            C_BOOL.withName("cAccumBlueBits"),
            C_BOOL.withName("cAccumAlphaBits"),
            C_BOOL.withName("cDepthBits"),
            C_BOOL.withName("cStencilBits"),
            C_BOOL.withName("cAuxBuffers"),
            C_BOOL.withName("iLayerType"),
            C_BOOL.withName("bReserved"),
            C_INT.withName("dwLayerMask"),
            C_INT.withName("dwVisibleMask"),
            C_INT.withName("dwDamageMask")
        ).withName("pfd")
    ).withName("tagEMRPIXELFORMAT");
    public static jdk.incubator.foreign.MemoryLayout tagEMRPIXELFORMAT$struct$LAYOUT() { return tagEMRPIXELFORMAT$struct$LAYOUT_; }

    static final MemoryLayout tagEMRCREATECOLORSPACE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihCS"),
        MemoryLayout.ofStruct(
            C_INT.withName("lcsSignature"),
            C_INT.withName("lcsVersion"),
            C_INT.withName("lcsSize"),
            C_INT.withName("lcsCSType"),
            C_INT.withName("lcsIntent"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_INT.withName("ciexyzX"),
                    C_INT.withName("ciexyzY"),
                    C_INT.withName("ciexyzZ")
                ).withName("ciexyzRed"),
                MemoryLayout.ofStruct(
                    C_INT.withName("ciexyzX"),
                    C_INT.withName("ciexyzY"),
                    C_INT.withName("ciexyzZ")
                ).withName("ciexyzGreen"),
                MemoryLayout.ofStruct(
                    C_INT.withName("ciexyzX"),
                    C_INT.withName("ciexyzY"),
                    C_INT.withName("ciexyzZ")
                ).withName("ciexyzBlue")
            ).withName("lcsEndpoints"),
            C_INT.withName("lcsGammaRed"),
            C_INT.withName("lcsGammaGreen"),
            C_INT.withName("lcsGammaBlue"),
            MemoryLayout.ofSequence(260, C_BOOL).withName("lcsFilename")
        ).withName("lcs")
    ).withName("tagEMRCREATECOLORSPACE");
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATECOLORSPACE$struct$LAYOUT() { return tagEMRCREATECOLORSPACE$struct$LAYOUT_; }

    static final MemoryLayout tagEMRCREATECOLORSPACE$ihCS$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATECOLORSPACE$ihCS$LAYOUT() { return tagEMRCREATECOLORSPACE$ihCS$LAYOUT_; }

    static final VarHandle tagEMRCREATECOLORSPACE$ihCS$VH_ = tagEMRCREATECOLORSPACE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihCS"));
    public static java.lang.invoke.VarHandle tagEMRCREATECOLORSPACE$ihCS$VH() { return tagEMRCREATECOLORSPACE$ihCS$VH_; }

    static final MemoryLayout tagEMRSETCOLORSPACE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihCS")
    ).withName("tagEMRSETCOLORSPACE");
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETCOLORSPACE$struct$LAYOUT() { return tagEMRSETCOLORSPACE$struct$LAYOUT_; }

    static final MemoryLayout tagEMRSETCOLORSPACE$ihCS$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETCOLORSPACE$ihCS$LAYOUT() { return tagEMRSETCOLORSPACE$ihCS$LAYOUT_; }

    static final VarHandle tagEMRSETCOLORSPACE$ihCS$VH_ = tagEMRSETCOLORSPACE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihCS"));
    public static java.lang.invoke.VarHandle tagEMRSETCOLORSPACE$ihCS$VH() { return tagEMRSETCOLORSPACE$ihCS$VH_; }

    static final MemoryLayout tagEMREXTESCAPE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("iEscape"),
        C_INT.withName("cbEscData"),
        MemoryLayout.ofSequence(1, C_BOOL).withName("EscData"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagEMREXTESCAPE");
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTESCAPE$struct$LAYOUT() { return tagEMREXTESCAPE$struct$LAYOUT_; }

    static final MemoryLayout tagEMREXTESCAPE$iEscape$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTESCAPE$iEscape$LAYOUT() { return tagEMREXTESCAPE$iEscape$LAYOUT_; }

    static final VarHandle tagEMREXTESCAPE$iEscape$VH_ = tagEMREXTESCAPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iEscape"));
    public static java.lang.invoke.VarHandle tagEMREXTESCAPE$iEscape$VH() { return tagEMREXTESCAPE$iEscape$VH_; }

    static final MemoryLayout tagEMREXTESCAPE$cbEscData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMREXTESCAPE$cbEscData$LAYOUT() { return tagEMREXTESCAPE$cbEscData$LAYOUT_; }

    static final VarHandle tagEMREXTESCAPE$cbEscData$VH_ = tagEMREXTESCAPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbEscData"));
    public static java.lang.invoke.VarHandle tagEMREXTESCAPE$cbEscData$VH() { return tagEMREXTESCAPE$cbEscData$VH_; }

    static final MemoryLayout tagEMRNAMEDESCAPE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("iEscape"),
        C_INT.withName("cbDriver"),
        C_INT.withName("cbEscData"),
        MemoryLayout.ofSequence(1, C_BOOL).withName("EscData"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagEMRNAMEDESCAPE");
    public static jdk.incubator.foreign.MemoryLayout tagEMRNAMEDESCAPE$struct$LAYOUT() { return tagEMRNAMEDESCAPE$struct$LAYOUT_; }

    static final MemoryLayout tagEMRNAMEDESCAPE$iEscape$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRNAMEDESCAPE$iEscape$LAYOUT() { return tagEMRNAMEDESCAPE$iEscape$LAYOUT_; }

    static final VarHandle tagEMRNAMEDESCAPE$iEscape$VH_ = tagEMRNAMEDESCAPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iEscape"));
    public static java.lang.invoke.VarHandle tagEMRNAMEDESCAPE$iEscape$VH() { return tagEMRNAMEDESCAPE$iEscape$VH_; }

    static final MemoryLayout tagEMRNAMEDESCAPE$cbDriver$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRNAMEDESCAPE$cbDriver$LAYOUT() { return tagEMRNAMEDESCAPE$cbDriver$LAYOUT_; }

    static final VarHandle tagEMRNAMEDESCAPE$cbDriver$VH_ = tagEMRNAMEDESCAPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbDriver"));
    public static java.lang.invoke.VarHandle tagEMRNAMEDESCAPE$cbDriver$VH() { return tagEMRNAMEDESCAPE$cbDriver$VH_; }

    static final MemoryLayout tagEMRNAMEDESCAPE$cbEscData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRNAMEDESCAPE$cbEscData$LAYOUT() { return tagEMRNAMEDESCAPE$cbEscData$LAYOUT_; }

    static final VarHandle tagEMRNAMEDESCAPE$cbEscData$VH_ = tagEMRNAMEDESCAPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbEscData"));
    public static java.lang.invoke.VarHandle tagEMRNAMEDESCAPE$cbEscData$VH() { return tagEMRNAMEDESCAPE$cbEscData$VH_; }

    static final MemoryLayout tagEMRSETICMPROFILE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("dwFlags"),
        C_INT.withName("cbName"),
        C_INT.withName("cbData"),
        MemoryLayout.ofSequence(1, C_BOOL).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagEMRSETICMPROFILE");
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETICMPROFILE$struct$LAYOUT() { return tagEMRSETICMPROFILE$struct$LAYOUT_; }

    static final MemoryLayout tagEMRSETICMPROFILE$dwFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETICMPROFILE$dwFlags$LAYOUT() { return tagEMRSETICMPROFILE$dwFlags$LAYOUT_; }

    static final VarHandle tagEMRSETICMPROFILE$dwFlags$VH_ = tagEMRSETICMPROFILE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    public static java.lang.invoke.VarHandle tagEMRSETICMPROFILE$dwFlags$VH() { return tagEMRSETICMPROFILE$dwFlags$VH_; }

    static final MemoryLayout tagEMRSETICMPROFILE$cbName$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETICMPROFILE$cbName$LAYOUT() { return tagEMRSETICMPROFILE$cbName$LAYOUT_; }

    static final VarHandle tagEMRSETICMPROFILE$cbName$VH_ = tagEMRSETICMPROFILE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbName"));
    public static java.lang.invoke.VarHandle tagEMRSETICMPROFILE$cbName$VH() { return tagEMRSETICMPROFILE$cbName$VH_; }

    static final MemoryLayout tagEMRSETICMPROFILE$cbData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRSETICMPROFILE$cbData$LAYOUT() { return tagEMRSETICMPROFILE$cbData$LAYOUT_; }

    static final VarHandle tagEMRSETICMPROFILE$cbData$VH_ = tagEMRSETICMPROFILE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    public static java.lang.invoke.VarHandle tagEMRSETICMPROFILE$cbData$VH() { return tagEMRSETICMPROFILE$cbData$VH_; }

    static final MemoryLayout tagEMRCREATECOLORSPACEW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihCS"),
        MemoryLayout.ofStruct(
            C_INT.withName("lcsSignature"),
            C_INT.withName("lcsVersion"),
            C_INT.withName("lcsSize"),
            C_INT.withName("lcsCSType"),
            C_INT.withName("lcsIntent"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_INT.withName("ciexyzX"),
                    C_INT.withName("ciexyzY"),
                    C_INT.withName("ciexyzZ")
                ).withName("ciexyzRed"),
                MemoryLayout.ofStruct(
                    C_INT.withName("ciexyzX"),
                    C_INT.withName("ciexyzY"),
                    C_INT.withName("ciexyzZ")
                ).withName("ciexyzGreen"),
                MemoryLayout.ofStruct(
                    C_INT.withName("ciexyzX"),
                    C_INT.withName("ciexyzY"),
                    C_INT.withName("ciexyzZ")
                ).withName("ciexyzBlue")
            ).withName("lcsEndpoints"),
            C_INT.withName("lcsGammaRed"),
            C_INT.withName("lcsGammaGreen"),
            C_INT.withName("lcsGammaBlue"),
            MemoryLayout.ofSequence(260, C_SHORT).withName("lcsFilename")
        ).withName("lcs"),
        C_INT.withName("dwFlags"),
        C_INT.withName("cbData"),
        MemoryLayout.ofSequence(1, C_BOOL).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagEMRCREATECOLORSPACEW");
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATECOLORSPACEW$struct$LAYOUT() { return tagEMRCREATECOLORSPACEW$struct$LAYOUT_; }

    static final MemoryLayout tagEMRCREATECOLORSPACEW$ihCS$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATECOLORSPACEW$ihCS$LAYOUT() { return tagEMRCREATECOLORSPACEW$ihCS$LAYOUT_; }

    static final VarHandle tagEMRCREATECOLORSPACEW$ihCS$VH_ = tagEMRCREATECOLORSPACEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihCS"));
    public static java.lang.invoke.VarHandle tagEMRCREATECOLORSPACEW$ihCS$VH() { return tagEMRCREATECOLORSPACEW$ihCS$VH_; }

    static final MemoryLayout tagEMRCREATECOLORSPACEW$dwFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATECOLORSPACEW$dwFlags$LAYOUT() { return tagEMRCREATECOLORSPACEW$dwFlags$LAYOUT_; }

    static final VarHandle tagEMRCREATECOLORSPACEW$dwFlags$VH_ = tagEMRCREATECOLORSPACEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    public static java.lang.invoke.VarHandle tagEMRCREATECOLORSPACEW$dwFlags$VH() { return tagEMRCREATECOLORSPACEW$dwFlags$VH_; }

    static final MemoryLayout tagEMRCREATECOLORSPACEW$cbData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRCREATECOLORSPACEW$cbData$LAYOUT() { return tagEMRCREATECOLORSPACEW$cbData$LAYOUT_; }

    static final VarHandle tagEMRCREATECOLORSPACEW$cbData$VH_ = tagEMRCREATECOLORSPACEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    public static java.lang.invoke.VarHandle tagEMRCREATECOLORSPACEW$cbData$VH() { return tagEMRCREATECOLORSPACEW$cbData$VH_; }

    static final MemoryLayout tagCOLORMATCHTOTARGET$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("dwAction"),
        C_INT.withName("dwFlags"),
        C_INT.withName("cbName"),
        C_INT.withName("cbData"),
        MemoryLayout.ofSequence(1, C_BOOL).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagCOLORMATCHTOTARGET");
    public static jdk.incubator.foreign.MemoryLayout tagCOLORMATCHTOTARGET$struct$LAYOUT() { return tagCOLORMATCHTOTARGET$struct$LAYOUT_; }

    static final MemoryLayout tagCOLORMATCHTOTARGET$dwAction$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOLORMATCHTOTARGET$dwAction$LAYOUT() { return tagCOLORMATCHTOTARGET$dwAction$LAYOUT_; }

    static final VarHandle tagCOLORMATCHTOTARGET$dwAction$VH_ = tagCOLORMATCHTOTARGET$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwAction"));
    public static java.lang.invoke.VarHandle tagCOLORMATCHTOTARGET$dwAction$VH() { return tagCOLORMATCHTOTARGET$dwAction$VH_; }

    static final MemoryLayout tagCOLORMATCHTOTARGET$dwFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOLORMATCHTOTARGET$dwFlags$LAYOUT() { return tagCOLORMATCHTOTARGET$dwFlags$LAYOUT_; }

    static final VarHandle tagCOLORMATCHTOTARGET$dwFlags$VH_ = tagCOLORMATCHTOTARGET$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    public static java.lang.invoke.VarHandle tagCOLORMATCHTOTARGET$dwFlags$VH() { return tagCOLORMATCHTOTARGET$dwFlags$VH_; }

    static final MemoryLayout tagCOLORMATCHTOTARGET$cbName$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOLORMATCHTOTARGET$cbName$LAYOUT() { return tagCOLORMATCHTOTARGET$cbName$LAYOUT_; }

    static final VarHandle tagCOLORMATCHTOTARGET$cbName$VH_ = tagCOLORMATCHTOTARGET$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbName"));
    public static java.lang.invoke.VarHandle tagCOLORMATCHTOTARGET$cbName$VH() { return tagCOLORMATCHTOTARGET$cbName$VH_; }

    static final MemoryLayout tagCOLORMATCHTOTARGET$cbData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOLORMATCHTOTARGET$cbData$LAYOUT() { return tagCOLORMATCHTOTARGET$cbData$LAYOUT_; }

    static final VarHandle tagCOLORMATCHTOTARGET$cbData$VH_ = tagCOLORMATCHTOTARGET$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    public static java.lang.invoke.VarHandle tagCOLORMATCHTOTARGET$cbData$VH() { return tagCOLORMATCHTOTARGET$cbData$VH_; }

    static final MemoryLayout tagCOLORCORRECTPALETTE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        C_INT.withName("ihPalette"),
        C_INT.withName("nFirstEntry"),
        C_INT.withName("nPalEntries"),
        C_INT.withName("nReserved")
    ).withName("tagCOLORCORRECTPALETTE");
    public static jdk.incubator.foreign.MemoryLayout tagCOLORCORRECTPALETTE$struct$LAYOUT() { return tagCOLORCORRECTPALETTE$struct$LAYOUT_; }

    static final MemoryLayout tagCOLORCORRECTPALETTE$ihPalette$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOLORCORRECTPALETTE$ihPalette$LAYOUT() { return tagCOLORCORRECTPALETTE$ihPalette$LAYOUT_; }

    static final VarHandle tagCOLORCORRECTPALETTE$ihPalette$VH_ = tagCOLORCORRECTPALETTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ihPalette"));
    public static java.lang.invoke.VarHandle tagCOLORCORRECTPALETTE$ihPalette$VH() { return tagCOLORCORRECTPALETTE$ihPalette$VH_; }

    static final MemoryLayout tagCOLORCORRECTPALETTE$nFirstEntry$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOLORCORRECTPALETTE$nFirstEntry$LAYOUT() { return tagCOLORCORRECTPALETTE$nFirstEntry$LAYOUT_; }

    static final VarHandle tagCOLORCORRECTPALETTE$nFirstEntry$VH_ = tagCOLORCORRECTPALETTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nFirstEntry"));
    public static java.lang.invoke.VarHandle tagCOLORCORRECTPALETTE$nFirstEntry$VH() { return tagCOLORCORRECTPALETTE$nFirstEntry$VH_; }

    static final MemoryLayout tagCOLORCORRECTPALETTE$nPalEntries$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOLORCORRECTPALETTE$nPalEntries$LAYOUT() { return tagCOLORCORRECTPALETTE$nPalEntries$LAYOUT_; }

    static final VarHandle tagCOLORCORRECTPALETTE$nPalEntries$VH_ = tagCOLORCORRECTPALETTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nPalEntries"));
    public static java.lang.invoke.VarHandle tagCOLORCORRECTPALETTE$nPalEntries$VH() { return tagCOLORCORRECTPALETTE$nPalEntries$VH_; }

    static final MemoryLayout tagCOLORCORRECTPALETTE$nReserved$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOLORCORRECTPALETTE$nReserved$LAYOUT() { return tagCOLORCORRECTPALETTE$nReserved$LAYOUT_; }

    static final VarHandle tagCOLORCORRECTPALETTE$nReserved$VH_ = tagCOLORCORRECTPALETTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nReserved"));
    public static java.lang.invoke.VarHandle tagCOLORCORRECTPALETTE$nReserved$VH() { return tagCOLORCORRECTPALETTE$nReserved$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        C_INT.withName("xDest"),
        C_INT.withName("yDest"),
        C_INT.withName("cxDest"),
        C_INT.withName("cyDest"),
        C_INT.withName("dwRop"),
        C_INT.withName("xSrc"),
        C_INT.withName("ySrc"),
        MemoryLayout.ofStruct(
            C_FLOAT.withName("eM11"),
            C_FLOAT.withName("eM12"),
            C_FLOAT.withName("eM21"),
            C_FLOAT.withName("eM22"),
            C_FLOAT.withName("eDx"),
            C_FLOAT.withName("eDy")
        ).withName("xformSrc"),
        C_INT.withName("crBkColorSrc"),
        C_INT.withName("iUsageSrc"),
        C_INT.withName("offBmiSrc"),
        C_INT.withName("cbBmiSrc"),
        C_INT.withName("offBitsSrc"),
        C_INT.withName("cbBitsSrc"),
        C_INT.withName("cxSrc"),
        C_INT.withName("cySrc")
    ).withName("tagEMRALPHABLEND");
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$struct$LAYOUT() { return tagEMRALPHABLEND$struct$LAYOUT_; }

    static final MemoryLayout tagEMRALPHABLEND$xDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$xDest$LAYOUT() { return tagEMRALPHABLEND$xDest$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$xDest$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xDest"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$xDest$VH() { return tagEMRALPHABLEND$xDest$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$yDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$yDest$LAYOUT() { return tagEMRALPHABLEND$yDest$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$yDest$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yDest"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$yDest$VH() { return tagEMRALPHABLEND$yDest$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$cxDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$cxDest$LAYOUT() { return tagEMRALPHABLEND$cxDest$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$cxDest$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxDest"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$cxDest$VH() { return tagEMRALPHABLEND$cxDest$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$cyDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$cyDest$LAYOUT() { return tagEMRALPHABLEND$cyDest$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$cyDest$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cyDest"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$cyDest$VH() { return tagEMRALPHABLEND$cyDest$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$dwRop$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$dwRop$LAYOUT() { return tagEMRALPHABLEND$dwRop$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$dwRop$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRop"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$dwRop$VH() { return tagEMRALPHABLEND$dwRop$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$xSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$xSrc$LAYOUT() { return tagEMRALPHABLEND$xSrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$xSrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xSrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$xSrc$VH() { return tagEMRALPHABLEND$xSrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$ySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$ySrc$LAYOUT() { return tagEMRALPHABLEND$ySrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$ySrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ySrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$ySrc$VH() { return tagEMRALPHABLEND$ySrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$crBkColorSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$crBkColorSrc$LAYOUT() { return tagEMRALPHABLEND$crBkColorSrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$crBkColorSrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("crBkColorSrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$crBkColorSrc$VH() { return tagEMRALPHABLEND$crBkColorSrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$iUsageSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$iUsageSrc$LAYOUT() { return tagEMRALPHABLEND$iUsageSrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$iUsageSrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageSrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$iUsageSrc$VH() { return tagEMRALPHABLEND$iUsageSrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$offBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$offBmiSrc$LAYOUT() { return tagEMRALPHABLEND$offBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$offBmiSrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$offBmiSrc$VH() { return tagEMRALPHABLEND$offBmiSrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$cbBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$cbBmiSrc$LAYOUT() { return tagEMRALPHABLEND$cbBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$cbBmiSrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$cbBmiSrc$VH() { return tagEMRALPHABLEND$cbBmiSrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$offBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$offBitsSrc$LAYOUT() { return tagEMRALPHABLEND$offBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$offBitsSrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$offBitsSrc$VH() { return tagEMRALPHABLEND$offBitsSrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$cbBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$cbBitsSrc$LAYOUT() { return tagEMRALPHABLEND$cbBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$cbBitsSrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$cbBitsSrc$VH() { return tagEMRALPHABLEND$cbBitsSrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$cxSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$cxSrc$LAYOUT() { return tagEMRALPHABLEND$cxSrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$cxSrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxSrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$cxSrc$VH() { return tagEMRALPHABLEND$cxSrc$VH_; }

    static final MemoryLayout tagEMRALPHABLEND$cySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRALPHABLEND$cySrc$LAYOUT() { return tagEMRALPHABLEND$cySrc$LAYOUT_; }

    static final VarHandle tagEMRALPHABLEND$cySrc$VH_ = tagEMRALPHABLEND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cySrc"));
    public static java.lang.invoke.VarHandle tagEMRALPHABLEND$cySrc$VH() { return tagEMRALPHABLEND$cySrc$VH_; }

    static final MemoryLayout tagEMRGRADIENTFILL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        C_INT.withName("nVer"),
        C_INT.withName("nTri"),
        C_INT.withName("ulMode"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_SHORT.withName("Red"),
            C_SHORT.withName("Green"),
            C_SHORT.withName("Blue"),
            C_SHORT.withName("Alpha")
        ).withName("_TRIVERTEX")).withName("Ver")
    ).withName("tagEMRGRADIENTFILL");
    public static jdk.incubator.foreign.MemoryLayout tagEMRGRADIENTFILL$struct$LAYOUT() { return tagEMRGRADIENTFILL$struct$LAYOUT_; }

    static final MemoryLayout tagEMRGRADIENTFILL$nVer$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRGRADIENTFILL$nVer$LAYOUT() { return tagEMRGRADIENTFILL$nVer$LAYOUT_; }

    static final VarHandle tagEMRGRADIENTFILL$nVer$VH_ = tagEMRGRADIENTFILL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nVer"));
    public static java.lang.invoke.VarHandle tagEMRGRADIENTFILL$nVer$VH() { return tagEMRGRADIENTFILL$nVer$VH_; }

    static final MemoryLayout tagEMRGRADIENTFILL$nTri$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRGRADIENTFILL$nTri$LAYOUT() { return tagEMRGRADIENTFILL$nTri$LAYOUT_; }

    static final VarHandle tagEMRGRADIENTFILL$nTri$VH_ = tagEMRGRADIENTFILL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nTri"));
    public static java.lang.invoke.VarHandle tagEMRGRADIENTFILL$nTri$VH() { return tagEMRGRADIENTFILL$nTri$VH_; }

    static final MemoryLayout tagEMRGRADIENTFILL$ulMode$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRGRADIENTFILL$ulMode$LAYOUT() { return tagEMRGRADIENTFILL$ulMode$LAYOUT_; }

    static final VarHandle tagEMRGRADIENTFILL$ulMode$VH_ = tagEMRGRADIENTFILL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulMode"));
    public static java.lang.invoke.VarHandle tagEMRGRADIENTFILL$ulMode$VH() { return tagEMRGRADIENTFILL$ulMode$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("iType"),
            C_INT.withName("nSize")
        ).withName("emr"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        C_INT.withName("xDest"),
        C_INT.withName("yDest"),
        C_INT.withName("cxDest"),
        C_INT.withName("cyDest"),
        C_INT.withName("dwRop"),
        C_INT.withName("xSrc"),
        C_INT.withName("ySrc"),
        MemoryLayout.ofStruct(
            C_FLOAT.withName("eM11"),
            C_FLOAT.withName("eM12"),
            C_FLOAT.withName("eM21"),
            C_FLOAT.withName("eM22"),
            C_FLOAT.withName("eDx"),
            C_FLOAT.withName("eDy")
        ).withName("xformSrc"),
        C_INT.withName("crBkColorSrc"),
        C_INT.withName("iUsageSrc"),
        C_INT.withName("offBmiSrc"),
        C_INT.withName("cbBmiSrc"),
        C_INT.withName("offBitsSrc"),
        C_INT.withName("cbBitsSrc"),
        C_INT.withName("cxSrc"),
        C_INT.withName("cySrc")
    ).withName("tagEMRTRANSPARENTBLT");
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$struct$LAYOUT() { return tagEMRTRANSPARENTBLT$struct$LAYOUT_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$xDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$xDest$LAYOUT() { return tagEMRTRANSPARENTBLT$xDest$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$xDest$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xDest"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$xDest$VH() { return tagEMRTRANSPARENTBLT$xDest$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$yDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$yDest$LAYOUT() { return tagEMRTRANSPARENTBLT$yDest$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$yDest$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yDest"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$yDest$VH() { return tagEMRTRANSPARENTBLT$yDest$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$cxDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$cxDest$LAYOUT() { return tagEMRTRANSPARENTBLT$cxDest$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$cxDest$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxDest"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$cxDest$VH() { return tagEMRTRANSPARENTBLT$cxDest$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$cyDest$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$cyDest$LAYOUT() { return tagEMRTRANSPARENTBLT$cyDest$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$cyDest$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cyDest"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$cyDest$VH() { return tagEMRTRANSPARENTBLT$cyDest$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$dwRop$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$dwRop$LAYOUT() { return tagEMRTRANSPARENTBLT$dwRop$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$dwRop$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRop"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$dwRop$VH() { return tagEMRTRANSPARENTBLT$dwRop$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$xSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$xSrc$LAYOUT() { return tagEMRTRANSPARENTBLT$xSrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$xSrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xSrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$xSrc$VH() { return tagEMRTRANSPARENTBLT$xSrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$ySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$ySrc$LAYOUT() { return tagEMRTRANSPARENTBLT$ySrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$ySrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ySrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$ySrc$VH() { return tagEMRTRANSPARENTBLT$ySrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$crBkColorSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$crBkColorSrc$LAYOUT() { return tagEMRTRANSPARENTBLT$crBkColorSrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$crBkColorSrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("crBkColorSrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$crBkColorSrc$VH() { return tagEMRTRANSPARENTBLT$crBkColorSrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$iUsageSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$iUsageSrc$LAYOUT() { return tagEMRTRANSPARENTBLT$iUsageSrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$iUsageSrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iUsageSrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$iUsageSrc$VH() { return tagEMRTRANSPARENTBLT$iUsageSrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$offBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$offBmiSrc$LAYOUT() { return tagEMRTRANSPARENTBLT$offBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$offBmiSrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$offBmiSrc$VH() { return tagEMRTRANSPARENTBLT$offBmiSrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$cbBmiSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$cbBmiSrc$LAYOUT() { return tagEMRTRANSPARENTBLT$cbBmiSrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$cbBmiSrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBmiSrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$cbBmiSrc$VH() { return tagEMRTRANSPARENTBLT$cbBmiSrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$offBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$offBitsSrc$LAYOUT() { return tagEMRTRANSPARENTBLT$offBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$offBitsSrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$offBitsSrc$VH() { return tagEMRTRANSPARENTBLT$offBitsSrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$cbBitsSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$cbBitsSrc$LAYOUT() { return tagEMRTRANSPARENTBLT$cbBitsSrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$cbBitsSrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBitsSrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$cbBitsSrc$VH() { return tagEMRTRANSPARENTBLT$cbBitsSrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$cxSrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$cxSrc$LAYOUT() { return tagEMRTRANSPARENTBLT$cxSrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$cxSrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cxSrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$cxSrc$VH() { return tagEMRTRANSPARENTBLT$cxSrc$VH_; }

    static final MemoryLayout tagEMRTRANSPARENTBLT$cySrc$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEMRTRANSPARENTBLT$cySrc$LAYOUT() { return tagEMRTRANSPARENTBLT$cySrc$LAYOUT_; }

    static final VarHandle tagEMRTRANSPARENTBLT$cySrc$VH_ = tagEMRTRANSPARENTBLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cySrc"));
    public static java.lang.invoke.VarHandle tagEMRTRANSPARENTBLT$cySrc$VH() { return tagEMRTRANSPARENTBLT$cySrc$VH_; }

    static final FunctionDescriptor wglCopyContext$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglCopyContext$FUNC() { return wglCopyContext$FUNC_; }

    static final MethodHandle wglCopyContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglCopyContext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        wglCopyContext$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglCopyContext$MH() { return wglCopyContext$MH_; }

    static final FunctionDescriptor wglCreateContext$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglCreateContext$FUNC() { return wglCreateContext$FUNC_; }

    static final MethodHandle wglCreateContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglCreateContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        wglCreateContext$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglCreateContext$MH() { return wglCreateContext$MH_; }

    static final FunctionDescriptor wglCreateLayerContext$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglCreateLayerContext$FUNC() { return wglCreateLayerContext$FUNC_; }

    static final MethodHandle wglCreateLayerContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglCreateLayerContext",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        wglCreateLayerContext$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglCreateLayerContext$MH() { return wglCreateLayerContext$MH_; }

    static final FunctionDescriptor wglDeleteContext$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglDeleteContext$FUNC() { return wglDeleteContext$FUNC_; }

    static final MethodHandle wglDeleteContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglDeleteContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        wglDeleteContext$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglDeleteContext$MH() { return wglDeleteContext$MH_; }

    static final FunctionDescriptor wglGetCurrentContext$FUNC_ = FunctionDescriptor.of(C_POINTER);
    public static jdk.incubator.foreign.FunctionDescriptor wglGetCurrentContext$FUNC() { return wglGetCurrentContext$FUNC_; }

    static final MethodHandle wglGetCurrentContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglGetCurrentContext",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        wglGetCurrentContext$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglGetCurrentContext$MH() { return wglGetCurrentContext$MH_; }

    static final FunctionDescriptor wglGetCurrentDC$FUNC_ = FunctionDescriptor.of(C_POINTER);
    public static jdk.incubator.foreign.FunctionDescriptor wglGetCurrentDC$FUNC() { return wglGetCurrentDC$FUNC_; }

    static final MethodHandle wglGetCurrentDC$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglGetCurrentDC",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        wglGetCurrentDC$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglGetCurrentDC$MH() { return wglGetCurrentDC$MH_; }

    static final FunctionDescriptor wglGetProcAddress$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglGetProcAddress$FUNC() { return wglGetProcAddress$FUNC_; }

    static final MethodHandle wglGetProcAddress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglGetProcAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        wglGetProcAddress$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglGetProcAddress$MH() { return wglGetProcAddress$MH_; }

    static final FunctionDescriptor wglMakeCurrent$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglMakeCurrent$FUNC() { return wglMakeCurrent$FUNC_; }

    static final MethodHandle wglMakeCurrent$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglMakeCurrent",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        wglMakeCurrent$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglMakeCurrent$MH() { return wglMakeCurrent$MH_; }

    static final FunctionDescriptor wglShareLists$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglShareLists$FUNC() { return wglShareLists$FUNC_; }

    static final MethodHandle wglShareLists$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglShareLists",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        wglShareLists$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglShareLists$MH() { return wglShareLists$MH_; }

    static final FunctionDescriptor wglUseFontBitmapsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglUseFontBitmapsA$FUNC() { return wglUseFontBitmapsA$FUNC_; }

    static final MethodHandle wglUseFontBitmapsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglUseFontBitmapsA",
        "(Ljdk/incubator/foreign/MemoryAddress;III)I",
        wglUseFontBitmapsA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglUseFontBitmapsA$MH() { return wglUseFontBitmapsA$MH_; }

    static final FunctionDescriptor wglUseFontBitmapsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglUseFontBitmapsW$FUNC() { return wglUseFontBitmapsW$FUNC_; }

    static final MethodHandle wglUseFontBitmapsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglUseFontBitmapsW",
        "(Ljdk/incubator/foreign/MemoryAddress;III)I",
        wglUseFontBitmapsW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglUseFontBitmapsW$MH() { return wglUseFontBitmapsW$MH_; }

    static final FunctionDescriptor SwapBuffers$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor SwapBuffers$FUNC() { return SwapBuffers$FUNC_; }

    static final MethodHandle SwapBuffers$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SwapBuffers",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SwapBuffers$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle SwapBuffers$MH() { return SwapBuffers$MH_; }

    static final MemoryLayout _POINTFLOAT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_FLOAT.withName("x"),
        C_FLOAT.withName("y")
    ).withName("_POINTFLOAT");
    public static jdk.incubator.foreign.MemoryLayout _POINTFLOAT$struct$LAYOUT() { return _POINTFLOAT$struct$LAYOUT_; }

    static final MemoryLayout _POINTFLOAT$x$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout _POINTFLOAT$x$LAYOUT() { return _POINTFLOAT$x$LAYOUT_; }

    static final VarHandle _POINTFLOAT$x$VH_ = _POINTFLOAT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("x"));
    public static java.lang.invoke.VarHandle _POINTFLOAT$x$VH() { return _POINTFLOAT$x$VH_; }

    static final MemoryLayout _POINTFLOAT$y$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout _POINTFLOAT$y$LAYOUT() { return _POINTFLOAT$y$LAYOUT_; }

    static final VarHandle _POINTFLOAT$y$VH_ = _POINTFLOAT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("y"));
    public static java.lang.invoke.VarHandle _POINTFLOAT$y$VH() { return _POINTFLOAT$y$VH_; }

    static final MemoryLayout _GLYPHMETRICSFLOAT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_FLOAT.withName("gmfBlackBoxX"),
        C_FLOAT.withName("gmfBlackBoxY"),
        MemoryLayout.ofStruct(
            C_FLOAT.withName("x"),
            C_FLOAT.withName("y")
        ).withName("gmfptGlyphOrigin"),
        C_FLOAT.withName("gmfCellIncX"),
        C_FLOAT.withName("gmfCellIncY")
    ).withName("_GLYPHMETRICSFLOAT");
    public static jdk.incubator.foreign.MemoryLayout _GLYPHMETRICSFLOAT$struct$LAYOUT() { return _GLYPHMETRICSFLOAT$struct$LAYOUT_; }

    static final MemoryLayout _GLYPHMETRICSFLOAT$gmfBlackBoxX$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout _GLYPHMETRICSFLOAT$gmfBlackBoxX$LAYOUT() { return _GLYPHMETRICSFLOAT$gmfBlackBoxX$LAYOUT_; }

    static final VarHandle _GLYPHMETRICSFLOAT$gmfBlackBoxX$VH_ = _GLYPHMETRICSFLOAT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("gmfBlackBoxX"));
    public static java.lang.invoke.VarHandle _GLYPHMETRICSFLOAT$gmfBlackBoxX$VH() { return _GLYPHMETRICSFLOAT$gmfBlackBoxX$VH_; }

    static final MemoryLayout _GLYPHMETRICSFLOAT$gmfBlackBoxY$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout _GLYPHMETRICSFLOAT$gmfBlackBoxY$LAYOUT() { return _GLYPHMETRICSFLOAT$gmfBlackBoxY$LAYOUT_; }

    static final VarHandle _GLYPHMETRICSFLOAT$gmfBlackBoxY$VH_ = _GLYPHMETRICSFLOAT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("gmfBlackBoxY"));
    public static java.lang.invoke.VarHandle _GLYPHMETRICSFLOAT$gmfBlackBoxY$VH() { return _GLYPHMETRICSFLOAT$gmfBlackBoxY$VH_; }

    static final MemoryLayout _GLYPHMETRICSFLOAT$gmfCellIncX$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout _GLYPHMETRICSFLOAT$gmfCellIncX$LAYOUT() { return _GLYPHMETRICSFLOAT$gmfCellIncX$LAYOUT_; }

    static final VarHandle _GLYPHMETRICSFLOAT$gmfCellIncX$VH_ = _GLYPHMETRICSFLOAT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("gmfCellIncX"));
    public static java.lang.invoke.VarHandle _GLYPHMETRICSFLOAT$gmfCellIncX$VH() { return _GLYPHMETRICSFLOAT$gmfCellIncX$VH_; }

    static final MemoryLayout _GLYPHMETRICSFLOAT$gmfCellIncY$LAYOUT_ = C_FLOAT;
    public static jdk.incubator.foreign.MemoryLayout _GLYPHMETRICSFLOAT$gmfCellIncY$LAYOUT() { return _GLYPHMETRICSFLOAT$gmfCellIncY$LAYOUT_; }

    static final VarHandle _GLYPHMETRICSFLOAT$gmfCellIncY$VH_ = _GLYPHMETRICSFLOAT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("gmfCellIncY"));
    public static java.lang.invoke.VarHandle _GLYPHMETRICSFLOAT$gmfCellIncY$VH() { return _GLYPHMETRICSFLOAT$gmfCellIncY$VH_; }

    static final FunctionDescriptor wglUseFontOutlinesA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglUseFontOutlinesA$FUNC() { return wglUseFontOutlinesA$FUNC_; }

    static final MethodHandle wglUseFontOutlinesA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglUseFontOutlinesA",
        "(Ljdk/incubator/foreign/MemoryAddress;IIIFFILjdk/incubator/foreign/MemoryAddress;)I",
        wglUseFontOutlinesA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglUseFontOutlinesA$MH() { return wglUseFontOutlinesA$MH_; }

    static final FunctionDescriptor wglUseFontOutlinesW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglUseFontOutlinesW$FUNC() { return wglUseFontOutlinesW$FUNC_; }

    static final MethodHandle wglUseFontOutlinesW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglUseFontOutlinesW",
        "(Ljdk/incubator/foreign/MemoryAddress;IIIFFILjdk/incubator/foreign/MemoryAddress;)I",
        wglUseFontOutlinesW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglUseFontOutlinesW$MH() { return wglUseFontOutlinesW$MH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("nSize"),
        C_SHORT.withName("nVersion"),
        C_INT.withName("dwFlags"),
        C_BOOL.withName("iPixelType"),
        C_BOOL.withName("cColorBits"),
        C_BOOL.withName("cRedBits"),
        C_BOOL.withName("cRedShift"),
        C_BOOL.withName("cGreenBits"),
        C_BOOL.withName("cGreenShift"),
        C_BOOL.withName("cBlueBits"),
        C_BOOL.withName("cBlueShift"),
        C_BOOL.withName("cAlphaBits"),
        C_BOOL.withName("cAlphaShift"),
        C_BOOL.withName("cAccumBits"),
        C_BOOL.withName("cAccumRedBits"),
        C_BOOL.withName("cAccumGreenBits"),
        C_BOOL.withName("cAccumBlueBits"),
        C_BOOL.withName("cAccumAlphaBits"),
        C_BOOL.withName("cDepthBits"),
        C_BOOL.withName("cStencilBits"),
        C_BOOL.withName("cAuxBuffers"),
        C_BOOL.withName("iLayerPlane"),
        C_BOOL.withName("bReserved"),
        C_INT.withName("crTransparent")
    ).withName("tagLAYERPLANEDESCRIPTOR");
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$struct$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$nSize$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$nSize$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$nSize$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$nSize$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nSize"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$nSize$VH() { return tagLAYERPLANEDESCRIPTOR$nSize$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$nVersion$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$nVersion$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$nVersion$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$nVersion$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nVersion"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$nVersion$VH() { return tagLAYERPLANEDESCRIPTOR$nVersion$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$dwFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$dwFlags$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$dwFlags$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$dwFlags$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$dwFlags$VH() { return tagLAYERPLANEDESCRIPTOR$dwFlags$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$iPixelType$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$iPixelType$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$iPixelType$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$iPixelType$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("iPixelType"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$iPixelType$VH() { return tagLAYERPLANEDESCRIPTOR$iPixelType$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cColorBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cColorBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cColorBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cColorBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cColorBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cColorBits$VH() { return tagLAYERPLANEDESCRIPTOR$cColorBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cRedBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cRedBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cRedBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cRedBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cRedBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cRedBits$VH() { return tagLAYERPLANEDESCRIPTOR$cRedBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cRedShift$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cRedShift$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cRedShift$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cRedShift$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cRedShift"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cRedShift$VH() { return tagLAYERPLANEDESCRIPTOR$cRedShift$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cGreenBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cGreenBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cGreenBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cGreenBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cGreenBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cGreenBits$VH() { return tagLAYERPLANEDESCRIPTOR$cGreenBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cGreenShift$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cGreenShift$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cGreenShift$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cGreenShift$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cGreenShift"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cGreenShift$VH() { return tagLAYERPLANEDESCRIPTOR$cGreenShift$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cBlueBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cBlueBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cBlueBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cBlueBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cBlueBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cBlueBits$VH() { return tagLAYERPLANEDESCRIPTOR$cBlueBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cBlueShift$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cBlueShift$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cBlueShift$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cBlueShift$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cBlueShift"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cBlueShift$VH() { return tagLAYERPLANEDESCRIPTOR$cBlueShift$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cAlphaBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cAlphaBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cAlphaBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cAlphaBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cAlphaBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cAlphaBits$VH() { return tagLAYERPLANEDESCRIPTOR$cAlphaBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cAlphaShift$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cAlphaShift$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cAlphaShift$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cAlphaShift$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cAlphaShift"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cAlphaShift$VH() { return tagLAYERPLANEDESCRIPTOR$cAlphaShift$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cAccumBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cAccumBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cAccumBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cAccumBits$VH() { return tagLAYERPLANEDESCRIPTOR$cAccumBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumRedBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumRedBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cAccumRedBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cAccumRedBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cAccumRedBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cAccumRedBits$VH() { return tagLAYERPLANEDESCRIPTOR$cAccumRedBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumGreenBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumGreenBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cAccumGreenBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cAccumGreenBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cAccumGreenBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cAccumGreenBits$VH() { return tagLAYERPLANEDESCRIPTOR$cAccumGreenBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumBlueBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumBlueBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cAccumBlueBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cAccumBlueBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cAccumBlueBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cAccumBlueBits$VH() { return tagLAYERPLANEDESCRIPTOR$cAccumBlueBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumAlphaBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cAccumAlphaBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cAccumAlphaBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cAccumAlphaBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cAccumAlphaBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cAccumAlphaBits$VH() { return tagLAYERPLANEDESCRIPTOR$cAccumAlphaBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cDepthBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cDepthBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cDepthBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cDepthBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cDepthBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cDepthBits$VH() { return tagLAYERPLANEDESCRIPTOR$cDepthBits$VH_; }

}

