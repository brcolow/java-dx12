// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class d3d12_h$constants$3 extends d3d12_h$constants$2 {
    d3d12_h$constants$3() {}
    static final MemoryLayout D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$LAYOUT() { return D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$LAYOUT_; }

    static final VarHandle D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$VH_ = D3D12_DESCRIPTOR_RANGE1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OffsetInDescriptorsFromTableStart"));
    public static java.lang.invoke.VarHandle D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$VH() { return D3D12_DESCRIPTOR_RANGE1$OffsetInDescriptorsFromTableStart$VH_; }

    static final MemoryLayout D3D12_ROOT_DESCRIPTOR_TABLE1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NumDescriptorRanges"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pDescriptorRanges")
    ).withName("D3D12_ROOT_DESCRIPTOR_TABLE1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_DESCRIPTOR_TABLE1$struct$LAYOUT() { return D3D12_ROOT_DESCRIPTOR_TABLE1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$LAYOUT() { return D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$LAYOUT_; }

    static final VarHandle D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$VH_ = D3D12_ROOT_DESCRIPTOR_TABLE1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumDescriptorRanges"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$VH() { return D3D12_ROOT_DESCRIPTOR_TABLE1$NumDescriptorRanges$VH_; }

    static final MemoryLayout D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$LAYOUT() { return D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$LAYOUT_; }

    static final VarHandle D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$VH_ = MemoryHandles.asAddressVarHandle(D3D12_ROOT_DESCRIPTOR_TABLE1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDescriptorRanges")));
    public static java.lang.invoke.VarHandle D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$VH() { return D3D12_ROOT_DESCRIPTOR_TABLE1$pDescriptorRanges$VH_; }

    public static int D3D12_ROOT_DESCRIPTOR_FLAG_NONE() { return (int)0L; }

    public static int D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE() { return (int)2L; }

    public static int D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE() { return (int)4L; }

    public static int D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC() { return (int)8L; }

    static final MemoryLayout D3D12_ROOT_DESCRIPTOR1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ShaderRegister"),
        C_INT.withName("RegisterSpace"),
        C_INT.withName("Flags")
    ).withName("D3D12_ROOT_DESCRIPTOR1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_DESCRIPTOR1$struct$LAYOUT() { return D3D12_ROOT_DESCRIPTOR1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_ROOT_DESCRIPTOR1$ShaderRegister$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_DESCRIPTOR1$ShaderRegister$LAYOUT() { return D3D12_ROOT_DESCRIPTOR1$ShaderRegister$LAYOUT_; }

    static final VarHandle D3D12_ROOT_DESCRIPTOR1$ShaderRegister$VH_ = D3D12_ROOT_DESCRIPTOR1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ShaderRegister"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_DESCRIPTOR1$ShaderRegister$VH() { return D3D12_ROOT_DESCRIPTOR1$ShaderRegister$VH_; }

    static final MemoryLayout D3D12_ROOT_DESCRIPTOR1$RegisterSpace$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_DESCRIPTOR1$RegisterSpace$LAYOUT() { return D3D12_ROOT_DESCRIPTOR1$RegisterSpace$LAYOUT_; }

    static final VarHandle D3D12_ROOT_DESCRIPTOR1$RegisterSpace$VH_ = D3D12_ROOT_DESCRIPTOR1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RegisterSpace"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_DESCRIPTOR1$RegisterSpace$VH() { return D3D12_ROOT_DESCRIPTOR1$RegisterSpace$VH_; }

    static final MemoryLayout D3D12_ROOT_DESCRIPTOR1$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_DESCRIPTOR1$Flags$LAYOUT() { return D3D12_ROOT_DESCRIPTOR1$Flags$LAYOUT_; }

    static final VarHandle D3D12_ROOT_DESCRIPTOR1$Flags$VH_ = D3D12_ROOT_DESCRIPTOR1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_DESCRIPTOR1$Flags$VH() { return D3D12_ROOT_DESCRIPTOR1$Flags$VH_; }

    static final MemoryLayout D3D12_ROOT_PARAMETER1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ParameterType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_INT.withName("NumDescriptorRanges"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pDescriptorRanges")
        ).withName("DescriptorTable"),
        MemoryLayout.ofStruct(
            C_INT.withName("ShaderRegister"),
            C_INT.withName("RegisterSpace"),
            C_INT.withName("Num32BitValues")
        ).withName("Constants"),
        MemoryLayout.ofStruct(
            C_INT.withName("ShaderRegister"),
            C_INT.withName("RegisterSpace"),
            C_INT.withName("Flags")
        ).withName("Descriptor"),
        C_INT.withName("ShaderVisibility"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_ROOT_PARAMETER1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_PARAMETER1$struct$LAYOUT() { return D3D12_ROOT_PARAMETER1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_ROOT_PARAMETER1$ParameterType$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_PARAMETER1$ParameterType$LAYOUT() { return D3D12_ROOT_PARAMETER1$ParameterType$LAYOUT_; }

    static final VarHandle D3D12_ROOT_PARAMETER1$ParameterType$VH_ = D3D12_ROOT_PARAMETER1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ParameterType"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_PARAMETER1$ParameterType$VH() { return D3D12_ROOT_PARAMETER1$ParameterType$VH_; }

    static final MemoryLayout D3D12_ROOT_PARAMETER1$ShaderVisibility$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_PARAMETER1$ShaderVisibility$LAYOUT() { return D3D12_ROOT_PARAMETER1$ShaderVisibility$LAYOUT_; }

    static final VarHandle D3D12_ROOT_PARAMETER1$ShaderVisibility$VH_ = D3D12_ROOT_PARAMETER1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ShaderVisibility"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_PARAMETER1$ShaderVisibility$VH() { return D3D12_ROOT_PARAMETER1$ShaderVisibility$VH_; }

    static final MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NumParameters"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pParameters"),
        C_INT.withName("NumStaticSamplers"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pStaticSamplers"),
        C_INT.withName("Flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_ROOT_SIGNATURE_DESC1");
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT() { return D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT_; }

    static final MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$NumParameters$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$NumParameters$LAYOUT() { return D3D12_ROOT_SIGNATURE_DESC1$NumParameters$LAYOUT_; }

    static final VarHandle D3D12_ROOT_SIGNATURE_DESC1$NumParameters$VH_ = D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumParameters"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_SIGNATURE_DESC1$NumParameters$VH() { return D3D12_ROOT_SIGNATURE_DESC1$NumParameters$VH_; }

    static final MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$pParameters$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$pParameters$LAYOUT() { return D3D12_ROOT_SIGNATURE_DESC1$pParameters$LAYOUT_; }

    static final VarHandle D3D12_ROOT_SIGNATURE_DESC1$pParameters$VH_ = MemoryHandles.asAddressVarHandle(D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pParameters")));
    public static java.lang.invoke.VarHandle D3D12_ROOT_SIGNATURE_DESC1$pParameters$VH() { return D3D12_ROOT_SIGNATURE_DESC1$pParameters$VH_; }

    static final MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$LAYOUT() { return D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$LAYOUT_; }

    static final VarHandle D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$VH_ = D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumStaticSamplers"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$VH() { return D3D12_ROOT_SIGNATURE_DESC1$NumStaticSamplers$VH_; }

    static final MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$LAYOUT() { return D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$LAYOUT_; }

    static final VarHandle D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$VH_ = MemoryHandles.asAddressVarHandle(D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pStaticSamplers")));
    public static java.lang.invoke.VarHandle D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$VH() { return D3D12_ROOT_SIGNATURE_DESC1$pStaticSamplers$VH_; }

    static final MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$Flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_ROOT_SIGNATURE_DESC1$Flags$LAYOUT() { return D3D12_ROOT_SIGNATURE_DESC1$Flags$LAYOUT_; }

    static final VarHandle D3D12_ROOT_SIGNATURE_DESC1$Flags$VH_ = D3D12_ROOT_SIGNATURE_DESC1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    public static java.lang.invoke.VarHandle D3D12_ROOT_SIGNATURE_DESC1$Flags$VH() { return D3D12_ROOT_SIGNATURE_DESC1$Flags$VH_; }

    static final MemoryLayout D3D12_VERSIONED_ROOT_SIGNATURE_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_INT.withName("NumParameters"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pParameters"),
            C_INT.withName("NumStaticSamplers"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pStaticSamplers"),
            C_INT.withName("Flags"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("Desc_1_0"),
        MemoryLayout.ofStruct(
            C_INT.withName("NumParameters"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pParameters"),
            C_INT.withName("NumStaticSamplers"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pStaticSamplers"),
            C_INT.withName("Flags"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("Desc_1_1")
    ).withName("D3D12_VERSIONED_ROOT_SIGNATURE_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_VERSIONED_ROOT_SIGNATURE_DESC$struct$LAYOUT() { return D3D12_VERSIONED_ROOT_SIGNATURE_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$LAYOUT() { return D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$LAYOUT_; }

    static final VarHandle D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$VH_ = D3D12_VERSIONED_ROOT_SIGNATURE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    public static java.lang.invoke.VarHandle D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$VH() { return D3D12_VERSIONED_ROOT_SIGNATURE_DESC$Version$VH_; }

    static final MemoryLayout __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    public static java.lang.invoke.VarHandle __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$VH() { return __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec", __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    public static java.lang.invoke.VarHandle __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$VH() { return __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec", __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_ID3D12RootSignatureDeserializer$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12RootSignatureDeserializer$LAYOUT() { return IID_ID3D12RootSignatureDeserializer$LAYOUT_; }

    static final MemorySegment IID_ID3D12RootSignatureDeserializer$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12RootSignatureDeserializer", IID_ID3D12RootSignatureDeserializer$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12RootSignatureDeserializer$SEGMENT() { return IID_ID3D12RootSignatureDeserializer$SEGMENT_; }

    static final MemoryLayout ID3D12RootSignatureDeserializerVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetRootSignatureDesc")
    ).withName("ID3D12RootSignatureDeserializerVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12RootSignatureDeserializerVtbl$struct$LAYOUT() { return ID3D12RootSignatureDeserializerVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12RootSignatureDeserializerVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12RootSignatureDeserializerVtbl$QueryInterface$LAYOUT() { return ID3D12RootSignatureDeserializerVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12RootSignatureDeserializerVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12RootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12RootSignatureDeserializerVtbl$QueryInterface$VH() { return ID3D12RootSignatureDeserializerVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12RootSignatureDeserializerVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12RootSignatureDeserializerVtbl$AddRef$LAYOUT() { return ID3D12RootSignatureDeserializerVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12RootSignatureDeserializerVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12RootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12RootSignatureDeserializerVtbl$AddRef$VH() { return ID3D12RootSignatureDeserializerVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12RootSignatureDeserializerVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12RootSignatureDeserializerVtbl$Release$LAYOUT() { return ID3D12RootSignatureDeserializerVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12RootSignatureDeserializerVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12RootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12RootSignatureDeserializerVtbl$Release$VH() { return ID3D12RootSignatureDeserializerVtbl$Release$VH_; }

    static final MemoryLayout ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$LAYOUT() { return ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$LAYOUT_; }

    static final VarHandle ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$VH_ = MemoryHandles.asAddressVarHandle(ID3D12RootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetRootSignatureDesc")));
    public static java.lang.invoke.VarHandle ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$VH() { return ID3D12RootSignatureDeserializerVtbl$GetRootSignatureDesc$VH_; }

    static final MemoryLayout ID3D12RootSignatureDeserializer$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12RootSignatureDeserializer");
    public static jdk.incubator.foreign.MemoryLayout ID3D12RootSignatureDeserializer$struct$LAYOUT() { return ID3D12RootSignatureDeserializer$struct$LAYOUT_; }

    static final MemoryLayout ID3D12RootSignatureDeserializer$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12RootSignatureDeserializer$lpVtbl$LAYOUT() { return ID3D12RootSignatureDeserializer$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12RootSignatureDeserializer$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12RootSignatureDeserializer$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12RootSignatureDeserializer$lpVtbl$VH() { return ID3D12RootSignatureDeserializer$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12VersionedRootSignatureDeserializer$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12VersionedRootSignatureDeserializer$LAYOUT() { return IID_ID3D12VersionedRootSignatureDeserializer$LAYOUT_; }

    static final MemorySegment IID_ID3D12VersionedRootSignatureDeserializer$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12VersionedRootSignatureDeserializer", IID_ID3D12VersionedRootSignatureDeserializer$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12VersionedRootSignatureDeserializer$SEGMENT() { return IID_ID3D12VersionedRootSignatureDeserializer$SEGMENT_; }

    static final MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetRootSignatureDescAtVersion"),
        C_POINTER.withName("GetUnconvertedRootSignatureDesc")
    ).withName("ID3D12VersionedRootSignatureDeserializerVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT() { return ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$LAYOUT() { return ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$VH() { return ID3D12VersionedRootSignatureDeserializerVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$LAYOUT() { return ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$VH() { return ID3D12VersionedRootSignatureDeserializerVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$Release$LAYOUT() { return ID3D12VersionedRootSignatureDeserializerVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$Release$VH() { return ID3D12VersionedRootSignatureDeserializerVtbl$Release$VH_; }

    static final MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$LAYOUT() { return ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$LAYOUT_; }

    static final VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$VH_ = MemoryHandles.asAddressVarHandle(ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetRootSignatureDescAtVersion")));
    public static java.lang.invoke.VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$VH() { return ID3D12VersionedRootSignatureDeserializerVtbl$GetRootSignatureDescAtVersion$VH_; }

    static final MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$LAYOUT() { return ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$LAYOUT_; }

    static final VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$VH_ = MemoryHandles.asAddressVarHandle(ID3D12VersionedRootSignatureDeserializerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetUnconvertedRootSignatureDesc")));
    public static java.lang.invoke.VarHandle ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$VH() { return ID3D12VersionedRootSignatureDeserializerVtbl$GetUnconvertedRootSignatureDesc$VH_; }

    static final MemoryLayout ID3D12VersionedRootSignatureDeserializer$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12VersionedRootSignatureDeserializer");
    public static jdk.incubator.foreign.MemoryLayout ID3D12VersionedRootSignatureDeserializer$struct$LAYOUT() { return ID3D12VersionedRootSignatureDeserializer$struct$LAYOUT_; }

    static final MemoryLayout ID3D12VersionedRootSignatureDeserializer$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12VersionedRootSignatureDeserializer$lpVtbl$LAYOUT() { return ID3D12VersionedRootSignatureDeserializer$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12VersionedRootSignatureDeserializer$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12VersionedRootSignatureDeserializer$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12VersionedRootSignatureDeserializer$lpVtbl$VH() { return ID3D12VersionedRootSignatureDeserializer$lpVtbl$VH_; }

    static final FunctionDescriptor D3D12SerializeRootSignature$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor D3D12SerializeRootSignature$FUNC() { return D3D12SerializeRootSignature$FUNC_; }

    static final MethodHandle D3D12SerializeRootSignature$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "D3D12SerializeRootSignature",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        D3D12SerializeRootSignature$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle D3D12SerializeRootSignature$MH() { return D3D12SerializeRootSignature$MH_; }

    static final FunctionDescriptor D3D12CreateRootSignatureDeserializer$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor D3D12CreateRootSignatureDeserializer$FUNC() { return D3D12CreateRootSignatureDeserializer$FUNC_; }

    static final MethodHandle D3D12CreateRootSignatureDeserializer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "D3D12CreateRootSignatureDeserializer",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        D3D12CreateRootSignatureDeserializer$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle D3D12CreateRootSignatureDeserializer$MH() { return D3D12CreateRootSignatureDeserializer$MH_; }

    static final FunctionDescriptor D3D12SerializeVersionedRootSignature$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor D3D12SerializeVersionedRootSignature$FUNC() { return D3D12SerializeVersionedRootSignature$FUNC_; }

    static final MethodHandle D3D12SerializeVersionedRootSignature$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "D3D12SerializeVersionedRootSignature",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        D3D12SerializeVersionedRootSignature$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle D3D12SerializeVersionedRootSignature$MH() { return D3D12SerializeVersionedRootSignature$MH_; }

    static final FunctionDescriptor D3D12CreateVersionedRootSignatureDeserializer$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor D3D12CreateVersionedRootSignatureDeserializer$FUNC() { return D3D12CreateVersionedRootSignatureDeserializer$FUNC_; }

    static final MethodHandle D3D12CreateVersionedRootSignatureDeserializer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "D3D12CreateVersionedRootSignatureDeserializer",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        D3D12CreateVersionedRootSignatureDeserializer$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle D3D12CreateVersionedRootSignatureDeserializer$MH() { return D3D12CreateVersionedRootSignatureDeserializer$MH_; }

    static final MemoryLayout D3D12_CPU_DESCRIPTOR_HANDLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("ptr")
    ).withName("D3D12_CPU_DESCRIPTOR_HANDLE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_CPU_DESCRIPTOR_HANDLE$struct$LAYOUT() { return D3D12_CPU_DESCRIPTOR_HANDLE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_CPU_DESCRIPTOR_HANDLE$ptr$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_CPU_DESCRIPTOR_HANDLE$ptr$LAYOUT() { return D3D12_CPU_DESCRIPTOR_HANDLE$ptr$LAYOUT_; }

    static final VarHandle D3D12_CPU_DESCRIPTOR_HANDLE$ptr$VH_ = D3D12_CPU_DESCRIPTOR_HANDLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ptr"));
    public static java.lang.invoke.VarHandle D3D12_CPU_DESCRIPTOR_HANDLE$ptr$VH() { return D3D12_CPU_DESCRIPTOR_HANDLE$ptr$VH_; }

    static final MemoryLayout D3D12_GPU_DESCRIPTOR_HANDLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("ptr")
    ).withName("D3D12_GPU_DESCRIPTOR_HANDLE");
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_DESCRIPTOR_HANDLE$struct$LAYOUT() { return D3D12_GPU_DESCRIPTOR_HANDLE$struct$LAYOUT_; }

    static final MemoryLayout D3D12_GPU_DESCRIPTOR_HANDLE$ptr$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_GPU_DESCRIPTOR_HANDLE$ptr$LAYOUT() { return D3D12_GPU_DESCRIPTOR_HANDLE$ptr$LAYOUT_; }

    static final VarHandle D3D12_GPU_DESCRIPTOR_HANDLE$ptr$VH_ = D3D12_GPU_DESCRIPTOR_HANDLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ptr"));
    public static java.lang.invoke.VarHandle D3D12_GPU_DESCRIPTOR_HANDLE$ptr$VH() { return D3D12_GPU_DESCRIPTOR_HANDLE$ptr$VH_; }

    static final MemoryLayout D3D12_DISCARD_REGION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("NumRects"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pRects"),
        C_INT.withName("FirstSubresource"),
        C_INT.withName("NumSubresources")
    ).withName("D3D12_DISCARD_REGION");
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISCARD_REGION$struct$LAYOUT() { return D3D12_DISCARD_REGION$struct$LAYOUT_; }

    static final MemoryLayout D3D12_DISCARD_REGION$NumRects$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISCARD_REGION$NumRects$LAYOUT() { return D3D12_DISCARD_REGION$NumRects$LAYOUT_; }

    static final VarHandle D3D12_DISCARD_REGION$NumRects$VH_ = D3D12_DISCARD_REGION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumRects"));
    public static java.lang.invoke.VarHandle D3D12_DISCARD_REGION$NumRects$VH() { return D3D12_DISCARD_REGION$NumRects$VH_; }

    static final MemoryLayout D3D12_DISCARD_REGION$pRects$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISCARD_REGION$pRects$LAYOUT() { return D3D12_DISCARD_REGION$pRects$LAYOUT_; }

    static final VarHandle D3D12_DISCARD_REGION$pRects$VH_ = MemoryHandles.asAddressVarHandle(D3D12_DISCARD_REGION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pRects")));
    public static java.lang.invoke.VarHandle D3D12_DISCARD_REGION$pRects$VH() { return D3D12_DISCARD_REGION$pRects$VH_; }

    static final MemoryLayout D3D12_DISCARD_REGION$FirstSubresource$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISCARD_REGION$FirstSubresource$LAYOUT() { return D3D12_DISCARD_REGION$FirstSubresource$LAYOUT_; }

    static final VarHandle D3D12_DISCARD_REGION$FirstSubresource$VH_ = D3D12_DISCARD_REGION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FirstSubresource"));
    public static java.lang.invoke.VarHandle D3D12_DISCARD_REGION$FirstSubresource$VH() { return D3D12_DISCARD_REGION$FirstSubresource$VH_; }

    static final MemoryLayout D3D12_DISCARD_REGION$NumSubresources$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISCARD_REGION$NumSubresources$LAYOUT() { return D3D12_DISCARD_REGION$NumSubresources$LAYOUT_; }

    static final VarHandle D3D12_DISCARD_REGION$NumSubresources$VH_ = D3D12_DISCARD_REGION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumSubresources"));
    public static java.lang.invoke.VarHandle D3D12_DISCARD_REGION$NumSubresources$VH() { return D3D12_DISCARD_REGION$NumSubresources$VH_; }

    public static int D3D12_QUERY_HEAP_TYPE_OCCLUSION() { return (int)0L; }

    public static int D3D12_QUERY_HEAP_TYPE_TIMESTAMP() { return (int)1L; }

    public static int D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS() { return (int)2L; }

    public static int D3D12_QUERY_HEAP_TYPE_SO_STATISTICS() { return (int)3L; }

    public static int D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS() { return (int)4L; }

    public static int D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP() { return (int)5L; }

    static final MemoryLayout D3D12_QUERY_HEAP_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_INT.withName("Count"),
        C_INT.withName("NodeMask")
    ).withName("D3D12_QUERY_HEAP_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_HEAP_DESC$struct$LAYOUT() { return D3D12_QUERY_HEAP_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_QUERY_HEAP_DESC$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_HEAP_DESC$Type$LAYOUT() { return D3D12_QUERY_HEAP_DESC$Type$LAYOUT_; }

    static final VarHandle D3D12_QUERY_HEAP_DESC$Type$VH_ = D3D12_QUERY_HEAP_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_HEAP_DESC$Type$VH() { return D3D12_QUERY_HEAP_DESC$Type$VH_; }

    static final MemoryLayout D3D12_QUERY_HEAP_DESC$Count$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_HEAP_DESC$Count$LAYOUT() { return D3D12_QUERY_HEAP_DESC$Count$LAYOUT_; }

    static final VarHandle D3D12_QUERY_HEAP_DESC$Count$VH_ = D3D12_QUERY_HEAP_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_HEAP_DESC$Count$VH() { return D3D12_QUERY_HEAP_DESC$Count$VH_; }

    static final MemoryLayout D3D12_QUERY_HEAP_DESC$NodeMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_HEAP_DESC$NodeMask$LAYOUT() { return D3D12_QUERY_HEAP_DESC$NodeMask$LAYOUT_; }

    static final VarHandle D3D12_QUERY_HEAP_DESC$NodeMask$VH_ = D3D12_QUERY_HEAP_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeMask"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_HEAP_DESC$NodeMask$VH() { return D3D12_QUERY_HEAP_DESC$NodeMask$VH_; }

    public static int D3D12_QUERY_TYPE_OCCLUSION() { return (int)0L; }

    public static int D3D12_QUERY_TYPE_BINARY_OCCLUSION() { return (int)1L; }

    public static int D3D12_QUERY_TYPE_TIMESTAMP() { return (int)2L; }

    public static int D3D12_QUERY_TYPE_PIPELINE_STATISTICS() { return (int)3L; }

    public static int D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0() { return (int)4L; }

    public static int D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1() { return (int)5L; }

    public static int D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2() { return (int)6L; }

    public static int D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3() { return (int)7L; }

    public static int D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS() { return (int)8L; }

    public static int D3D12_PREDICATION_OP_EQUAL_ZERO() { return (int)0L; }

    public static int D3D12_PREDICATION_OP_NOT_EQUAL_ZERO() { return (int)1L; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("IAVertices"),
        C_LONGLONG.withName("IAPrimitives"),
        C_LONGLONG.withName("VSInvocations"),
        C_LONGLONG.withName("GSInvocations"),
        C_LONGLONG.withName("GSPrimitives"),
        C_LONGLONG.withName("CInvocations"),
        C_LONGLONG.withName("CPrimitives"),
        C_LONGLONG.withName("PSInvocations"),
        C_LONGLONG.withName("HSInvocations"),
        C_LONGLONG.withName("DSInvocations"),
        C_LONGLONG.withName("CSInvocations")
    ).withName("D3D12_QUERY_DATA_PIPELINE_STATISTICS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IAVertices"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAVertices$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IAPrimitives"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$IAPrimitives$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VSInvocations"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$VSInvocations$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GSInvocations"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSInvocations$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GSPrimitives"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$GSPrimitives$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CInvocations"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$CInvocations$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CPrimitives"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$CPrimitives$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PSInvocations"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$PSInvocations$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HSInvocations"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$HSInvocations$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DSInvocations"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$DSInvocations$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$LAYOUT() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$VH_ = D3D12_QUERY_DATA_PIPELINE_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CSInvocations"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$VH() { return D3D12_QUERY_DATA_PIPELINE_STATISTICS$CSInvocations$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_SO_STATISTICS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("NumPrimitivesWritten"),
        C_LONGLONG.withName("PrimitivesStorageNeeded")
    ).withName("D3D12_QUERY_DATA_SO_STATISTICS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_SO_STATISTICS$struct$LAYOUT() { return D3D12_QUERY_DATA_SO_STATISTICS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$LAYOUT() { return D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$VH_ = D3D12_QUERY_DATA_SO_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NumPrimitivesWritten"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$VH() { return D3D12_QUERY_DATA_SO_STATISTICS$NumPrimitivesWritten$VH_; }

    static final MemoryLayout D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$LAYOUT() { return D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$LAYOUT_; }

    static final VarHandle D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$VH_ = D3D12_QUERY_DATA_SO_STATISTICS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PrimitivesStorageNeeded"));
    public static java.lang.invoke.VarHandle D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$VH() { return D3D12_QUERY_DATA_SO_STATISTICS$PrimitivesStorageNeeded$VH_; }

    static final MemoryLayout D3D12_STREAM_OUTPUT_BUFFER_VIEW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("BufferLocation"),
        C_LONGLONG.withName("SizeInBytes"),
        C_LONGLONG.withName("BufferFilledSizeLocation")
    ).withName("D3D12_STREAM_OUTPUT_BUFFER_VIEW");
    public static jdk.incubator.foreign.MemoryLayout D3D12_STREAM_OUTPUT_BUFFER_VIEW$struct$LAYOUT() { return D3D12_STREAM_OUTPUT_BUFFER_VIEW$struct$LAYOUT_; }

    static final MemoryLayout D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$LAYOUT() { return D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$LAYOUT_; }

    static final VarHandle D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$VH_ = D3D12_STREAM_OUTPUT_BUFFER_VIEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BufferLocation"));
    public static java.lang.invoke.VarHandle D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$VH() { return D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferLocation$VH_; }

    static final MemoryLayout D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$LAYOUT() { return D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$VH_ = D3D12_STREAM_OUTPUT_BUFFER_VIEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$VH() { return D3D12_STREAM_OUTPUT_BUFFER_VIEW$SizeInBytes$VH_; }

    static final MemoryLayout D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$LAYOUT() { return D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$LAYOUT_; }

    static final VarHandle D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$VH_ = D3D12_STREAM_OUTPUT_BUFFER_VIEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BufferFilledSizeLocation"));
    public static java.lang.invoke.VarHandle D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$VH() { return D3D12_STREAM_OUTPUT_BUFFER_VIEW$BufferFilledSizeLocation$VH_; }

    static final MemoryLayout D3D12_DRAW_ARGUMENTS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("VertexCountPerInstance"),
        C_INT.withName("InstanceCount"),
        C_INT.withName("StartVertexLocation"),
        C_INT.withName("StartInstanceLocation")
    ).withName("D3D12_DRAW_ARGUMENTS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_ARGUMENTS$struct$LAYOUT() { return D3D12_DRAW_ARGUMENTS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$LAYOUT() { return D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$LAYOUT_; }

    static final VarHandle D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$VH_ = D3D12_DRAW_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VertexCountPerInstance"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$VH() { return D3D12_DRAW_ARGUMENTS$VertexCountPerInstance$VH_; }

    static final MemoryLayout D3D12_DRAW_ARGUMENTS$InstanceCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_ARGUMENTS$InstanceCount$LAYOUT() { return D3D12_DRAW_ARGUMENTS$InstanceCount$LAYOUT_; }

    static final VarHandle D3D12_DRAW_ARGUMENTS$InstanceCount$VH_ = D3D12_DRAW_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("InstanceCount"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_ARGUMENTS$InstanceCount$VH() { return D3D12_DRAW_ARGUMENTS$InstanceCount$VH_; }

    static final MemoryLayout D3D12_DRAW_ARGUMENTS$StartVertexLocation$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_ARGUMENTS$StartVertexLocation$LAYOUT() { return D3D12_DRAW_ARGUMENTS$StartVertexLocation$LAYOUT_; }

    static final VarHandle D3D12_DRAW_ARGUMENTS$StartVertexLocation$VH_ = D3D12_DRAW_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartVertexLocation"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_ARGUMENTS$StartVertexLocation$VH() { return D3D12_DRAW_ARGUMENTS$StartVertexLocation$VH_; }

    static final MemoryLayout D3D12_DRAW_ARGUMENTS$StartInstanceLocation$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_ARGUMENTS$StartInstanceLocation$LAYOUT() { return D3D12_DRAW_ARGUMENTS$StartInstanceLocation$LAYOUT_; }

    static final VarHandle D3D12_DRAW_ARGUMENTS$StartInstanceLocation$VH_ = D3D12_DRAW_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartInstanceLocation"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_ARGUMENTS$StartInstanceLocation$VH() { return D3D12_DRAW_ARGUMENTS$StartInstanceLocation$VH_; }

    static final MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("IndexCountPerInstance"),
        C_INT.withName("InstanceCount"),
        C_INT.withName("StartIndexLocation"),
        C_INT.withName("BaseVertexLocation"),
        C_INT.withName("StartInstanceLocation")
    ).withName("D3D12_DRAW_INDEXED_ARGUMENTS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT() { return D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$LAYOUT() { return D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$LAYOUT_; }

    static final VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$VH_ = D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IndexCountPerInstance"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$VH() { return D3D12_DRAW_INDEXED_ARGUMENTS$IndexCountPerInstance$VH_; }

    static final MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$LAYOUT() { return D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$LAYOUT_; }

    static final VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$VH_ = D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("InstanceCount"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$VH() { return D3D12_DRAW_INDEXED_ARGUMENTS$InstanceCount$VH_; }

    static final MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$LAYOUT() { return D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$LAYOUT_; }

    static final VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$VH_ = D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartIndexLocation"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$VH() { return D3D12_DRAW_INDEXED_ARGUMENTS$StartIndexLocation$VH_; }

    static final MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$LAYOUT() { return D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$LAYOUT_; }

    static final VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$VH_ = D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseVertexLocation"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$VH() { return D3D12_DRAW_INDEXED_ARGUMENTS$BaseVertexLocation$VH_; }

    static final MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$LAYOUT() { return D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$LAYOUT_; }

    static final VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$VH_ = D3D12_DRAW_INDEXED_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartInstanceLocation"));
    public static java.lang.invoke.VarHandle D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$VH() { return D3D12_DRAW_INDEXED_ARGUMENTS$StartInstanceLocation$VH_; }

    static final MemoryLayout D3D12_DISPATCH_ARGUMENTS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ThreadGroupCountX"),
        C_INT.withName("ThreadGroupCountY"),
        C_INT.withName("ThreadGroupCountZ")
    ).withName("D3D12_DISPATCH_ARGUMENTS");
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISPATCH_ARGUMENTS$struct$LAYOUT() { return D3D12_DISPATCH_ARGUMENTS$struct$LAYOUT_; }

    static final MemoryLayout D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$LAYOUT() { return D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$LAYOUT_; }

    static final VarHandle D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$VH_ = D3D12_DISPATCH_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ThreadGroupCountX"));
    public static java.lang.invoke.VarHandle D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$VH() { return D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountX$VH_; }

    static final MemoryLayout D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$LAYOUT() { return D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$LAYOUT_; }

    static final VarHandle D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$VH_ = D3D12_DISPATCH_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ThreadGroupCountY"));
    public static java.lang.invoke.VarHandle D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$VH() { return D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountY$VH_; }

    static final MemoryLayout D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$LAYOUT() { return D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$LAYOUT_; }

    static final VarHandle D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$VH_ = D3D12_DISPATCH_ARGUMENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ThreadGroupCountZ"));
    public static java.lang.invoke.VarHandle D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$VH() { return D3D12_DISPATCH_ARGUMENTS$ThreadGroupCountZ$VH_; }

    static final MemoryLayout D3D12_VERTEX_BUFFER_VIEW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("BufferLocation"),
        C_INT.withName("SizeInBytes"),
        C_INT.withName("StrideInBytes")
    ).withName("D3D12_VERTEX_BUFFER_VIEW");
    public static jdk.incubator.foreign.MemoryLayout D3D12_VERTEX_BUFFER_VIEW$struct$LAYOUT() { return D3D12_VERTEX_BUFFER_VIEW$struct$LAYOUT_; }

    static final MemoryLayout D3D12_VERTEX_BUFFER_VIEW$BufferLocation$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_VERTEX_BUFFER_VIEW$BufferLocation$LAYOUT() { return D3D12_VERTEX_BUFFER_VIEW$BufferLocation$LAYOUT_; }

    static final VarHandle D3D12_VERTEX_BUFFER_VIEW$BufferLocation$VH_ = D3D12_VERTEX_BUFFER_VIEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BufferLocation"));
    public static java.lang.invoke.VarHandle D3D12_VERTEX_BUFFER_VIEW$BufferLocation$VH() { return D3D12_VERTEX_BUFFER_VIEW$BufferLocation$VH_; }

    static final MemoryLayout D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$LAYOUT() { return D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$VH_ = D3D12_VERTEX_BUFFER_VIEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$VH() { return D3D12_VERTEX_BUFFER_VIEW$SizeInBytes$VH_; }

    static final MemoryLayout D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$LAYOUT() { return D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$LAYOUT_; }

    static final VarHandle D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$VH_ = D3D12_VERTEX_BUFFER_VIEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StrideInBytes"));
    public static java.lang.invoke.VarHandle D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$VH() { return D3D12_VERTEX_BUFFER_VIEW$StrideInBytes$VH_; }

    static final MemoryLayout D3D12_INDEX_BUFFER_VIEW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("BufferLocation"),
        C_INT.withName("SizeInBytes"),
        C_INT.withName("Format")
    ).withName("D3D12_INDEX_BUFFER_VIEW");
    public static jdk.incubator.foreign.MemoryLayout D3D12_INDEX_BUFFER_VIEW$struct$LAYOUT() { return D3D12_INDEX_BUFFER_VIEW$struct$LAYOUT_; }

    static final MemoryLayout D3D12_INDEX_BUFFER_VIEW$BufferLocation$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout D3D12_INDEX_BUFFER_VIEW$BufferLocation$LAYOUT() { return D3D12_INDEX_BUFFER_VIEW$BufferLocation$LAYOUT_; }

    static final VarHandle D3D12_INDEX_BUFFER_VIEW$BufferLocation$VH_ = D3D12_INDEX_BUFFER_VIEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BufferLocation"));
    public static java.lang.invoke.VarHandle D3D12_INDEX_BUFFER_VIEW$BufferLocation$VH() { return D3D12_INDEX_BUFFER_VIEW$BufferLocation$VH_; }

    static final MemoryLayout D3D12_INDEX_BUFFER_VIEW$SizeInBytes$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_INDEX_BUFFER_VIEW$SizeInBytes$LAYOUT() { return D3D12_INDEX_BUFFER_VIEW$SizeInBytes$LAYOUT_; }

    static final VarHandle D3D12_INDEX_BUFFER_VIEW$SizeInBytes$VH_ = D3D12_INDEX_BUFFER_VIEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    public static java.lang.invoke.VarHandle D3D12_INDEX_BUFFER_VIEW$SizeInBytes$VH() { return D3D12_INDEX_BUFFER_VIEW$SizeInBytes$VH_; }

    static final MemoryLayout D3D12_INDEX_BUFFER_VIEW$Format$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_INDEX_BUFFER_VIEW$Format$LAYOUT() { return D3D12_INDEX_BUFFER_VIEW$Format$LAYOUT_; }

    static final VarHandle D3D12_INDEX_BUFFER_VIEW$Format$VH_ = D3D12_INDEX_BUFFER_VIEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Format"));
    public static java.lang.invoke.VarHandle D3D12_INDEX_BUFFER_VIEW$Format$VH() { return D3D12_INDEX_BUFFER_VIEW$Format$VH_; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_DRAW() { return (int)0L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED() { return (int)1L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH() { return (int)2L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW() { return (int)3L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW() { return (int)4L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT() { return (int)5L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW() { return (int)6L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW() { return (int)7L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW() { return (int)8L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS() { return (int)9L; }

    public static int D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_MESH() { return (int)10L; }

    static final MemoryLayout D3D12_INDIRECT_ARGUMENT_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        MemoryLayout.ofStruct(
            C_INT.withName("Slot")
        ).withName("VertexBuffer"),
        MemoryLayout.ofStruct(
            C_INT.withName("RootParameterIndex"),
            C_INT.withName("DestOffsetIn32BitValues"),
            C_INT.withName("Num32BitValuesToSet")
        ).withName("Constant"),
        MemoryLayout.ofStruct(
            C_INT.withName("RootParameterIndex")
        ).withName("ConstantBufferView"),
        MemoryLayout.ofStruct(
            C_INT.withName("RootParameterIndex")
        ).withName("ShaderResourceView"),
        MemoryLayout.ofStruct(
            C_INT.withName("RootParameterIndex")
        ).withName("UnorderedAccessView")
    ).withName("D3D12_INDIRECT_ARGUMENT_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_INDIRECT_ARGUMENT_DESC$struct$LAYOUT() { return D3D12_INDIRECT_ARGUMENT_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_INDIRECT_ARGUMENT_DESC$Type$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_INDIRECT_ARGUMENT_DESC$Type$LAYOUT() { return D3D12_INDIRECT_ARGUMENT_DESC$Type$LAYOUT_; }

    static final VarHandle D3D12_INDIRECT_ARGUMENT_DESC$Type$VH_ = D3D12_INDIRECT_ARGUMENT_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    public static java.lang.invoke.VarHandle D3D12_INDIRECT_ARGUMENT_DESC$Type$VH() { return D3D12_INDIRECT_ARGUMENT_DESC$Type$VH_; }

    static final MemoryLayout VertexBuffer$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Slot")
    );
    public static jdk.incubator.foreign.MemoryLayout VertexBuffer$struct$LAYOUT() { return VertexBuffer$struct$LAYOUT_; }

    static final MemoryLayout VertexBuffer$Slot$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout VertexBuffer$Slot$LAYOUT() { return VertexBuffer$Slot$LAYOUT_; }

    static final VarHandle VertexBuffer$Slot$VH_ = VertexBuffer$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Slot"));
    public static java.lang.invoke.VarHandle VertexBuffer$Slot$VH() { return VertexBuffer$Slot$VH_; }

    static final MemoryLayout Constant$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("RootParameterIndex"),
        C_INT.withName("DestOffsetIn32BitValues"),
        C_INT.withName("Num32BitValuesToSet")
    );
    public static jdk.incubator.foreign.MemoryLayout Constant$struct$LAYOUT() { return Constant$struct$LAYOUT_; }

    static final MemoryLayout Constant$RootParameterIndex$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout Constant$RootParameterIndex$LAYOUT() { return Constant$RootParameterIndex$LAYOUT_; }

    static final VarHandle Constant$RootParameterIndex$VH_ = Constant$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RootParameterIndex"));
    public static java.lang.invoke.VarHandle Constant$RootParameterIndex$VH() { return Constant$RootParameterIndex$VH_; }

    static final MemoryLayout Constant$DestOffsetIn32BitValues$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout Constant$DestOffsetIn32BitValues$LAYOUT() { return Constant$DestOffsetIn32BitValues$LAYOUT_; }

    static final VarHandle Constant$DestOffsetIn32BitValues$VH_ = Constant$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DestOffsetIn32BitValues"));
    public static java.lang.invoke.VarHandle Constant$DestOffsetIn32BitValues$VH() { return Constant$DestOffsetIn32BitValues$VH_; }

    static final MemoryLayout Constant$Num32BitValuesToSet$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout Constant$Num32BitValuesToSet$LAYOUT() { return Constant$Num32BitValuesToSet$LAYOUT_; }

    static final VarHandle Constant$Num32BitValuesToSet$VH_ = Constant$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Num32BitValuesToSet"));
    public static java.lang.invoke.VarHandle Constant$Num32BitValuesToSet$VH() { return Constant$Num32BitValuesToSet$VH_; }

    static final MemoryLayout ConstantBufferView$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("RootParameterIndex")
    );
    public static jdk.incubator.foreign.MemoryLayout ConstantBufferView$struct$LAYOUT() { return ConstantBufferView$struct$LAYOUT_; }

    static final MemoryLayout ConstantBufferView$RootParameterIndex$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout ConstantBufferView$RootParameterIndex$LAYOUT() { return ConstantBufferView$RootParameterIndex$LAYOUT_; }

    static final VarHandle ConstantBufferView$RootParameterIndex$VH_ = ConstantBufferView$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RootParameterIndex"));
    public static java.lang.invoke.VarHandle ConstantBufferView$RootParameterIndex$VH() { return ConstantBufferView$RootParameterIndex$VH_; }

    static final MemoryLayout ShaderResourceView$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("RootParameterIndex")
    );
    public static jdk.incubator.foreign.MemoryLayout ShaderResourceView$struct$LAYOUT() { return ShaderResourceView$struct$LAYOUT_; }

    static final MemoryLayout ShaderResourceView$RootParameterIndex$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout ShaderResourceView$RootParameterIndex$LAYOUT() { return ShaderResourceView$RootParameterIndex$LAYOUT_; }

    static final VarHandle ShaderResourceView$RootParameterIndex$VH_ = ShaderResourceView$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RootParameterIndex"));
    public static java.lang.invoke.VarHandle ShaderResourceView$RootParameterIndex$VH() { return ShaderResourceView$RootParameterIndex$VH_; }

    static final MemoryLayout UnorderedAccessView$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("RootParameterIndex")
    );
    public static jdk.incubator.foreign.MemoryLayout UnorderedAccessView$struct$LAYOUT() { return UnorderedAccessView$struct$LAYOUT_; }

    static final MemoryLayout UnorderedAccessView$RootParameterIndex$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout UnorderedAccessView$RootParameterIndex$LAYOUT() { return UnorderedAccessView$RootParameterIndex$LAYOUT_; }

    static final VarHandle UnorderedAccessView$RootParameterIndex$VH_ = UnorderedAccessView$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RootParameterIndex"));
    public static java.lang.invoke.VarHandle UnorderedAccessView$RootParameterIndex$VH() { return UnorderedAccessView$RootParameterIndex$VH_; }

    static final MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ByteStride"),
        C_INT.withName("NumArgumentDescs"),
        C_POINTER.withName("pArgumentDescs"),
        C_INT.withName("NodeMask"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("D3D12_COMMAND_SIGNATURE_DESC");
    public static jdk.incubator.foreign.MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$struct$LAYOUT() { return D3D12_COMMAND_SIGNATURE_DESC$struct$LAYOUT_; }

    static final MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$ByteStride$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$ByteStride$LAYOUT() { return D3D12_COMMAND_SIGNATURE_DESC$ByteStride$LAYOUT_; }

    static final VarHandle D3D12_COMMAND_SIGNATURE_DESC$ByteStride$VH_ = D3D12_COMMAND_SIGNATURE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ByteStride"));
    public static java.lang.invoke.VarHandle D3D12_COMMAND_SIGNATURE_DESC$ByteStride$VH() { return D3D12_COMMAND_SIGNATURE_DESC$ByteStride$VH_; }

    static final MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$LAYOUT() { return D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$LAYOUT_; }

    static final VarHandle D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$VH_ = D3D12_COMMAND_SIGNATURE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumArgumentDescs"));
    public static java.lang.invoke.VarHandle D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$VH() { return D3D12_COMMAND_SIGNATURE_DESC$NumArgumentDescs$VH_; }

    static final MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$LAYOUT() { return D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$LAYOUT_; }

    static final VarHandle D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$VH_ = MemoryHandles.asAddressVarHandle(D3D12_COMMAND_SIGNATURE_DESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pArgumentDescs")));
    public static java.lang.invoke.VarHandle D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$VH() { return D3D12_COMMAND_SIGNATURE_DESC$pArgumentDescs$VH_; }

    static final MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$NodeMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout D3D12_COMMAND_SIGNATURE_DESC$NodeMask$LAYOUT() { return D3D12_COMMAND_SIGNATURE_DESC$NodeMask$LAYOUT_; }

    static final VarHandle D3D12_COMMAND_SIGNATURE_DESC$NodeMask$VH_ = D3D12_COMMAND_SIGNATURE_DESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeMask"));
    public static java.lang.invoke.VarHandle D3D12_COMMAND_SIGNATURE_DESC$NodeMask$VH() { return D3D12_COMMAND_SIGNATURE_DESC$NodeMask$VH_; }

    static final MemoryLayout __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    public static java.lang.invoke.VarHandle __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$VH() { return __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec", __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    public static java.lang.invoke.VarHandle __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$VH() { return __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec", __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_ID3D12Pageable$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12Pageable$LAYOUT() { return IID_ID3D12Pageable$LAYOUT_; }

    static final MemorySegment IID_ID3D12Pageable$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12Pageable", IID_ID3D12Pageable$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12Pageable$SEGMENT() { return IID_ID3D12Pageable$SEGMENT_; }

    static final MemoryLayout ID3D12PageableVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice")
    ).withName("ID3D12PageableVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$struct$LAYOUT() { return ID3D12PageableVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12PageableVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$QueryInterface$LAYOUT() { return ID3D12PageableVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12PageableVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PageableVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12PageableVtbl$QueryInterface$VH() { return ID3D12PageableVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12PageableVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$AddRef$LAYOUT() { return ID3D12PageableVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12PageableVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PageableVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12PageableVtbl$AddRef$VH() { return ID3D12PageableVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12PageableVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$Release$LAYOUT() { return ID3D12PageableVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12PageableVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PageableVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12PageableVtbl$Release$VH() { return ID3D12PageableVtbl$Release$VH_; }

    static final MemoryLayout ID3D12PageableVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$GetPrivateData$LAYOUT() { return ID3D12PageableVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12PageableVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PageableVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12PageableVtbl$GetPrivateData$VH() { return ID3D12PageableVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12PageableVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$SetPrivateData$LAYOUT() { return ID3D12PageableVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12PageableVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PageableVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12PageableVtbl$SetPrivateData$VH() { return ID3D12PageableVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12PageableVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12PageableVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12PageableVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PageableVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12PageableVtbl$SetPrivateDataInterface$VH() { return ID3D12PageableVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12PageableVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$SetName$LAYOUT() { return ID3D12PageableVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12PageableVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PageableVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12PageableVtbl$SetName$VH() { return ID3D12PageableVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12PageableVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PageableVtbl$GetDevice$LAYOUT() { return ID3D12PageableVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12PageableVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PageableVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12PageableVtbl$GetDevice$VH() { return ID3D12PageableVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12Pageable$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12Pageable");
    public static jdk.incubator.foreign.MemoryLayout ID3D12Pageable$struct$LAYOUT() { return ID3D12Pageable$struct$LAYOUT_; }

    static final MemoryLayout ID3D12Pageable$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Pageable$lpVtbl$LAYOUT() { return ID3D12Pageable$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12Pageable$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Pageable$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12Pageable$lpVtbl$VH() { return ID3D12Pageable$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12Heap$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12Heap$LAYOUT() { return IID_ID3D12Heap$LAYOUT_; }

    static final MemorySegment IID_ID3D12Heap$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12Heap", IID_ID3D12Heap$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12Heap$SEGMENT() { return IID_ID3D12Heap$SEGMENT_; }

    static final MemoryLayout ID3D12HeapVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice"),
        C_POINTER.withName("GetDesc")
    ).withName("ID3D12HeapVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$struct$LAYOUT() { return ID3D12HeapVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12HeapVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$QueryInterface$LAYOUT() { return ID3D12HeapVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$QueryInterface$VH() { return ID3D12HeapVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12HeapVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$AddRef$LAYOUT() { return ID3D12HeapVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$AddRef$VH() { return ID3D12HeapVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12HeapVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$Release$LAYOUT() { return ID3D12HeapVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$Release$VH() { return ID3D12HeapVtbl$Release$VH_; }

    static final MemoryLayout ID3D12HeapVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$GetPrivateData$LAYOUT() { return ID3D12HeapVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$GetPrivateData$VH() { return ID3D12HeapVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12HeapVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$SetPrivateData$LAYOUT() { return ID3D12HeapVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$SetPrivateData$VH() { return ID3D12HeapVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12HeapVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12HeapVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$SetPrivateDataInterface$VH() { return ID3D12HeapVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12HeapVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$SetName$LAYOUT() { return ID3D12HeapVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$SetName$VH() { return ID3D12HeapVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12HeapVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$GetDevice$LAYOUT() { return ID3D12HeapVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$GetDevice$VH() { return ID3D12HeapVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12HeapVtbl$GetDesc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12HeapVtbl$GetDesc$LAYOUT() { return ID3D12HeapVtbl$GetDesc$LAYOUT_; }

    static final VarHandle ID3D12HeapVtbl$GetDesc$VH_ = MemoryHandles.asAddressVarHandle(ID3D12HeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDesc")));
    public static java.lang.invoke.VarHandle ID3D12HeapVtbl$GetDesc$VH() { return ID3D12HeapVtbl$GetDesc$VH_; }

    static final MemoryLayout ID3D12Heap$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12Heap");
    public static jdk.incubator.foreign.MemoryLayout ID3D12Heap$struct$LAYOUT() { return ID3D12Heap$struct$LAYOUT_; }

    static final MemoryLayout ID3D12Heap$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Heap$lpVtbl$LAYOUT() { return ID3D12Heap$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12Heap$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Heap$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12Heap$lpVtbl$VH() { return ID3D12Heap$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12Resource$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12Resource$LAYOUT() { return IID_ID3D12Resource$LAYOUT_; }

    static final MemorySegment IID_ID3D12Resource$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12Resource", IID_ID3D12Resource$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12Resource$SEGMENT() { return IID_ID3D12Resource$SEGMENT_; }

    static final MemoryLayout ID3D12ResourceVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice"),
        C_POINTER.withName("Map"),
        C_POINTER.withName("Unmap"),
        C_POINTER.withName("GetDesc"),
        C_POINTER.withName("GetGPUVirtualAddress"),
        C_POINTER.withName("WriteToSubresource"),
        C_POINTER.withName("ReadFromSubresource"),
        C_POINTER.withName("GetHeapProperties")
    ).withName("ID3D12ResourceVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$struct$LAYOUT() { return ID3D12ResourceVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12ResourceVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$QueryInterface$LAYOUT() { return ID3D12ResourceVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$QueryInterface$VH() { return ID3D12ResourceVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$AddRef$LAYOUT() { return ID3D12ResourceVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$AddRef$VH() { return ID3D12ResourceVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$Release$LAYOUT() { return ID3D12ResourceVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$Release$VH() { return ID3D12ResourceVtbl$Release$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$GetPrivateData$LAYOUT() { return ID3D12ResourceVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$GetPrivateData$VH() { return ID3D12ResourceVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$SetPrivateData$LAYOUT() { return ID3D12ResourceVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$SetPrivateData$VH() { return ID3D12ResourceVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12ResourceVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$SetPrivateDataInterface$VH() { return ID3D12ResourceVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$SetName$LAYOUT() { return ID3D12ResourceVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$SetName$VH() { return ID3D12ResourceVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$GetDevice$LAYOUT() { return ID3D12ResourceVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$GetDevice$VH() { return ID3D12ResourceVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$Map$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$Map$LAYOUT() { return ID3D12ResourceVtbl$Map$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$Map$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Map")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$Map$VH() { return ID3D12ResourceVtbl$Map$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$Unmap$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$Unmap$LAYOUT() { return ID3D12ResourceVtbl$Unmap$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$Unmap$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Unmap")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$Unmap$VH() { return ID3D12ResourceVtbl$Unmap$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$GetDesc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$GetDesc$LAYOUT() { return ID3D12ResourceVtbl$GetDesc$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$GetDesc$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDesc")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$GetDesc$VH() { return ID3D12ResourceVtbl$GetDesc$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$GetGPUVirtualAddress$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$GetGPUVirtualAddress$LAYOUT() { return ID3D12ResourceVtbl$GetGPUVirtualAddress$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$GetGPUVirtualAddress$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetGPUVirtualAddress")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$GetGPUVirtualAddress$VH() { return ID3D12ResourceVtbl$GetGPUVirtualAddress$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$WriteToSubresource$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$WriteToSubresource$LAYOUT() { return ID3D12ResourceVtbl$WriteToSubresource$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$WriteToSubresource$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WriteToSubresource")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$WriteToSubresource$VH() { return ID3D12ResourceVtbl$WriteToSubresource$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$ReadFromSubresource$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$ReadFromSubresource$LAYOUT() { return ID3D12ResourceVtbl$ReadFromSubresource$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$ReadFromSubresource$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReadFromSubresource")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$ReadFromSubresource$VH() { return ID3D12ResourceVtbl$ReadFromSubresource$VH_; }

    static final MemoryLayout ID3D12ResourceVtbl$GetHeapProperties$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12ResourceVtbl$GetHeapProperties$LAYOUT() { return ID3D12ResourceVtbl$GetHeapProperties$LAYOUT_; }

    static final VarHandle ID3D12ResourceVtbl$GetHeapProperties$VH_ = MemoryHandles.asAddressVarHandle(ID3D12ResourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetHeapProperties")));
    public static java.lang.invoke.VarHandle ID3D12ResourceVtbl$GetHeapProperties$VH() { return ID3D12ResourceVtbl$GetHeapProperties$VH_; }

    static final MemoryLayout ID3D12Resource$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12Resource");
    public static jdk.incubator.foreign.MemoryLayout ID3D12Resource$struct$LAYOUT() { return ID3D12Resource$struct$LAYOUT_; }

    static final MemoryLayout ID3D12Resource$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Resource$lpVtbl$LAYOUT() { return ID3D12Resource$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12Resource$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Resource$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12Resource$lpVtbl$VH() { return ID3D12Resource$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12CommandAllocator$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12CommandAllocator$LAYOUT() { return IID_ID3D12CommandAllocator$LAYOUT_; }

    static final MemorySegment IID_ID3D12CommandAllocator$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12CommandAllocator", IID_ID3D12CommandAllocator$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12CommandAllocator$SEGMENT() { return IID_ID3D12CommandAllocator$SEGMENT_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice"),
        C_POINTER.withName("Reset")
    ).withName("ID3D12CommandAllocatorVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$struct$LAYOUT() { return ID3D12CommandAllocatorVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$QueryInterface$LAYOUT() { return ID3D12CommandAllocatorVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$QueryInterface$VH() { return ID3D12CommandAllocatorVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$AddRef$LAYOUT() { return ID3D12CommandAllocatorVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$AddRef$VH() { return ID3D12CommandAllocatorVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$Release$LAYOUT() { return ID3D12CommandAllocatorVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$Release$VH() { return ID3D12CommandAllocatorVtbl$Release$VH_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$GetPrivateData$LAYOUT() { return ID3D12CommandAllocatorVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$GetPrivateData$VH() { return ID3D12CommandAllocatorVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$SetPrivateData$LAYOUT() { return ID3D12CommandAllocatorVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$SetPrivateData$VH() { return ID3D12CommandAllocatorVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$VH() { return ID3D12CommandAllocatorVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$SetName$LAYOUT() { return ID3D12CommandAllocatorVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$SetName$VH() { return ID3D12CommandAllocatorVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$GetDevice$LAYOUT() { return ID3D12CommandAllocatorVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$GetDevice$VH() { return ID3D12CommandAllocatorVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12CommandAllocatorVtbl$Reset$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocatorVtbl$Reset$LAYOUT() { return ID3D12CommandAllocatorVtbl$Reset$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocatorVtbl$Reset$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reset")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocatorVtbl$Reset$VH() { return ID3D12CommandAllocatorVtbl$Reset$VH_; }

    static final MemoryLayout ID3D12CommandAllocator$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12CommandAllocator");
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocator$struct$LAYOUT() { return ID3D12CommandAllocator$struct$LAYOUT_; }

    static final MemoryLayout ID3D12CommandAllocator$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12CommandAllocator$lpVtbl$LAYOUT() { return ID3D12CommandAllocator$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12CommandAllocator$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12CommandAllocator$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12CommandAllocator$lpVtbl$VH() { return ID3D12CommandAllocator$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12Fence$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12Fence$LAYOUT() { return IID_ID3D12Fence$LAYOUT_; }

    static final MemorySegment IID_ID3D12Fence$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12Fence", IID_ID3D12Fence$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12Fence$SEGMENT() { return IID_ID3D12Fence$SEGMENT_; }

    static final MemoryLayout ID3D12FenceVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice"),
        C_POINTER.withName("GetCompletedValue"),
        C_POINTER.withName("SetEventOnCompletion"),
        C_POINTER.withName("Signal")
    ).withName("ID3D12FenceVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$struct$LAYOUT() { return ID3D12FenceVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12FenceVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$QueryInterface$LAYOUT() { return ID3D12FenceVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$QueryInterface$VH() { return ID3D12FenceVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$AddRef$LAYOUT() { return ID3D12FenceVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$AddRef$VH() { return ID3D12FenceVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$Release$LAYOUT() { return ID3D12FenceVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$Release$VH() { return ID3D12FenceVtbl$Release$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$GetPrivateData$LAYOUT() { return ID3D12FenceVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$GetPrivateData$VH() { return ID3D12FenceVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$SetPrivateData$LAYOUT() { return ID3D12FenceVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$SetPrivateData$VH() { return ID3D12FenceVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12FenceVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$SetPrivateDataInterface$VH() { return ID3D12FenceVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$SetName$LAYOUT() { return ID3D12FenceVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$SetName$VH() { return ID3D12FenceVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$GetDevice$LAYOUT() { return ID3D12FenceVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$GetDevice$VH() { return ID3D12FenceVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$GetCompletedValue$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$GetCompletedValue$LAYOUT() { return ID3D12FenceVtbl$GetCompletedValue$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$GetCompletedValue$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCompletedValue")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$GetCompletedValue$VH() { return ID3D12FenceVtbl$GetCompletedValue$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$SetEventOnCompletion$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$SetEventOnCompletion$LAYOUT() { return ID3D12FenceVtbl$SetEventOnCompletion$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$SetEventOnCompletion$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetEventOnCompletion")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$SetEventOnCompletion$VH() { return ID3D12FenceVtbl$SetEventOnCompletion$VH_; }

    static final MemoryLayout ID3D12FenceVtbl$Signal$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12FenceVtbl$Signal$LAYOUT() { return ID3D12FenceVtbl$Signal$LAYOUT_; }

    static final VarHandle ID3D12FenceVtbl$Signal$VH_ = MemoryHandles.asAddressVarHandle(ID3D12FenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Signal")));
    public static java.lang.invoke.VarHandle ID3D12FenceVtbl$Signal$VH() { return ID3D12FenceVtbl$Signal$VH_; }

    static final MemoryLayout ID3D12Fence$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12Fence");
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence$struct$LAYOUT() { return ID3D12Fence$struct$LAYOUT_; }

    static final MemoryLayout ID3D12Fence$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence$lpVtbl$LAYOUT() { return ID3D12Fence$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12Fence$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12Fence$lpVtbl$VH() { return ID3D12Fence$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12Fence1$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12Fence1$LAYOUT() { return IID_ID3D12Fence1$LAYOUT_; }

    static final MemorySegment IID_ID3D12Fence1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12Fence1", IID_ID3D12Fence1$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12Fence1$SEGMENT() { return IID_ID3D12Fence1$SEGMENT_; }

    static final MemoryLayout ID3D12Fence1Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice"),
        C_POINTER.withName("GetCompletedValue"),
        C_POINTER.withName("SetEventOnCompletion"),
        C_POINTER.withName("Signal"),
        C_POINTER.withName("GetCreationFlags")
    ).withName("ID3D12Fence1Vtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$struct$LAYOUT() { return ID3D12Fence1Vtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12Fence1Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$QueryInterface$LAYOUT() { return ID3D12Fence1Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$QueryInterface$VH() { return ID3D12Fence1Vtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$AddRef$LAYOUT() { return ID3D12Fence1Vtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$AddRef$VH() { return ID3D12Fence1Vtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$Release$LAYOUT() { return ID3D12Fence1Vtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$Release$VH() { return ID3D12Fence1Vtbl$Release$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$GetPrivateData$LAYOUT() { return ID3D12Fence1Vtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$GetPrivateData$VH() { return ID3D12Fence1Vtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$SetPrivateData$LAYOUT() { return ID3D12Fence1Vtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$SetPrivateData$VH() { return ID3D12Fence1Vtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12Fence1Vtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$SetPrivateDataInterface$VH() { return ID3D12Fence1Vtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$SetName$LAYOUT() { return ID3D12Fence1Vtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$SetName$VH() { return ID3D12Fence1Vtbl$SetName$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$GetDevice$LAYOUT() { return ID3D12Fence1Vtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$GetDevice$VH() { return ID3D12Fence1Vtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$GetCompletedValue$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$GetCompletedValue$LAYOUT() { return ID3D12Fence1Vtbl$GetCompletedValue$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$GetCompletedValue$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCompletedValue")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$GetCompletedValue$VH() { return ID3D12Fence1Vtbl$GetCompletedValue$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$SetEventOnCompletion$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$SetEventOnCompletion$LAYOUT() { return ID3D12Fence1Vtbl$SetEventOnCompletion$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$SetEventOnCompletion$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetEventOnCompletion")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$SetEventOnCompletion$VH() { return ID3D12Fence1Vtbl$SetEventOnCompletion$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$Signal$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$Signal$LAYOUT() { return ID3D12Fence1Vtbl$Signal$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$Signal$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Signal")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$Signal$VH() { return ID3D12Fence1Vtbl$Signal$VH_; }

    static final MemoryLayout ID3D12Fence1Vtbl$GetCreationFlags$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1Vtbl$GetCreationFlags$LAYOUT() { return ID3D12Fence1Vtbl$GetCreationFlags$LAYOUT_; }

    static final VarHandle ID3D12Fence1Vtbl$GetCreationFlags$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCreationFlags")));
    public static java.lang.invoke.VarHandle ID3D12Fence1Vtbl$GetCreationFlags$VH() { return ID3D12Fence1Vtbl$GetCreationFlags$VH_; }

    static final MemoryLayout ID3D12Fence1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12Fence1");
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1$struct$LAYOUT() { return ID3D12Fence1$struct$LAYOUT_; }

    static final MemoryLayout ID3D12Fence1$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12Fence1$lpVtbl$LAYOUT() { return ID3D12Fence1$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12Fence1$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12Fence1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12Fence1$lpVtbl$VH() { return ID3D12Fence1$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12PipelineState$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12PipelineState$LAYOUT() { return IID_ID3D12PipelineState$LAYOUT_; }

    static final MemorySegment IID_ID3D12PipelineState$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12PipelineState", IID_ID3D12PipelineState$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12PipelineState$SEGMENT() { return IID_ID3D12PipelineState$SEGMENT_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice"),
        C_POINTER.withName("GetCachedBlob")
    ).withName("ID3D12PipelineStateVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$struct$LAYOUT() { return ID3D12PipelineStateVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$QueryInterface$LAYOUT() { return ID3D12PipelineStateVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$QueryInterface$VH() { return ID3D12PipelineStateVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$AddRef$LAYOUT() { return ID3D12PipelineStateVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$AddRef$VH() { return ID3D12PipelineStateVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$Release$LAYOUT() { return ID3D12PipelineStateVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$Release$VH() { return ID3D12PipelineStateVtbl$Release$VH_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$GetPrivateData$LAYOUT() { return ID3D12PipelineStateVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$GetPrivateData$VH() { return ID3D12PipelineStateVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$SetPrivateData$LAYOUT() { return ID3D12PipelineStateVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$SetPrivateData$VH() { return ID3D12PipelineStateVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12PipelineStateVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$SetPrivateDataInterface$VH() { return ID3D12PipelineStateVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$SetName$LAYOUT() { return ID3D12PipelineStateVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$SetName$VH() { return ID3D12PipelineStateVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$GetDevice$LAYOUT() { return ID3D12PipelineStateVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$GetDevice$VH() { return ID3D12PipelineStateVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12PipelineStateVtbl$GetCachedBlob$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineStateVtbl$GetCachedBlob$LAYOUT() { return ID3D12PipelineStateVtbl$GetCachedBlob$LAYOUT_; }

    static final VarHandle ID3D12PipelineStateVtbl$GetCachedBlob$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineStateVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCachedBlob")));
    public static java.lang.invoke.VarHandle ID3D12PipelineStateVtbl$GetCachedBlob$VH() { return ID3D12PipelineStateVtbl$GetCachedBlob$VH_; }

    static final MemoryLayout ID3D12PipelineState$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12PipelineState");
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineState$struct$LAYOUT() { return ID3D12PipelineState$struct$LAYOUT_; }

    static final MemoryLayout ID3D12PipelineState$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12PipelineState$lpVtbl$LAYOUT() { return ID3D12PipelineState$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12PipelineState$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12PipelineState$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12PipelineState$lpVtbl$VH() { return ID3D12PipelineState$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12DescriptorHeap$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12DescriptorHeap$LAYOUT() { return IID_ID3D12DescriptorHeap$LAYOUT_; }

    static final MemorySegment IID_ID3D12DescriptorHeap$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12DescriptorHeap", IID_ID3D12DescriptorHeap$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12DescriptorHeap$SEGMENT() { return IID_ID3D12DescriptorHeap$SEGMENT_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice"),
        C_POINTER.withName("GetDesc"),
        C_POINTER.withName("GetCPUDescriptorHandleForHeapStart"),
        C_POINTER.withName("GetGPUDescriptorHandleForHeapStart")
    ).withName("ID3D12DescriptorHeapVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$struct$LAYOUT() { return ID3D12DescriptorHeapVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$QueryInterface$LAYOUT() { return ID3D12DescriptorHeapVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$QueryInterface$VH() { return ID3D12DescriptorHeapVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$AddRef$LAYOUT() { return ID3D12DescriptorHeapVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$AddRef$VH() { return ID3D12DescriptorHeapVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$Release$LAYOUT() { return ID3D12DescriptorHeapVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$Release$VH() { return ID3D12DescriptorHeapVtbl$Release$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$GetPrivateData$LAYOUT() { return ID3D12DescriptorHeapVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$GetPrivateData$VH() { return ID3D12DescriptorHeapVtbl$GetPrivateData$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$SetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$SetPrivateData$LAYOUT() { return ID3D12DescriptorHeapVtbl$SetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$SetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$SetPrivateData$VH() { return ID3D12DescriptorHeapVtbl$SetPrivateData$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$LAYOUT() { return ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPrivateDataInterface")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$VH() { return ID3D12DescriptorHeapVtbl$SetPrivateDataInterface$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$SetName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$SetName$LAYOUT() { return ID3D12DescriptorHeapVtbl$SetName$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$SetName$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetName")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$SetName$VH() { return ID3D12DescriptorHeapVtbl$SetName$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$GetDevice$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$GetDevice$LAYOUT() { return ID3D12DescriptorHeapVtbl$GetDevice$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$GetDevice$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDevice")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$GetDevice$VH() { return ID3D12DescriptorHeapVtbl$GetDevice$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$GetDesc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$GetDesc$LAYOUT() { return ID3D12DescriptorHeapVtbl$GetDesc$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$GetDesc$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDesc")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$GetDesc$VH() { return ID3D12DescriptorHeapVtbl$GetDesc$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$LAYOUT() { return ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCPUDescriptorHandleForHeapStart")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$VH() { return ID3D12DescriptorHeapVtbl$GetCPUDescriptorHandleForHeapStart$VH_; }

    static final MemoryLayout ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$LAYOUT() { return ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetGPUDescriptorHandleForHeapStart")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$VH() { return ID3D12DescriptorHeapVtbl$GetGPUDescriptorHandleForHeapStart$VH_; }

    static final MemoryLayout ID3D12DescriptorHeap$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ID3D12DescriptorHeap");
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeap$struct$LAYOUT() { return ID3D12DescriptorHeap$struct$LAYOUT_; }

    static final MemoryLayout ID3D12DescriptorHeap$lpVtbl$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12DescriptorHeap$lpVtbl$LAYOUT() { return ID3D12DescriptorHeap$lpVtbl$LAYOUT_; }

    static final VarHandle ID3D12DescriptorHeap$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ID3D12DescriptorHeap$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    public static java.lang.invoke.VarHandle ID3D12DescriptorHeap$lpVtbl$VH() { return ID3D12DescriptorHeap$lpVtbl$VH_; }

    static final MemoryLayout IID_ID3D12QueryHeap$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
    ).withName("_GUID");
    public static jdk.incubator.foreign.MemoryLayout IID_ID3D12QueryHeap$LAYOUT() { return IID_ID3D12QueryHeap$LAYOUT_; }

    static final MemorySegment IID_ID3D12QueryHeap$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ID3D12QueryHeap", IID_ID3D12QueryHeap$LAYOUT_);
    public static jdk.incubator.foreign.MemorySegment IID_ID3D12QueryHeap$SEGMENT() { return IID_ID3D12QueryHeap$SEGMENT_; }

    static final MemoryLayout ID3D12QueryHeapVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPrivateData"),
        C_POINTER.withName("SetPrivateData"),
        C_POINTER.withName("SetPrivateDataInterface"),
        C_POINTER.withName("SetName"),
        C_POINTER.withName("GetDevice")
    ).withName("ID3D12QueryHeapVtbl");
    public static jdk.incubator.foreign.MemoryLayout ID3D12QueryHeapVtbl$struct$LAYOUT() { return ID3D12QueryHeapVtbl$struct$LAYOUT_; }

    static final MemoryLayout ID3D12QueryHeapVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12QueryHeapVtbl$QueryInterface$LAYOUT() { return ID3D12QueryHeapVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ID3D12QueryHeapVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ID3D12QueryHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    public static java.lang.invoke.VarHandle ID3D12QueryHeapVtbl$QueryInterface$VH() { return ID3D12QueryHeapVtbl$QueryInterface$VH_; }

    static final MemoryLayout ID3D12QueryHeapVtbl$AddRef$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12QueryHeapVtbl$AddRef$LAYOUT() { return ID3D12QueryHeapVtbl$AddRef$LAYOUT_; }

    static final VarHandle ID3D12QueryHeapVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ID3D12QueryHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    public static java.lang.invoke.VarHandle ID3D12QueryHeapVtbl$AddRef$VH() { return ID3D12QueryHeapVtbl$AddRef$VH_; }

    static final MemoryLayout ID3D12QueryHeapVtbl$Release$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12QueryHeapVtbl$Release$LAYOUT() { return ID3D12QueryHeapVtbl$Release$LAYOUT_; }

    static final VarHandle ID3D12QueryHeapVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ID3D12QueryHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    public static java.lang.invoke.VarHandle ID3D12QueryHeapVtbl$Release$VH() { return ID3D12QueryHeapVtbl$Release$VH_; }

    static final MemoryLayout ID3D12QueryHeapVtbl$GetPrivateData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout ID3D12QueryHeapVtbl$GetPrivateData$LAYOUT() { return ID3D12QueryHeapVtbl$GetPrivateData$LAYOUT_; }

    static final VarHandle ID3D12QueryHeapVtbl$GetPrivateData$VH_ = MemoryHandles.asAddressVarHandle(ID3D12QueryHeapVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPrivateData")));
    public static java.lang.invoke.VarHandle ID3D12QueryHeapVtbl$GetPrivateData$VH() { return ID3D12QueryHeapVtbl$GetPrivateData$VH_; }

}

