// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class Windows_h$constants$25 extends Windows_h$constants$24 {
    Windows_h$constants$25() {}
    static final MemoryLayout tagBITMAPINFOHEADER$biCompression$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPINFOHEADER$biCompression$LAYOUT() { return tagBITMAPINFOHEADER$biCompression$LAYOUT_; }

    static final VarHandle tagBITMAPINFOHEADER$biCompression$VH_ = tagBITMAPINFOHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("biCompression"));
    public static java.lang.invoke.VarHandle tagBITMAPINFOHEADER$biCompression$VH() { return tagBITMAPINFOHEADER$biCompression$VH_; }

    static final MemoryLayout tagBITMAPINFOHEADER$biSizeImage$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPINFOHEADER$biSizeImage$LAYOUT() { return tagBITMAPINFOHEADER$biSizeImage$LAYOUT_; }

    static final VarHandle tagBITMAPINFOHEADER$biSizeImage$VH_ = tagBITMAPINFOHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("biSizeImage"));
    public static java.lang.invoke.VarHandle tagBITMAPINFOHEADER$biSizeImage$VH() { return tagBITMAPINFOHEADER$biSizeImage$VH_; }

    static final MemoryLayout tagBITMAPINFOHEADER$biXPelsPerMeter$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPINFOHEADER$biXPelsPerMeter$LAYOUT() { return tagBITMAPINFOHEADER$biXPelsPerMeter$LAYOUT_; }

    static final VarHandle tagBITMAPINFOHEADER$biXPelsPerMeter$VH_ = tagBITMAPINFOHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("biXPelsPerMeter"));
    public static java.lang.invoke.VarHandle tagBITMAPINFOHEADER$biXPelsPerMeter$VH() { return tagBITMAPINFOHEADER$biXPelsPerMeter$VH_; }

    static final MemoryLayout tagBITMAPINFOHEADER$biYPelsPerMeter$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPINFOHEADER$biYPelsPerMeter$LAYOUT() { return tagBITMAPINFOHEADER$biYPelsPerMeter$LAYOUT_; }

    static final VarHandle tagBITMAPINFOHEADER$biYPelsPerMeter$VH_ = tagBITMAPINFOHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("biYPelsPerMeter"));
    public static java.lang.invoke.VarHandle tagBITMAPINFOHEADER$biYPelsPerMeter$VH() { return tagBITMAPINFOHEADER$biYPelsPerMeter$VH_; }

    static final MemoryLayout tagBITMAPINFOHEADER$biClrUsed$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPINFOHEADER$biClrUsed$LAYOUT() { return tagBITMAPINFOHEADER$biClrUsed$LAYOUT_; }

    static final VarHandle tagBITMAPINFOHEADER$biClrUsed$VH_ = tagBITMAPINFOHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("biClrUsed"));
    public static java.lang.invoke.VarHandle tagBITMAPINFOHEADER$biClrUsed$VH() { return tagBITMAPINFOHEADER$biClrUsed$VH_; }

    static final MemoryLayout tagBITMAPINFOHEADER$biClrImportant$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPINFOHEADER$biClrImportant$LAYOUT() { return tagBITMAPINFOHEADER$biClrImportant$LAYOUT_; }

    static final VarHandle tagBITMAPINFOHEADER$biClrImportant$VH_ = tagBITMAPINFOHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("biClrImportant"));
    public static java.lang.invoke.VarHandle tagBITMAPINFOHEADER$biClrImportant$VH() { return tagBITMAPINFOHEADER$biClrImportant$VH_; }

    static final MemoryLayout BITMAPV4HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("bV4Size"),
        C_INT.withName("bV4Width"),
        C_INT.withName("bV4Height"),
        C_SHORT.withName("bV4Planes"),
        C_SHORT.withName("bV4BitCount"),
        C_INT.withName("bV4V4Compression"),
        C_INT.withName("bV4SizeImage"),
        C_INT.withName("bV4XPelsPerMeter"),
        C_INT.withName("bV4YPelsPerMeter"),
        C_INT.withName("bV4ClrUsed"),
        C_INT.withName("bV4ClrImportant"),
        C_INT.withName("bV4RedMask"),
        C_INT.withName("bV4GreenMask"),
        C_INT.withName("bV4BlueMask"),
        C_INT.withName("bV4AlphaMask"),
        C_INT.withName("bV4CSType"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_INT.withName("ciexyzX"),
                C_INT.withName("ciexyzY"),
                C_INT.withName("ciexyzZ")
            ).withName("ciexyzRed"),
            MemoryLayout.ofStruct(
                C_INT.withName("ciexyzX"),
                C_INT.withName("ciexyzY"),
                C_INT.withName("ciexyzZ")
            ).withName("ciexyzGreen"),
            MemoryLayout.ofStruct(
                C_INT.withName("ciexyzX"),
                C_INT.withName("ciexyzY"),
                C_INT.withName("ciexyzZ")
            ).withName("ciexyzBlue")
        ).withName("bV4Endpoints"),
        C_INT.withName("bV4GammaRed"),
        C_INT.withName("bV4GammaGreen"),
        C_INT.withName("bV4GammaBlue")
    );
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$struct$LAYOUT() { return BITMAPV4HEADER$struct$LAYOUT_; }

    static final MemoryLayout BITMAPV4HEADER$bV4Size$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4Size$LAYOUT() { return BITMAPV4HEADER$bV4Size$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4Size$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4Size"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4Size$VH() { return BITMAPV4HEADER$bV4Size$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4Width$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4Width$LAYOUT() { return BITMAPV4HEADER$bV4Width$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4Width$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4Width"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4Width$VH() { return BITMAPV4HEADER$bV4Width$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4Height$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4Height$LAYOUT() { return BITMAPV4HEADER$bV4Height$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4Height$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4Height"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4Height$VH() { return BITMAPV4HEADER$bV4Height$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4Planes$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4Planes$LAYOUT() { return BITMAPV4HEADER$bV4Planes$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4Planes$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bV4Planes"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4Planes$VH() { return BITMAPV4HEADER$bV4Planes$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4BitCount$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4BitCount$LAYOUT() { return BITMAPV4HEADER$bV4BitCount$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4BitCount$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bV4BitCount"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4BitCount$VH() { return BITMAPV4HEADER$bV4BitCount$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4V4Compression$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4V4Compression$LAYOUT() { return BITMAPV4HEADER$bV4V4Compression$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4V4Compression$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4V4Compression"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4V4Compression$VH() { return BITMAPV4HEADER$bV4V4Compression$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4SizeImage$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4SizeImage$LAYOUT() { return BITMAPV4HEADER$bV4SizeImage$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4SizeImage$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4SizeImage"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4SizeImage$VH() { return BITMAPV4HEADER$bV4SizeImage$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4XPelsPerMeter$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4XPelsPerMeter$LAYOUT() { return BITMAPV4HEADER$bV4XPelsPerMeter$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4XPelsPerMeter$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4XPelsPerMeter"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4XPelsPerMeter$VH() { return BITMAPV4HEADER$bV4XPelsPerMeter$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4YPelsPerMeter$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4YPelsPerMeter$LAYOUT() { return BITMAPV4HEADER$bV4YPelsPerMeter$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4YPelsPerMeter$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4YPelsPerMeter"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4YPelsPerMeter$VH() { return BITMAPV4HEADER$bV4YPelsPerMeter$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4ClrUsed$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4ClrUsed$LAYOUT() { return BITMAPV4HEADER$bV4ClrUsed$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4ClrUsed$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4ClrUsed"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4ClrUsed$VH() { return BITMAPV4HEADER$bV4ClrUsed$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4ClrImportant$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4ClrImportant$LAYOUT() { return BITMAPV4HEADER$bV4ClrImportant$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4ClrImportant$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4ClrImportant"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4ClrImportant$VH() { return BITMAPV4HEADER$bV4ClrImportant$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4RedMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4RedMask$LAYOUT() { return BITMAPV4HEADER$bV4RedMask$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4RedMask$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4RedMask"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4RedMask$VH() { return BITMAPV4HEADER$bV4RedMask$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4GreenMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4GreenMask$LAYOUT() { return BITMAPV4HEADER$bV4GreenMask$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4GreenMask$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4GreenMask"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4GreenMask$VH() { return BITMAPV4HEADER$bV4GreenMask$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4BlueMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4BlueMask$LAYOUT() { return BITMAPV4HEADER$bV4BlueMask$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4BlueMask$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4BlueMask"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4BlueMask$VH() { return BITMAPV4HEADER$bV4BlueMask$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4AlphaMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4AlphaMask$LAYOUT() { return BITMAPV4HEADER$bV4AlphaMask$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4AlphaMask$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4AlphaMask"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4AlphaMask$VH() { return BITMAPV4HEADER$bV4AlphaMask$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4CSType$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4CSType$LAYOUT() { return BITMAPV4HEADER$bV4CSType$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4CSType$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4CSType"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4CSType$VH() { return BITMAPV4HEADER$bV4CSType$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4GammaRed$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4GammaRed$LAYOUT() { return BITMAPV4HEADER$bV4GammaRed$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4GammaRed$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4GammaRed"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4GammaRed$VH() { return BITMAPV4HEADER$bV4GammaRed$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4GammaGreen$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4GammaGreen$LAYOUT() { return BITMAPV4HEADER$bV4GammaGreen$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4GammaGreen$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4GammaGreen"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4GammaGreen$VH() { return BITMAPV4HEADER$bV4GammaGreen$VH_; }

    static final MemoryLayout BITMAPV4HEADER$bV4GammaBlue$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV4HEADER$bV4GammaBlue$LAYOUT() { return BITMAPV4HEADER$bV4GammaBlue$LAYOUT_; }

    static final VarHandle BITMAPV4HEADER$bV4GammaBlue$VH_ = BITMAPV4HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV4GammaBlue"));
    public static java.lang.invoke.VarHandle BITMAPV4HEADER$bV4GammaBlue$VH() { return BITMAPV4HEADER$bV4GammaBlue$VH_; }

    static final MemoryLayout BITMAPV5HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("bV5Size"),
        C_INT.withName("bV5Width"),
        C_INT.withName("bV5Height"),
        C_SHORT.withName("bV5Planes"),
        C_SHORT.withName("bV5BitCount"),
        C_INT.withName("bV5Compression"),
        C_INT.withName("bV5SizeImage"),
        C_INT.withName("bV5XPelsPerMeter"),
        C_INT.withName("bV5YPelsPerMeter"),
        C_INT.withName("bV5ClrUsed"),
        C_INT.withName("bV5ClrImportant"),
        C_INT.withName("bV5RedMask"),
        C_INT.withName("bV5GreenMask"),
        C_INT.withName("bV5BlueMask"),
        C_INT.withName("bV5AlphaMask"),
        C_INT.withName("bV5CSType"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_INT.withName("ciexyzX"),
                C_INT.withName("ciexyzY"),
                C_INT.withName("ciexyzZ")
            ).withName("ciexyzRed"),
            MemoryLayout.ofStruct(
                C_INT.withName("ciexyzX"),
                C_INT.withName("ciexyzY"),
                C_INT.withName("ciexyzZ")
            ).withName("ciexyzGreen"),
            MemoryLayout.ofStruct(
                C_INT.withName("ciexyzX"),
                C_INT.withName("ciexyzY"),
                C_INT.withName("ciexyzZ")
            ).withName("ciexyzBlue")
        ).withName("bV5Endpoints"),
        C_INT.withName("bV5GammaRed"),
        C_INT.withName("bV5GammaGreen"),
        C_INT.withName("bV5GammaBlue"),
        C_INT.withName("bV5Intent"),
        C_INT.withName("bV5ProfileData"),
        C_INT.withName("bV5ProfileSize"),
        C_INT.withName("bV5Reserved")
    );
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$struct$LAYOUT() { return BITMAPV5HEADER$struct$LAYOUT_; }

    static final MemoryLayout BITMAPV5HEADER$bV5Size$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5Size$LAYOUT() { return BITMAPV5HEADER$bV5Size$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5Size$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5Size"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5Size$VH() { return BITMAPV5HEADER$bV5Size$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5Width$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5Width$LAYOUT() { return BITMAPV5HEADER$bV5Width$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5Width$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5Width"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5Width$VH() { return BITMAPV5HEADER$bV5Width$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5Height$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5Height$LAYOUT() { return BITMAPV5HEADER$bV5Height$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5Height$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5Height"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5Height$VH() { return BITMAPV5HEADER$bV5Height$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5Planes$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5Planes$LAYOUT() { return BITMAPV5HEADER$bV5Planes$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5Planes$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bV5Planes"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5Planes$VH() { return BITMAPV5HEADER$bV5Planes$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5BitCount$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5BitCount$LAYOUT() { return BITMAPV5HEADER$bV5BitCount$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5BitCount$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bV5BitCount"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5BitCount$VH() { return BITMAPV5HEADER$bV5BitCount$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5Compression$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5Compression$LAYOUT() { return BITMAPV5HEADER$bV5Compression$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5Compression$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5Compression"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5Compression$VH() { return BITMAPV5HEADER$bV5Compression$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5SizeImage$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5SizeImage$LAYOUT() { return BITMAPV5HEADER$bV5SizeImage$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5SizeImage$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5SizeImage"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5SizeImage$VH() { return BITMAPV5HEADER$bV5SizeImage$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5XPelsPerMeter$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5XPelsPerMeter$LAYOUT() { return BITMAPV5HEADER$bV5XPelsPerMeter$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5XPelsPerMeter$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5XPelsPerMeter"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5XPelsPerMeter$VH() { return BITMAPV5HEADER$bV5XPelsPerMeter$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5YPelsPerMeter$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5YPelsPerMeter$LAYOUT() { return BITMAPV5HEADER$bV5YPelsPerMeter$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5YPelsPerMeter$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5YPelsPerMeter"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5YPelsPerMeter$VH() { return BITMAPV5HEADER$bV5YPelsPerMeter$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5ClrUsed$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5ClrUsed$LAYOUT() { return BITMAPV5HEADER$bV5ClrUsed$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5ClrUsed$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5ClrUsed"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5ClrUsed$VH() { return BITMAPV5HEADER$bV5ClrUsed$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5ClrImportant$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5ClrImportant$LAYOUT() { return BITMAPV5HEADER$bV5ClrImportant$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5ClrImportant$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5ClrImportant"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5ClrImportant$VH() { return BITMAPV5HEADER$bV5ClrImportant$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5RedMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5RedMask$LAYOUT() { return BITMAPV5HEADER$bV5RedMask$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5RedMask$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5RedMask"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5RedMask$VH() { return BITMAPV5HEADER$bV5RedMask$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5GreenMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5GreenMask$LAYOUT() { return BITMAPV5HEADER$bV5GreenMask$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5GreenMask$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5GreenMask"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5GreenMask$VH() { return BITMAPV5HEADER$bV5GreenMask$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5BlueMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5BlueMask$LAYOUT() { return BITMAPV5HEADER$bV5BlueMask$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5BlueMask$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5BlueMask"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5BlueMask$VH() { return BITMAPV5HEADER$bV5BlueMask$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5AlphaMask$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5AlphaMask$LAYOUT() { return BITMAPV5HEADER$bV5AlphaMask$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5AlphaMask$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5AlphaMask"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5AlphaMask$VH() { return BITMAPV5HEADER$bV5AlphaMask$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5CSType$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5CSType$LAYOUT() { return BITMAPV5HEADER$bV5CSType$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5CSType$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5CSType"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5CSType$VH() { return BITMAPV5HEADER$bV5CSType$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5GammaRed$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5GammaRed$LAYOUT() { return BITMAPV5HEADER$bV5GammaRed$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5GammaRed$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5GammaRed"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5GammaRed$VH() { return BITMAPV5HEADER$bV5GammaRed$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5GammaGreen$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5GammaGreen$LAYOUT() { return BITMAPV5HEADER$bV5GammaGreen$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5GammaGreen$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5GammaGreen"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5GammaGreen$VH() { return BITMAPV5HEADER$bV5GammaGreen$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5GammaBlue$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5GammaBlue$LAYOUT() { return BITMAPV5HEADER$bV5GammaBlue$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5GammaBlue$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5GammaBlue"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5GammaBlue$VH() { return BITMAPV5HEADER$bV5GammaBlue$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5Intent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5Intent$LAYOUT() { return BITMAPV5HEADER$bV5Intent$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5Intent$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5Intent"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5Intent$VH() { return BITMAPV5HEADER$bV5Intent$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5ProfileData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5ProfileData$LAYOUT() { return BITMAPV5HEADER$bV5ProfileData$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5ProfileData$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5ProfileData"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5ProfileData$VH() { return BITMAPV5HEADER$bV5ProfileData$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5ProfileSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5ProfileSize$LAYOUT() { return BITMAPV5HEADER$bV5ProfileSize$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5ProfileSize$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5ProfileSize"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5ProfileSize$VH() { return BITMAPV5HEADER$bV5ProfileSize$VH_; }

    static final MemoryLayout BITMAPV5HEADER$bV5Reserved$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout BITMAPV5HEADER$bV5Reserved$LAYOUT() { return BITMAPV5HEADER$bV5Reserved$LAYOUT_; }

    static final VarHandle BITMAPV5HEADER$bV5Reserved$VH_ = BITMAPV5HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bV5Reserved"));
    public static java.lang.invoke.VarHandle BITMAPV5HEADER$bV5Reserved$VH() { return BITMAPV5HEADER$bV5Reserved$VH_; }

    static final MemoryLayout tagBITMAPINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("biSize"),
            C_INT.withName("biWidth"),
            C_INT.withName("biHeight"),
            C_SHORT.withName("biPlanes"),
            C_SHORT.withName("biBitCount"),
            C_INT.withName("biCompression"),
            C_INT.withName("biSizeImage"),
            C_INT.withName("biXPelsPerMeter"),
            C_INT.withName("biYPelsPerMeter"),
            C_INT.withName("biClrUsed"),
            C_INT.withName("biClrImportant")
        ).withName("bmiHeader"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_BOOL.withName("rgbBlue"),
            C_BOOL.withName("rgbGreen"),
            C_BOOL.withName("rgbRed"),
            C_BOOL.withName("rgbReserved")
        ).withName("tagRGBQUAD")).withName("bmiColors")
    ).withName("tagBITMAPINFO");
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPINFO$struct$LAYOUT() { return tagBITMAPINFO$struct$LAYOUT_; }

    static final MemoryLayout tagBITMAPCOREINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("bcSize"),
            C_SHORT.withName("bcWidth"),
            C_SHORT.withName("bcHeight"),
            C_SHORT.withName("bcPlanes"),
            C_SHORT.withName("bcBitCount")
        ).withName("bmciHeader"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_BOOL.withName("rgbtBlue"),
            C_BOOL.withName("rgbtGreen"),
            C_BOOL.withName("rgbtRed")
        ).withName("tagRGBTRIPLE")).withName("bmciColors"),
        MemoryLayout.ofPaddingBits(8)
    ).withName("tagBITMAPCOREINFO");
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPCOREINFO$struct$LAYOUT() { return tagBITMAPCOREINFO$struct$LAYOUT_; }

    static final MemoryLayout tagBITMAPFILEHEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("bfType"),
        C_INT.withName("bfSize"),
        C_SHORT.withName("bfReserved1"),
        C_SHORT.withName("bfReserved2"),
        C_INT.withName("bfOffBits")
    ).withName("tagBITMAPFILEHEADER");
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPFILEHEADER$struct$LAYOUT() { return tagBITMAPFILEHEADER$struct$LAYOUT_; }

    static final MemoryLayout tagBITMAPFILEHEADER$bfType$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPFILEHEADER$bfType$LAYOUT() { return tagBITMAPFILEHEADER$bfType$LAYOUT_; }

    static final VarHandle tagBITMAPFILEHEADER$bfType$VH_ = tagBITMAPFILEHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bfType"));
    public static java.lang.invoke.VarHandle tagBITMAPFILEHEADER$bfType$VH() { return tagBITMAPFILEHEADER$bfType$VH_; }

    static final MemoryLayout tagBITMAPFILEHEADER$bfSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPFILEHEADER$bfSize$LAYOUT() { return tagBITMAPFILEHEADER$bfSize$LAYOUT_; }

    static final VarHandle tagBITMAPFILEHEADER$bfSize$VH_ = tagBITMAPFILEHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bfSize"));
    public static java.lang.invoke.VarHandle tagBITMAPFILEHEADER$bfSize$VH() { return tagBITMAPFILEHEADER$bfSize$VH_; }

    static final MemoryLayout tagBITMAPFILEHEADER$bfReserved1$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPFILEHEADER$bfReserved1$LAYOUT() { return tagBITMAPFILEHEADER$bfReserved1$LAYOUT_; }

    static final VarHandle tagBITMAPFILEHEADER$bfReserved1$VH_ = tagBITMAPFILEHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bfReserved1"));
    public static java.lang.invoke.VarHandle tagBITMAPFILEHEADER$bfReserved1$VH() { return tagBITMAPFILEHEADER$bfReserved1$VH_; }

    static final MemoryLayout tagBITMAPFILEHEADER$bfReserved2$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPFILEHEADER$bfReserved2$LAYOUT() { return tagBITMAPFILEHEADER$bfReserved2$LAYOUT_; }

    static final VarHandle tagBITMAPFILEHEADER$bfReserved2$VH_ = tagBITMAPFILEHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bfReserved2"));
    public static java.lang.invoke.VarHandle tagBITMAPFILEHEADER$bfReserved2$VH() { return tagBITMAPFILEHEADER$bfReserved2$VH_; }

    static final MemoryLayout tagBITMAPFILEHEADER$bfOffBits$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagBITMAPFILEHEADER$bfOffBits$LAYOUT() { return tagBITMAPFILEHEADER$bfOffBits$LAYOUT_; }

    static final VarHandle tagBITMAPFILEHEADER$bfOffBits$VH_ = tagBITMAPFILEHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bfOffBits"));
    public static java.lang.invoke.VarHandle tagBITMAPFILEHEADER$bfOffBits$VH() { return tagBITMAPFILEHEADER$bfOffBits$VH_; }

    static final MemoryLayout tagFONTSIGNATURE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(4, C_INT).withName("fsUsb"),
        MemoryLayout.ofSequence(2, C_INT).withName("fsCsb")
    ).withName("tagFONTSIGNATURE");
    public static jdk.incubator.foreign.MemoryLayout tagFONTSIGNATURE$struct$LAYOUT() { return tagFONTSIGNATURE$struct$LAYOUT_; }

    static final MemoryLayout tagCHARSETINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ciCharset"),
        C_INT.withName("ciACP"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(4, C_INT).withName("fsUsb"),
            MemoryLayout.ofSequence(2, C_INT).withName("fsCsb")
        ).withName("fs")
    ).withName("tagCHARSETINFO");
    public static jdk.incubator.foreign.MemoryLayout tagCHARSETINFO$struct$LAYOUT() { return tagCHARSETINFO$struct$LAYOUT_; }

    static final MemoryLayout tagCHARSETINFO$ciCharset$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCHARSETINFO$ciCharset$LAYOUT() { return tagCHARSETINFO$ciCharset$LAYOUT_; }

    static final VarHandle tagCHARSETINFO$ciCharset$VH_ = tagCHARSETINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ciCharset"));
    public static java.lang.invoke.VarHandle tagCHARSETINFO$ciCharset$VH() { return tagCHARSETINFO$ciCharset$VH_; }

    static final MemoryLayout tagCHARSETINFO$ciACP$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCHARSETINFO$ciACP$LAYOUT() { return tagCHARSETINFO$ciACP$LAYOUT_; }

    static final VarHandle tagCHARSETINFO$ciACP$VH_ = tagCHARSETINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ciACP"));
    public static java.lang.invoke.VarHandle tagCHARSETINFO$ciACP$VH() { return tagCHARSETINFO$ciACP$VH_; }

    static final MemoryLayout tagLOCALESIGNATURE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(4, C_INT).withName("lsUsb"),
        MemoryLayout.ofSequence(2, C_INT).withName("lsCsbDefault"),
        MemoryLayout.ofSequence(2, C_INT).withName("lsCsbSupported")
    ).withName("tagLOCALESIGNATURE");
    public static jdk.incubator.foreign.MemoryLayout tagLOCALESIGNATURE$struct$LAYOUT() { return tagLOCALESIGNATURE$struct$LAYOUT_; }

    static final MemoryLayout tagHANDLETABLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(1, C_POINTER).withName("objectHandle")
    ).withName("tagHANDLETABLE");
    public static jdk.incubator.foreign.MemoryLayout tagHANDLETABLE$struct$LAYOUT() { return tagHANDLETABLE$struct$LAYOUT_; }

    static final MemoryLayout tagMETARECORD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("rdSize"),
        C_SHORT.withName("rdFunction"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("rdParm")
    ).withName("tagMETARECORD");
    public static jdk.incubator.foreign.MemoryLayout tagMETARECORD$struct$LAYOUT() { return tagMETARECORD$struct$LAYOUT_; }

    static final MemoryLayout tagMETARECORD$rdSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMETARECORD$rdSize$LAYOUT() { return tagMETARECORD$rdSize$LAYOUT_; }

    static final VarHandle tagMETARECORD$rdSize$VH_ = tagMETARECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("rdSize"));
    public static java.lang.invoke.VarHandle tagMETARECORD$rdSize$VH() { return tagMETARECORD$rdSize$VH_; }

    static final MemoryLayout tagMETARECORD$rdFunction$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagMETARECORD$rdFunction$LAYOUT() { return tagMETARECORD$rdFunction$LAYOUT_; }

    static final VarHandle tagMETARECORD$rdFunction$VH_ = tagMETARECORD$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("rdFunction"));
    public static java.lang.invoke.VarHandle tagMETARECORD$rdFunction$VH() { return tagMETARECORD$rdFunction$VH_; }

    static final MemoryLayout tagMETAFILEPICT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("mm"),
        C_INT.withName("xExt"),
        C_INT.withName("yExt"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hMF")
    ).withName("tagMETAFILEPICT");
    public static jdk.incubator.foreign.MemoryLayout tagMETAFILEPICT$struct$LAYOUT() { return tagMETAFILEPICT$struct$LAYOUT_; }

    static final MemoryLayout tagMETAFILEPICT$mm$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAFILEPICT$mm$LAYOUT() { return tagMETAFILEPICT$mm$LAYOUT_; }

    static final VarHandle tagMETAFILEPICT$mm$VH_ = tagMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mm"));
    public static java.lang.invoke.VarHandle tagMETAFILEPICT$mm$VH() { return tagMETAFILEPICT$mm$VH_; }

    static final MemoryLayout tagMETAFILEPICT$xExt$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAFILEPICT$xExt$LAYOUT() { return tagMETAFILEPICT$xExt$LAYOUT_; }

    static final VarHandle tagMETAFILEPICT$xExt$VH_ = tagMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xExt"));
    public static java.lang.invoke.VarHandle tagMETAFILEPICT$xExt$VH() { return tagMETAFILEPICT$xExt$VH_; }

    static final MemoryLayout tagMETAFILEPICT$yExt$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAFILEPICT$yExt$LAYOUT() { return tagMETAFILEPICT$yExt$LAYOUT_; }

    static final VarHandle tagMETAFILEPICT$yExt$VH_ = tagMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yExt"));
    public static java.lang.invoke.VarHandle tagMETAFILEPICT$yExt$VH() { return tagMETAFILEPICT$yExt$VH_; }

    static final MemoryLayout tagMETAFILEPICT$hMF$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagMETAFILEPICT$hMF$LAYOUT() { return tagMETAFILEPICT$hMF$LAYOUT_; }

    static final VarHandle tagMETAFILEPICT$hMF$VH_ = MemoryHandles.asAddressVarHandle(tagMETAFILEPICT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMF")));
    public static java.lang.invoke.VarHandle tagMETAFILEPICT$hMF$VH() { return tagMETAFILEPICT$hMF$VH_; }

    static final MemoryLayout tagMETAHEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("mtType"),
        C_SHORT.withName("mtHeaderSize"),
        C_SHORT.withName("mtVersion"),
        C_INT.withName("mtSize"),
        C_SHORT.withName("mtNoObjects"),
        C_INT.withName("mtMaxRecord"),
        C_SHORT.withName("mtNoParameters")
    ).withName("tagMETAHEADER");
    public static jdk.incubator.foreign.MemoryLayout tagMETAHEADER$struct$LAYOUT() { return tagMETAHEADER$struct$LAYOUT_; }

    static final MemoryLayout tagMETAHEADER$mtType$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAHEADER$mtType$LAYOUT() { return tagMETAHEADER$mtType$LAYOUT_; }

    static final VarHandle tagMETAHEADER$mtType$VH_ = tagMETAHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("mtType"));
    public static java.lang.invoke.VarHandle tagMETAHEADER$mtType$VH() { return tagMETAHEADER$mtType$VH_; }

    static final MemoryLayout tagMETAHEADER$mtHeaderSize$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAHEADER$mtHeaderSize$LAYOUT() { return tagMETAHEADER$mtHeaderSize$LAYOUT_; }

    static final VarHandle tagMETAHEADER$mtHeaderSize$VH_ = tagMETAHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("mtHeaderSize"));
    public static java.lang.invoke.VarHandle tagMETAHEADER$mtHeaderSize$VH() { return tagMETAHEADER$mtHeaderSize$VH_; }

    static final MemoryLayout tagMETAHEADER$mtVersion$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAHEADER$mtVersion$LAYOUT() { return tagMETAHEADER$mtVersion$LAYOUT_; }

    static final VarHandle tagMETAHEADER$mtVersion$VH_ = tagMETAHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("mtVersion"));
    public static java.lang.invoke.VarHandle tagMETAHEADER$mtVersion$VH() { return tagMETAHEADER$mtVersion$VH_; }

    static final MemoryLayout tagMETAHEADER$mtSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAHEADER$mtSize$LAYOUT() { return tagMETAHEADER$mtSize$LAYOUT_; }

    static final VarHandle tagMETAHEADER$mtSize$VH_ = tagMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mtSize"));
    public static java.lang.invoke.VarHandle tagMETAHEADER$mtSize$VH() { return tagMETAHEADER$mtSize$VH_; }

    static final MemoryLayout tagMETAHEADER$mtNoObjects$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAHEADER$mtNoObjects$LAYOUT() { return tagMETAHEADER$mtNoObjects$LAYOUT_; }

    static final VarHandle tagMETAHEADER$mtNoObjects$VH_ = tagMETAHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("mtNoObjects"));
    public static java.lang.invoke.VarHandle tagMETAHEADER$mtNoObjects$VH() { return tagMETAHEADER$mtNoObjects$VH_; }

    static final MemoryLayout tagMETAHEADER$mtMaxRecord$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAHEADER$mtMaxRecord$LAYOUT() { return tagMETAHEADER$mtMaxRecord$LAYOUT_; }

    static final VarHandle tagMETAHEADER$mtMaxRecord$VH_ = tagMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mtMaxRecord"));
    public static java.lang.invoke.VarHandle tagMETAHEADER$mtMaxRecord$VH() { return tagMETAHEADER$mtMaxRecord$VH_; }

    static final MemoryLayout tagMETAHEADER$mtNoParameters$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagMETAHEADER$mtNoParameters$LAYOUT() { return tagMETAHEADER$mtNoParameters$LAYOUT_; }

    static final VarHandle tagMETAHEADER$mtNoParameters$VH_ = tagMETAHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("mtNoParameters"));
    public static java.lang.invoke.VarHandle tagMETAHEADER$mtNoParameters$VH() { return tagMETAHEADER$mtNoParameters$VH_; }

    static final MemoryLayout tagENHMETARECORD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("iType"),
        C_INT.withName("nSize"),
        MemoryLayout.ofSequence(1, C_INT).withName("dParm")
    ).withName("tagENHMETARECORD");
    public static jdk.incubator.foreign.MemoryLayout tagENHMETARECORD$struct$LAYOUT() { return tagENHMETARECORD$struct$LAYOUT_; }

    static final MemoryLayout tagENHMETARECORD$iType$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETARECORD$iType$LAYOUT() { return tagENHMETARECORD$iType$LAYOUT_; }

    static final VarHandle tagENHMETARECORD$iType$VH_ = tagENHMETARECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iType"));
    public static java.lang.invoke.VarHandle tagENHMETARECORD$iType$VH() { return tagENHMETARECORD$iType$VH_; }

    static final MemoryLayout tagENHMETARECORD$nSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETARECORD$nSize$LAYOUT() { return tagENHMETARECORD$nSize$LAYOUT_; }

    static final VarHandle tagENHMETARECORD$nSize$VH_ = tagENHMETARECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nSize"));
    public static java.lang.invoke.VarHandle tagENHMETARECORD$nSize$VH() { return tagENHMETARECORD$nSize$VH_; }

    static final MemoryLayout tagENHMETAHEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("iType"),
        C_INT.withName("nSize"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclBounds"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rclFrame"),
        C_INT.withName("dSignature"),
        C_INT.withName("nVersion"),
        C_INT.withName("nBytes"),
        C_INT.withName("nRecords"),
        C_SHORT.withName("nHandles"),
        C_SHORT.withName("sReserved"),
        C_INT.withName("nDescription"),
        C_INT.withName("offDescription"),
        C_INT.withName("nPalEntries"),
        MemoryLayout.ofStruct(
            C_INT.withName("cx"),
            C_INT.withName("cy")
        ).withName("szlDevice"),
        MemoryLayout.ofStruct(
            C_INT.withName("cx"),
            C_INT.withName("cy")
        ).withName("szlMillimeters"),
        C_INT.withName("cbPixelFormat"),
        C_INT.withName("offPixelFormat"),
        C_INT.withName("bOpenGL"),
        MemoryLayout.ofStruct(
            C_INT.withName("cx"),
            C_INT.withName("cy")
        ).withName("szlMicrometers")
    ).withName("tagENHMETAHEADER");
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$struct$LAYOUT() { return tagENHMETAHEADER$struct$LAYOUT_; }

    static final MemoryLayout tagENHMETAHEADER$iType$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$iType$LAYOUT() { return tagENHMETAHEADER$iType$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$iType$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iType"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$iType$VH() { return tagENHMETAHEADER$iType$VH_; }

    static final MemoryLayout tagENHMETAHEADER$nSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$nSize$LAYOUT() { return tagENHMETAHEADER$nSize$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$nSize$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nSize"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$nSize$VH() { return tagENHMETAHEADER$nSize$VH_; }

    static final MemoryLayout tagENHMETAHEADER$dSignature$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$dSignature$LAYOUT() { return tagENHMETAHEADER$dSignature$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$dSignature$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dSignature"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$dSignature$VH() { return tagENHMETAHEADER$dSignature$VH_; }

    static final MemoryLayout tagENHMETAHEADER$nVersion$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$nVersion$LAYOUT() { return tagENHMETAHEADER$nVersion$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$nVersion$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nVersion"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$nVersion$VH() { return tagENHMETAHEADER$nVersion$VH_; }

    static final MemoryLayout tagENHMETAHEADER$nBytes$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$nBytes$LAYOUT() { return tagENHMETAHEADER$nBytes$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$nBytes$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nBytes"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$nBytes$VH() { return tagENHMETAHEADER$nBytes$VH_; }

    static final MemoryLayout tagENHMETAHEADER$nRecords$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$nRecords$LAYOUT() { return tagENHMETAHEADER$nRecords$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$nRecords$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nRecords"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$nRecords$VH() { return tagENHMETAHEADER$nRecords$VH_; }

    static final MemoryLayout tagENHMETAHEADER$nHandles$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$nHandles$LAYOUT() { return tagENHMETAHEADER$nHandles$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$nHandles$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nHandles"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$nHandles$VH() { return tagENHMETAHEADER$nHandles$VH_; }

    static final MemoryLayout tagENHMETAHEADER$sReserved$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$sReserved$LAYOUT() { return tagENHMETAHEADER$sReserved$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$sReserved$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("sReserved"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$sReserved$VH() { return tagENHMETAHEADER$sReserved$VH_; }

    static final MemoryLayout tagENHMETAHEADER$nDescription$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$nDescription$LAYOUT() { return tagENHMETAHEADER$nDescription$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$nDescription$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nDescription"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$nDescription$VH() { return tagENHMETAHEADER$nDescription$VH_; }

    static final MemoryLayout tagENHMETAHEADER$offDescription$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$offDescription$LAYOUT() { return tagENHMETAHEADER$offDescription$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$offDescription$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offDescription"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$offDescription$VH() { return tagENHMETAHEADER$offDescription$VH_; }

    static final MemoryLayout tagENHMETAHEADER$nPalEntries$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$nPalEntries$LAYOUT() { return tagENHMETAHEADER$nPalEntries$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$nPalEntries$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nPalEntries"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$nPalEntries$VH() { return tagENHMETAHEADER$nPalEntries$VH_; }

    static final MemoryLayout tagENHMETAHEADER$cbPixelFormat$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$cbPixelFormat$LAYOUT() { return tagENHMETAHEADER$cbPixelFormat$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$cbPixelFormat$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbPixelFormat"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$cbPixelFormat$VH() { return tagENHMETAHEADER$cbPixelFormat$VH_; }

    static final MemoryLayout tagENHMETAHEADER$offPixelFormat$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$offPixelFormat$LAYOUT() { return tagENHMETAHEADER$offPixelFormat$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$offPixelFormat$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("offPixelFormat"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$offPixelFormat$VH() { return tagENHMETAHEADER$offPixelFormat$VH_; }

    static final MemoryLayout tagENHMETAHEADER$bOpenGL$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagENHMETAHEADER$bOpenGL$LAYOUT() { return tagENHMETAHEADER$bOpenGL$LAYOUT_; }

    static final VarHandle tagENHMETAHEADER$bOpenGL$VH_ = tagENHMETAHEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bOpenGL"));
    public static java.lang.invoke.VarHandle tagENHMETAHEADER$bOpenGL$VH() { return tagENHMETAHEADER$bOpenGL$VH_; }

    static final MemoryLayout tagTEXTMETRICA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("tmHeight"),
        C_INT.withName("tmAscent"),
        C_INT.withName("tmDescent"),
        C_INT.withName("tmInternalLeading"),
        C_INT.withName("tmExternalLeading"),
        C_INT.withName("tmAveCharWidth"),
        C_INT.withName("tmMaxCharWidth"),
        C_INT.withName("tmWeight"),
        C_INT.withName("tmOverhang"),
        C_INT.withName("tmDigitizedAspectX"),
        C_INT.withName("tmDigitizedAspectY"),
        C_BOOL.withName("tmFirstChar"),
        C_BOOL.withName("tmLastChar"),
        C_BOOL.withName("tmDefaultChar"),
        C_BOOL.withName("tmBreakChar"),
        C_BOOL.withName("tmItalic"),
        C_BOOL.withName("tmUnderlined"),
        C_BOOL.withName("tmStruckOut"),
        C_BOOL.withName("tmPitchAndFamily"),
        C_BOOL.withName("tmCharSet"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagTEXTMETRICA");
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$struct$LAYOUT() { return tagTEXTMETRICA$struct$LAYOUT_; }

    static final MemoryLayout tagTEXTMETRICA$tmHeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmHeight$LAYOUT() { return tagTEXTMETRICA$tmHeight$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmHeight$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmHeight"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmHeight$VH() { return tagTEXTMETRICA$tmHeight$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmAscent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmAscent$LAYOUT() { return tagTEXTMETRICA$tmAscent$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmAscent$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmAscent"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmAscent$VH() { return tagTEXTMETRICA$tmAscent$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmDescent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmDescent$LAYOUT() { return tagTEXTMETRICA$tmDescent$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmDescent$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDescent"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmDescent$VH() { return tagTEXTMETRICA$tmDescent$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmInternalLeading$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmInternalLeading$LAYOUT() { return tagTEXTMETRICA$tmInternalLeading$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmInternalLeading$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmInternalLeading"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmInternalLeading$VH() { return tagTEXTMETRICA$tmInternalLeading$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmExternalLeading$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmExternalLeading$LAYOUT() { return tagTEXTMETRICA$tmExternalLeading$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmExternalLeading$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmExternalLeading"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmExternalLeading$VH() { return tagTEXTMETRICA$tmExternalLeading$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmAveCharWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmAveCharWidth$LAYOUT() { return tagTEXTMETRICA$tmAveCharWidth$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmAveCharWidth$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmAveCharWidth"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmAveCharWidth$VH() { return tagTEXTMETRICA$tmAveCharWidth$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmMaxCharWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmMaxCharWidth$LAYOUT() { return tagTEXTMETRICA$tmMaxCharWidth$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmMaxCharWidth$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmMaxCharWidth"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmMaxCharWidth$VH() { return tagTEXTMETRICA$tmMaxCharWidth$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmWeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmWeight$LAYOUT() { return tagTEXTMETRICA$tmWeight$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmWeight$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmWeight"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmWeight$VH() { return tagTEXTMETRICA$tmWeight$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmOverhang$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmOverhang$LAYOUT() { return tagTEXTMETRICA$tmOverhang$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmOverhang$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmOverhang"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmOverhang$VH() { return tagTEXTMETRICA$tmOverhang$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmDigitizedAspectX$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmDigitizedAspectX$LAYOUT() { return tagTEXTMETRICA$tmDigitizedAspectX$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmDigitizedAspectX$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDigitizedAspectX"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmDigitizedAspectX$VH() { return tagTEXTMETRICA$tmDigitizedAspectX$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmDigitizedAspectY$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmDigitizedAspectY$LAYOUT() { return tagTEXTMETRICA$tmDigitizedAspectY$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmDigitizedAspectY$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDigitizedAspectY"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmDigitizedAspectY$VH() { return tagTEXTMETRICA$tmDigitizedAspectY$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmFirstChar$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmFirstChar$LAYOUT() { return tagTEXTMETRICA$tmFirstChar$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmFirstChar$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmFirstChar"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmFirstChar$VH() { return tagTEXTMETRICA$tmFirstChar$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmLastChar$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmLastChar$LAYOUT() { return tagTEXTMETRICA$tmLastChar$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmLastChar$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmLastChar"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmLastChar$VH() { return tagTEXTMETRICA$tmLastChar$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmDefaultChar$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmDefaultChar$LAYOUT() { return tagTEXTMETRICA$tmDefaultChar$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmDefaultChar$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmDefaultChar"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmDefaultChar$VH() { return tagTEXTMETRICA$tmDefaultChar$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmBreakChar$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmBreakChar$LAYOUT() { return tagTEXTMETRICA$tmBreakChar$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmBreakChar$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmBreakChar"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmBreakChar$VH() { return tagTEXTMETRICA$tmBreakChar$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmItalic$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmItalic$LAYOUT() { return tagTEXTMETRICA$tmItalic$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmItalic$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmItalic"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmItalic$VH() { return tagTEXTMETRICA$tmItalic$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmUnderlined$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmUnderlined$LAYOUT() { return tagTEXTMETRICA$tmUnderlined$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmUnderlined$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmUnderlined"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmUnderlined$VH() { return tagTEXTMETRICA$tmUnderlined$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmStruckOut$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmStruckOut$LAYOUT() { return tagTEXTMETRICA$tmStruckOut$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmStruckOut$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmStruckOut"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmStruckOut$VH() { return tagTEXTMETRICA$tmStruckOut$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmPitchAndFamily$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmPitchAndFamily$LAYOUT() { return tagTEXTMETRICA$tmPitchAndFamily$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmPitchAndFamily$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmPitchAndFamily"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmPitchAndFamily$VH() { return tagTEXTMETRICA$tmPitchAndFamily$VH_; }

    static final MemoryLayout tagTEXTMETRICA$tmCharSet$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICA$tmCharSet$LAYOUT() { return tagTEXTMETRICA$tmCharSet$LAYOUT_; }

    static final VarHandle tagTEXTMETRICA$tmCharSet$VH_ = tagTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmCharSet"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICA$tmCharSet$VH() { return tagTEXTMETRICA$tmCharSet$VH_; }

    static final MemoryLayout tagTEXTMETRICW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("tmHeight"),
        C_INT.withName("tmAscent"),
        C_INT.withName("tmDescent"),
        C_INT.withName("tmInternalLeading"),
        C_INT.withName("tmExternalLeading"),
        C_INT.withName("tmAveCharWidth"),
        C_INT.withName("tmMaxCharWidth"),
        C_INT.withName("tmWeight"),
        C_INT.withName("tmOverhang"),
        C_INT.withName("tmDigitizedAspectX"),
        C_INT.withName("tmDigitizedAspectY"),
        C_SHORT.withName("tmFirstChar"),
        C_SHORT.withName("tmLastChar"),
        C_SHORT.withName("tmDefaultChar"),
        C_SHORT.withName("tmBreakChar"),
        C_BOOL.withName("tmItalic"),
        C_BOOL.withName("tmUnderlined"),
        C_BOOL.withName("tmStruckOut"),
        C_BOOL.withName("tmPitchAndFamily"),
        C_BOOL.withName("tmCharSet"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagTEXTMETRICW");
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$struct$LAYOUT() { return tagTEXTMETRICW$struct$LAYOUT_; }

    static final MemoryLayout tagTEXTMETRICW$tmHeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmHeight$LAYOUT() { return tagTEXTMETRICW$tmHeight$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmHeight$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmHeight"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmHeight$VH() { return tagTEXTMETRICW$tmHeight$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmAscent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmAscent$LAYOUT() { return tagTEXTMETRICW$tmAscent$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmAscent$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmAscent"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmAscent$VH() { return tagTEXTMETRICW$tmAscent$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmDescent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmDescent$LAYOUT() { return tagTEXTMETRICW$tmDescent$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmDescent$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDescent"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmDescent$VH() { return tagTEXTMETRICW$tmDescent$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmInternalLeading$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmInternalLeading$LAYOUT() { return tagTEXTMETRICW$tmInternalLeading$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmInternalLeading$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmInternalLeading"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmInternalLeading$VH() { return tagTEXTMETRICW$tmInternalLeading$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmExternalLeading$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmExternalLeading$LAYOUT() { return tagTEXTMETRICW$tmExternalLeading$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmExternalLeading$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmExternalLeading"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmExternalLeading$VH() { return tagTEXTMETRICW$tmExternalLeading$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmAveCharWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmAveCharWidth$LAYOUT() { return tagTEXTMETRICW$tmAveCharWidth$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmAveCharWidth$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmAveCharWidth"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmAveCharWidth$VH() { return tagTEXTMETRICW$tmAveCharWidth$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmMaxCharWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmMaxCharWidth$LAYOUT() { return tagTEXTMETRICW$tmMaxCharWidth$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmMaxCharWidth$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmMaxCharWidth"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmMaxCharWidth$VH() { return tagTEXTMETRICW$tmMaxCharWidth$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmWeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmWeight$LAYOUT() { return tagTEXTMETRICW$tmWeight$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmWeight$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmWeight"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmWeight$VH() { return tagTEXTMETRICW$tmWeight$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmOverhang$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmOverhang$LAYOUT() { return tagTEXTMETRICW$tmOverhang$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmOverhang$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmOverhang"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmOverhang$VH() { return tagTEXTMETRICW$tmOverhang$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmDigitizedAspectX$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmDigitizedAspectX$LAYOUT() { return tagTEXTMETRICW$tmDigitizedAspectX$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmDigitizedAspectX$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDigitizedAspectX"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmDigitizedAspectX$VH() { return tagTEXTMETRICW$tmDigitizedAspectX$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmDigitizedAspectY$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmDigitizedAspectY$LAYOUT() { return tagTEXTMETRICW$tmDigitizedAspectY$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmDigitizedAspectY$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDigitizedAspectY"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmDigitizedAspectY$VH() { return tagTEXTMETRICW$tmDigitizedAspectY$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmFirstChar$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmFirstChar$LAYOUT() { return tagTEXTMETRICW$tmFirstChar$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmFirstChar$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tmFirstChar"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmFirstChar$VH() { return tagTEXTMETRICW$tmFirstChar$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmLastChar$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmLastChar$LAYOUT() { return tagTEXTMETRICW$tmLastChar$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmLastChar$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tmLastChar"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmLastChar$VH() { return tagTEXTMETRICW$tmLastChar$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmDefaultChar$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmDefaultChar$LAYOUT() { return tagTEXTMETRICW$tmDefaultChar$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmDefaultChar$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tmDefaultChar"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmDefaultChar$VH() { return tagTEXTMETRICW$tmDefaultChar$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmBreakChar$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmBreakChar$LAYOUT() { return tagTEXTMETRICW$tmBreakChar$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmBreakChar$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tmBreakChar"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmBreakChar$VH() { return tagTEXTMETRICW$tmBreakChar$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmItalic$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmItalic$LAYOUT() { return tagTEXTMETRICW$tmItalic$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmItalic$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmItalic"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmItalic$VH() { return tagTEXTMETRICW$tmItalic$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmUnderlined$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmUnderlined$LAYOUT() { return tagTEXTMETRICW$tmUnderlined$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmUnderlined$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmUnderlined"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmUnderlined$VH() { return tagTEXTMETRICW$tmUnderlined$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmStruckOut$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmStruckOut$LAYOUT() { return tagTEXTMETRICW$tmStruckOut$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmStruckOut$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmStruckOut"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmStruckOut$VH() { return tagTEXTMETRICW$tmStruckOut$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmPitchAndFamily$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmPitchAndFamily$LAYOUT() { return tagTEXTMETRICW$tmPitchAndFamily$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmPitchAndFamily$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmPitchAndFamily"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmPitchAndFamily$VH() { return tagTEXTMETRICW$tmPitchAndFamily$VH_; }

    static final MemoryLayout tagTEXTMETRICW$tmCharSet$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagTEXTMETRICW$tmCharSet$LAYOUT() { return tagTEXTMETRICW$tmCharSet$LAYOUT_; }

    static final VarHandle tagTEXTMETRICW$tmCharSet$VH_ = tagTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmCharSet"));
    public static java.lang.invoke.VarHandle tagTEXTMETRICW$tmCharSet$VH() { return tagTEXTMETRICW$tmCharSet$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("tmHeight"),
        C_INT.withName("tmAscent"),
        C_INT.withName("tmDescent"),
        C_INT.withName("tmInternalLeading"),
        C_INT.withName("tmExternalLeading"),
        C_INT.withName("tmAveCharWidth"),
        C_INT.withName("tmMaxCharWidth"),
        C_INT.withName("tmWeight"),
        C_INT.withName("tmOverhang"),
        C_INT.withName("tmDigitizedAspectX"),
        C_INT.withName("tmDigitizedAspectY"),
        C_BOOL.withName("tmFirstChar"),
        C_BOOL.withName("tmLastChar"),
        C_BOOL.withName("tmDefaultChar"),
        C_BOOL.withName("tmBreakChar"),
        C_BOOL.withName("tmItalic"),
        C_BOOL.withName("tmUnderlined"),
        C_BOOL.withName("tmStruckOut"),
        C_BOOL.withName("tmPitchAndFamily"),
        C_BOOL.withName("tmCharSet"),
        MemoryLayout.ofPaddingBits(24),
        C_INT.withName("ntmFlags"),
        C_INT.withName("ntmSizeEM"),
        C_INT.withName("ntmCellHeight"),
        C_INT.withName("ntmAvgWidth")
    ).withName("tagNEWTEXTMETRICA");
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$struct$LAYOUT() { return tagNEWTEXTMETRICA$struct$LAYOUT_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmHeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmHeight$LAYOUT() { return tagNEWTEXTMETRICA$tmHeight$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmHeight$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmHeight"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmHeight$VH() { return tagNEWTEXTMETRICA$tmHeight$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmAscent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmAscent$LAYOUT() { return tagNEWTEXTMETRICA$tmAscent$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmAscent$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmAscent"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmAscent$VH() { return tagNEWTEXTMETRICA$tmAscent$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmDescent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmDescent$LAYOUT() { return tagNEWTEXTMETRICA$tmDescent$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmDescent$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDescent"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmDescent$VH() { return tagNEWTEXTMETRICA$tmDescent$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmInternalLeading$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmInternalLeading$LAYOUT() { return tagNEWTEXTMETRICA$tmInternalLeading$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmInternalLeading$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmInternalLeading"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmInternalLeading$VH() { return tagNEWTEXTMETRICA$tmInternalLeading$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmExternalLeading$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmExternalLeading$LAYOUT() { return tagNEWTEXTMETRICA$tmExternalLeading$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmExternalLeading$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmExternalLeading"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmExternalLeading$VH() { return tagNEWTEXTMETRICA$tmExternalLeading$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmAveCharWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmAveCharWidth$LAYOUT() { return tagNEWTEXTMETRICA$tmAveCharWidth$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmAveCharWidth$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmAveCharWidth"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmAveCharWidth$VH() { return tagNEWTEXTMETRICA$tmAveCharWidth$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmMaxCharWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmMaxCharWidth$LAYOUT() { return tagNEWTEXTMETRICA$tmMaxCharWidth$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmMaxCharWidth$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmMaxCharWidth"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmMaxCharWidth$VH() { return tagNEWTEXTMETRICA$tmMaxCharWidth$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmWeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmWeight$LAYOUT() { return tagNEWTEXTMETRICA$tmWeight$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmWeight$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmWeight"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmWeight$VH() { return tagNEWTEXTMETRICA$tmWeight$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmOverhang$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmOverhang$LAYOUT() { return tagNEWTEXTMETRICA$tmOverhang$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmOverhang$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmOverhang"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmOverhang$VH() { return tagNEWTEXTMETRICA$tmOverhang$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmDigitizedAspectX$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmDigitizedAspectX$LAYOUT() { return tagNEWTEXTMETRICA$tmDigitizedAspectX$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmDigitizedAspectX$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDigitizedAspectX"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmDigitizedAspectX$VH() { return tagNEWTEXTMETRICA$tmDigitizedAspectX$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmDigitizedAspectY$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmDigitizedAspectY$LAYOUT() { return tagNEWTEXTMETRICA$tmDigitizedAspectY$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmDigitizedAspectY$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDigitizedAspectY"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmDigitizedAspectY$VH() { return tagNEWTEXTMETRICA$tmDigitizedAspectY$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmFirstChar$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmFirstChar$LAYOUT() { return tagNEWTEXTMETRICA$tmFirstChar$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmFirstChar$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmFirstChar"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmFirstChar$VH() { return tagNEWTEXTMETRICA$tmFirstChar$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmLastChar$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmLastChar$LAYOUT() { return tagNEWTEXTMETRICA$tmLastChar$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmLastChar$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmLastChar"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmLastChar$VH() { return tagNEWTEXTMETRICA$tmLastChar$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmDefaultChar$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmDefaultChar$LAYOUT() { return tagNEWTEXTMETRICA$tmDefaultChar$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmDefaultChar$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmDefaultChar"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmDefaultChar$VH() { return tagNEWTEXTMETRICA$tmDefaultChar$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmBreakChar$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmBreakChar$LAYOUT() { return tagNEWTEXTMETRICA$tmBreakChar$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmBreakChar$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmBreakChar"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmBreakChar$VH() { return tagNEWTEXTMETRICA$tmBreakChar$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmItalic$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmItalic$LAYOUT() { return tagNEWTEXTMETRICA$tmItalic$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmItalic$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmItalic"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmItalic$VH() { return tagNEWTEXTMETRICA$tmItalic$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmUnderlined$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmUnderlined$LAYOUT() { return tagNEWTEXTMETRICA$tmUnderlined$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmUnderlined$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmUnderlined"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmUnderlined$VH() { return tagNEWTEXTMETRICA$tmUnderlined$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmStruckOut$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmStruckOut$LAYOUT() { return tagNEWTEXTMETRICA$tmStruckOut$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmStruckOut$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmStruckOut"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmStruckOut$VH() { return tagNEWTEXTMETRICA$tmStruckOut$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmPitchAndFamily$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmPitchAndFamily$LAYOUT() { return tagNEWTEXTMETRICA$tmPitchAndFamily$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmPitchAndFamily$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmPitchAndFamily"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmPitchAndFamily$VH() { return tagNEWTEXTMETRICA$tmPitchAndFamily$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$tmCharSet$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$tmCharSet$LAYOUT() { return tagNEWTEXTMETRICA$tmCharSet$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$tmCharSet$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmCharSet"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$tmCharSet$VH() { return tagNEWTEXTMETRICA$tmCharSet$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$ntmFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$ntmFlags$LAYOUT() { return tagNEWTEXTMETRICA$ntmFlags$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$ntmFlags$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ntmFlags"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$ntmFlags$VH() { return tagNEWTEXTMETRICA$ntmFlags$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$ntmSizeEM$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$ntmSizeEM$LAYOUT() { return tagNEWTEXTMETRICA$ntmSizeEM$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$ntmSizeEM$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ntmSizeEM"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$ntmSizeEM$VH() { return tagNEWTEXTMETRICA$ntmSizeEM$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$ntmCellHeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$ntmCellHeight$LAYOUT() { return tagNEWTEXTMETRICA$ntmCellHeight$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$ntmCellHeight$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ntmCellHeight"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$ntmCellHeight$VH() { return tagNEWTEXTMETRICA$ntmCellHeight$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICA$ntmAvgWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICA$ntmAvgWidth$LAYOUT() { return tagNEWTEXTMETRICA$ntmAvgWidth$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICA$ntmAvgWidth$VH_ = tagNEWTEXTMETRICA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ntmAvgWidth"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICA$ntmAvgWidth$VH() { return tagNEWTEXTMETRICA$ntmAvgWidth$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("tmHeight"),
        C_INT.withName("tmAscent"),
        C_INT.withName("tmDescent"),
        C_INT.withName("tmInternalLeading"),
        C_INT.withName("tmExternalLeading"),
        C_INT.withName("tmAveCharWidth"),
        C_INT.withName("tmMaxCharWidth"),
        C_INT.withName("tmWeight"),
        C_INT.withName("tmOverhang"),
        C_INT.withName("tmDigitizedAspectX"),
        C_INT.withName("tmDigitizedAspectY"),
        C_SHORT.withName("tmFirstChar"),
        C_SHORT.withName("tmLastChar"),
        C_SHORT.withName("tmDefaultChar"),
        C_SHORT.withName("tmBreakChar"),
        C_BOOL.withName("tmItalic"),
        C_BOOL.withName("tmUnderlined"),
        C_BOOL.withName("tmStruckOut"),
        C_BOOL.withName("tmPitchAndFamily"),
        C_BOOL.withName("tmCharSet"),
        MemoryLayout.ofPaddingBits(24),
        C_INT.withName("ntmFlags"),
        C_INT.withName("ntmSizeEM"),
        C_INT.withName("ntmCellHeight"),
        C_INT.withName("ntmAvgWidth")
    ).withName("tagNEWTEXTMETRICW");
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$struct$LAYOUT() { return tagNEWTEXTMETRICW$struct$LAYOUT_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmHeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmHeight$LAYOUT() { return tagNEWTEXTMETRICW$tmHeight$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmHeight$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmHeight"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmHeight$VH() { return tagNEWTEXTMETRICW$tmHeight$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmAscent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmAscent$LAYOUT() { return tagNEWTEXTMETRICW$tmAscent$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmAscent$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmAscent"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmAscent$VH() { return tagNEWTEXTMETRICW$tmAscent$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmDescent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmDescent$LAYOUT() { return tagNEWTEXTMETRICW$tmDescent$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmDescent$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDescent"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmDescent$VH() { return tagNEWTEXTMETRICW$tmDescent$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmInternalLeading$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmInternalLeading$LAYOUT() { return tagNEWTEXTMETRICW$tmInternalLeading$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmInternalLeading$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmInternalLeading"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmInternalLeading$VH() { return tagNEWTEXTMETRICW$tmInternalLeading$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmExternalLeading$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmExternalLeading$LAYOUT() { return tagNEWTEXTMETRICW$tmExternalLeading$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmExternalLeading$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmExternalLeading"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmExternalLeading$VH() { return tagNEWTEXTMETRICW$tmExternalLeading$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmAveCharWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmAveCharWidth$LAYOUT() { return tagNEWTEXTMETRICW$tmAveCharWidth$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmAveCharWidth$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmAveCharWidth"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmAveCharWidth$VH() { return tagNEWTEXTMETRICW$tmAveCharWidth$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmMaxCharWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmMaxCharWidth$LAYOUT() { return tagNEWTEXTMETRICW$tmMaxCharWidth$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmMaxCharWidth$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmMaxCharWidth"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmMaxCharWidth$VH() { return tagNEWTEXTMETRICW$tmMaxCharWidth$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmWeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmWeight$LAYOUT() { return tagNEWTEXTMETRICW$tmWeight$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmWeight$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmWeight"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmWeight$VH() { return tagNEWTEXTMETRICW$tmWeight$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmOverhang$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmOverhang$LAYOUT() { return tagNEWTEXTMETRICW$tmOverhang$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmOverhang$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmOverhang"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmOverhang$VH() { return tagNEWTEXTMETRICW$tmOverhang$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmDigitizedAspectX$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmDigitizedAspectX$LAYOUT() { return tagNEWTEXTMETRICW$tmDigitizedAspectX$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmDigitizedAspectX$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDigitizedAspectX"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmDigitizedAspectX$VH() { return tagNEWTEXTMETRICW$tmDigitizedAspectX$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmDigitizedAspectY$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmDigitizedAspectY$LAYOUT() { return tagNEWTEXTMETRICW$tmDigitizedAspectY$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmDigitizedAspectY$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tmDigitizedAspectY"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmDigitizedAspectY$VH() { return tagNEWTEXTMETRICW$tmDigitizedAspectY$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmFirstChar$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmFirstChar$LAYOUT() { return tagNEWTEXTMETRICW$tmFirstChar$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmFirstChar$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tmFirstChar"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmFirstChar$VH() { return tagNEWTEXTMETRICW$tmFirstChar$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmLastChar$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmLastChar$LAYOUT() { return tagNEWTEXTMETRICW$tmLastChar$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmLastChar$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tmLastChar"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmLastChar$VH() { return tagNEWTEXTMETRICW$tmLastChar$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmDefaultChar$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmDefaultChar$LAYOUT() { return tagNEWTEXTMETRICW$tmDefaultChar$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmDefaultChar$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tmDefaultChar"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmDefaultChar$VH() { return tagNEWTEXTMETRICW$tmDefaultChar$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmBreakChar$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmBreakChar$LAYOUT() { return tagNEWTEXTMETRICW$tmBreakChar$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmBreakChar$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tmBreakChar"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmBreakChar$VH() { return tagNEWTEXTMETRICW$tmBreakChar$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmItalic$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmItalic$LAYOUT() { return tagNEWTEXTMETRICW$tmItalic$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmItalic$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmItalic"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmItalic$VH() { return tagNEWTEXTMETRICW$tmItalic$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmUnderlined$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmUnderlined$LAYOUT() { return tagNEWTEXTMETRICW$tmUnderlined$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmUnderlined$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmUnderlined"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmUnderlined$VH() { return tagNEWTEXTMETRICW$tmUnderlined$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmStruckOut$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmStruckOut$LAYOUT() { return tagNEWTEXTMETRICW$tmStruckOut$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmStruckOut$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmStruckOut"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmStruckOut$VH() { return tagNEWTEXTMETRICW$tmStruckOut$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmPitchAndFamily$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmPitchAndFamily$LAYOUT() { return tagNEWTEXTMETRICW$tmPitchAndFamily$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmPitchAndFamily$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmPitchAndFamily"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmPitchAndFamily$VH() { return tagNEWTEXTMETRICW$tmPitchAndFamily$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$tmCharSet$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$tmCharSet$LAYOUT() { return tagNEWTEXTMETRICW$tmCharSet$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$tmCharSet$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("tmCharSet"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$tmCharSet$VH() { return tagNEWTEXTMETRICW$tmCharSet$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$ntmFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$ntmFlags$LAYOUT() { return tagNEWTEXTMETRICW$ntmFlags$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$ntmFlags$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ntmFlags"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$ntmFlags$VH() { return tagNEWTEXTMETRICW$ntmFlags$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$ntmSizeEM$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$ntmSizeEM$LAYOUT() { return tagNEWTEXTMETRICW$ntmSizeEM$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$ntmSizeEM$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ntmSizeEM"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$ntmSizeEM$VH() { return tagNEWTEXTMETRICW$ntmSizeEM$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$ntmCellHeight$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$ntmCellHeight$LAYOUT() { return tagNEWTEXTMETRICW$ntmCellHeight$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$ntmCellHeight$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ntmCellHeight"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$ntmCellHeight$VH() { return tagNEWTEXTMETRICW$ntmCellHeight$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICW$ntmAvgWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICW$ntmAvgWidth$LAYOUT() { return tagNEWTEXTMETRICW$ntmAvgWidth$LAYOUT_; }

    static final VarHandle tagNEWTEXTMETRICW$ntmAvgWidth$VH_ = tagNEWTEXTMETRICW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ntmAvgWidth"));
    public static java.lang.invoke.VarHandle tagNEWTEXTMETRICW$ntmAvgWidth$VH() { return tagNEWTEXTMETRICW$ntmAvgWidth$VH_; }

    static final MemoryLayout tagNEWTEXTMETRICEXA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("tmHeight"),
            C_INT.withName("tmAscent"),
            C_INT.withName("tmDescent"),
            C_INT.withName("tmInternalLeading"),
            C_INT.withName("tmExternalLeading"),
            C_INT.withName("tmAveCharWidth"),
            C_INT.withName("tmMaxCharWidth"),
            C_INT.withName("tmWeight"),
            C_INT.withName("tmOverhang"),
            C_INT.withName("tmDigitizedAspectX"),
            C_INT.withName("tmDigitizedAspectY"),
            C_BOOL.withName("tmFirstChar"),
            C_BOOL.withName("tmLastChar"),
            C_BOOL.withName("tmDefaultChar"),
            C_BOOL.withName("tmBreakChar"),
            C_BOOL.withName("tmItalic"),
            C_BOOL.withName("tmUnderlined"),
            C_BOOL.withName("tmStruckOut"),
            C_BOOL.withName("tmPitchAndFamily"),
            C_BOOL.withName("tmCharSet"),
            MemoryLayout.ofPaddingBits(24),
            C_INT.withName("ntmFlags"),
            C_INT.withName("ntmSizeEM"),
            C_INT.withName("ntmCellHeight"),
            C_INT.withName("ntmAvgWidth")
        ).withName("ntmTm"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(4, C_INT).withName("fsUsb"),
            MemoryLayout.ofSequence(2, C_INT).withName("fsCsb")
        ).withName("ntmFontSig")
    ).withName("tagNEWTEXTMETRICEXA");
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICEXA$struct$LAYOUT() { return tagNEWTEXTMETRICEXA$struct$LAYOUT_; }

    static final MemoryLayout tagNEWTEXTMETRICEXW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("tmHeight"),
            C_INT.withName("tmAscent"),
            C_INT.withName("tmDescent"),
            C_INT.withName("tmInternalLeading"),
            C_INT.withName("tmExternalLeading"),
            C_INT.withName("tmAveCharWidth"),
            C_INT.withName("tmMaxCharWidth"),
            C_INT.withName("tmWeight"),
            C_INT.withName("tmOverhang"),
            C_INT.withName("tmDigitizedAspectX"),
            C_INT.withName("tmDigitizedAspectY"),
            C_SHORT.withName("tmFirstChar"),
            C_SHORT.withName("tmLastChar"),
            C_SHORT.withName("tmDefaultChar"),
            C_SHORT.withName("tmBreakChar"),
            C_BOOL.withName("tmItalic"),
            C_BOOL.withName("tmUnderlined"),
            C_BOOL.withName("tmStruckOut"),
            C_BOOL.withName("tmPitchAndFamily"),
            C_BOOL.withName("tmCharSet"),
            MemoryLayout.ofPaddingBits(24),
            C_INT.withName("ntmFlags"),
            C_INT.withName("ntmSizeEM"),
            C_INT.withName("ntmCellHeight"),
            C_INT.withName("ntmAvgWidth")
        ).withName("ntmTm"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(4, C_INT).withName("fsUsb"),
            MemoryLayout.ofSequence(2, C_INT).withName("fsCsb")
        ).withName("ntmFontSig")
    ).withName("tagNEWTEXTMETRICEXW");
    public static jdk.incubator.foreign.MemoryLayout tagNEWTEXTMETRICEXW$struct$LAYOUT() { return tagNEWTEXTMETRICEXW$struct$LAYOUT_; }

    static final MemoryLayout tagPELARRAY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("paXCount"),
        C_INT.withName("paYCount"),
        C_INT.withName("paXExt"),
        C_INT.withName("paYExt"),
        C_BOOL.withName("paRGBs"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagPELARRAY");
    public static jdk.incubator.foreign.MemoryLayout tagPELARRAY$struct$LAYOUT() { return tagPELARRAY$struct$LAYOUT_; }

    static final MemoryLayout tagPELARRAY$paXCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPELARRAY$paXCount$LAYOUT() { return tagPELARRAY$paXCount$LAYOUT_; }

    static final VarHandle tagPELARRAY$paXCount$VH_ = tagPELARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("paXCount"));
    public static java.lang.invoke.VarHandle tagPELARRAY$paXCount$VH() { return tagPELARRAY$paXCount$VH_; }

    static final MemoryLayout tagPELARRAY$paYCount$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPELARRAY$paYCount$LAYOUT() { return tagPELARRAY$paYCount$LAYOUT_; }

    static final VarHandle tagPELARRAY$paYCount$VH_ = tagPELARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("paYCount"));
    public static java.lang.invoke.VarHandle tagPELARRAY$paYCount$VH() { return tagPELARRAY$paYCount$VH_; }

    static final MemoryLayout tagPELARRAY$paXExt$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPELARRAY$paXExt$LAYOUT() { return tagPELARRAY$paXExt$LAYOUT_; }

    static final VarHandle tagPELARRAY$paXExt$VH_ = tagPELARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("paXExt"));
    public static java.lang.invoke.VarHandle tagPELARRAY$paXExt$VH() { return tagPELARRAY$paXExt$VH_; }

    static final MemoryLayout tagPELARRAY$paYExt$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPELARRAY$paYExt$LAYOUT() { return tagPELARRAY$paYExt$LAYOUT_; }

    static final VarHandle tagPELARRAY$paYExt$VH_ = tagPELARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("paYExt"));
    public static java.lang.invoke.VarHandle tagPELARRAY$paYExt$VH() { return tagPELARRAY$paYExt$VH_; }

    static final MemoryLayout tagPELARRAY$paRGBs$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagPELARRAY$paRGBs$LAYOUT() { return tagPELARRAY$paRGBs$LAYOUT_; }

    static final VarHandle tagPELARRAY$paRGBs$VH_ = tagPELARRAY$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("paRGBs"));
    public static java.lang.invoke.VarHandle tagPELARRAY$paRGBs$VH() { return tagPELARRAY$paRGBs$VH_; }

    static final MemoryLayout tagLOGBRUSH$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("lbStyle"),
        C_INT.withName("lbColor"),
        C_LONGLONG.withName("lbHatch")
    ).withName("tagLOGBRUSH");
    public static jdk.incubator.foreign.MemoryLayout tagLOGBRUSH$struct$LAYOUT() { return tagLOGBRUSH$struct$LAYOUT_; }

    static final MemoryLayout tagLOGBRUSH$lbStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLOGBRUSH$lbStyle$LAYOUT() { return tagLOGBRUSH$lbStyle$LAYOUT_; }

    static final VarHandle tagLOGBRUSH$lbStyle$VH_ = tagLOGBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lbStyle"));
    public static java.lang.invoke.VarHandle tagLOGBRUSH$lbStyle$VH() { return tagLOGBRUSH$lbStyle$VH_; }

    static final MemoryLayout tagLOGBRUSH$lbColor$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLOGBRUSH$lbColor$LAYOUT() { return tagLOGBRUSH$lbColor$LAYOUT_; }

    static final VarHandle tagLOGBRUSH$lbColor$VH_ = tagLOGBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lbColor"));
    public static java.lang.invoke.VarHandle tagLOGBRUSH$lbColor$VH() { return tagLOGBRUSH$lbColor$VH_; }

    static final MemoryLayout tagLOGBRUSH$lbHatch$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagLOGBRUSH$lbHatch$LAYOUT() { return tagLOGBRUSH$lbHatch$LAYOUT_; }

    static final VarHandle tagLOGBRUSH$lbHatch$VH_ = tagLOGBRUSH$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lbHatch"));
    public static java.lang.invoke.VarHandle tagLOGBRUSH$lbHatch$VH() { return tagLOGBRUSH$lbHatch$VH_; }

    static final MemoryLayout tagLOGBRUSH32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("lbStyle"),
        C_INT.withName("lbColor"),
        C_INT.withName("lbHatch")
    ).withName("tagLOGBRUSH32");
    public static jdk.incubator.foreign.MemoryLayout tagLOGBRUSH32$struct$LAYOUT() { return tagLOGBRUSH32$struct$LAYOUT_; }

    static final MemoryLayout tagLOGBRUSH32$lbStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLOGBRUSH32$lbStyle$LAYOUT() { return tagLOGBRUSH32$lbStyle$LAYOUT_; }

    static final VarHandle tagLOGBRUSH32$lbStyle$VH_ = tagLOGBRUSH32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lbStyle"));
    public static java.lang.invoke.VarHandle tagLOGBRUSH32$lbStyle$VH() { return tagLOGBRUSH32$lbStyle$VH_; }

    static final MemoryLayout tagLOGBRUSH32$lbColor$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLOGBRUSH32$lbColor$LAYOUT() { return tagLOGBRUSH32$lbColor$LAYOUT_; }

    static final VarHandle tagLOGBRUSH32$lbColor$VH_ = tagLOGBRUSH32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lbColor"));
    public static java.lang.invoke.VarHandle tagLOGBRUSH32$lbColor$VH() { return tagLOGBRUSH32$lbColor$VH_; }

    static final MemoryLayout tagLOGBRUSH32$lbHatch$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLOGBRUSH32$lbHatch$LAYOUT() { return tagLOGBRUSH32$lbHatch$LAYOUT_; }

    static final VarHandle tagLOGBRUSH32$lbHatch$VH_ = tagLOGBRUSH32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lbHatch"));
    public static java.lang.invoke.VarHandle tagLOGBRUSH32$lbHatch$VH() { return tagLOGBRUSH32$lbHatch$VH_; }

    static final MemoryLayout tagLOGPEN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("lopnStyle"),
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("lopnWidth"),
        C_INT.withName("lopnColor")
    ).withName("tagLOGPEN");
    public static jdk.incubator.foreign.MemoryLayout tagLOGPEN$struct$LAYOUT() { return tagLOGPEN$struct$LAYOUT_; }

    static final MemoryLayout tagLOGPEN$lopnStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLOGPEN$lopnStyle$LAYOUT() { return tagLOGPEN$lopnStyle$LAYOUT_; }

    static final VarHandle tagLOGPEN$lopnStyle$VH_ = tagLOGPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lopnStyle"));
    public static java.lang.invoke.VarHandle tagLOGPEN$lopnStyle$VH() { return tagLOGPEN$lopnStyle$VH_; }

    static final MemoryLayout tagLOGPEN$lopnColor$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLOGPEN$lopnColor$LAYOUT() { return tagLOGPEN$lopnColor$LAYOUT_; }

    static final VarHandle tagLOGPEN$lopnColor$VH_ = tagLOGPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lopnColor"));
    public static java.lang.invoke.VarHandle tagLOGPEN$lopnColor$VH() { return tagLOGPEN$lopnColor$VH_; }

    static final MemoryLayout tagEXTLOGPEN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("elpPenStyle"),
        C_INT.withName("elpWidth"),
        C_INT.withName("elpBrushStyle"),
        C_INT.withName("elpColor"),
        C_LONGLONG.withName("elpHatch"),
        C_INT.withName("elpNumEntries"),
        MemoryLayout.ofSequence(1, C_INT).withName("elpStyleEntry")
    ).withName("tagEXTLOGPEN");
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN$struct$LAYOUT() { return tagEXTLOGPEN$struct$LAYOUT_; }

    static final MemoryLayout tagEXTLOGPEN$elpPenStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN$elpPenStyle$LAYOUT() { return tagEXTLOGPEN$elpPenStyle$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN$elpPenStyle$VH_ = tagEXTLOGPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpPenStyle"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN$elpPenStyle$VH() { return tagEXTLOGPEN$elpPenStyle$VH_; }

    static final MemoryLayout tagEXTLOGPEN$elpWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN$elpWidth$LAYOUT() { return tagEXTLOGPEN$elpWidth$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN$elpWidth$VH_ = tagEXTLOGPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpWidth"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN$elpWidth$VH() { return tagEXTLOGPEN$elpWidth$VH_; }

    static final MemoryLayout tagEXTLOGPEN$elpBrushStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN$elpBrushStyle$LAYOUT() { return tagEXTLOGPEN$elpBrushStyle$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN$elpBrushStyle$VH_ = tagEXTLOGPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpBrushStyle"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN$elpBrushStyle$VH() { return tagEXTLOGPEN$elpBrushStyle$VH_; }

    static final MemoryLayout tagEXTLOGPEN$elpColor$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN$elpColor$LAYOUT() { return tagEXTLOGPEN$elpColor$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN$elpColor$VH_ = tagEXTLOGPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpColor"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN$elpColor$VH() { return tagEXTLOGPEN$elpColor$VH_; }

    static final MemoryLayout tagEXTLOGPEN$elpHatch$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN$elpHatch$LAYOUT() { return tagEXTLOGPEN$elpHatch$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN$elpHatch$VH_ = tagEXTLOGPEN$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("elpHatch"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN$elpHatch$VH() { return tagEXTLOGPEN$elpHatch$VH_; }

    static final MemoryLayout tagEXTLOGPEN$elpNumEntries$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN$elpNumEntries$LAYOUT() { return tagEXTLOGPEN$elpNumEntries$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN$elpNumEntries$VH_ = tagEXTLOGPEN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpNumEntries"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN$elpNumEntries$VH() { return tagEXTLOGPEN$elpNumEntries$VH_; }

    static final MemoryLayout tagEXTLOGPEN32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("elpPenStyle"),
        C_INT.withName("elpWidth"),
        C_INT.withName("elpBrushStyle"),
        C_INT.withName("elpColor"),
        C_INT.withName("elpHatch"),
        C_INT.withName("elpNumEntries"),
        MemoryLayout.ofSequence(1, C_INT).withName("elpStyleEntry")
    ).withName("tagEXTLOGPEN32");
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN32$struct$LAYOUT() { return tagEXTLOGPEN32$struct$LAYOUT_; }

    static final MemoryLayout tagEXTLOGPEN32$elpPenStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN32$elpPenStyle$LAYOUT() { return tagEXTLOGPEN32$elpPenStyle$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN32$elpPenStyle$VH_ = tagEXTLOGPEN32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpPenStyle"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN32$elpPenStyle$VH() { return tagEXTLOGPEN32$elpPenStyle$VH_; }

    static final MemoryLayout tagEXTLOGPEN32$elpWidth$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN32$elpWidth$LAYOUT() { return tagEXTLOGPEN32$elpWidth$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN32$elpWidth$VH_ = tagEXTLOGPEN32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpWidth"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN32$elpWidth$VH() { return tagEXTLOGPEN32$elpWidth$VH_; }

    static final MemoryLayout tagEXTLOGPEN32$elpBrushStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN32$elpBrushStyle$LAYOUT() { return tagEXTLOGPEN32$elpBrushStyle$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN32$elpBrushStyle$VH_ = tagEXTLOGPEN32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpBrushStyle"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN32$elpBrushStyle$VH() { return tagEXTLOGPEN32$elpBrushStyle$VH_; }

    static final MemoryLayout tagEXTLOGPEN32$elpColor$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEXTLOGPEN32$elpColor$LAYOUT() { return tagEXTLOGPEN32$elpColor$LAYOUT_; }

    static final VarHandle tagEXTLOGPEN32$elpColor$VH_ = tagEXTLOGPEN32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("elpColor"));
    public static java.lang.invoke.VarHandle tagEXTLOGPEN32$elpColor$VH() { return tagEXTLOGPEN32$elpColor$VH_; }

}

