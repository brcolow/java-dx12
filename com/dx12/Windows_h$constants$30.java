// Generated by jextract

package com.dx12;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CSupport.Win64.*;

public class Windows_h$constants$30 extends Windows_h$constants$29 {
    Windows_h$constants$30() {}
    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cStencilBits$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cStencilBits$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cStencilBits$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cStencilBits$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cStencilBits"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cStencilBits$VH() { return tagLAYERPLANEDESCRIPTOR$cStencilBits$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$cAuxBuffers$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$cAuxBuffers$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$cAuxBuffers$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$cAuxBuffers$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cAuxBuffers"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$cAuxBuffers$VH() { return tagLAYERPLANEDESCRIPTOR$cAuxBuffers$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$iLayerPlane$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$iLayerPlane$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$iLayerPlane$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$iLayerPlane$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("iLayerPlane"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$iLayerPlane$VH() { return tagLAYERPLANEDESCRIPTOR$iLayerPlane$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$bReserved$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$bReserved$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$bReserved$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$bReserved$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bReserved"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$bReserved$VH() { return tagLAYERPLANEDESCRIPTOR$bReserved$VH_; }

    static final MemoryLayout tagLAYERPLANEDESCRIPTOR$crTransparent$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagLAYERPLANEDESCRIPTOR$crTransparent$LAYOUT() { return tagLAYERPLANEDESCRIPTOR$crTransparent$LAYOUT_; }

    static final VarHandle tagLAYERPLANEDESCRIPTOR$crTransparent$VH_ = tagLAYERPLANEDESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("crTransparent"));
    public static java.lang.invoke.VarHandle tagLAYERPLANEDESCRIPTOR$crTransparent$VH() { return tagLAYERPLANEDESCRIPTOR$crTransparent$VH_; }

    static final FunctionDescriptor wglDescribeLayerPlane$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglDescribeLayerPlane$FUNC() { return wglDescribeLayerPlane$FUNC_; }

    static final MethodHandle wglDescribeLayerPlane$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglDescribeLayerPlane",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)I",
        wglDescribeLayerPlane$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglDescribeLayerPlane$MH() { return wglDescribeLayerPlane$MH_; }

    static final FunctionDescriptor wglSetLayerPaletteEntries$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglSetLayerPaletteEntries$FUNC() { return wglSetLayerPaletteEntries$FUNC_; }

    static final MethodHandle wglSetLayerPaletteEntries$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglSetLayerPaletteEntries",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)I",
        wglSetLayerPaletteEntries$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglSetLayerPaletteEntries$MH() { return wglSetLayerPaletteEntries$MH_; }

    static final FunctionDescriptor wglGetLayerPaletteEntries$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglGetLayerPaletteEntries$FUNC() { return wglGetLayerPaletteEntries$FUNC_; }

    static final MethodHandle wglGetLayerPaletteEntries$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglGetLayerPaletteEntries",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)I",
        wglGetLayerPaletteEntries$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglGetLayerPaletteEntries$MH() { return wglGetLayerPaletteEntries$MH_; }

    static final FunctionDescriptor wglRealizeLayerPalette$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglRealizeLayerPalette$FUNC() { return wglRealizeLayerPalette$FUNC_; }

    static final MethodHandle wglRealizeLayerPalette$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglRealizeLayerPalette",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        wglRealizeLayerPalette$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglRealizeLayerPalette$MH() { return wglRealizeLayerPalette$MH_; }

    static final FunctionDescriptor wglSwapLayerBuffers$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglSwapLayerBuffers$FUNC() { return wglSwapLayerBuffers$FUNC_; }

    static final MethodHandle wglSwapLayerBuffers$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglSwapLayerBuffers",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        wglSwapLayerBuffers$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglSwapLayerBuffers$MH() { return wglSwapLayerBuffers$MH_; }

    static final MemoryLayout _WGLSWAP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hdc"),
        C_INT.withName("uiFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_WGLSWAP");
    public static jdk.incubator.foreign.MemoryLayout _WGLSWAP$struct$LAYOUT() { return _WGLSWAP$struct$LAYOUT_; }

    static final MemoryLayout _WGLSWAP$hdc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout _WGLSWAP$hdc$LAYOUT() { return _WGLSWAP$hdc$LAYOUT_; }

    static final VarHandle _WGLSWAP$hdc$VH_ = MemoryHandles.asAddressVarHandle(_WGLSWAP$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hdc")));
    public static java.lang.invoke.VarHandle _WGLSWAP$hdc$VH() { return _WGLSWAP$hdc$VH_; }

    static final MemoryLayout _WGLSWAP$uiFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout _WGLSWAP$uiFlags$LAYOUT() { return _WGLSWAP$uiFlags$LAYOUT_; }

    static final VarHandle _WGLSWAP$uiFlags$VH_ = _WGLSWAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uiFlags"));
    public static java.lang.invoke.VarHandle _WGLSWAP$uiFlags$VH() { return _WGLSWAP$uiFlags$VH_; }

    static final FunctionDescriptor wglSwapMultipleBuffers$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wglSwapMultipleBuffers$FUNC() { return wglSwapMultipleBuffers$FUNC_; }

    static final MethodHandle wglSwapMultipleBuffers$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wglSwapMultipleBuffers",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        wglSwapMultipleBuffers$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wglSwapMultipleBuffers$MH() { return wglSwapMultipleBuffers$MH_; }

    static final FunctionDescriptor wvsprintfA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wvsprintfA$FUNC() { return wvsprintfA$FUNC_; }

    static final MethodHandle wvsprintfA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wvsprintfA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        wvsprintfA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wvsprintfA$MH() { return wvsprintfA$MH_; }

    static final FunctionDescriptor wvsprintfW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wvsprintfW$FUNC() { return wvsprintfW$FUNC_; }

    static final MethodHandle wvsprintfW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wvsprintfW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        wvsprintfW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle wvsprintfW$MH() { return wvsprintfW$MH_; }

    static final FunctionDescriptor wsprintfA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wsprintfA$FUNC() { return wsprintfA$FUNC_; }

    static final MethodHandle wsprintfA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wsprintfA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        wsprintfA$FUNC_, true
    );
    public static java.lang.invoke.MethodHandle wsprintfA$MH() { return wsprintfA$MH_; }

    static final FunctionDescriptor wsprintfW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor wsprintfW$FUNC() { return wsprintfW$FUNC_; }

    static final MethodHandle wsprintfW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wsprintfW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        wsprintfW$FUNC_, true
    );
    public static java.lang.invoke.MethodHandle wsprintfW$MH() { return wsprintfW$MH_; }

    static final MemoryLayout tagCBT_CREATEWNDA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpcs"),
        C_POINTER.withName("hwndInsertAfter")
    ).withName("tagCBT_CREATEWNDA");
    public static jdk.incubator.foreign.MemoryLayout tagCBT_CREATEWNDA$struct$LAYOUT() { return tagCBT_CREATEWNDA$struct$LAYOUT_; }

    static final MemoryLayout tagCBT_CREATEWNDA$lpcs$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCBT_CREATEWNDA$lpcs$LAYOUT() { return tagCBT_CREATEWNDA$lpcs$LAYOUT_; }

    static final VarHandle tagCBT_CREATEWNDA$lpcs$VH_ = MemoryHandles.asAddressVarHandle(tagCBT_CREATEWNDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpcs")));
    public static java.lang.invoke.VarHandle tagCBT_CREATEWNDA$lpcs$VH() { return tagCBT_CREATEWNDA$lpcs$VH_; }

    static final MemoryLayout tagCBT_CREATEWNDA$hwndInsertAfter$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCBT_CREATEWNDA$hwndInsertAfter$LAYOUT() { return tagCBT_CREATEWNDA$hwndInsertAfter$LAYOUT_; }

    static final VarHandle tagCBT_CREATEWNDA$hwndInsertAfter$VH_ = MemoryHandles.asAddressVarHandle(tagCBT_CREATEWNDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndInsertAfter")));
    public static java.lang.invoke.VarHandle tagCBT_CREATEWNDA$hwndInsertAfter$VH() { return tagCBT_CREATEWNDA$hwndInsertAfter$VH_; }

    static final MemoryLayout tagCBT_CREATEWNDW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpcs"),
        C_POINTER.withName("hwndInsertAfter")
    ).withName("tagCBT_CREATEWNDW");
    public static jdk.incubator.foreign.MemoryLayout tagCBT_CREATEWNDW$struct$LAYOUT() { return tagCBT_CREATEWNDW$struct$LAYOUT_; }

    static final MemoryLayout tagCBT_CREATEWNDW$lpcs$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCBT_CREATEWNDW$lpcs$LAYOUT() { return tagCBT_CREATEWNDW$lpcs$LAYOUT_; }

    static final VarHandle tagCBT_CREATEWNDW$lpcs$VH_ = MemoryHandles.asAddressVarHandle(tagCBT_CREATEWNDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpcs")));
    public static java.lang.invoke.VarHandle tagCBT_CREATEWNDW$lpcs$VH() { return tagCBT_CREATEWNDW$lpcs$VH_; }

    static final MemoryLayout tagCBT_CREATEWNDW$hwndInsertAfter$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCBT_CREATEWNDW$hwndInsertAfter$LAYOUT() { return tagCBT_CREATEWNDW$hwndInsertAfter$LAYOUT_; }

    static final VarHandle tagCBT_CREATEWNDW$hwndInsertAfter$VH_ = MemoryHandles.asAddressVarHandle(tagCBT_CREATEWNDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndInsertAfter")));
    public static java.lang.invoke.VarHandle tagCBT_CREATEWNDW$hwndInsertAfter$VH() { return tagCBT_CREATEWNDW$hwndInsertAfter$VH_; }

    static final MemoryLayout tagCBTACTIVATESTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("fMouse"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hWndActive")
    ).withName("tagCBTACTIVATESTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagCBTACTIVATESTRUCT$struct$LAYOUT() { return tagCBTACTIVATESTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagCBTACTIVATESTRUCT$fMouse$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCBTACTIVATESTRUCT$fMouse$LAYOUT() { return tagCBTACTIVATESTRUCT$fMouse$LAYOUT_; }

    static final VarHandle tagCBTACTIVATESTRUCT$fMouse$VH_ = tagCBTACTIVATESTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fMouse"));
    public static java.lang.invoke.VarHandle tagCBTACTIVATESTRUCT$fMouse$VH() { return tagCBTACTIVATESTRUCT$fMouse$VH_; }

    static final MemoryLayout tagCBTACTIVATESTRUCT$hWndActive$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCBTACTIVATESTRUCT$hWndActive$LAYOUT() { return tagCBTACTIVATESTRUCT$hWndActive$LAYOUT_; }

    static final VarHandle tagCBTACTIVATESTRUCT$hWndActive$VH_ = MemoryHandles.asAddressVarHandle(tagCBTACTIVATESTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hWndActive")));
    public static java.lang.invoke.VarHandle tagCBTACTIVATESTRUCT$hWndActive$VH() { return tagCBTACTIVATESTRUCT$hWndActive$VH_; }

    static final MemoryLayout tagWTSSESSION_NOTIFICATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cbSize"),
        C_INT.withName("dwSessionId")
    ).withName("tagWTSSESSION_NOTIFICATION");
    public static jdk.incubator.foreign.MemoryLayout tagWTSSESSION_NOTIFICATION$struct$LAYOUT() { return tagWTSSESSION_NOTIFICATION$struct$LAYOUT_; }

    static final MemoryLayout tagWTSSESSION_NOTIFICATION$cbSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWTSSESSION_NOTIFICATION$cbSize$LAYOUT() { return tagWTSSESSION_NOTIFICATION$cbSize$LAYOUT_; }

    static final VarHandle tagWTSSESSION_NOTIFICATION$cbSize$VH_ = tagWTSSESSION_NOTIFICATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    public static java.lang.invoke.VarHandle tagWTSSESSION_NOTIFICATION$cbSize$VH() { return tagWTSSESSION_NOTIFICATION$cbSize$VH_; }

    static final MemoryLayout tagWTSSESSION_NOTIFICATION$dwSessionId$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWTSSESSION_NOTIFICATION$dwSessionId$LAYOUT() { return tagWTSSESSION_NOTIFICATION$dwSessionId$LAYOUT_; }

    static final VarHandle tagWTSSESSION_NOTIFICATION$dwSessionId$VH_ = tagWTSSESSION_NOTIFICATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSessionId"));
    public static java.lang.invoke.VarHandle tagWTSSESSION_NOTIFICATION$dwSessionId$VH() { return tagWTSSESSION_NOTIFICATION$dwSessionId$VH_; }

    static final MemoryLayout SHELLHOOKINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hwnd"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rc")
    );
    public static jdk.incubator.foreign.MemoryLayout SHELLHOOKINFO$struct$LAYOUT() { return SHELLHOOKINFO$struct$LAYOUT_; }

    static final MemoryLayout SHELLHOOKINFO$hwnd$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout SHELLHOOKINFO$hwnd$LAYOUT() { return SHELLHOOKINFO$hwnd$LAYOUT_; }

    static final VarHandle SHELLHOOKINFO$hwnd$VH_ = MemoryHandles.asAddressVarHandle(SHELLHOOKINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    public static java.lang.invoke.VarHandle SHELLHOOKINFO$hwnd$VH() { return SHELLHOOKINFO$hwnd$VH_; }

    static final MemoryLayout tagEVENTMSG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("message"),
        C_INT.withName("paramL"),
        C_INT.withName("paramH"),
        C_INT.withName("time"),
        C_POINTER.withName("hwnd")
    ).withName("tagEVENTMSG");
    public static jdk.incubator.foreign.MemoryLayout tagEVENTMSG$struct$LAYOUT() { return tagEVENTMSG$struct$LAYOUT_; }

    static final MemoryLayout tagEVENTMSG$message$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEVENTMSG$message$LAYOUT() { return tagEVENTMSG$message$LAYOUT_; }

    static final VarHandle tagEVENTMSG$message$VH_ = tagEVENTMSG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("message"));
    public static java.lang.invoke.VarHandle tagEVENTMSG$message$VH() { return tagEVENTMSG$message$VH_; }

    static final MemoryLayout tagEVENTMSG$paramL$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEVENTMSG$paramL$LAYOUT() { return tagEVENTMSG$paramL$LAYOUT_; }

    static final VarHandle tagEVENTMSG$paramL$VH_ = tagEVENTMSG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("paramL"));
    public static java.lang.invoke.VarHandle tagEVENTMSG$paramL$VH() { return tagEVENTMSG$paramL$VH_; }

    static final MemoryLayout tagEVENTMSG$paramH$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEVENTMSG$paramH$LAYOUT() { return tagEVENTMSG$paramH$LAYOUT_; }

    static final VarHandle tagEVENTMSG$paramH$VH_ = tagEVENTMSG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("paramH"));
    public static java.lang.invoke.VarHandle tagEVENTMSG$paramH$VH() { return tagEVENTMSG$paramH$VH_; }

    static final MemoryLayout tagEVENTMSG$time$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagEVENTMSG$time$LAYOUT() { return tagEVENTMSG$time$LAYOUT_; }

    static final VarHandle tagEVENTMSG$time$VH_ = tagEVENTMSG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("time"));
    public static java.lang.invoke.VarHandle tagEVENTMSG$time$VH() { return tagEVENTMSG$time$VH_; }

    static final MemoryLayout tagEVENTMSG$hwnd$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagEVENTMSG$hwnd$LAYOUT() { return tagEVENTMSG$hwnd$LAYOUT_; }

    static final VarHandle tagEVENTMSG$hwnd$VH_ = MemoryHandles.asAddressVarHandle(tagEVENTMSG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    public static java.lang.invoke.VarHandle tagEVENTMSG$hwnd$VH() { return tagEVENTMSG$hwnd$VH_; }

    static final MemoryLayout tagCWPSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("lParam"),
        C_LONGLONG.withName("wParam"),
        C_INT.withName("message"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwnd")
    ).withName("tagCWPSTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagCWPSTRUCT$struct$LAYOUT() { return tagCWPSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagCWPSTRUCT$lParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagCWPSTRUCT$lParam$LAYOUT() { return tagCWPSTRUCT$lParam$LAYOUT_; }

    static final VarHandle tagCWPSTRUCT$lParam$VH_ = tagCWPSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lParam"));
    public static java.lang.invoke.VarHandle tagCWPSTRUCT$lParam$VH() { return tagCWPSTRUCT$lParam$VH_; }

    static final MemoryLayout tagCWPSTRUCT$wParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagCWPSTRUCT$wParam$LAYOUT() { return tagCWPSTRUCT$wParam$LAYOUT_; }

    static final VarHandle tagCWPSTRUCT$wParam$VH_ = tagCWPSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("wParam"));
    public static java.lang.invoke.VarHandle tagCWPSTRUCT$wParam$VH() { return tagCWPSTRUCT$wParam$VH_; }

    static final MemoryLayout tagCWPSTRUCT$message$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCWPSTRUCT$message$LAYOUT() { return tagCWPSTRUCT$message$LAYOUT_; }

    static final VarHandle tagCWPSTRUCT$message$VH_ = tagCWPSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("message"));
    public static java.lang.invoke.VarHandle tagCWPSTRUCT$message$VH() { return tagCWPSTRUCT$message$VH_; }

    static final MemoryLayout tagCWPSTRUCT$hwnd$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCWPSTRUCT$hwnd$LAYOUT() { return tagCWPSTRUCT$hwnd$LAYOUT_; }

    static final VarHandle tagCWPSTRUCT$hwnd$VH_ = MemoryHandles.asAddressVarHandle(tagCWPSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    public static java.lang.invoke.VarHandle tagCWPSTRUCT$hwnd$VH() { return tagCWPSTRUCT$hwnd$VH_; }

    static final MemoryLayout tagCWPRETSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("lResult"),
        C_LONGLONG.withName("lParam"),
        C_LONGLONG.withName("wParam"),
        C_INT.withName("message"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwnd")
    ).withName("tagCWPRETSTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagCWPRETSTRUCT$struct$LAYOUT() { return tagCWPRETSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagCWPRETSTRUCT$lResult$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagCWPRETSTRUCT$lResult$LAYOUT() { return tagCWPRETSTRUCT$lResult$LAYOUT_; }

    static final VarHandle tagCWPRETSTRUCT$lResult$VH_ = tagCWPRETSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lResult"));
    public static java.lang.invoke.VarHandle tagCWPRETSTRUCT$lResult$VH() { return tagCWPRETSTRUCT$lResult$VH_; }

    static final MemoryLayout tagCWPRETSTRUCT$lParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagCWPRETSTRUCT$lParam$LAYOUT() { return tagCWPRETSTRUCT$lParam$LAYOUT_; }

    static final VarHandle tagCWPRETSTRUCT$lParam$VH_ = tagCWPRETSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lParam"));
    public static java.lang.invoke.VarHandle tagCWPRETSTRUCT$lParam$VH() { return tagCWPRETSTRUCT$lParam$VH_; }

    static final MemoryLayout tagCWPRETSTRUCT$wParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagCWPRETSTRUCT$wParam$LAYOUT() { return tagCWPRETSTRUCT$wParam$LAYOUT_; }

    static final VarHandle tagCWPRETSTRUCT$wParam$VH_ = tagCWPRETSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("wParam"));
    public static java.lang.invoke.VarHandle tagCWPRETSTRUCT$wParam$VH() { return tagCWPRETSTRUCT$wParam$VH_; }

    static final MemoryLayout tagCWPRETSTRUCT$message$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCWPRETSTRUCT$message$LAYOUT() { return tagCWPRETSTRUCT$message$LAYOUT_; }

    static final VarHandle tagCWPRETSTRUCT$message$VH_ = tagCWPRETSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("message"));
    public static java.lang.invoke.VarHandle tagCWPRETSTRUCT$message$VH() { return tagCWPRETSTRUCT$message$VH_; }

    static final MemoryLayout tagCWPRETSTRUCT$hwnd$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCWPRETSTRUCT$hwnd$LAYOUT() { return tagCWPRETSTRUCT$hwnd$LAYOUT_; }

    static final VarHandle tagCWPRETSTRUCT$hwnd$VH_ = MemoryHandles.asAddressVarHandle(tagCWPRETSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    public static java.lang.invoke.VarHandle tagCWPRETSTRUCT$hwnd$VH() { return tagCWPRETSTRUCT$hwnd$VH_; }

    static final MemoryLayout tagKBDLLHOOKSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("vkCode"),
        C_INT.withName("scanCode"),
        C_INT.withName("flags"),
        C_INT.withName("time"),
        C_LONGLONG.withName("dwExtraInfo")
    ).withName("tagKBDLLHOOKSTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagKBDLLHOOKSTRUCT$struct$LAYOUT() { return tagKBDLLHOOKSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagKBDLLHOOKSTRUCT$vkCode$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagKBDLLHOOKSTRUCT$vkCode$LAYOUT() { return tagKBDLLHOOKSTRUCT$vkCode$LAYOUT_; }

    static final VarHandle tagKBDLLHOOKSTRUCT$vkCode$VH_ = tagKBDLLHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vkCode"));
    public static java.lang.invoke.VarHandle tagKBDLLHOOKSTRUCT$vkCode$VH() { return tagKBDLLHOOKSTRUCT$vkCode$VH_; }

    static final MemoryLayout tagKBDLLHOOKSTRUCT$scanCode$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagKBDLLHOOKSTRUCT$scanCode$LAYOUT() { return tagKBDLLHOOKSTRUCT$scanCode$LAYOUT_; }

    static final VarHandle tagKBDLLHOOKSTRUCT$scanCode$VH_ = tagKBDLLHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("scanCode"));
    public static java.lang.invoke.VarHandle tagKBDLLHOOKSTRUCT$scanCode$VH() { return tagKBDLLHOOKSTRUCT$scanCode$VH_; }

    static final MemoryLayout tagKBDLLHOOKSTRUCT$flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagKBDLLHOOKSTRUCT$flags$LAYOUT() { return tagKBDLLHOOKSTRUCT$flags$LAYOUT_; }

    static final VarHandle tagKBDLLHOOKSTRUCT$flags$VH_ = tagKBDLLHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("flags"));
    public static java.lang.invoke.VarHandle tagKBDLLHOOKSTRUCT$flags$VH() { return tagKBDLLHOOKSTRUCT$flags$VH_; }

    static final MemoryLayout tagKBDLLHOOKSTRUCT$time$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagKBDLLHOOKSTRUCT$time$LAYOUT() { return tagKBDLLHOOKSTRUCT$time$LAYOUT_; }

    static final VarHandle tagKBDLLHOOKSTRUCT$time$VH_ = tagKBDLLHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("time"));
    public static java.lang.invoke.VarHandle tagKBDLLHOOKSTRUCT$time$VH() { return tagKBDLLHOOKSTRUCT$time$VH_; }

    static final MemoryLayout tagKBDLLHOOKSTRUCT$dwExtraInfo$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagKBDLLHOOKSTRUCT$dwExtraInfo$LAYOUT() { return tagKBDLLHOOKSTRUCT$dwExtraInfo$LAYOUT_; }

    static final VarHandle tagKBDLLHOOKSTRUCT$dwExtraInfo$VH_ = tagKBDLLHOOKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwExtraInfo"));
    public static java.lang.invoke.VarHandle tagKBDLLHOOKSTRUCT$dwExtraInfo$VH() { return tagKBDLLHOOKSTRUCT$dwExtraInfo$VH_; }

    static final MemoryLayout tagMSLLHOOKSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("pt"),
        C_INT.withName("mouseData"),
        C_INT.withName("flags"),
        C_INT.withName("time"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("dwExtraInfo")
    ).withName("tagMSLLHOOKSTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagMSLLHOOKSTRUCT$struct$LAYOUT() { return tagMSLLHOOKSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagMSLLHOOKSTRUCT$mouseData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMSLLHOOKSTRUCT$mouseData$LAYOUT() { return tagMSLLHOOKSTRUCT$mouseData$LAYOUT_; }

    static final VarHandle tagMSLLHOOKSTRUCT$mouseData$VH_ = tagMSLLHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mouseData"));
    public static java.lang.invoke.VarHandle tagMSLLHOOKSTRUCT$mouseData$VH() { return tagMSLLHOOKSTRUCT$mouseData$VH_; }

    static final MemoryLayout tagMSLLHOOKSTRUCT$flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMSLLHOOKSTRUCT$flags$LAYOUT() { return tagMSLLHOOKSTRUCT$flags$LAYOUT_; }

    static final VarHandle tagMSLLHOOKSTRUCT$flags$VH_ = tagMSLLHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("flags"));
    public static java.lang.invoke.VarHandle tagMSLLHOOKSTRUCT$flags$VH() { return tagMSLLHOOKSTRUCT$flags$VH_; }

    static final MemoryLayout tagMSLLHOOKSTRUCT$time$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMSLLHOOKSTRUCT$time$LAYOUT() { return tagMSLLHOOKSTRUCT$time$LAYOUT_; }

    static final VarHandle tagMSLLHOOKSTRUCT$time$VH_ = tagMSLLHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("time"));
    public static java.lang.invoke.VarHandle tagMSLLHOOKSTRUCT$time$VH() { return tagMSLLHOOKSTRUCT$time$VH_; }

    static final MemoryLayout tagMSLLHOOKSTRUCT$dwExtraInfo$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagMSLLHOOKSTRUCT$dwExtraInfo$LAYOUT() { return tagMSLLHOOKSTRUCT$dwExtraInfo$LAYOUT_; }

    static final VarHandle tagMSLLHOOKSTRUCT$dwExtraInfo$VH_ = tagMSLLHOOKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwExtraInfo"));
    public static java.lang.invoke.VarHandle tagMSLLHOOKSTRUCT$dwExtraInfo$VH() { return tagMSLLHOOKSTRUCT$dwExtraInfo$VH_; }

    static final MemoryLayout tagDEBUGHOOKINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("idThread"),
        C_INT.withName("idThreadInstaller"),
        C_LONGLONG.withName("lParam"),
        C_LONGLONG.withName("wParam"),
        C_INT.withName("code"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagDEBUGHOOKINFO");
    public static jdk.incubator.foreign.MemoryLayout tagDEBUGHOOKINFO$struct$LAYOUT() { return tagDEBUGHOOKINFO$struct$LAYOUT_; }

    static final MemoryLayout tagDEBUGHOOKINFO$idThread$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagDEBUGHOOKINFO$idThread$LAYOUT() { return tagDEBUGHOOKINFO$idThread$LAYOUT_; }

    static final VarHandle tagDEBUGHOOKINFO$idThread$VH_ = tagDEBUGHOOKINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("idThread"));
    public static java.lang.invoke.VarHandle tagDEBUGHOOKINFO$idThread$VH() { return tagDEBUGHOOKINFO$idThread$VH_; }

    static final MemoryLayout tagDEBUGHOOKINFO$idThreadInstaller$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagDEBUGHOOKINFO$idThreadInstaller$LAYOUT() { return tagDEBUGHOOKINFO$idThreadInstaller$LAYOUT_; }

    static final VarHandle tagDEBUGHOOKINFO$idThreadInstaller$VH_ = tagDEBUGHOOKINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("idThreadInstaller"));
    public static java.lang.invoke.VarHandle tagDEBUGHOOKINFO$idThreadInstaller$VH() { return tagDEBUGHOOKINFO$idThreadInstaller$VH_; }

    static final MemoryLayout tagDEBUGHOOKINFO$lParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagDEBUGHOOKINFO$lParam$LAYOUT() { return tagDEBUGHOOKINFO$lParam$LAYOUT_; }

    static final VarHandle tagDEBUGHOOKINFO$lParam$VH_ = tagDEBUGHOOKINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lParam"));
    public static java.lang.invoke.VarHandle tagDEBUGHOOKINFO$lParam$VH() { return tagDEBUGHOOKINFO$lParam$VH_; }

    static final MemoryLayout tagDEBUGHOOKINFO$wParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagDEBUGHOOKINFO$wParam$LAYOUT() { return tagDEBUGHOOKINFO$wParam$LAYOUT_; }

    static final VarHandle tagDEBUGHOOKINFO$wParam$VH_ = tagDEBUGHOOKINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("wParam"));
    public static java.lang.invoke.VarHandle tagDEBUGHOOKINFO$wParam$VH() { return tagDEBUGHOOKINFO$wParam$VH_; }

    static final MemoryLayout tagDEBUGHOOKINFO$code$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagDEBUGHOOKINFO$code$LAYOUT() { return tagDEBUGHOOKINFO$code$LAYOUT_; }

    static final VarHandle tagDEBUGHOOKINFO$code$VH_ = tagDEBUGHOOKINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("code"));
    public static java.lang.invoke.VarHandle tagDEBUGHOOKINFO$code$VH() { return tagDEBUGHOOKINFO$code$VH_; }

    static final MemoryLayout tagMOUSEHOOKSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("pt"),
        C_POINTER.withName("hwnd"),
        C_INT.withName("wHitTestCode"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("dwExtraInfo")
    ).withName("tagMOUSEHOOKSTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEHOOKSTRUCT$struct$LAYOUT() { return tagMOUSEHOOKSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagMOUSEHOOKSTRUCT$hwnd$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEHOOKSTRUCT$hwnd$LAYOUT() { return tagMOUSEHOOKSTRUCT$hwnd$LAYOUT_; }

    static final VarHandle tagMOUSEHOOKSTRUCT$hwnd$VH_ = MemoryHandles.asAddressVarHandle(tagMOUSEHOOKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    public static java.lang.invoke.VarHandle tagMOUSEHOOKSTRUCT$hwnd$VH() { return tagMOUSEHOOKSTRUCT$hwnd$VH_; }

    static final MemoryLayout tagMOUSEHOOKSTRUCT$wHitTestCode$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEHOOKSTRUCT$wHitTestCode$LAYOUT() { return tagMOUSEHOOKSTRUCT$wHitTestCode$LAYOUT_; }

    static final VarHandle tagMOUSEHOOKSTRUCT$wHitTestCode$VH_ = tagMOUSEHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wHitTestCode"));
    public static java.lang.invoke.VarHandle tagMOUSEHOOKSTRUCT$wHitTestCode$VH() { return tagMOUSEHOOKSTRUCT$wHitTestCode$VH_; }

    static final MemoryLayout tagMOUSEHOOKSTRUCT$dwExtraInfo$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEHOOKSTRUCT$dwExtraInfo$LAYOUT() { return tagMOUSEHOOKSTRUCT$dwExtraInfo$LAYOUT_; }

    static final VarHandle tagMOUSEHOOKSTRUCT$dwExtraInfo$VH_ = tagMOUSEHOOKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwExtraInfo"));
    public static java.lang.invoke.VarHandle tagMOUSEHOOKSTRUCT$dwExtraInfo$VH() { return tagMOUSEHOOKSTRUCT$dwExtraInfo$VH_; }

    static final MemoryLayout tagMOUSEHOOKSTRUCTEX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofPaddingBits(256),
        C_INT.withName("mouseData"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagMOUSEHOOKSTRUCTEX");
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEHOOKSTRUCTEX$struct$LAYOUT() { return tagMOUSEHOOKSTRUCTEX$struct$LAYOUT_; }

    static final MemoryLayout tagMOUSEHOOKSTRUCTEX$mouseData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEHOOKSTRUCTEX$mouseData$LAYOUT() { return tagMOUSEHOOKSTRUCTEX$mouseData$LAYOUT_; }

    static final VarHandle tagMOUSEHOOKSTRUCTEX$mouseData$VH_ = tagMOUSEHOOKSTRUCTEX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mouseData"));
    public static java.lang.invoke.VarHandle tagMOUSEHOOKSTRUCTEX$mouseData$VH() { return tagMOUSEHOOKSTRUCTEX$mouseData$VH_; }

    static final MemoryLayout tagHARDWAREHOOKSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hwnd"),
        C_INT.withName("message"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("wParam"),
        C_LONGLONG.withName("lParam")
    ).withName("tagHARDWAREHOOKSTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagHARDWAREHOOKSTRUCT$struct$LAYOUT() { return tagHARDWAREHOOKSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagHARDWAREHOOKSTRUCT$hwnd$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagHARDWAREHOOKSTRUCT$hwnd$LAYOUT() { return tagHARDWAREHOOKSTRUCT$hwnd$LAYOUT_; }

    static final VarHandle tagHARDWAREHOOKSTRUCT$hwnd$VH_ = MemoryHandles.asAddressVarHandle(tagHARDWAREHOOKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    public static java.lang.invoke.VarHandle tagHARDWAREHOOKSTRUCT$hwnd$VH() { return tagHARDWAREHOOKSTRUCT$hwnd$VH_; }

    static final MemoryLayout tagHARDWAREHOOKSTRUCT$message$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagHARDWAREHOOKSTRUCT$message$LAYOUT() { return tagHARDWAREHOOKSTRUCT$message$LAYOUT_; }

    static final VarHandle tagHARDWAREHOOKSTRUCT$message$VH_ = tagHARDWAREHOOKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("message"));
    public static java.lang.invoke.VarHandle tagHARDWAREHOOKSTRUCT$message$VH() { return tagHARDWAREHOOKSTRUCT$message$VH_; }

    static final MemoryLayout tagHARDWAREHOOKSTRUCT$wParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagHARDWAREHOOKSTRUCT$wParam$LAYOUT() { return tagHARDWAREHOOKSTRUCT$wParam$LAYOUT_; }

    static final VarHandle tagHARDWAREHOOKSTRUCT$wParam$VH_ = tagHARDWAREHOOKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("wParam"));
    public static java.lang.invoke.VarHandle tagHARDWAREHOOKSTRUCT$wParam$VH() { return tagHARDWAREHOOKSTRUCT$wParam$VH_; }

    static final MemoryLayout tagHARDWAREHOOKSTRUCT$lParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagHARDWAREHOOKSTRUCT$lParam$LAYOUT() { return tagHARDWAREHOOKSTRUCT$lParam$LAYOUT_; }

    static final VarHandle tagHARDWAREHOOKSTRUCT$lParam$VH_ = tagHARDWAREHOOKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lParam"));
    public static java.lang.invoke.VarHandle tagHARDWAREHOOKSTRUCT$lParam$VH() { return tagHARDWAREHOOKSTRUCT$lParam$VH_; }

    static final FunctionDescriptor LoadKeyboardLayoutA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor LoadKeyboardLayoutA$FUNC() { return LoadKeyboardLayoutA$FUNC_; }

    static final MethodHandle LoadKeyboardLayoutA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LoadKeyboardLayoutA",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        LoadKeyboardLayoutA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle LoadKeyboardLayoutA$MH() { return LoadKeyboardLayoutA$MH_; }

    static final FunctionDescriptor LoadKeyboardLayoutW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor LoadKeyboardLayoutW$FUNC() { return LoadKeyboardLayoutW$FUNC_; }

    static final MethodHandle LoadKeyboardLayoutW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LoadKeyboardLayoutW",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        LoadKeyboardLayoutW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle LoadKeyboardLayoutW$MH() { return LoadKeyboardLayoutW$MH_; }

    static final FunctionDescriptor ActivateKeyboardLayout$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor ActivateKeyboardLayout$FUNC() { return ActivateKeyboardLayout$FUNC_; }

    static final MethodHandle ActivateKeyboardLayout$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ActivateKeyboardLayout",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        ActivateKeyboardLayout$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle ActivateKeyboardLayout$MH() { return ActivateKeyboardLayout$MH_; }

    static final FunctionDescriptor ToUnicodeEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor ToUnicodeEx$FUNC() { return ToUnicodeEx$FUNC_; }

    static final MethodHandle ToUnicodeEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ToUnicodeEx",
        "(IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        ToUnicodeEx$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle ToUnicodeEx$MH() { return ToUnicodeEx$MH_; }

    static final FunctionDescriptor UnloadKeyboardLayout$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor UnloadKeyboardLayout$FUNC() { return UnloadKeyboardLayout$FUNC_; }

    static final MethodHandle UnloadKeyboardLayout$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UnloadKeyboardLayout",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        UnloadKeyboardLayout$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle UnloadKeyboardLayout$MH() { return UnloadKeyboardLayout$MH_; }

    static final FunctionDescriptor GetKeyboardLayoutNameA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetKeyboardLayoutNameA$FUNC() { return GetKeyboardLayoutNameA$FUNC_; }

    static final MethodHandle GetKeyboardLayoutNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetKeyboardLayoutNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        GetKeyboardLayoutNameA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetKeyboardLayoutNameA$MH() { return GetKeyboardLayoutNameA$MH_; }

    static final FunctionDescriptor GetKeyboardLayoutNameW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetKeyboardLayoutNameW$FUNC() { return GetKeyboardLayoutNameW$FUNC_; }

    static final MethodHandle GetKeyboardLayoutNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetKeyboardLayoutNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        GetKeyboardLayoutNameW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetKeyboardLayoutNameW$MH() { return GetKeyboardLayoutNameW$MH_; }

    static final FunctionDescriptor GetKeyboardLayoutList$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetKeyboardLayoutList$FUNC() { return GetKeyboardLayoutList$FUNC_; }

    static final MethodHandle GetKeyboardLayoutList$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetKeyboardLayoutList",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        GetKeyboardLayoutList$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetKeyboardLayoutList$MH() { return GetKeyboardLayoutList$MH_; }

    static final FunctionDescriptor GetKeyboardLayout$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetKeyboardLayout$FUNC() { return GetKeyboardLayout$FUNC_; }

    static final MethodHandle GetKeyboardLayout$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetKeyboardLayout",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        GetKeyboardLayout$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetKeyboardLayout$MH() { return GetKeyboardLayout$MH_; }

    static final MemoryLayout tagMOUSEMOVEPOINT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("x"),
        C_INT.withName("y"),
        C_INT.withName("time"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("dwExtraInfo")
    ).withName("tagMOUSEMOVEPOINT");
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEMOVEPOINT$struct$LAYOUT() { return tagMOUSEMOVEPOINT$struct$LAYOUT_; }

    static final MemoryLayout tagMOUSEMOVEPOINT$x$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEMOVEPOINT$x$LAYOUT() { return tagMOUSEMOVEPOINT$x$LAYOUT_; }

    static final VarHandle tagMOUSEMOVEPOINT$x$VH_ = tagMOUSEMOVEPOINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("x"));
    public static java.lang.invoke.VarHandle tagMOUSEMOVEPOINT$x$VH() { return tagMOUSEMOVEPOINT$x$VH_; }

    static final MemoryLayout tagMOUSEMOVEPOINT$y$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEMOVEPOINT$y$LAYOUT() { return tagMOUSEMOVEPOINT$y$LAYOUT_; }

    static final VarHandle tagMOUSEMOVEPOINT$y$VH_ = tagMOUSEMOVEPOINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("y"));
    public static java.lang.invoke.VarHandle tagMOUSEMOVEPOINT$y$VH() { return tagMOUSEMOVEPOINT$y$VH_; }

    static final MemoryLayout tagMOUSEMOVEPOINT$time$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEMOVEPOINT$time$LAYOUT() { return tagMOUSEMOVEPOINT$time$LAYOUT_; }

    static final VarHandle tagMOUSEMOVEPOINT$time$VH_ = tagMOUSEMOVEPOINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("time"));
    public static java.lang.invoke.VarHandle tagMOUSEMOVEPOINT$time$VH() { return tagMOUSEMOVEPOINT$time$VH_; }

    static final MemoryLayout tagMOUSEMOVEPOINT$dwExtraInfo$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagMOUSEMOVEPOINT$dwExtraInfo$LAYOUT() { return tagMOUSEMOVEPOINT$dwExtraInfo$LAYOUT_; }

    static final VarHandle tagMOUSEMOVEPOINT$dwExtraInfo$VH_ = tagMOUSEMOVEPOINT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwExtraInfo"));
    public static java.lang.invoke.VarHandle tagMOUSEMOVEPOINT$dwExtraInfo$VH() { return tagMOUSEMOVEPOINT$dwExtraInfo$VH_; }

    static final FunctionDescriptor GetMouseMovePointsEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetMouseMovePointsEx$FUNC() { return GetMouseMovePointsEx$FUNC_; }

    static final MethodHandle GetMouseMovePointsEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetMouseMovePointsEx",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        GetMouseMovePointsEx$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetMouseMovePointsEx$MH() { return GetMouseMovePointsEx$MH_; }

    static final FunctionDescriptor CreateDesktopA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor CreateDesktopA$FUNC() { return CreateDesktopA$FUNC_; }

    static final MethodHandle CreateDesktopA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateDesktopA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateDesktopA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle CreateDesktopA$MH() { return CreateDesktopA$MH_; }

    static final FunctionDescriptor CreateDesktopW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor CreateDesktopW$FUNC() { return CreateDesktopW$FUNC_; }

    static final MethodHandle CreateDesktopW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateDesktopW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateDesktopW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle CreateDesktopW$MH() { return CreateDesktopW$MH_; }

    static final FunctionDescriptor CreateDesktopExA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor CreateDesktopExA$FUNC() { return CreateDesktopExA$FUNC_; }

    static final MethodHandle CreateDesktopExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateDesktopExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateDesktopExA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle CreateDesktopExA$MH() { return CreateDesktopExA$MH_; }

    static final FunctionDescriptor CreateDesktopExW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor CreateDesktopExW$FUNC() { return CreateDesktopExW$FUNC_; }

    static final MethodHandle CreateDesktopExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateDesktopExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateDesktopExW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle CreateDesktopExW$MH() { return CreateDesktopExW$MH_; }

    static final FunctionDescriptor OpenDesktopA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor OpenDesktopA$FUNC() { return OpenDesktopA$FUNC_; }

    static final MethodHandle OpenDesktopA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenDesktopA",
        "(Ljdk/incubator/foreign/MemoryAddress;III)Ljdk/incubator/foreign/MemoryAddress;",
        OpenDesktopA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle OpenDesktopA$MH() { return OpenDesktopA$MH_; }

    static final FunctionDescriptor OpenDesktopW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor OpenDesktopW$FUNC() { return OpenDesktopW$FUNC_; }

    static final MethodHandle OpenDesktopW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenDesktopW",
        "(Ljdk/incubator/foreign/MemoryAddress;III)Ljdk/incubator/foreign/MemoryAddress;",
        OpenDesktopW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle OpenDesktopW$MH() { return OpenDesktopW$MH_; }

    static final FunctionDescriptor OpenInputDesktop$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor OpenInputDesktop$FUNC() { return OpenInputDesktop$FUNC_; }

    static final MethodHandle OpenInputDesktop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenInputDesktop",
        "(III)Ljdk/incubator/foreign/MemoryAddress;",
        OpenInputDesktop$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle OpenInputDesktop$MH() { return OpenInputDesktop$MH_; }

    static final FunctionDescriptor EnumDesktopsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumDesktopsA$FUNC() { return EnumDesktopsA$FUNC_; }

    static final MethodHandle EnumDesktopsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumDesktopsA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        EnumDesktopsA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle EnumDesktopsA$MH() { return EnumDesktopsA$MH_; }

    static final FunctionDescriptor EnumDesktopsA$lpEnumFunc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumDesktopsA$lpEnumFunc$FUNC() { return EnumDesktopsA$lpEnumFunc$FUNC_; }

    static final FunctionDescriptor EnumDesktopsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumDesktopsW$FUNC() { return EnumDesktopsW$FUNC_; }

    static final MethodHandle EnumDesktopsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumDesktopsW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        EnumDesktopsW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle EnumDesktopsW$MH() { return EnumDesktopsW$MH_; }

    static final FunctionDescriptor EnumDesktopsW$lpEnumFunc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumDesktopsW$lpEnumFunc$FUNC() { return EnumDesktopsW$lpEnumFunc$FUNC_; }

    static final FunctionDescriptor EnumDesktopWindows$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumDesktopWindows$FUNC() { return EnumDesktopWindows$FUNC_; }

    static final MethodHandle EnumDesktopWindows$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumDesktopWindows",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        EnumDesktopWindows$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle EnumDesktopWindows$MH() { return EnumDesktopWindows$MH_; }

    static final FunctionDescriptor EnumDesktopWindows$lpfn$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumDesktopWindows$lpfn$FUNC() { return EnumDesktopWindows$lpfn$FUNC_; }

    static final FunctionDescriptor SwitchDesktop$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor SwitchDesktop$FUNC() { return SwitchDesktop$FUNC_; }

    static final MethodHandle SwitchDesktop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SwitchDesktop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SwitchDesktop$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle SwitchDesktop$MH() { return SwitchDesktop$MH_; }

    static final FunctionDescriptor SetThreadDesktop$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor SetThreadDesktop$FUNC() { return SetThreadDesktop$FUNC_; }

    static final MethodHandle SetThreadDesktop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetThreadDesktop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SetThreadDesktop$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle SetThreadDesktop$MH() { return SetThreadDesktop$MH_; }

    static final FunctionDescriptor CloseDesktop$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor CloseDesktop$FUNC() { return CloseDesktop$FUNC_; }

    static final MethodHandle CloseDesktop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CloseDesktop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        CloseDesktop$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle CloseDesktop$MH() { return CloseDesktop$MH_; }

    static final FunctionDescriptor GetThreadDesktop$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetThreadDesktop$FUNC() { return GetThreadDesktop$FUNC_; }

    static final MethodHandle GetThreadDesktop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetThreadDesktop",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        GetThreadDesktop$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetThreadDesktop$MH() { return GetThreadDesktop$MH_; }

    static final FunctionDescriptor CreateWindowStationA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor CreateWindowStationA$FUNC() { return CreateWindowStationA$FUNC_; }

    static final MethodHandle CreateWindowStationA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateWindowStationA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateWindowStationA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle CreateWindowStationA$MH() { return CreateWindowStationA$MH_; }

    static final FunctionDescriptor CreateWindowStationW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor CreateWindowStationW$FUNC() { return CreateWindowStationW$FUNC_; }

    static final MethodHandle CreateWindowStationW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateWindowStationW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateWindowStationW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle CreateWindowStationW$MH() { return CreateWindowStationW$MH_; }

    static final FunctionDescriptor OpenWindowStationA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor OpenWindowStationA$FUNC() { return OpenWindowStationA$FUNC_; }

    static final MethodHandle OpenWindowStationA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenWindowStationA",
        "(Ljdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
        OpenWindowStationA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle OpenWindowStationA$MH() { return OpenWindowStationA$MH_; }

    static final FunctionDescriptor OpenWindowStationW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor OpenWindowStationW$FUNC() { return OpenWindowStationW$FUNC_; }

    static final MethodHandle OpenWindowStationW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenWindowStationW",
        "(Ljdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
        OpenWindowStationW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle OpenWindowStationW$MH() { return OpenWindowStationW$MH_; }

    static final FunctionDescriptor EnumWindowStationsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumWindowStationsA$FUNC() { return EnumWindowStationsA$FUNC_; }

    static final MethodHandle EnumWindowStationsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumWindowStationsA",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        EnumWindowStationsA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle EnumWindowStationsA$MH() { return EnumWindowStationsA$MH_; }

    static final FunctionDescriptor EnumWindowStationsA$lpEnumFunc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumWindowStationsA$lpEnumFunc$FUNC() { return EnumWindowStationsA$lpEnumFunc$FUNC_; }

    static final FunctionDescriptor EnumWindowStationsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumWindowStationsW$FUNC() { return EnumWindowStationsW$FUNC_; }

    static final MethodHandle EnumWindowStationsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumWindowStationsW",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        EnumWindowStationsW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle EnumWindowStationsW$MH() { return EnumWindowStationsW$MH_; }

    static final FunctionDescriptor EnumWindowStationsW$lpEnumFunc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    public static jdk.incubator.foreign.FunctionDescriptor EnumWindowStationsW$lpEnumFunc$FUNC() { return EnumWindowStationsW$lpEnumFunc$FUNC_; }

    static final FunctionDescriptor CloseWindowStation$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor CloseWindowStation$FUNC() { return CloseWindowStation$FUNC_; }

    static final MethodHandle CloseWindowStation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CloseWindowStation",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        CloseWindowStation$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle CloseWindowStation$MH() { return CloseWindowStation$MH_; }

    static final FunctionDescriptor SetProcessWindowStation$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor SetProcessWindowStation$FUNC() { return SetProcessWindowStation$FUNC_; }

    static final MethodHandle SetProcessWindowStation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetProcessWindowStation",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SetProcessWindowStation$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle SetProcessWindowStation$MH() { return SetProcessWindowStation$MH_; }

    static final FunctionDescriptor GetProcessWindowStation$FUNC_ = FunctionDescriptor.of(C_POINTER);
    public static jdk.incubator.foreign.FunctionDescriptor GetProcessWindowStation$FUNC() { return GetProcessWindowStation$FUNC_; }

    static final MethodHandle GetProcessWindowStation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetProcessWindowStation",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        GetProcessWindowStation$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetProcessWindowStation$MH() { return GetProcessWindowStation$MH_; }

    static final FunctionDescriptor SetUserObjectSecurity$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor SetUserObjectSecurity$FUNC() { return SetUserObjectSecurity$FUNC_; }

    static final MethodHandle SetUserObjectSecurity$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetUserObjectSecurity",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SetUserObjectSecurity$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle SetUserObjectSecurity$MH() { return SetUserObjectSecurity$MH_; }

    static final FunctionDescriptor GetUserObjectSecurity$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetUserObjectSecurity$FUNC() { return GetUserObjectSecurity$FUNC_; }

    static final MethodHandle GetUserObjectSecurity$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetUserObjectSecurity",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetUserObjectSecurity$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetUserObjectSecurity$MH() { return GetUserObjectSecurity$MH_; }

    static final MemoryLayout tagUSEROBJECTFLAGS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("fInherit"),
        C_INT.withName("fReserved"),
        C_INT.withName("dwFlags")
    ).withName("tagUSEROBJECTFLAGS");
    public static jdk.incubator.foreign.MemoryLayout tagUSEROBJECTFLAGS$struct$LAYOUT() { return tagUSEROBJECTFLAGS$struct$LAYOUT_; }

    static final MemoryLayout tagUSEROBJECTFLAGS$fInherit$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagUSEROBJECTFLAGS$fInherit$LAYOUT() { return tagUSEROBJECTFLAGS$fInherit$LAYOUT_; }

    static final VarHandle tagUSEROBJECTFLAGS$fInherit$VH_ = tagUSEROBJECTFLAGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fInherit"));
    public static java.lang.invoke.VarHandle tagUSEROBJECTFLAGS$fInherit$VH() { return tagUSEROBJECTFLAGS$fInherit$VH_; }

    static final MemoryLayout tagUSEROBJECTFLAGS$fReserved$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagUSEROBJECTFLAGS$fReserved$LAYOUT() { return tagUSEROBJECTFLAGS$fReserved$LAYOUT_; }

    static final VarHandle tagUSEROBJECTFLAGS$fReserved$VH_ = tagUSEROBJECTFLAGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fReserved"));
    public static java.lang.invoke.VarHandle tagUSEROBJECTFLAGS$fReserved$VH() { return tagUSEROBJECTFLAGS$fReserved$VH_; }

    static final MemoryLayout tagUSEROBJECTFLAGS$dwFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagUSEROBJECTFLAGS$dwFlags$LAYOUT() { return tagUSEROBJECTFLAGS$dwFlags$LAYOUT_; }

    static final VarHandle tagUSEROBJECTFLAGS$dwFlags$VH_ = tagUSEROBJECTFLAGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    public static java.lang.invoke.VarHandle tagUSEROBJECTFLAGS$dwFlags$VH() { return tagUSEROBJECTFLAGS$dwFlags$VH_; }

    static final FunctionDescriptor GetUserObjectInformationA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetUserObjectInformationA$FUNC() { return GetUserObjectInformationA$FUNC_; }

    static final MethodHandle GetUserObjectInformationA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetUserObjectInformationA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetUserObjectInformationA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetUserObjectInformationA$MH() { return GetUserObjectInformationA$MH_; }

    static final FunctionDescriptor GetUserObjectInformationW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor GetUserObjectInformationW$FUNC() { return GetUserObjectInformationW$FUNC_; }

    static final MethodHandle GetUserObjectInformationW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetUserObjectInformationW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetUserObjectInformationW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle GetUserObjectInformationW$MH() { return GetUserObjectInformationW$MH_; }

    static final FunctionDescriptor SetUserObjectInformationA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor SetUserObjectInformationA$FUNC() { return SetUserObjectInformationA$FUNC_; }

    static final MethodHandle SetUserObjectInformationA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetUserObjectInformationA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SetUserObjectInformationA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle SetUserObjectInformationA$MH() { return SetUserObjectInformationA$MH_; }

    static final FunctionDescriptor SetUserObjectInformationW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor SetUserObjectInformationW$FUNC() { return SetUserObjectInformationW$FUNC_; }

    static final MethodHandle SetUserObjectInformationW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetUserObjectInformationW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SetUserObjectInformationW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle SetUserObjectInformationW$MH() { return SetUserObjectInformationW$MH_; }

    static final MemoryLayout tagWNDCLASSEXA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cbSize"),
        C_INT.withName("style"),
        C_POINTER.withName("lpfnWndProc"),
        C_INT.withName("cbClsExtra"),
        C_INT.withName("cbWndExtra"),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("hCursor"),
        C_POINTER.withName("hbrBackground"),
        C_POINTER.withName("lpszMenuName"),
        C_POINTER.withName("lpszClassName"),
        C_POINTER.withName("hIconSm")
    ).withName("tagWNDCLASSEXA");
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$struct$LAYOUT() { return tagWNDCLASSEXA$struct$LAYOUT_; }

    static final MemoryLayout tagWNDCLASSEXA$cbSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$cbSize$LAYOUT() { return tagWNDCLASSEXA$cbSize$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$cbSize$VH_ = tagWNDCLASSEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$cbSize$VH() { return tagWNDCLASSEXA$cbSize$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$style$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$style$LAYOUT() { return tagWNDCLASSEXA$style$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$style$VH_ = tagWNDCLASSEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("style"));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$style$VH() { return tagWNDCLASSEXA$style$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$lpfnWndProc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$lpfnWndProc$LAYOUT() { return tagWNDCLASSEXA$lpfnWndProc$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$lpfnWndProc$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnWndProc")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$lpfnWndProc$VH() { return tagWNDCLASSEXA$lpfnWndProc$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$cbClsExtra$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$cbClsExtra$LAYOUT() { return tagWNDCLASSEXA$cbClsExtra$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$cbClsExtra$VH_ = tagWNDCLASSEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbClsExtra"));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$cbClsExtra$VH() { return tagWNDCLASSEXA$cbClsExtra$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$cbWndExtra$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$cbWndExtra$LAYOUT() { return tagWNDCLASSEXA$cbWndExtra$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$cbWndExtra$VH_ = tagWNDCLASSEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbWndExtra"));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$cbWndExtra$VH() { return tagWNDCLASSEXA$cbWndExtra$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$hInstance$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$hInstance$LAYOUT() { return tagWNDCLASSEXA$hInstance$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$hInstance$VH() { return tagWNDCLASSEXA$hInstance$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$hIcon$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$hIcon$LAYOUT() { return tagWNDCLASSEXA$hIcon$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$hIcon$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$hIcon$VH() { return tagWNDCLASSEXA$hIcon$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$hCursor$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$hCursor$LAYOUT() { return tagWNDCLASSEXA$hCursor$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$hCursor$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCursor")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$hCursor$VH() { return tagWNDCLASSEXA$hCursor$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$hbrBackground$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$hbrBackground$LAYOUT() { return tagWNDCLASSEXA$hbrBackground$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$hbrBackground$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hbrBackground")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$hbrBackground$VH() { return tagWNDCLASSEXA$hbrBackground$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$lpszMenuName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$lpszMenuName$LAYOUT() { return tagWNDCLASSEXA$lpszMenuName$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$lpszMenuName$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszMenuName")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$lpszMenuName$VH() { return tagWNDCLASSEXA$lpszMenuName$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$lpszClassName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$lpszClassName$LAYOUT() { return tagWNDCLASSEXA$lpszClassName$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$lpszClassName$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszClassName")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$lpszClassName$VH() { return tagWNDCLASSEXA$lpszClassName$VH_; }

    static final MemoryLayout tagWNDCLASSEXA$hIconSm$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXA$hIconSm$LAYOUT() { return tagWNDCLASSEXA$hIconSm$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXA$hIconSm$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIconSm")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXA$hIconSm$VH() { return tagWNDCLASSEXA$hIconSm$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cbSize"),
        C_INT.withName("style"),
        C_POINTER.withName("lpfnWndProc"),
        C_INT.withName("cbClsExtra"),
        C_INT.withName("cbWndExtra"),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("hCursor"),
        C_POINTER.withName("hbrBackground"),
        C_POINTER.withName("lpszMenuName"),
        C_POINTER.withName("lpszClassName"),
        C_POINTER.withName("hIconSm")
    ).withName("tagWNDCLASSEXW");
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$struct$LAYOUT() { return tagWNDCLASSEXW$struct$LAYOUT_; }

    static final MemoryLayout tagWNDCLASSEXW$cbSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$cbSize$LAYOUT() { return tagWNDCLASSEXW$cbSize$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$cbSize$VH_ = tagWNDCLASSEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$cbSize$VH() { return tagWNDCLASSEXW$cbSize$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$style$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$style$LAYOUT() { return tagWNDCLASSEXW$style$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$style$VH_ = tagWNDCLASSEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("style"));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$style$VH() { return tagWNDCLASSEXW$style$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$lpfnWndProc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$lpfnWndProc$LAYOUT() { return tagWNDCLASSEXW$lpfnWndProc$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$lpfnWndProc$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnWndProc")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$lpfnWndProc$VH() { return tagWNDCLASSEXW$lpfnWndProc$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$cbClsExtra$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$cbClsExtra$LAYOUT() { return tagWNDCLASSEXW$cbClsExtra$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$cbClsExtra$VH_ = tagWNDCLASSEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbClsExtra"));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$cbClsExtra$VH() { return tagWNDCLASSEXW$cbClsExtra$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$cbWndExtra$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$cbWndExtra$LAYOUT() { return tagWNDCLASSEXW$cbWndExtra$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$cbWndExtra$VH_ = tagWNDCLASSEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbWndExtra"));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$cbWndExtra$VH() { return tagWNDCLASSEXW$cbWndExtra$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$hInstance$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$hInstance$LAYOUT() { return tagWNDCLASSEXW$hInstance$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$hInstance$VH() { return tagWNDCLASSEXW$hInstance$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$hIcon$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$hIcon$LAYOUT() { return tagWNDCLASSEXW$hIcon$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$hIcon$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$hIcon$VH() { return tagWNDCLASSEXW$hIcon$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$hCursor$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$hCursor$LAYOUT() { return tagWNDCLASSEXW$hCursor$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$hCursor$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCursor")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$hCursor$VH() { return tagWNDCLASSEXW$hCursor$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$hbrBackground$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$hbrBackground$LAYOUT() { return tagWNDCLASSEXW$hbrBackground$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$hbrBackground$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hbrBackground")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$hbrBackground$VH() { return tagWNDCLASSEXW$hbrBackground$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$lpszMenuName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$lpszMenuName$LAYOUT() { return tagWNDCLASSEXW$lpszMenuName$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$lpszMenuName$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszMenuName")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$lpszMenuName$VH() { return tagWNDCLASSEXW$lpszMenuName$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$lpszClassName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$lpszClassName$LAYOUT() { return tagWNDCLASSEXW$lpszClassName$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$lpszClassName$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszClassName")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$lpszClassName$VH() { return tagWNDCLASSEXW$lpszClassName$VH_; }

    static final MemoryLayout tagWNDCLASSEXW$hIconSm$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSEXW$hIconSm$LAYOUT() { return tagWNDCLASSEXW$hIconSm$LAYOUT_; }

    static final VarHandle tagWNDCLASSEXW$hIconSm$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIconSm")));
    public static java.lang.invoke.VarHandle tagWNDCLASSEXW$hIconSm$VH() { return tagWNDCLASSEXW$hIconSm$VH_; }

    static final MemoryLayout tagWNDCLASSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("style"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpfnWndProc"),
        C_INT.withName("cbClsExtra"),
        C_INT.withName("cbWndExtra"),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("hCursor"),
        C_POINTER.withName("hbrBackground"),
        C_POINTER.withName("lpszMenuName"),
        C_POINTER.withName("lpszClassName")
    ).withName("tagWNDCLASSA");
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$struct$LAYOUT() { return tagWNDCLASSA$struct$LAYOUT_; }

    static final MemoryLayout tagWNDCLASSA$style$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$style$LAYOUT() { return tagWNDCLASSA$style$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$style$VH_ = tagWNDCLASSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("style"));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$style$VH() { return tagWNDCLASSA$style$VH_; }

    static final MemoryLayout tagWNDCLASSA$lpfnWndProc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$lpfnWndProc$LAYOUT() { return tagWNDCLASSA$lpfnWndProc$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$lpfnWndProc$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnWndProc")));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$lpfnWndProc$VH() { return tagWNDCLASSA$lpfnWndProc$VH_; }

    static final MemoryLayout tagWNDCLASSA$cbClsExtra$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$cbClsExtra$LAYOUT() { return tagWNDCLASSA$cbClsExtra$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$cbClsExtra$VH_ = tagWNDCLASSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbClsExtra"));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$cbClsExtra$VH() { return tagWNDCLASSA$cbClsExtra$VH_; }

    static final MemoryLayout tagWNDCLASSA$cbWndExtra$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$cbWndExtra$LAYOUT() { return tagWNDCLASSA$cbWndExtra$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$cbWndExtra$VH_ = tagWNDCLASSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbWndExtra"));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$cbWndExtra$VH() { return tagWNDCLASSA$cbWndExtra$VH_; }

    static final MemoryLayout tagWNDCLASSA$hInstance$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$hInstance$LAYOUT() { return tagWNDCLASSA$hInstance$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$hInstance$VH() { return tagWNDCLASSA$hInstance$VH_; }

    static final MemoryLayout tagWNDCLASSA$hIcon$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$hIcon$LAYOUT() { return tagWNDCLASSA$hIcon$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$hIcon$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$hIcon$VH() { return tagWNDCLASSA$hIcon$VH_; }

    static final MemoryLayout tagWNDCLASSA$hCursor$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$hCursor$LAYOUT() { return tagWNDCLASSA$hCursor$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$hCursor$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCursor")));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$hCursor$VH() { return tagWNDCLASSA$hCursor$VH_; }

    static final MemoryLayout tagWNDCLASSA$hbrBackground$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$hbrBackground$LAYOUT() { return tagWNDCLASSA$hbrBackground$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$hbrBackground$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hbrBackground")));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$hbrBackground$VH() { return tagWNDCLASSA$hbrBackground$VH_; }

    static final MemoryLayout tagWNDCLASSA$lpszMenuName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$lpszMenuName$LAYOUT() { return tagWNDCLASSA$lpszMenuName$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$lpszMenuName$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszMenuName")));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$lpszMenuName$VH() { return tagWNDCLASSA$lpszMenuName$VH_; }

    static final MemoryLayout tagWNDCLASSA$lpszClassName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSA$lpszClassName$LAYOUT() { return tagWNDCLASSA$lpszClassName$LAYOUT_; }

    static final VarHandle tagWNDCLASSA$lpszClassName$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszClassName")));
    public static java.lang.invoke.VarHandle tagWNDCLASSA$lpszClassName$VH() { return tagWNDCLASSA$lpszClassName$VH_; }

    static final MemoryLayout tagWNDCLASSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("style"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpfnWndProc"),
        C_INT.withName("cbClsExtra"),
        C_INT.withName("cbWndExtra"),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("hCursor"),
        C_POINTER.withName("hbrBackground"),
        C_POINTER.withName("lpszMenuName"),
        C_POINTER.withName("lpszClassName")
    ).withName("tagWNDCLASSW");
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$struct$LAYOUT() { return tagWNDCLASSW$struct$LAYOUT_; }

    static final MemoryLayout tagWNDCLASSW$style$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$style$LAYOUT() { return tagWNDCLASSW$style$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$style$VH_ = tagWNDCLASSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("style"));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$style$VH() { return tagWNDCLASSW$style$VH_; }

    static final MemoryLayout tagWNDCLASSW$lpfnWndProc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$lpfnWndProc$LAYOUT() { return tagWNDCLASSW$lpfnWndProc$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$lpfnWndProc$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnWndProc")));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$lpfnWndProc$VH() { return tagWNDCLASSW$lpfnWndProc$VH_; }

    static final MemoryLayout tagWNDCLASSW$cbClsExtra$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$cbClsExtra$LAYOUT() { return tagWNDCLASSW$cbClsExtra$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$cbClsExtra$VH_ = tagWNDCLASSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbClsExtra"));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$cbClsExtra$VH() { return tagWNDCLASSW$cbClsExtra$VH_; }

    static final MemoryLayout tagWNDCLASSW$cbWndExtra$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$cbWndExtra$LAYOUT() { return tagWNDCLASSW$cbWndExtra$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$cbWndExtra$VH_ = tagWNDCLASSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbWndExtra"));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$cbWndExtra$VH() { return tagWNDCLASSW$cbWndExtra$VH_; }

    static final MemoryLayout tagWNDCLASSW$hInstance$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$hInstance$LAYOUT() { return tagWNDCLASSW$hInstance$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$hInstance$VH() { return tagWNDCLASSW$hInstance$VH_; }

    static final MemoryLayout tagWNDCLASSW$hIcon$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$hIcon$LAYOUT() { return tagWNDCLASSW$hIcon$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$hIcon$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$hIcon$VH() { return tagWNDCLASSW$hIcon$VH_; }

    static final MemoryLayout tagWNDCLASSW$hCursor$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$hCursor$LAYOUT() { return tagWNDCLASSW$hCursor$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$hCursor$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCursor")));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$hCursor$VH() { return tagWNDCLASSW$hCursor$VH_; }

    static final MemoryLayout tagWNDCLASSW$hbrBackground$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$hbrBackground$LAYOUT() { return tagWNDCLASSW$hbrBackground$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$hbrBackground$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hbrBackground")));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$hbrBackground$VH() { return tagWNDCLASSW$hbrBackground$VH_; }

    static final MemoryLayout tagWNDCLASSW$lpszMenuName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$lpszMenuName$LAYOUT() { return tagWNDCLASSW$lpszMenuName$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$lpszMenuName$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszMenuName")));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$lpszMenuName$VH() { return tagWNDCLASSW$lpszMenuName$VH_; }

    static final MemoryLayout tagWNDCLASSW$lpszClassName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWNDCLASSW$lpszClassName$LAYOUT() { return tagWNDCLASSW$lpszClassName$LAYOUT_; }

    static final VarHandle tagWNDCLASSW$lpszClassName$VH_ = MemoryHandles.asAddressVarHandle(tagWNDCLASSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszClassName")));
    public static java.lang.invoke.VarHandle tagWNDCLASSW$lpszClassName$VH() { return tagWNDCLASSW$lpszClassName$VH_; }

    static final FunctionDescriptor IsHungAppWindow$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor IsHungAppWindow$FUNC() { return IsHungAppWindow$FUNC_; }

    static final MethodHandle IsHungAppWindow$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IsHungAppWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IsHungAppWindow$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle IsHungAppWindow$MH() { return IsHungAppWindow$MH_; }

    static final FunctionDescriptor DisableProcessWindowsGhosting$FUNC_ = FunctionDescriptor.ofVoid();
    public static jdk.incubator.foreign.FunctionDescriptor DisableProcessWindowsGhosting$FUNC() { return DisableProcessWindowsGhosting$FUNC_; }

    static final MethodHandle DisableProcessWindowsGhosting$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DisableProcessWindowsGhosting",
        "()V",
        DisableProcessWindowsGhosting$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle DisableProcessWindowsGhosting$MH() { return DisableProcessWindowsGhosting$MH_; }

    static final MemoryLayout tagMSG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hwnd"),
        C_INT.withName("message"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("wParam"),
        C_LONGLONG.withName("lParam"),
        C_INT.withName("time"),
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("pt"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagMSG");
    public static jdk.incubator.foreign.MemoryLayout tagMSG$struct$LAYOUT() { return tagMSG$struct$LAYOUT_; }

    static final MemoryLayout tagMSG$hwnd$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagMSG$hwnd$LAYOUT() { return tagMSG$hwnd$LAYOUT_; }

    static final VarHandle tagMSG$hwnd$VH_ = MemoryHandles.asAddressVarHandle(tagMSG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    public static java.lang.invoke.VarHandle tagMSG$hwnd$VH() { return tagMSG$hwnd$VH_; }

    static final MemoryLayout tagMSG$message$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMSG$message$LAYOUT() { return tagMSG$message$LAYOUT_; }

    static final VarHandle tagMSG$message$VH_ = tagMSG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("message"));
    public static java.lang.invoke.VarHandle tagMSG$message$VH() { return tagMSG$message$VH_; }

    static final MemoryLayout tagMSG$wParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagMSG$wParam$LAYOUT() { return tagMSG$wParam$LAYOUT_; }

    static final VarHandle tagMSG$wParam$VH_ = tagMSG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("wParam"));
    public static java.lang.invoke.VarHandle tagMSG$wParam$VH() { return tagMSG$wParam$VH_; }

    static final MemoryLayout tagMSG$lParam$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagMSG$lParam$LAYOUT() { return tagMSG$lParam$LAYOUT_; }

    static final VarHandle tagMSG$lParam$VH_ = tagMSG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lParam"));
    public static java.lang.invoke.VarHandle tagMSG$lParam$VH() { return tagMSG$lParam$VH_; }

    static final MemoryLayout tagMSG$time$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMSG$time$LAYOUT() { return tagMSG$time$LAYOUT_; }

    static final VarHandle tagMSG$time$VH_ = tagMSG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("time"));
    public static java.lang.invoke.VarHandle tagMSG$time$VH() { return tagMSG$time$VH_; }

    static final MemoryLayout tagMINMAXINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("ptReserved"),
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("ptMaxSize"),
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("ptMaxPosition"),
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("ptMinTrackSize"),
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("ptMaxTrackSize")
    ).withName("tagMINMAXINFO");
    public static jdk.incubator.foreign.MemoryLayout tagMINMAXINFO$struct$LAYOUT() { return tagMINMAXINFO$struct$LAYOUT_; }

    static final MemoryLayout tagCOPYDATASTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("dwData"),
        C_INT.withName("cbData"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpData")
    ).withName("tagCOPYDATASTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagCOPYDATASTRUCT$struct$LAYOUT() { return tagCOPYDATASTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagCOPYDATASTRUCT$dwData$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagCOPYDATASTRUCT$dwData$LAYOUT() { return tagCOPYDATASTRUCT$dwData$LAYOUT_; }

    static final VarHandle tagCOPYDATASTRUCT$dwData$VH_ = tagCOPYDATASTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwData"));
    public static java.lang.invoke.VarHandle tagCOPYDATASTRUCT$dwData$VH() { return tagCOPYDATASTRUCT$dwData$VH_; }

    static final MemoryLayout tagCOPYDATASTRUCT$cbData$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCOPYDATASTRUCT$cbData$LAYOUT() { return tagCOPYDATASTRUCT$cbData$LAYOUT_; }

    static final VarHandle tagCOPYDATASTRUCT$cbData$VH_ = tagCOPYDATASTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    public static java.lang.invoke.VarHandle tagCOPYDATASTRUCT$cbData$VH() { return tagCOPYDATASTRUCT$cbData$VH_; }

    static final MemoryLayout tagCOPYDATASTRUCT$lpData$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCOPYDATASTRUCT$lpData$LAYOUT() { return tagCOPYDATASTRUCT$lpData$LAYOUT_; }

    static final VarHandle tagCOPYDATASTRUCT$lpData$VH_ = MemoryHandles.asAddressVarHandle(tagCOPYDATASTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpData")));
    public static java.lang.invoke.VarHandle tagCOPYDATASTRUCT$lpData$VH() { return tagCOPYDATASTRUCT$lpData$VH_; }

    static final MemoryLayout tagMDINEXTMENU$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hmenuIn"),
        C_POINTER.withName("hmenuNext"),
        C_POINTER.withName("hwndNext")
    ).withName("tagMDINEXTMENU");
    public static jdk.incubator.foreign.MemoryLayout tagMDINEXTMENU$struct$LAYOUT() { return tagMDINEXTMENU$struct$LAYOUT_; }

    static final MemoryLayout tagMDINEXTMENU$hmenuIn$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagMDINEXTMENU$hmenuIn$LAYOUT() { return tagMDINEXTMENU$hmenuIn$LAYOUT_; }

    static final VarHandle tagMDINEXTMENU$hmenuIn$VH_ = MemoryHandles.asAddressVarHandle(tagMDINEXTMENU$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hmenuIn")));
    public static java.lang.invoke.VarHandle tagMDINEXTMENU$hmenuIn$VH() { return tagMDINEXTMENU$hmenuIn$VH_; }

    static final MemoryLayout tagMDINEXTMENU$hmenuNext$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagMDINEXTMENU$hmenuNext$LAYOUT() { return tagMDINEXTMENU$hmenuNext$LAYOUT_; }

    static final VarHandle tagMDINEXTMENU$hmenuNext$VH_ = MemoryHandles.asAddressVarHandle(tagMDINEXTMENU$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hmenuNext")));
    public static java.lang.invoke.VarHandle tagMDINEXTMENU$hmenuNext$VH() { return tagMDINEXTMENU$hmenuNext$VH_; }

    static final MemoryLayout tagMDINEXTMENU$hwndNext$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagMDINEXTMENU$hwndNext$LAYOUT() { return tagMDINEXTMENU$hwndNext$LAYOUT_; }

    static final VarHandle tagMDINEXTMENU$hwndNext$VH_ = MemoryHandles.asAddressVarHandle(tagMDINEXTMENU$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndNext")));
    public static java.lang.invoke.VarHandle tagMDINEXTMENU$hwndNext$VH() { return tagMDINEXTMENU$hwndNext$VH_; }

    static final MemoryLayout POWERBROADCAST_SETTING$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_INT.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_BOOL).withName("Data4")
        ).withName("PowerSetting"),
        C_INT.withName("DataLength"),
        MemoryLayout.ofSequence(1, C_BOOL).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    );
    public static jdk.incubator.foreign.MemoryLayout POWERBROADCAST_SETTING$struct$LAYOUT() { return POWERBROADCAST_SETTING$struct$LAYOUT_; }

    static final MemoryLayout POWERBROADCAST_SETTING$DataLength$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout POWERBROADCAST_SETTING$DataLength$LAYOUT() { return POWERBROADCAST_SETTING$DataLength$LAYOUT_; }

    static final VarHandle POWERBROADCAST_SETTING$DataLength$VH_ = POWERBROADCAST_SETTING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataLength"));
    public static java.lang.invoke.VarHandle POWERBROADCAST_SETTING$DataLength$VH() { return POWERBROADCAST_SETTING$DataLength$VH_; }

    static final FunctionDescriptor RegisterWindowMessageA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor RegisterWindowMessageA$FUNC() { return RegisterWindowMessageA$FUNC_; }

    static final MethodHandle RegisterWindowMessageA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterWindowMessageA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RegisterWindowMessageA$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle RegisterWindowMessageA$MH() { return RegisterWindowMessageA$MH_; }

    static final FunctionDescriptor RegisterWindowMessageW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor RegisterWindowMessageW$FUNC() { return RegisterWindowMessageW$FUNC_; }

    static final MethodHandle RegisterWindowMessageW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterWindowMessageW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RegisterWindowMessageW$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle RegisterWindowMessageW$MH() { return RegisterWindowMessageW$MH_; }

    static final MemoryLayout tagWINDOWPOS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hwnd"),
        C_POINTER.withName("hwndInsertAfter"),
        C_INT.withName("x"),
        C_INT.withName("y"),
        C_INT.withName("cx"),
        C_INT.withName("cy"),
        C_INT.withName("flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagWINDOWPOS");
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPOS$struct$LAYOUT() { return tagWINDOWPOS$struct$LAYOUT_; }

    static final MemoryLayout tagWINDOWPOS$hwnd$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPOS$hwnd$LAYOUT() { return tagWINDOWPOS$hwnd$LAYOUT_; }

    static final VarHandle tagWINDOWPOS$hwnd$VH_ = MemoryHandles.asAddressVarHandle(tagWINDOWPOS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    public static java.lang.invoke.VarHandle tagWINDOWPOS$hwnd$VH() { return tagWINDOWPOS$hwnd$VH_; }

    static final MemoryLayout tagWINDOWPOS$hwndInsertAfter$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPOS$hwndInsertAfter$LAYOUT() { return tagWINDOWPOS$hwndInsertAfter$LAYOUT_; }

    static final VarHandle tagWINDOWPOS$hwndInsertAfter$VH_ = MemoryHandles.asAddressVarHandle(tagWINDOWPOS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndInsertAfter")));
    public static java.lang.invoke.VarHandle tagWINDOWPOS$hwndInsertAfter$VH() { return tagWINDOWPOS$hwndInsertAfter$VH_; }

    static final MemoryLayout tagWINDOWPOS$x$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPOS$x$LAYOUT() { return tagWINDOWPOS$x$LAYOUT_; }

    static final VarHandle tagWINDOWPOS$x$VH_ = tagWINDOWPOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("x"));
    public static java.lang.invoke.VarHandle tagWINDOWPOS$x$VH() { return tagWINDOWPOS$x$VH_; }

    static final MemoryLayout tagWINDOWPOS$y$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPOS$y$LAYOUT() { return tagWINDOWPOS$y$LAYOUT_; }

    static final VarHandle tagWINDOWPOS$y$VH_ = tagWINDOWPOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("y"));
    public static java.lang.invoke.VarHandle tagWINDOWPOS$y$VH() { return tagWINDOWPOS$y$VH_; }

    static final MemoryLayout tagWINDOWPOS$cx$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPOS$cx$LAYOUT() { return tagWINDOWPOS$cx$LAYOUT_; }

    static final VarHandle tagWINDOWPOS$cx$VH_ = tagWINDOWPOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cx"));
    public static java.lang.invoke.VarHandle tagWINDOWPOS$cx$VH() { return tagWINDOWPOS$cx$VH_; }

    static final MemoryLayout tagWINDOWPOS$cy$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPOS$cy$LAYOUT() { return tagWINDOWPOS$cy$LAYOUT_; }

    static final VarHandle tagWINDOWPOS$cy$VH_ = tagWINDOWPOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cy"));
    public static java.lang.invoke.VarHandle tagWINDOWPOS$cy$VH() { return tagWINDOWPOS$cy$VH_; }

    static final MemoryLayout tagWINDOWPOS$flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPOS$flags$LAYOUT() { return tagWINDOWPOS$flags$LAYOUT_; }

    static final VarHandle tagWINDOWPOS$flags$VH_ = tagWINDOWPOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("flags"));
    public static java.lang.invoke.VarHandle tagWINDOWPOS$flags$VH() { return tagWINDOWPOS$flags$VH_; }

    static final MemoryLayout tagNCCALCSIZE_PARAMS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(3, MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("tagRECT")).withName("rgrc"),
        C_POINTER.withName("lppos")
    ).withName("tagNCCALCSIZE_PARAMS");
    public static jdk.incubator.foreign.MemoryLayout tagNCCALCSIZE_PARAMS$struct$LAYOUT() { return tagNCCALCSIZE_PARAMS$struct$LAYOUT_; }

    static final MemoryLayout tagNCCALCSIZE_PARAMS$lppos$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagNCCALCSIZE_PARAMS$lppos$LAYOUT() { return tagNCCALCSIZE_PARAMS$lppos$LAYOUT_; }

    static final VarHandle tagNCCALCSIZE_PARAMS$lppos$VH_ = MemoryHandles.asAddressVarHandle(tagNCCALCSIZE_PARAMS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lppos")));
    public static java.lang.invoke.VarHandle tagNCCALCSIZE_PARAMS$lppos$VH() { return tagNCCALCSIZE_PARAMS$lppos$VH_; }

    static final MemoryLayout tagTRACKMOUSEEVENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cbSize"),
        C_INT.withName("dwFlags"),
        C_POINTER.withName("hwndTrack"),
        C_INT.withName("dwHoverTime"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagTRACKMOUSEEVENT");
    public static jdk.incubator.foreign.MemoryLayout tagTRACKMOUSEEVENT$struct$LAYOUT() { return tagTRACKMOUSEEVENT$struct$LAYOUT_; }

    static final MemoryLayout tagTRACKMOUSEEVENT$cbSize$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTRACKMOUSEEVENT$cbSize$LAYOUT() { return tagTRACKMOUSEEVENT$cbSize$LAYOUT_; }

    static final VarHandle tagTRACKMOUSEEVENT$cbSize$VH_ = tagTRACKMOUSEEVENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    public static java.lang.invoke.VarHandle tagTRACKMOUSEEVENT$cbSize$VH() { return tagTRACKMOUSEEVENT$cbSize$VH_; }

    static final MemoryLayout tagTRACKMOUSEEVENT$dwFlags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTRACKMOUSEEVENT$dwFlags$LAYOUT() { return tagTRACKMOUSEEVENT$dwFlags$LAYOUT_; }

    static final VarHandle tagTRACKMOUSEEVENT$dwFlags$VH_ = tagTRACKMOUSEEVENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    public static java.lang.invoke.VarHandle tagTRACKMOUSEEVENT$dwFlags$VH() { return tagTRACKMOUSEEVENT$dwFlags$VH_; }

    static final MemoryLayout tagTRACKMOUSEEVENT$hwndTrack$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagTRACKMOUSEEVENT$hwndTrack$LAYOUT() { return tagTRACKMOUSEEVENT$hwndTrack$LAYOUT_; }

    static final VarHandle tagTRACKMOUSEEVENT$hwndTrack$VH_ = MemoryHandles.asAddressVarHandle(tagTRACKMOUSEEVENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndTrack")));
    public static java.lang.invoke.VarHandle tagTRACKMOUSEEVENT$hwndTrack$VH() { return tagTRACKMOUSEEVENT$hwndTrack$VH_; }

    static final MemoryLayout tagTRACKMOUSEEVENT$dwHoverTime$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagTRACKMOUSEEVENT$dwHoverTime$LAYOUT() { return tagTRACKMOUSEEVENT$dwHoverTime$LAYOUT_; }

    static final VarHandle tagTRACKMOUSEEVENT$dwHoverTime$VH_ = tagTRACKMOUSEEVENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwHoverTime"));
    public static java.lang.invoke.VarHandle tagTRACKMOUSEEVENT$dwHoverTime$VH() { return tagTRACKMOUSEEVENT$dwHoverTime$VH_; }

    static final FunctionDescriptor TrackMouseEvent$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor TrackMouseEvent$FUNC() { return TrackMouseEvent$FUNC_; }

    static final MethodHandle TrackMouseEvent$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TrackMouseEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        TrackMouseEvent$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle TrackMouseEvent$MH() { return TrackMouseEvent$MH_; }

    static final FunctionDescriptor DrawEdge$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor DrawEdge$FUNC() { return DrawEdge$FUNC_; }

    static final MethodHandle DrawEdge$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DrawEdge",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DrawEdge$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle DrawEdge$MH() { return DrawEdge$MH_; }

    static final FunctionDescriptor DrawFrameControl$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor DrawFrameControl$FUNC() { return DrawFrameControl$FUNC_; }

    static final MethodHandle DrawFrameControl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DrawFrameControl",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DrawFrameControl$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle DrawFrameControl$MH() { return DrawFrameControl$MH_; }

    static final FunctionDescriptor DrawCaption$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    public static jdk.incubator.foreign.FunctionDescriptor DrawCaption$FUNC() { return DrawCaption$FUNC_; }

    static final MethodHandle DrawCaption$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DrawCaption",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        DrawCaption$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle DrawCaption$MH() { return DrawCaption$MH_; }

    static final FunctionDescriptor DrawAnimatedRects$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    public static jdk.incubator.foreign.FunctionDescriptor DrawAnimatedRects$FUNC() { return DrawAnimatedRects$FUNC_; }

    static final MethodHandle DrawAnimatedRects$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DrawAnimatedRects",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DrawAnimatedRects$FUNC_, false
    );
    public static java.lang.invoke.MethodHandle DrawAnimatedRects$MH() { return DrawAnimatedRects$MH_; }

    static final MemoryLayout tagACCEL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_BOOL.withName("fVirt"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("key"),
        C_SHORT.withName("cmd")
    ).withName("tagACCEL");
    public static jdk.incubator.foreign.MemoryLayout tagACCEL$struct$LAYOUT() { return tagACCEL$struct$LAYOUT_; }

    static final MemoryLayout tagACCEL$fVirt$LAYOUT_ = C_BOOL;
    public static jdk.incubator.foreign.MemoryLayout tagACCEL$fVirt$LAYOUT() { return tagACCEL$fVirt$LAYOUT_; }

    static final VarHandle tagACCEL$fVirt$VH_ = tagACCEL$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("fVirt"));
    public static java.lang.invoke.VarHandle tagACCEL$fVirt$VH() { return tagACCEL$fVirt$VH_; }

    static final MemoryLayout tagACCEL$key$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagACCEL$key$LAYOUT() { return tagACCEL$key$LAYOUT_; }

    static final VarHandle tagACCEL$key$VH_ = tagACCEL$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("key"));
    public static java.lang.invoke.VarHandle tagACCEL$key$VH() { return tagACCEL$key$VH_; }

    static final MemoryLayout tagACCEL$cmd$LAYOUT_ = C_SHORT;
    public static jdk.incubator.foreign.MemoryLayout tagACCEL$cmd$LAYOUT() { return tagACCEL$cmd$LAYOUT_; }

    static final VarHandle tagACCEL$cmd$VH_ = tagACCEL$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cmd"));
    public static java.lang.invoke.VarHandle tagACCEL$cmd$VH() { return tagACCEL$cmd$VH_; }

    static final MemoryLayout tagPAINTSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hdc"),
        C_INT.withName("fErase"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rcPaint"),
        C_INT.withName("fRestore"),
        C_INT.withName("fIncUpdate"),
        MemoryLayout.ofSequence(32, C_BOOL).withName("rgbReserved"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagPAINTSTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagPAINTSTRUCT$struct$LAYOUT() { return tagPAINTSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagPAINTSTRUCT$hdc$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagPAINTSTRUCT$hdc$LAYOUT() { return tagPAINTSTRUCT$hdc$LAYOUT_; }

    static final VarHandle tagPAINTSTRUCT$hdc$VH_ = MemoryHandles.asAddressVarHandle(tagPAINTSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hdc")));
    public static java.lang.invoke.VarHandle tagPAINTSTRUCT$hdc$VH() { return tagPAINTSTRUCT$hdc$VH_; }

    static final MemoryLayout tagPAINTSTRUCT$fErase$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPAINTSTRUCT$fErase$LAYOUT() { return tagPAINTSTRUCT$fErase$LAYOUT_; }

    static final VarHandle tagPAINTSTRUCT$fErase$VH_ = tagPAINTSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fErase"));
    public static java.lang.invoke.VarHandle tagPAINTSTRUCT$fErase$VH() { return tagPAINTSTRUCT$fErase$VH_; }

    static final MemoryLayout tagPAINTSTRUCT$fRestore$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPAINTSTRUCT$fRestore$LAYOUT() { return tagPAINTSTRUCT$fRestore$LAYOUT_; }

    static final VarHandle tagPAINTSTRUCT$fRestore$VH_ = tagPAINTSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fRestore"));
    public static java.lang.invoke.VarHandle tagPAINTSTRUCT$fRestore$VH() { return tagPAINTSTRUCT$fRestore$VH_; }

    static final MemoryLayout tagPAINTSTRUCT$fIncUpdate$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagPAINTSTRUCT$fIncUpdate$LAYOUT() { return tagPAINTSTRUCT$fIncUpdate$LAYOUT_; }

    static final VarHandle tagPAINTSTRUCT$fIncUpdate$VH_ = tagPAINTSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fIncUpdate"));
    public static java.lang.invoke.VarHandle tagPAINTSTRUCT$fIncUpdate$VH() { return tagPAINTSTRUCT$fIncUpdate$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpCreateParams"),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("hMenu"),
        C_POINTER.withName("hwndParent"),
        C_INT.withName("cy"),
        C_INT.withName("cx"),
        C_INT.withName("y"),
        C_INT.withName("x"),
        C_INT.withName("style"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpszName"),
        C_POINTER.withName("lpszClass"),
        C_INT.withName("dwExStyle"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagCREATESTRUCTA");
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$struct$LAYOUT() { return tagCREATESTRUCTA$struct$LAYOUT_; }

    static final MemoryLayout tagCREATESTRUCTA$lpCreateParams$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$lpCreateParams$LAYOUT() { return tagCREATESTRUCTA$lpCreateParams$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$lpCreateParams$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpCreateParams")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$lpCreateParams$VH() { return tagCREATESTRUCTA$lpCreateParams$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$hInstance$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$hInstance$LAYOUT() { return tagCREATESTRUCTA$hInstance$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$hInstance$VH() { return tagCREATESTRUCTA$hInstance$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$hMenu$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$hMenu$LAYOUT() { return tagCREATESTRUCTA$hMenu$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$hMenu$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMenu")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$hMenu$VH() { return tagCREATESTRUCTA$hMenu$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$hwndParent$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$hwndParent$LAYOUT() { return tagCREATESTRUCTA$hwndParent$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$hwndParent$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndParent")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$hwndParent$VH() { return tagCREATESTRUCTA$hwndParent$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$cy$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$cy$LAYOUT() { return tagCREATESTRUCTA$cy$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$cy$VH_ = tagCREATESTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cy"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$cy$VH() { return tagCREATESTRUCTA$cy$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$cx$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$cx$LAYOUT() { return tagCREATESTRUCTA$cx$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$cx$VH_ = tagCREATESTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cx"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$cx$VH() { return tagCREATESTRUCTA$cx$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$y$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$y$LAYOUT() { return tagCREATESTRUCTA$y$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$y$VH_ = tagCREATESTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("y"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$y$VH() { return tagCREATESTRUCTA$y$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$x$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$x$LAYOUT() { return tagCREATESTRUCTA$x$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$x$VH_ = tagCREATESTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("x"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$x$VH() { return tagCREATESTRUCTA$x$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$style$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$style$LAYOUT() { return tagCREATESTRUCTA$style$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$style$VH_ = tagCREATESTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("style"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$style$VH() { return tagCREATESTRUCTA$style$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$lpszName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$lpszName$LAYOUT() { return tagCREATESTRUCTA$lpszName$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$lpszName$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszName")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$lpszName$VH() { return tagCREATESTRUCTA$lpszName$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$lpszClass$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$lpszClass$LAYOUT() { return tagCREATESTRUCTA$lpszClass$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$lpszClass$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszClass")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$lpszClass$VH() { return tagCREATESTRUCTA$lpszClass$VH_; }

    static final MemoryLayout tagCREATESTRUCTA$dwExStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTA$dwExStyle$LAYOUT() { return tagCREATESTRUCTA$dwExStyle$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTA$dwExStyle$VH_ = tagCREATESTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwExStyle"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTA$dwExStyle$VH() { return tagCREATESTRUCTA$dwExStyle$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpCreateParams"),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("hMenu"),
        C_POINTER.withName("hwndParent"),
        C_INT.withName("cy"),
        C_INT.withName("cx"),
        C_INT.withName("y"),
        C_INT.withName("x"),
        C_INT.withName("style"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpszName"),
        C_POINTER.withName("lpszClass"),
        C_INT.withName("dwExStyle"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagCREATESTRUCTW");
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$struct$LAYOUT() { return tagCREATESTRUCTW$struct$LAYOUT_; }

    static final MemoryLayout tagCREATESTRUCTW$lpCreateParams$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$lpCreateParams$LAYOUT() { return tagCREATESTRUCTW$lpCreateParams$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$lpCreateParams$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpCreateParams")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$lpCreateParams$VH() { return tagCREATESTRUCTW$lpCreateParams$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$hInstance$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$hInstance$LAYOUT() { return tagCREATESTRUCTW$hInstance$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$hInstance$VH() { return tagCREATESTRUCTW$hInstance$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$hMenu$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$hMenu$LAYOUT() { return tagCREATESTRUCTW$hMenu$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$hMenu$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMenu")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$hMenu$VH() { return tagCREATESTRUCTW$hMenu$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$hwndParent$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$hwndParent$LAYOUT() { return tagCREATESTRUCTW$hwndParent$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$hwndParent$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndParent")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$hwndParent$VH() { return tagCREATESTRUCTW$hwndParent$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$cy$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$cy$LAYOUT() { return tagCREATESTRUCTW$cy$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$cy$VH_ = tagCREATESTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cy"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$cy$VH() { return tagCREATESTRUCTW$cy$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$cx$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$cx$LAYOUT() { return tagCREATESTRUCTW$cx$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$cx$VH_ = tagCREATESTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cx"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$cx$VH() { return tagCREATESTRUCTW$cx$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$y$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$y$LAYOUT() { return tagCREATESTRUCTW$y$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$y$VH_ = tagCREATESTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("y"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$y$VH() { return tagCREATESTRUCTW$y$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$x$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$x$LAYOUT() { return tagCREATESTRUCTW$x$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$x$VH_ = tagCREATESTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("x"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$x$VH() { return tagCREATESTRUCTW$x$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$style$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$style$LAYOUT() { return tagCREATESTRUCTW$style$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$style$VH_ = tagCREATESTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("style"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$style$VH() { return tagCREATESTRUCTW$style$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$lpszName$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$lpszName$LAYOUT() { return tagCREATESTRUCTW$lpszName$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$lpszName$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszName")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$lpszName$VH() { return tagCREATESTRUCTW$lpszName$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$lpszClass$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$lpszClass$LAYOUT() { return tagCREATESTRUCTW$lpszClass$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$lpszClass$VH_ = MemoryHandles.asAddressVarHandle(tagCREATESTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszClass")));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$lpszClass$VH() { return tagCREATESTRUCTW$lpszClass$VH_; }

    static final MemoryLayout tagCREATESTRUCTW$dwExStyle$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagCREATESTRUCTW$dwExStyle$LAYOUT() { return tagCREATESTRUCTW$dwExStyle$LAYOUT_; }

    static final VarHandle tagCREATESTRUCTW$dwExStyle$VH_ = tagCREATESTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwExStyle"));
    public static java.lang.invoke.VarHandle tagCREATESTRUCTW$dwExStyle$VH() { return tagCREATESTRUCTW$dwExStyle$VH_; }

    static final MemoryLayout tagWINDOWPLACEMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("length"),
        C_INT.withName("flags"),
        C_INT.withName("showCmd"),
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("ptMinPosition"),
        MemoryLayout.ofStruct(
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("ptMaxPosition"),
        MemoryLayout.ofStruct(
            C_INT.withName("left"),
            C_INT.withName("top"),
            C_INT.withName("right"),
            C_INT.withName("bottom")
        ).withName("rcNormalPosition")
    ).withName("tagWINDOWPLACEMENT");
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPLACEMENT$struct$LAYOUT() { return tagWINDOWPLACEMENT$struct$LAYOUT_; }

    static final MemoryLayout tagWINDOWPLACEMENT$length$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPLACEMENT$length$LAYOUT() { return tagWINDOWPLACEMENT$length$LAYOUT_; }

    static final VarHandle tagWINDOWPLACEMENT$length$VH_ = tagWINDOWPLACEMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("length"));
    public static java.lang.invoke.VarHandle tagWINDOWPLACEMENT$length$VH() { return tagWINDOWPLACEMENT$length$VH_; }

    static final MemoryLayout tagWINDOWPLACEMENT$flags$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPLACEMENT$flags$LAYOUT() { return tagWINDOWPLACEMENT$flags$LAYOUT_; }

    static final VarHandle tagWINDOWPLACEMENT$flags$VH_ = tagWINDOWPLACEMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("flags"));
    public static java.lang.invoke.VarHandle tagWINDOWPLACEMENT$flags$VH() { return tagWINDOWPLACEMENT$flags$VH_; }

    static final MemoryLayout tagWINDOWPLACEMENT$showCmd$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagWINDOWPLACEMENT$showCmd$LAYOUT() { return tagWINDOWPLACEMENT$showCmd$LAYOUT_; }

    static final VarHandle tagWINDOWPLACEMENT$showCmd$VH_ = tagWINDOWPLACEMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("showCmd"));
    public static java.lang.invoke.VarHandle tagWINDOWPLACEMENT$showCmd$VH() { return tagWINDOWPLACEMENT$showCmd$VH_; }

    static final MemoryLayout tagNMHDR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hwndFrom"),
        C_LONGLONG.withName("idFrom"),
        C_INT.withName("code"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagNMHDR");
    public static jdk.incubator.foreign.MemoryLayout tagNMHDR$struct$LAYOUT() { return tagNMHDR$struct$LAYOUT_; }

    static final MemoryLayout tagNMHDR$hwndFrom$LAYOUT_ = C_POINTER;
    public static jdk.incubator.foreign.MemoryLayout tagNMHDR$hwndFrom$LAYOUT() { return tagNMHDR$hwndFrom$LAYOUT_; }

    static final VarHandle tagNMHDR$hwndFrom$VH_ = MemoryHandles.asAddressVarHandle(tagNMHDR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndFrom")));
    public static java.lang.invoke.VarHandle tagNMHDR$hwndFrom$VH() { return tagNMHDR$hwndFrom$VH_; }

    static final MemoryLayout tagNMHDR$idFrom$LAYOUT_ = C_LONGLONG;
    public static jdk.incubator.foreign.MemoryLayout tagNMHDR$idFrom$LAYOUT() { return tagNMHDR$idFrom$LAYOUT_; }

    static final VarHandle tagNMHDR$idFrom$VH_ = tagNMHDR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("idFrom"));
    public static java.lang.invoke.VarHandle tagNMHDR$idFrom$VH() { return tagNMHDR$idFrom$VH_; }

    static final MemoryLayout tagNMHDR$code$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagNMHDR$code$LAYOUT() { return tagNMHDR$code$LAYOUT_; }

    static final VarHandle tagNMHDR$code$VH_ = tagNMHDR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("code"));
    public static java.lang.invoke.VarHandle tagNMHDR$code$VH() { return tagNMHDR$code$VH_; }

    static final MemoryLayout tagSTYLESTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("styleOld"),
        C_INT.withName("styleNew")
    ).withName("tagSTYLESTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagSTYLESTRUCT$struct$LAYOUT() { return tagSTYLESTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagSTYLESTRUCT$styleOld$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagSTYLESTRUCT$styleOld$LAYOUT() { return tagSTYLESTRUCT$styleOld$LAYOUT_; }

    static final VarHandle tagSTYLESTRUCT$styleOld$VH_ = tagSTYLESTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("styleOld"));
    public static java.lang.invoke.VarHandle tagSTYLESTRUCT$styleOld$VH() { return tagSTYLESTRUCT$styleOld$VH_; }

    static final MemoryLayout tagSTYLESTRUCT$styleNew$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagSTYLESTRUCT$styleNew$LAYOUT() { return tagSTYLESTRUCT$styleNew$LAYOUT_; }

    static final VarHandle tagSTYLESTRUCT$styleNew$VH_ = tagSTYLESTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("styleNew"));
    public static java.lang.invoke.VarHandle tagSTYLESTRUCT$styleNew$VH() { return tagSTYLESTRUCT$styleNew$VH_; }

    static final MemoryLayout tagMEASUREITEMSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("CtlType"),
        C_INT.withName("CtlID"),
        C_INT.withName("itemID"),
        C_INT.withName("itemWidth"),
        C_INT.withName("itemHeight"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("itemData")
    ).withName("tagMEASUREITEMSTRUCT");
    public static jdk.incubator.foreign.MemoryLayout tagMEASUREITEMSTRUCT$struct$LAYOUT() { return tagMEASUREITEMSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagMEASUREITEMSTRUCT$CtlType$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMEASUREITEMSTRUCT$CtlType$LAYOUT() { return tagMEASUREITEMSTRUCT$CtlType$LAYOUT_; }

    static final VarHandle tagMEASUREITEMSTRUCT$CtlType$VH_ = tagMEASUREITEMSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CtlType"));
    public static java.lang.invoke.VarHandle tagMEASUREITEMSTRUCT$CtlType$VH() { return tagMEASUREITEMSTRUCT$CtlType$VH_; }

    static final MemoryLayout tagMEASUREITEMSTRUCT$CtlID$LAYOUT_ = C_INT;
    public static jdk.incubator.foreign.MemoryLayout tagMEASUREITEMSTRUCT$CtlID$LAYOUT() { return tagMEASUREITEMSTRUCT$CtlID$LAYOUT_; }

    static final VarHandle tagMEASUREITEMSTRUCT$CtlID$VH_ = tagMEASUREITEMSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CtlID"));
    public static java.lang.invoke.VarHandle tagMEASUREITEMSTRUCT$CtlID$VH() { return tagMEASUREITEMSTRUCT$CtlID$VH_; }

}

